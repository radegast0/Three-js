{
  "version": 3,
  "sources": ["../../hls.js/dist/webpack:/Hls/webpack/universalModuleDefinition", "../../hls.js/dist/webpack:/Hls/src/config.ts", "../../hls.js/dist/webpack:/Hls/src/controller/abr-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/audio-stream-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/audio-track-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/base-playlist-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/base-stream-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/buffer-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/buffer-operation-queue.ts", "../../hls.js/dist/webpack:/Hls/src/controller/cap-level-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/cmcd-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/eme-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/fps-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/fragment-finders.ts", "../../hls.js/dist/webpack:/Hls/src/controller/fragment-tracker.ts", "../../hls.js/dist/webpack:/Hls/src/controller/gap-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/id3-track-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/latency-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/level-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/level-helper.ts", "../../hls.js/dist/webpack:/Hls/src/controller/stream-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/subtitle-stream-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/subtitle-track-controller.ts", "../../hls.js/dist/webpack:/Hls/src/controller/timeline-controller.ts", "../../hls.js/dist/webpack:/Hls/src/crypt/aes-crypto.ts", "../../hls.js/dist/webpack:/Hls/src/crypt/aes-decryptor.ts", "../../hls.js/dist/webpack:/Hls/src/crypt/decrypter.ts", "../../hls.js/dist/webpack:/Hls/src/crypt/fast-aes-key.ts", "../../hls.js/dist/webpack:/Hls/src/demux/aacdemuxer.ts", "../../hls.js/dist/webpack:/Hls/src/demux/adts.ts", "../../hls.js/dist/webpack:/Hls/src/demux/base-audio-demuxer.ts", "../../hls.js/dist/webpack:/Hls/src/demux/chunk-cache.ts", "../../hls.js/dist/webpack:/Hls/src/demux/dummy-demuxed-track.ts", "../../hls.js/dist/webpack:/Hls/src/demux/exp-golomb.ts", "../../hls.js/dist/webpack:/Hls/src/demux/id3.ts", "../../hls.js/dist/webpack:/Hls/src/demux/mp3demuxer.ts", "../../hls.js/dist/webpack:/Hls/src/demux/mp4demuxer.ts", "../../hls.js/dist/webpack:/Hls/src/demux/mpegaudio.ts", "../../hls.js/dist/webpack:/Hls/src/demux/sample-aes.ts", "../../hls.js/dist/webpack:/Hls/src/demux/transmuxer-interface.ts", "../../hls.js/dist/webpack:/Hls/src/demux/transmuxer-worker.ts", "../../hls.js/dist/webpack:/Hls/src/demux/transmuxer.ts", "../../hls.js/dist/webpack:/Hls/src/demux/tsdemuxer.ts", "../../hls.js/dist/webpack:/Hls/src/demux/webworkify-webpack.js", "../../hls.js/dist/webpack:/Hls/src/errors.ts", "../../hls.js/dist/webpack:/Hls/src/events.ts", "../../hls.js/dist/webpack:/Hls/src/hls.ts", "../../hls.js/dist/webpack:/Hls/src/is-supported.ts", "../../hls.js/dist/webpack:/Hls/src/loader/date-range.ts", "../../hls.js/dist/webpack:/Hls/src/loader/fragment-loader.ts", "../../hls.js/dist/webpack:/Hls/src/loader/fragment.ts", "../../hls.js/dist/webpack:/Hls/src/loader/key-loader.ts", "../../hls.js/dist/webpack:/Hls/src/loader/level-details.ts", "../../hls.js/dist/webpack:/Hls/src/loader/level-key.ts", "../../hls.js/dist/webpack:/Hls/src/loader/load-stats.ts", "../../hls.js/dist/webpack:/Hls/src/loader/m3u8-parser.ts", "../../hls.js/dist/webpack:/Hls/src/loader/playlist-loader.ts", "../../hls.js/dist/webpack:/Hls/src/polyfills/number.ts", "../../hls.js/dist/webpack:/Hls/src/remux/aac-helper.ts", "../../hls.js/dist/webpack:/Hls/src/remux/mp4-generator.ts", "../../hls.js/dist/webpack:/Hls/src/remux/mp4-remuxer.ts", "../../hls.js/dist/webpack:/Hls/src/remux/passthrough-remuxer.ts", "../../hls.js/dist/webpack:/Hls/src/task-loop.ts", "../../hls.js/dist/webpack:/Hls/src/types/cmcd.ts", "../../hls.js/dist/webpack:/Hls/src/types/demuxer.ts", "../../hls.js/dist/webpack:/Hls/src/types/level.ts", "../../hls.js/dist/webpack:/Hls/src/types/loader.ts", "../../hls.js/dist/webpack:/Hls/src/types/transmuxer.ts", "../../hls.js/dist/webpack:/Hls/src/utils/attr-list.ts", "../../hls.js/dist/webpack:/Hls/src/utils/binary-search.ts", "../../hls.js/dist/webpack:/Hls/src/utils/buffer-helper.ts", "../../hls.js/dist/webpack:/Hls/src/utils/cea-608-parser.ts", "../../hls.js/dist/webpack:/Hls/src/utils/codecs.ts", "../../hls.js/dist/webpack:/Hls/src/utils/cues.ts", "../../hls.js/dist/webpack:/Hls/src/utils/discontinuities.ts", "../../hls.js/dist/webpack:/Hls/src/utils/ewma-bandwidth-estimator.ts", "../../hls.js/dist/webpack:/Hls/src/utils/ewma.ts", "../../hls.js/dist/webpack:/Hls/src/utils/fetch-loader.ts", "../../hls.js/dist/webpack:/Hls/src/utils/hex.ts", "../../hls.js/dist/webpack:/Hls/src/utils/imsc1-ttml-parser.ts", "../../hls.js/dist/webpack:/Hls/src/utils/keysystem-util.ts", "../../hls.js/dist/webpack:/Hls/src/utils/logger.ts", "../../hls.js/dist/webpack:/Hls/src/utils/mediakeys-helper.ts", "../../hls.js/dist/webpack:/Hls/src/utils/mediasource-helper.ts", "../../hls.js/dist/webpack:/Hls/src/utils/mp4-tools.ts", "../../hls.js/dist/webpack:/Hls/src/utils/numeric-encoding-utils.ts", "../../hls.js/dist/webpack:/Hls/src/utils/output-filter.ts", "../../hls.js/dist/webpack:/Hls/src/utils/texttrack-utils.ts", "../../hls.js/dist/webpack:/Hls/src/utils/time-ranges.ts", "../../hls.js/dist/webpack:/Hls/src/utils/timescale-conversion.ts", "../../hls.js/dist/webpack:/Hls/src/utils/typed-array.ts", "../../hls.js/dist/webpack:/Hls/src/utils/vttcue.ts", "../../hls.js/dist/webpack:/Hls/src/utils/vttparser.ts", "../../hls.js/dist/webpack:/Hls/src/utils/webvtt-parser.ts", "../../hls.js/dist/webpack:/Hls/src/utils/xhr-loader.ts", "../../hls.js/dist/webpack:/Hls/node_modules/eventemitter3/index.js", "../../hls.js/dist/webpack:/Hls/node_modules/url-toolkit/src/url-toolkit.js", "../../hls.js/dist/webpack:/Hls/webpack/bootstrap", "../../hls.js/dist/webpack:/Hls/webpack/runtime/compat get default export", "../../hls.js/dist/webpack:/Hls/webpack/runtime/define property getters", "../../hls.js/dist/webpack:/Hls/webpack/runtime/hasOwnProperty shorthand", "../../hls.js/dist/webpack:/Hls/webpack/runtime/make namespace object", "../../hls.js/dist/webpack:/Hls/webpack/before-startup", "../../hls.js/dist/webpack:/Hls/webpack/startup", "../../hls.js/dist/webpack:/Hls/webpack/after-startup", "../../stats.js/build/stats.min.js", "../../react-is/cjs/react-is.development.js", "../../react-is/index.js", "../../object-assign/index.js", "../../prop-types/lib/ReactPropTypesSecret.js", "../../prop-types/lib/has.js", "../../prop-types/checkPropTypes.js", "../../prop-types/factoryWithTypeCheckers.js", "../../prop-types/index.js", "../../use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../use-sync-external-store/shim/index.js", "../../use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js", "../../use-sync-external-store/shim/with-selector.js", "../../@react-three/drei/web/Html.js", "../../@react-three/drei/web/CycleRaycast.js", "../../@react-three/drei/web/useCursor.js", "../../@react-three/drei/web/Loader.js", "../../@react-three/drei/core/useProgress.js", "../../@react-three/drei/web/DragControls.js", "../../@use-gesture/core/dist/maths-0ab39ae9.esm.js", "../../@use-gesture/core/dist/actions-fe213e88.esm.js", "../../@use-gesture/react/dist/use-gesture-react.esm.js", "../../@use-gesture/core/dist/use-gesture-core.esm.js", "../../@react-three/drei/web/ScrollControls.js", "../../maath/dist/objectSpread2-284232a6.esm.js", "../../maath/dist/isNativeReflectConstruct-5594d075.esm.js", "../../maath/dist/matrix-baa530bf.esm.js", "../../maath/dist/triangle-b62b9067.esm.js", "../../maath/dist/misc-19a3ec46.esm.js", "../../maath/dist/vector2-d2bf51f1.esm.js", "../../maath/dist/vector3-0a088b7f.esm.js", "../../maath/dist/buffer-59a95d05.esm.js", "../../maath/dist/classCallCheck-9098b006.esm.js", "../../maath/dist/index-0332b2ed.esm.js", "../../maath/dist/easing-18d5168d.esm.js", "../../maath/dist/geometry-0fb11825.esm.js", "../../maath/dist/three-eb2ad8c0.esm.js", "../../@react-three/drei/web/PresentationControls.js", "../../@react-spring/rafz/dist/react-spring-rafz.esm.js", "../../@react-spring/shared/dist/react-spring-shared.esm.js", "../../@react-spring/core/dist/react-spring-core.esm.js", "../../@react-spring/animated/dist/react-spring-animated.esm.js", "../../@react-spring/three/dist/react-spring-three.esm.js", "../../@react-three/drei/web/KeyboardControls.js", "../../zustand/esm/middleware.js", "../../@react-three/drei/web/Select.js", "../../zustand/esm/shallow.js", "../../@react-three/drei/core/Billboard.js", "../../@react-three/drei/core/ScreenSpace.js", "../../@react-three/drei/core/ScreenSizer.js", "../../@react-three/drei/core/calculateScaleFactor.js", "../../@react-three/drei/core/QuadraticBezierLine.js", "../../@react-three/drei/core/Line.js", "../../@react-three/drei/core/CubicBezierLine.js", "../../@react-three/drei/core/CatmullRomLine.js", "../../@react-three/drei/core/PositionalAudio.js", "../../@react-three/drei/core/Text.js", "../../@react-three/drei/core/Text3D.js", "../../@react-three/drei/core/useFont.js", "../../@react-three/drei/core/Effects.js", "../../@react-three/drei/core/GradientTexture.js", "../../@react-three/drei/core/Image.js", "../../@react-three/drei/core/shaderMaterial.js", "../../@react-three/drei/core/useTexture.js", "../../@react-three/drei/helpers/constants.js", "../../@react-three/drei/core/Edges.js", "../../@react-three/drei/core/Outlines.js", "../../@react-three/drei/core/Trail.js", "../../meshline/dist/index.js", "../../@react-three/drei/core/Sampler.js", "../../@react-three/drei/core/ComputedAttribute.js", "../../@react-three/drei/core/Clone.js", "../../@react-three/drei/core/MarchingCubes.js", "../../@react-three/drei/core/Decal.js", "../../@react-three/drei/core/Svg.js", "../../@react-three/drei/core/Gltf.js", "../../@react-three/drei/core/useGLTF.js", "../../@react-three/drei/core/AsciiRenderer.js", "../../@react-three/drei/core/Splat.js", "../../@react-three/drei/core/OrthographicCamera.js", "../../@react-three/drei/core/useFBO.js", "../../@react-three/drei/core/PerspectiveCamera.js", "../../@react-three/drei/core/CubeCamera.js", "../../@react-three/drei/core/useCubeCamera.js", "../../@react-three/drei/core/DeviceOrientationControls.js", "../../@react-three/drei/core/FlyControls.js", "../../@react-three/drei/core/MapControls.js", "../../@react-three/drei/core/OrbitControls.js", "../../@react-three/drei/core/TrackballControls.js", "../../@react-three/drei/core/ArcballControls.js", "../../@react-three/drei/core/TransformControls.js", "../../@react-three/drei/core/PointerLockControls.js", "../../@react-three/drei/core/FirstPersonControls.js", "../../@react-three/drei/core/CameraControls.js", "../../camera-controls/dist/camera-controls.module.js", "../../@react-three/drei/core/MotionPathControls.js", "../../@react-three/drei/core/GizmoHelper.js", "../../@react-three/drei/core/Hud.js", "../../@react-three/drei/core/GizmoViewcube.js", "../../@react-three/drei/core/GizmoViewport.js", "../../@react-three/drei/core/Grid.js", "../../@react-three/drei/core/useCubeTexture.js", "../../@react-three/drei/core/useFBX.js", "../../@react-three/drei/core/useKTX2.js", "../../@react-three/drei/core/useVideoTexture.js", "../../@react-three/drei/core/useSpriteLoader.js", "../../@react-three/drei/core/Helper.js", "../../@react-three/drei/core/Stats.js", "../../@react-three/drei/helpers/useEffectfulState.js", "../../@react-three/drei/core/StatsGl.js", "../../stats-gl/lib/panel.ts", "../../stats-gl/lib/main.ts", "../../@react-three/drei/core/useDepthBuffer.js", "../../@react-three/drei/core/useAspect.js", "../../@react-three/drei/core/useCamera.js", "../../detect-gpu/src/internal/blocklistedGPUS.ts", "../../detect-gpu/src/internal/cleanRenderer.ts", "../../detect-gpu/node_modules/webgl-constants/dist/webgl-constants.esm.js", "../../detect-gpu/src/internal/ssr.ts", "../../detect-gpu/src/internal/deviceInfo.ts", "../../detect-gpu/src/internal/deobfuscateAppleGPU.ts", "../../detect-gpu/src/internal/error.ts", "../../detect-gpu/src/internal/getLevenshteinDistance.ts", "../../detect-gpu/src/internal/util.ts", "../../detect-gpu/src/index.ts", "../../detect-gpu/src/internal/getWebGLContext.ts", "../../detect-gpu/src/internal/deobfuscateRenderer.ts", "../../detect-gpu/src/internal/getGPUVersion.ts", "../../@react-three/drei/core/useDetectGPU.js", "../../@react-three/drei/core/useHelper.js", "../../@react-three/drei/core/useBVH.js", "../../three-mesh-bvh/src/core/Constants.js", "../../three-mesh-bvh/src/core/build/geometryUtils.js", "../../three-mesh-bvh/src/core/build/computeBoundsUtils.js", "../../three-mesh-bvh/src/utils/ArrayBoxUtilities.js", "../../three-mesh-bvh/src/core/build/splitUtils.js", "../../three-mesh-bvh/src/core/MeshBVHNode.js", "../../three-mesh-bvh/src/core/build/sortUtils.generated.js", "../../three-mesh-bvh/src/core/build/sortUtils_indirect.generated.js", "../../three-mesh-bvh/src/core/utils/nodeBufferUtils.js", "../../three-mesh-bvh/src/core/build/buildUtils.js", "../../three-mesh-bvh/src/core/build/buildTree.js", "../../three-mesh-bvh/src/math/SeparatingAxisBounds.js", "../../three-mesh-bvh/src/math/MathUtilities.js", "../../three-mesh-bvh/src/math/ExtendedTriangle.js", "../../three-mesh-bvh/src/math/OrientedBox.js", "../../three-mesh-bvh/src/utils/PrimitivePool.js", "../../three-mesh-bvh/src/utils/ExtendedTrianglePool.js", "../../three-mesh-bvh/src/core/utils/BufferStack.js", "../../three-mesh-bvh/src/core/cast/shapecast.js", "../../three-mesh-bvh/src/core/cast/closestPointToPoint.js", "../../three-mesh-bvh/src/utils/ThreeRayIntersectUtilities.js", "../../three-mesh-bvh/src/utils/TriangleUtilities.js", "../../three-mesh-bvh/src/core/utils/iterationUtils.generated.js", "../../three-mesh-bvh/src/core/cast/refit.generated.js", "../../three-mesh-bvh/src/core/utils/intersectUtils.js", "../../three-mesh-bvh/src/core/utils/iterationUtils_indirect.generated.js", "../../three-mesh-bvh/src/core/cast/raycast.generated.js", "../../three-mesh-bvh/src/core/cast/raycastFirst.generated.js", "../../three-mesh-bvh/src/core/cast/intersectsGeometry.generated.js", "../../three-mesh-bvh/src/core/cast/closestPointToGeometry.generated.js", "../../three-mesh-bvh/src/core/cast/refit_indirect.generated.js", "../../three-mesh-bvh/src/core/cast/raycast_indirect.generated.js", "../../three-mesh-bvh/src/core/cast/raycastFirst_indirect.generated.js", "../../three-mesh-bvh/src/core/cast/intersectsGeometry_indirect.generated.js", "../../three-mesh-bvh/src/core/cast/closestPointToGeometry_indirect.generated.js", "../../three-mesh-bvh/src/utils/BufferUtils.js", "../../three-mesh-bvh/src/core/cast/bvhcast.js", "../../three-mesh-bvh/src/core/MeshBVH.js", "../../three-mesh-bvh/src/objects/MeshBVHHelper.js", "../../three-mesh-bvh/src/debug/Debug.js", "../../three-mesh-bvh/src/utils/GeometryRayIntersectUtilities.js", "../../three-mesh-bvh/src/utils/ExtensionUtilities.js", "../../three-mesh-bvh/src/gpu/VertexAttributeTexture.js", "../../three-mesh-bvh/src/gpu/MeshBVHUniformStruct.js", "../../three-mesh-bvh/src/utils/StaticGeometryGenerator.js", "../../three-mesh-bvh/src/gpu/BVHShaderGLSL.js", "../../three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js", "../../three-mesh-bvh/src/gpu/glsl/bvh_distance_functions.glsl.js", "../../three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js", "../../three-mesh-bvh/src/gpu/glsl/bvh_struct_definitions.glsl.js", "../../three-mesh-bvh/src/index.js", "../../@react-three/drei/core/useContextBridge.js", "../../@react-three/drei/core/useAnimations.js", "../../@react-three/drei/core/useIntersect.js", "../../@react-three/drei/core/useBoxProjectedEnv.js", "../../@react-three/drei/core/BBAnchor.js", "../../@react-three/drei/core/useTrailTexture.js", "../../@react-three/drei/core/Example.js", "../../@react-three/drei/core/Center.js", "../../@react-three/drei/core/SpriteAnimator.js", "../../@react-three/drei/core/Instances.js", "../../react-composer/es/index.js", "../../@react-three/drei/helpers/deprecated.js", "../../@react-three/drei/core/CurveModifier.js", "../../@react-three/drei/core/MeshDistortMaterial.js", "../../@react-three/drei/helpers/glsl/distort.vert.glsl.js", "../../@react-three/drei/core/MeshWobbleMaterial.js", "../../@react-three/drei/core/MeshReflectorMaterial.js", "../../@react-three/drei/materials/ConvolutionMaterial.js", "../../@react-three/drei/materials/BlurPass.js", "../../@react-three/drei/materials/MeshReflectorMaterial.js", "../../@react-three/drei/core/MeshRefractionMaterial.js", "../../@react-three/drei/materials/MeshRefractionMaterial.js", "../../@react-three/drei/core/MeshTransmissionMaterial.js", "../../@react-three/drei/materials/DiscardMaterial.js", "../../@react-three/drei/core/MeshDiscardMaterial.js", "../../@react-three/drei/core/PointMaterial.js", "../../@react-three/drei/core/softShadows.js", "../../@react-three/drei/core/shapes.js", "../../@react-three/drei/core/RoundedBox.js", "../../@react-three/drei/core/ScreenQuad.js", "../../@react-three/drei/core/Resize.js", "../../@react-three/drei/core/Bounds.js", "../../@react-three/drei/core/CameraShake.js", "../../@react-three/drei/core/Float.js", "../../@react-three/drei/core/Stage.js", "../../@react-three/drei/core/Environment.js", "../../@monogrid/gainmap-js/dist/QuadRenderer-6HrRQdJM.js", "../../@monogrid/gainmap-js/dist/decode.js", "../../@react-three/drei/helpers/environment-assets.js", "../../@react-three/drei/core/useEnvironment.js", "../../@react-three/drei/core/ContactShadows.js", "../../@react-three/drei/core/AccumulativeShadows.js", "../../@react-three/drei/core/Backdrop.js", "../../@react-three/drei/core/Shadow.js", "../../@react-three/drei/core/Caustics.js", "../../@react-three/drei/core/Reflector.js", "../../@react-three/drei/core/SpotLight.js", "../../@react-three/drei/materials/SpotLightMaterial.js", "../../@react-three/drei/helpers/glsl/DefaultSpotlightShadowShadows.glsl.js", "../../@react-three/drei/core/Lightformer.js", "../../@react-three/drei/core/Sky.js", "../../@react-three/drei/core/Stars.js", "../../@react-three/drei/core/Cloud.js", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/native.js", "../../uuid/dist/esm-browser/v4.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../@react-three/drei/core/Sparkles.js", "../../@react-three/drei/core/useMatcapTexture.js", "../../@react-three/drei/core/useNormalTexture.js", "../../@react-three/drei/core/Wireframe.js", "../../@react-three/drei/materials/WireframeMaterial.js", "../../@react-three/drei/core/ShadowAlpha.js", "../../@react-three/drei/core/Points.js", "../../@react-three/drei/core/Segments.js", "../../@react-three/drei/core/Detailed.js", "../../@react-three/drei/core/Preload.js", "../../@react-three/drei/core/BakeShadows.js", "../../@react-three/drei/core/meshBounds.js", "../../@react-three/drei/core/AdaptiveDpr.js", "../../@react-three/drei/core/AdaptiveEvents.js", "../../@react-three/drei/core/PerformanceMonitor.js", "../../@react-three/drei/core/RenderTexture.js", "../../@react-three/drei/core/RenderCubeTexture.js", "../../@react-three/drei/core/Mask.js", "../../@react-three/drei/core/Fisheye.js", "../../@react-three/drei/core/MeshPortalMaterial.js", "../../@react-three/drei/web/View.js", "../../tunnel-rat/dist/index.js", "../../tunnel-rat/node_modules/zustand/esm/vanilla.mjs", "../../tunnel-rat/node_modules/zustand/esm/index.mjs", "../../@react-three/drei/web/pivotControls/index.js", "../../@react-three/drei/web/pivotControls/AxisArrow.js", "../../@react-three/drei/web/pivotControls/context.js", "../../@react-three/drei/web/pivotControls/AxisRotator.js", "../../@react-three/drei/web/pivotControls/PlaneSlider.js", "../../@react-three/drei/web/pivotControls/ScalingSphere.js", "../../@react-three/drei/web/FaceControls.js", "../../@react-three/drei/web/Facemesh.js", "../../@react-three/drei/web/FaceLandmarker.js"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Hls\"] = factory();\n\telse\n\t\troot[\"Hls\"] = factory();\n})(this, () => {\nreturn ", "import AbrController from './controller/abr-controller';\nimport AudioStreamController from './controller/audio-stream-controller';\nimport AudioTrackController from './controller/audio-track-controller';\nimport { SubtitleStreamController } from './controller/subtitle-stream-controller';\nimport SubtitleTrackController from './controller/subtitle-track-controller';\nimport BufferController from './controller/buffer-controller';\nimport { TimelineController } from './controller/timeline-controller';\nimport CapLevelController from './controller/cap-level-controller';\nimport FPSController from './controller/fps-controller';\nimport EMEController, {\n  MediaKeySessionContext,\n} from './controller/eme-controller';\nimport CMCDController from './controller/cmcd-controller';\nimport XhrLoader from './utils/xhr-loader';\nimport FetchLoader, { fetchSupported } from './utils/fetch-loader';\nimport Cues from './utils/cues';\nimport { requestMediaKeySystemAccess } from './utils/mediakeys-helper';\nimport { ILogger, logger } from './utils/logger';\n\nimport type Hls from './hls';\nimport type { CuesInterface } from './utils/cues';\nimport type { MediaKeyFunc, KeySystems } from './utils/mediakeys-helper';\nimport type {\n  FragmentLoaderContext,\n  Loader,\n  LoaderContext,\n  PlaylistLoaderContext,\n} from './types/loader';\n\nexport type ABRControllerConfig = {\n  abrEwmaFastLive: number;\n  abrEwmaSlowLive: number;\n  abrEwmaFastVoD: number;\n  abrEwmaSlowVoD: number;\n  abrEwmaDefaultEstimate: number;\n  abrBandWidthFactor: number;\n  abrBandWidthUpFactor: number;\n  abrMaxWithRealBitrate: boolean;\n  maxStarvationDelay: number;\n  maxLoadingDelay: number;\n};\n\nexport type BufferControllerConfig = {\n  appendErrorMaxRetry: number;\n  backBufferLength: number;\n  liveDurationInfinity: boolean;\n  liveBackBufferLength: number | null;\n};\n\nexport type CapLevelControllerConfig = {\n  capLevelToPlayerSize: boolean;\n};\n\nexport type CMCDControllerConfig = {\n  sessionId?: string;\n  contentId?: string;\n  useHeaders?: boolean;\n};\n\nexport type DRMSystemOptions = {\n  audioRobustness?: string;\n  videoRobustness?: string;\n  audioEncryptionScheme?: string | null;\n  videoEncryptionScheme?: string | null;\n  persistentState?: MediaKeysRequirement;\n  distinctiveIdentifier?: MediaKeysRequirement;\n  sessionTypes?: string[];\n  sessionType?: string;\n};\n\nexport type DRMSystemConfiguration = {\n  licenseUrl: string;\n  serverCertificateUrl?: string;\n  generateRequest?: (\n    this: Hls,\n    initDataType: string,\n    initData: ArrayBuffer | null,\n    keyContext: MediaKeySessionContext\n  ) =>\n    | { initDataType: string; initData: ArrayBuffer | null }\n    | undefined\n    | never;\n};\n\nexport type DRMSystemsConfiguration = Partial<\n  Record<KeySystems, DRMSystemConfiguration>\n>;\n\nexport type EMEControllerConfig = {\n  licenseXhrSetup?: (\n    this: Hls,\n    xhr: XMLHttpRequest,\n    url: string,\n    keyContext: MediaKeySessionContext,\n    licenseChallenge: Uint8Array\n  ) => void | Uint8Array | Promise<Uint8Array | void>;\n  licenseResponseCallback?: (\n    this: Hls,\n    xhr: XMLHttpRequest,\n    url: string,\n    keyContext: MediaKeySessionContext\n  ) => ArrayBuffer;\n  emeEnabled: boolean;\n  widevineLicenseUrl?: string;\n  drmSystems: DRMSystemsConfiguration;\n  drmSystemOptions: DRMSystemOptions;\n  requestMediaKeySystemAccessFunc: MediaKeyFunc | null;\n};\n\nexport interface FragmentLoaderConstructor {\n  new (confg: HlsConfig): Loader<FragmentLoaderContext>;\n}\n\nexport type FragmentLoaderConfig = {\n  fLoader?: FragmentLoaderConstructor;\n\n  fragLoadingTimeOut: number;\n  fragLoadingMaxRetry: number;\n  fragLoadingRetryDelay: number;\n  fragLoadingMaxRetryTimeout: number;\n};\n\nexport type FPSControllerConfig = {\n  capLevelOnFPSDrop: boolean;\n  fpsDroppedMonitoringPeriod: number;\n  fpsDroppedMonitoringThreshold: number;\n};\n\nexport type LevelControllerConfig = {\n  startLevel?: number;\n};\n\nexport type MP4RemuxerConfig = {\n  stretchShortVideoTrack: boolean;\n  maxAudioFramesDrift: number;\n};\n\nexport interface PlaylistLoaderConstructor {\n  new (confg: HlsConfig): Loader<PlaylistLoaderContext>;\n}\n\nexport type PlaylistLoaderConfig = {\n  pLoader?: PlaylistLoaderConstructor;\n\n  manifestLoadingTimeOut: number;\n  manifestLoadingMaxRetry: number;\n  manifestLoadingRetryDelay: number;\n  manifestLoadingMaxRetryTimeout: number;\n\n  levelLoadingTimeOut: number;\n  levelLoadingMaxRetry: number;\n  levelLoadingRetryDelay: number;\n  levelLoadingMaxRetryTimeout: number;\n};\n\nexport type StreamControllerConfig = {\n  autoStartLoad: boolean;\n  startPosition: number;\n  defaultAudioCodec?: string;\n  initialLiveManifestSize: number;\n  maxBufferLength: number;\n  maxBufferSize: number;\n  maxBufferHole: number;\n  highBufferWatchdogPeriod: number;\n  nudgeOffset: number;\n  nudgeMaxRetry: number;\n  maxFragLookUpTolerance: number;\n  maxMaxBufferLength: number;\n  startFragPrefetch: boolean;\n  testBandwidth: boolean;\n};\n\nexport type LatencyControllerConfig = {\n  liveSyncDurationCount: number;\n  liveMaxLatencyDurationCount: number;\n  liveSyncDuration?: number;\n  liveMaxLatencyDuration?: number;\n  maxLiveSyncPlaybackRate: number;\n};\n\nexport type MetadataControllerConfig = {\n  enableDateRangeMetadataCues: boolean;\n  enableEmsgMetadataCues: boolean;\n  enableID3MetadataCues: boolean;\n};\n\nexport type TimelineControllerConfig = {\n  cueHandler: CuesInterface;\n  enableWebVTT: boolean;\n  enableIMSC1: boolean;\n  enableCEA708Captions: boolean;\n  captionsTextTrack1Label: string;\n  captionsTextTrack1LanguageCode: string;\n  captionsTextTrack2Label: string;\n  captionsTextTrack2LanguageCode: string;\n  captionsTextTrack3Label: string;\n  captionsTextTrack3LanguageCode: string;\n  captionsTextTrack4Label: string;\n  captionsTextTrack4LanguageCode: string;\n  renderTextTracksNatively: boolean;\n};\n\nexport type TSDemuxerConfig = {\n  forceKeyFrameOnDiscontinuity: boolean;\n};\n\nexport type HlsConfig = {\n  debug: boolean | ILogger;\n  enableWorker: boolean;\n  enableSoftwareAES: boolean;\n  minAutoBitrate: number;\n  ignoreDevicePixelRatio: boolean;\n  loader: { new (confg: HlsConfig): Loader<LoaderContext> };\n  fetchSetup?: (context: LoaderContext, initParams: any) => Request;\n  xhrSetup?: (xhr: XMLHttpRequest, url: string) => void;\n\n  // Alt Audio\n  audioStreamController?: typeof AudioStreamController;\n  audioTrackController?: typeof AudioTrackController;\n  // Subtitle\n  subtitleStreamController?: typeof SubtitleStreamController;\n  subtitleTrackController?: typeof SubtitleTrackController;\n  timelineController?: typeof TimelineController;\n  // EME\n  emeController?: typeof EMEController;\n  // CMCD\n  cmcd?: CMCDControllerConfig;\n  cmcdController?: typeof CMCDController;\n\n  abrController: typeof AbrController;\n  bufferController: typeof BufferController;\n  capLevelController: typeof CapLevelController;\n  fpsController: typeof FPSController;\n  progressive: boolean;\n  lowLatencyMode: boolean;\n} & ABRControllerConfig &\n  BufferControllerConfig &\n  CapLevelControllerConfig &\n  EMEControllerConfig &\n  FPSControllerConfig &\n  FragmentLoaderConfig &\n  LevelControllerConfig &\n  MP4RemuxerConfig &\n  PlaylistLoaderConfig &\n  StreamControllerConfig &\n  LatencyControllerConfig &\n  MetadataControllerConfig &\n  TimelineControllerConfig &\n  TSDemuxerConfig;\n\n// If possible, keep hlsDefaultConfig shallow\n// It is cloned whenever a new Hls instance is created, by keeping the config\n// shallow the properties are cloned, and we don't end up manipulating the default\nexport const hlsDefaultConfig: HlsConfig = {\n  autoStartLoad: true, // used by stream-controller\n  startPosition: -1, // used by stream-controller\n  defaultAudioCodec: undefined, // used by stream-controller\n  debug: false, // used by logger\n  capLevelOnFPSDrop: false, // used by fps-controller\n  capLevelToPlayerSize: false, // used by cap-level-controller\n  ignoreDevicePixelRatio: false, // used by cap-level-controller\n  initialLiveManifestSize: 1, // used by stream-controller\n  maxBufferLength: 30, // used by stream-controller\n  backBufferLength: Infinity, // used by buffer-controller\n  maxBufferSize: 60 * 1000 * 1000, // used by stream-controller\n  maxBufferHole: 0.1, // used by stream-controller\n  highBufferWatchdogPeriod: 2, // used by stream-controller\n  nudgeOffset: 0.1, // used by stream-controller\n  nudgeMaxRetry: 3, // used by stream-controller\n  maxFragLookUpTolerance: 0.25, // used by stream-controller\n  liveSyncDurationCount: 3, // used by latency-controller\n  liveMaxLatencyDurationCount: Infinity, // used by latency-controller\n  liveSyncDuration: undefined, // used by latency-controller\n  liveMaxLatencyDuration: undefined, // used by latency-controller\n  maxLiveSyncPlaybackRate: 1, // used by latency-controller\n  liveDurationInfinity: false, // used by buffer-controller\n  liveBackBufferLength: null, // used by buffer-controller\n  maxMaxBufferLength: 600, // used by stream-controller\n  enableWorker: true, // used by demuxer\n  enableSoftwareAES: true, // used by decrypter\n  manifestLoadingTimeOut: 10000, // used by playlist-loader\n  manifestLoadingMaxRetry: 1, // used by playlist-loader\n  manifestLoadingRetryDelay: 1000, // used by playlist-loader\n  manifestLoadingMaxRetryTimeout: 64000, // used by playlist-loader\n  startLevel: undefined, // used by level-controller\n  levelLoadingTimeOut: 10000, // used by playlist-loader\n  levelLoadingMaxRetry: 4, // used by playlist-loader\n  levelLoadingRetryDelay: 1000, // used by playlist-loader\n  levelLoadingMaxRetryTimeout: 64000, // used by playlist-loader\n  fragLoadingTimeOut: 20000, // used by fragment-loader\n  fragLoadingMaxRetry: 6, // used by fragment-loader\n  fragLoadingRetryDelay: 1000, // used by fragment-loader\n  fragLoadingMaxRetryTimeout: 64000, // used by fragment-loader\n  startFragPrefetch: false, // used by stream-controller\n  fpsDroppedMonitoringPeriod: 5000, // used by fps-controller\n  fpsDroppedMonitoringThreshold: 0.2, // used by fps-controller\n  appendErrorMaxRetry: 3, // used by buffer-controller\n  loader: XhrLoader,\n  // loader: FetchLoader,\n  fLoader: undefined, // used by fragment-loader\n  pLoader: undefined, // used by playlist-loader\n  xhrSetup: undefined, // used by xhr-loader\n  licenseXhrSetup: undefined, // used by eme-controller\n  licenseResponseCallback: undefined, // used by eme-controller\n  abrController: AbrController,\n  bufferController: BufferController,\n  capLevelController: CapLevelController,\n  fpsController: FPSController,\n  stretchShortVideoTrack: false, // used by mp4-remuxer\n  maxAudioFramesDrift: 1, // used by mp4-remuxer\n  forceKeyFrameOnDiscontinuity: true, // used by ts-demuxer\n  abrEwmaFastLive: 3, // used by abr-controller\n  abrEwmaSlowLive: 9, // used by abr-controller\n  abrEwmaFastVoD: 3, // used by abr-controller\n  abrEwmaSlowVoD: 9, // used by abr-controller\n  abrEwmaDefaultEstimate: 5e5, // 500 kbps  // used by abr-controller\n  abrBandWidthFactor: 0.95, // used by abr-controller\n  abrBandWidthUpFactor: 0.7, // used by abr-controller\n  abrMaxWithRealBitrate: false, // used by abr-controller\n  maxStarvationDelay: 4, // used by abr-controller\n  maxLoadingDelay: 4, // used by abr-controller\n  minAutoBitrate: 0, // used by hls\n  emeEnabled: false, // used by eme-controller\n  widevineLicenseUrl: undefined, // used by eme-controller\n  drmSystems: {}, // used by eme-controller\n  drmSystemOptions: {}, // used by eme-controller\n  requestMediaKeySystemAccessFunc: requestMediaKeySystemAccess, // used by eme-controller\n  testBandwidth: true,\n  progressive: false,\n  lowLatencyMode: true,\n  cmcd: undefined,\n  enableDateRangeMetadataCues: true,\n  enableEmsgMetadataCues: true,\n  enableID3MetadataCues: true,\n\n  // Dynamic Modules\n  ...timelineConfig(),\n  subtitleStreamController: __USE_SUBTITLES__\n    ? SubtitleStreamController\n    : undefined,\n  subtitleTrackController: __USE_SUBTITLES__\n    ? SubtitleTrackController\n    : undefined,\n  timelineController: __USE_SUBTITLES__ ? TimelineController : undefined,\n  audioStreamController: __USE_ALT_AUDIO__ ? AudioStreamController : undefined,\n  audioTrackController: __USE_ALT_AUDIO__ ? AudioTrackController : undefined,\n  emeController: __USE_EME_DRM__ ? EMEController : undefined,\n  cmcdController: __USE_CMCD__ ? CMCDController : undefined,\n};\n\nfunction timelineConfig(): TimelineControllerConfig {\n  return {\n    cueHandler: Cues, // used by timeline-controller\n    enableWebVTT: __USE_SUBTITLES__, // used by timeline-controller\n    enableIMSC1: __USE_SUBTITLES__, // used by timeline-controller\n    enableCEA708Captions: __USE_SUBTITLES__, // used by timeline-controller\n    captionsTextTrack1Label: 'English', // used by timeline-controller\n    captionsTextTrack1LanguageCode: 'en', // used by timeline-controller\n    captionsTextTrack2Label: 'Spanish', // used by timeline-controller\n    captionsTextTrack2LanguageCode: 'es', // used by timeline-controller\n    captionsTextTrack3Label: 'Unknown CC', // used by timeline-controller\n    captionsTextTrack3LanguageCode: '', // used by timeline-controller\n    captionsTextTrack4Label: 'Unknown CC', // used by timeline-controller\n    captionsTextTrack4LanguageCode: '', // used by timeline-controller\n    renderTextTracksNatively: true,\n  };\n}\n\nexport function mergeConfig(\n  defaultConfig: HlsConfig,\n  userConfig: Partial<HlsConfig>\n): HlsConfig {\n  if (\n    (userConfig.liveSyncDurationCount ||\n      userConfig.liveMaxLatencyDurationCount) &&\n    (userConfig.liveSyncDuration || userConfig.liveMaxLatencyDuration)\n  ) {\n    throw new Error(\n      \"Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration\"\n    );\n  }\n\n  if (\n    userConfig.liveMaxLatencyDurationCount !== undefined &&\n    (userConfig.liveSyncDurationCount === undefined ||\n      userConfig.liveMaxLatencyDurationCount <=\n        userConfig.liveSyncDurationCount)\n  ) {\n    throw new Error(\n      'Illegal hls.js config: \"liveMaxLatencyDurationCount\" must be greater than \"liveSyncDurationCount\"'\n    );\n  }\n\n  if (\n    userConfig.liveMaxLatencyDuration !== undefined &&\n    (userConfig.liveSyncDuration === undefined ||\n      userConfig.liveMaxLatencyDuration <= userConfig.liveSyncDuration)\n  ) {\n    throw new Error(\n      'Illegal hls.js config: \"liveMaxLatencyDuration\" must be greater than \"liveSyncDuration\"'\n    );\n  }\n\n  return Object.assign({}, defaultConfig, userConfig);\n}\n\nexport function enableStreamingMode(config) {\n  const currentLoader = config.loader;\n  if (currentLoader !== FetchLoader && currentLoader !== XhrLoader) {\n    // If a developer has configured their own loader, respect that choice\n    logger.log(\n      '[config]: Custom loader detected, cannot enable progressive streaming'\n    );\n    config.progressive = false;\n  } else {\n    const canStreamProgressively = fetchSupported();\n    if (canStreamProgressively) {\n      config.loader = FetchLoader;\n      config.progressive = true;\n      config.enableSoftwareAES = true;\n      logger.log('[config]: Progressive streaming enabled, using FetchLoader');\n    }\n  }\n}\n", "import EwmaBandWidthEstimator from '../utils/ewma-bandwidth-estimator';\nimport { Events } from '../events';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport { PlaylistLevelType } from '../types/loader';\nimport { logger } from '../utils/logger';\nimport type { Fragment } from '../loader/fragment';\nimport type { Part } from '../loader/fragment';\nimport type { LoaderStats } from '../types/loader';\nimport type Hls from '../hls';\nimport type {\n  FragLoadingData,\n  FragLoadedData,\n  FragBufferedData,\n  ErrorData,\n  LevelLoadedData,\n} from '../types/events';\nimport type { ComponentAPI } from '../types/component-api';\n\nclass AbrController implements ComponentAPI {\n  protected hls: Hls;\n  private lastLoadedFragLevel: number = 0;\n  private _nextAutoLevel: number = -1;\n  private timer?: number;\n  private onCheck: Function = this._abandonRulesCheck.bind(this);\n  private fragCurrent: Fragment | null = null;\n  private partCurrent: Part | null = null;\n  private bitrateTestDelay: number = 0;\n\n  public readonly bwEstimator: EwmaBandWidthEstimator;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n\n    const config = hls.config;\n    this.bwEstimator = new EwmaBandWidthEstimator(\n      config.abrEwmaSlowVoD,\n      config.abrEwmaFastVoD,\n      config.abrEwmaDefaultEstimate\n    );\n\n    this.registerListeners();\n  }\n\n  protected registerListeners() {\n    const { hls } = this;\n    hls.on(Events.FRAG_LOADING, this.onFragLoading, this);\n    hls.on(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.on(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n    hls.on(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.on(Events.ERROR, this.onError, this);\n  }\n\n  protected unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.FRAG_LOADING, this.onFragLoading, this);\n    hls.off(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.off(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n    hls.off(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.off(Events.ERROR, this.onError, this);\n  }\n\n  public destroy() {\n    this.unregisterListeners();\n    this.clearTimer();\n    // @ts-ignore\n    this.hls = this.onCheck = null;\n    this.fragCurrent = this.partCurrent = null;\n  }\n\n  protected onFragLoading(event: Events.FRAG_LOADING, data: FragLoadingData) {\n    const frag = data.frag;\n    if (frag.type === PlaylistLevelType.MAIN) {\n      if (!this.timer) {\n        this.fragCurrent = frag;\n        this.partCurrent = data.part ?? null;\n        this.timer = self.setInterval(this.onCheck, 100);\n      }\n    }\n  }\n\n  protected onLevelLoaded(event: Events.LEVEL_LOADED, data: LevelLoadedData) {\n    const config = this.hls.config;\n    if (data.details.live) {\n      this.bwEstimator.update(config.abrEwmaSlowLive, config.abrEwmaFastLive);\n    } else {\n      this.bwEstimator.update(config.abrEwmaSlowVoD, config.abrEwmaFastVoD);\n    }\n  }\n\n  /*\n      This method monitors the download rate of the current fragment, and will downswitch if that fragment will not load\n      quickly enough to prevent underbuffering\n    */\n  private _abandonRulesCheck() {\n    const { fragCurrent: frag, partCurrent: part, hls } = this;\n    const { autoLevelEnabled, media } = hls;\n    if (!frag || !media) {\n      return;\n    }\n\n    const stats: LoaderStats = part ? part.stats : frag.stats;\n    const duration = part ? part.duration : frag.duration;\n    // If frag loading is aborted, complete, or from lowest level, stop timer and return\n    if (\n      stats.aborted ||\n      (stats.loaded && stats.loaded === stats.total) ||\n      frag.level === 0\n    ) {\n      this.clearTimer();\n      // reset forced auto level value so that next level will be selected\n      this._nextAutoLevel = -1;\n      return;\n    }\n\n    // This check only runs if we're in ABR mode and actually playing\n    if (\n      !autoLevelEnabled ||\n      media.paused ||\n      !media.playbackRate ||\n      !media.readyState\n    ) {\n      return;\n    }\n\n    const bufferInfo = hls.mainForwardBufferInfo;\n    if (bufferInfo === null) {\n      return;\n    }\n\n    const requestDelay = performance.now() - stats.loading.start;\n    const playbackRate = Math.abs(media.playbackRate);\n    // In order to work with a stable bandwidth, only begin monitoring bandwidth after half of the fragment has been loaded\n    if (requestDelay <= (500 * duration) / playbackRate) {\n      return;\n    }\n\n    const loadedFirstByte = stats.loaded && stats.loading.first;\n    const bwEstimate: number = this.bwEstimator.getEstimate();\n    const { levels, minAutoLevel } = hls;\n    const level = levels[frag.level];\n    const expectedLen =\n      stats.total ||\n      Math.max(stats.loaded, Math.round((duration * level.maxBitrate) / 8));\n    const loadRate = loadedFirstByte ? (stats.loaded * 1000) / requestDelay : 0;\n\n    // fragLoadDelay is an estimate of the time (in seconds) it will take to buffer the remainder of the fragment\n    const fragLoadedDelay = loadRate\n      ? (expectedLen - stats.loaded) / loadRate\n      : (expectedLen * 8) / bwEstimate;\n\n    // bufferStarvationDelay is an estimate of the amount time (in seconds) it will take to exhaust the buffer\n    const bufferStarvationDelay = bufferInfo.len / playbackRate;\n\n    // Only downswitch if the time to finish loading the current fragment is greater than the amount of buffer left\n    if (fragLoadedDelay <= bufferStarvationDelay) {\n      return;\n    }\n\n    let fragLevelNextLoadedDelay: number = Number.POSITIVE_INFINITY;\n    let nextLoadLevel: number;\n    // Iterate through lower level and try to find the largest one that avoids rebuffering\n    for (\n      nextLoadLevel = frag.level - 1;\n      nextLoadLevel > minAutoLevel;\n      nextLoadLevel--\n    ) {\n      // compute time to load next fragment at lower level\n      // 0.8 : consider only 80% of current bw to be conservative\n      // 8 = bits per byte (bps/Bps)\n      const levelNextBitrate = levels[nextLoadLevel].maxBitrate;\n      fragLevelNextLoadedDelay = loadRate\n        ? (duration * levelNextBitrate) / (8 * 0.8 * loadRate)\n        : (duration * levelNextBitrate) / bwEstimate;\n\n      if (fragLevelNextLoadedDelay < bufferStarvationDelay) {\n        break;\n      }\n    }\n    // Only emergency switch down if it takes less time to load a new fragment at lowest level instead of continuing\n    // to load the current one\n    if (fragLevelNextLoadedDelay >= fragLoadedDelay) {\n      return;\n    }\n    logger.warn(`Fragment ${frag.sn}${\n      part ? ' part ' + part.index : ''\n    } of level ${\n      frag.level\n    } is loading too slowly and will cause an underbuffer; aborting and switching to level ${nextLoadLevel}\n      Current BW estimate: ${\n        Number.isFinite(bwEstimate) ? (bwEstimate / 1024).toFixed(3) : 'Unknown'\n      } Kb/s\n      Estimated load time for current fragment: ${fragLoadedDelay.toFixed(3)} s\n      Estimated load time for the next fragment: ${fragLevelNextLoadedDelay.toFixed(\n        3\n      )} s\n      Time to underbuffer: ${bufferStarvationDelay.toFixed(3)} s`);\n    hls.nextLoadLevel = nextLoadLevel;\n    if (loadedFirstByte) {\n      // If there has been loading progress, sample bandwidth\n      this.bwEstimator.sample(requestDelay, stats.loaded);\n    }\n    this.clearTimer();\n    if (frag.loader || frag.keyLoader) {\n      this.fragCurrent = this.partCurrent = null;\n      frag.abortRequests();\n    }\n    hls.trigger(Events.FRAG_LOAD_EMERGENCY_ABORTED, { frag, part, stats });\n  }\n\n  protected onFragLoaded(\n    event: Events.FRAG_LOADED,\n    { frag, part }: FragLoadedData\n  ) {\n    if (\n      frag.type === PlaylistLevelType.MAIN &&\n      Number.isFinite(frag.sn as number)\n    ) {\n      const stats = part ? part.stats : frag.stats;\n      const duration = part ? part.duration : frag.duration;\n      // stop monitoring bw once frag loaded\n      this.clearTimer();\n      // store level id after successful fragment load\n      this.lastLoadedFragLevel = frag.level;\n      // reset forced auto level value so that next level will be selected\n      this._nextAutoLevel = -1;\n\n      // compute level average bitrate\n      if (this.hls.config.abrMaxWithRealBitrate) {\n        const level = this.hls.levels[frag.level];\n        const loadedBytes =\n          (level.loaded ? level.loaded.bytes : 0) + stats.loaded;\n        const loadedDuration =\n          (level.loaded ? level.loaded.duration : 0) + duration;\n        level.loaded = { bytes: loadedBytes, duration: loadedDuration };\n        level.realBitrate = Math.round((8 * loadedBytes) / loadedDuration);\n      }\n      if (frag.bitrateTest) {\n        const fragBufferedData: FragBufferedData = {\n          stats,\n          frag,\n          part,\n          id: frag.type,\n        };\n        this.onFragBuffered(Events.FRAG_BUFFERED, fragBufferedData);\n      }\n    }\n  }\n\n  protected onFragBuffered(\n    event: Events.FRAG_BUFFERED,\n    data: FragBufferedData\n  ) {\n    const { frag, part } = data;\n    const stats = part ? part.stats : frag.stats;\n\n    if (stats.aborted) {\n      return;\n    }\n    // Only count non-alt-audio frags which were actually buffered in our BW calculations\n    if (frag.type !== PlaylistLevelType.MAIN || frag.sn === 'initSegment') {\n      return;\n    }\n    // Use the difference between parsing and request instead of buffering and request to compute fragLoadingProcessing;\n    // rationale is that buffer appending only happens once media is attached. This can happen when config.startFragPrefetch\n    // is used. If we used buffering in that case, our BW estimate sample will be very large.\n    const processingMs = stats.parsing.end - stats.loading.start;\n    this.bwEstimator.sample(processingMs, stats.loaded);\n    stats.bwEstimate = this.bwEstimator.getEstimate();\n    if (frag.bitrateTest) {\n      this.bitrateTestDelay = processingMs / 1000;\n    } else {\n      this.bitrateTestDelay = 0;\n    }\n  }\n\n  protected onError(event: Events.ERROR, data: ErrorData) {\n    // stop timer in case of frag loading error\n    if (data.frag?.type === PlaylistLevelType.MAIN) {\n      if (data.type === ErrorTypes.KEY_SYSTEM_ERROR) {\n        this.clearTimer();\n        return;\n      }\n      switch (data.details) {\n        case ErrorDetails.FRAG_LOAD_ERROR:\n        case ErrorDetails.FRAG_LOAD_TIMEOUT:\n        case ErrorDetails.KEY_LOAD_ERROR:\n        case ErrorDetails.KEY_LOAD_TIMEOUT:\n          this.clearTimer();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  clearTimer() {\n    self.clearInterval(this.timer);\n    this.timer = undefined;\n  }\n\n  // return next auto level\n  get nextAutoLevel() {\n    const forcedAutoLevel = this._nextAutoLevel;\n    const bwEstimator = this.bwEstimator;\n    // in case next auto level has been forced, and bw not available or not reliable, return forced value\n    if (forcedAutoLevel !== -1 && !bwEstimator.canEstimate()) {\n      return forcedAutoLevel;\n    }\n\n    // compute next level using ABR logic\n    let nextABRAutoLevel = this.getNextABRAutoLevel();\n    // use forced auto level when ABR selected level has errored\n    if (forcedAutoLevel !== -1 && this.hls.levels[nextABRAutoLevel].loadError) {\n      return forcedAutoLevel;\n    }\n    // if forced auto level has been defined, use it to cap ABR computed quality level\n    if (forcedAutoLevel !== -1) {\n      nextABRAutoLevel = Math.min(forcedAutoLevel, nextABRAutoLevel);\n    }\n\n    return nextABRAutoLevel;\n  }\n\n  private getNextABRAutoLevel() {\n    const { fragCurrent, partCurrent, hls } = this;\n    const { maxAutoLevel, config, minAutoLevel, media } = hls;\n    const currentFragDuration = partCurrent\n      ? partCurrent.duration\n      : fragCurrent\n      ? fragCurrent.duration\n      : 0;\n\n    // playbackRate is the absolute value of the playback rate; if media.playbackRate is 0, we use 1 to load as\n    // if we're playing back at the normal rate.\n    const playbackRate =\n      media && media.playbackRate !== 0 ? Math.abs(media.playbackRate) : 1.0;\n    const avgbw = this.bwEstimator\n      ? this.bwEstimator.getEstimate()\n      : config.abrEwmaDefaultEstimate;\n    // bufferStarvationDelay is the wall-clock time left until the playback buffer is exhausted.\n    const bufferInfo = hls.mainForwardBufferInfo;\n    const bufferStarvationDelay =\n      (bufferInfo ? bufferInfo.len : 0) / playbackRate;\n\n    // First, look to see if we can find a level matching with our avg bandwidth AND that could also guarantee no rebuffering at all\n    let bestLevel = this.findBestLevel(\n      avgbw,\n      minAutoLevel,\n      maxAutoLevel,\n      bufferStarvationDelay,\n      config.abrBandWidthFactor,\n      config.abrBandWidthUpFactor\n    );\n    if (bestLevel >= 0) {\n      return bestLevel;\n    }\n    logger.trace(\n      `${\n        bufferStarvationDelay ? 'rebuffering expected' : 'buffer is empty'\n      }, finding optimal quality level`\n    );\n    // not possible to get rid of rebuffering ... let's try to find level that will guarantee less than maxStarvationDelay of rebuffering\n    // if no matching level found, logic will return 0\n    let maxStarvationDelay = currentFragDuration\n      ? Math.min(currentFragDuration, config.maxStarvationDelay)\n      : config.maxStarvationDelay;\n    let bwFactor = config.abrBandWidthFactor;\n    let bwUpFactor = config.abrBandWidthUpFactor;\n\n    if (!bufferStarvationDelay) {\n      // in case buffer is empty, let's check if previous fragment was loaded to perform a bitrate test\n      const bitrateTestDelay = this.bitrateTestDelay;\n      if (bitrateTestDelay) {\n        // if it is the case, then we need to adjust our max starvation delay using maxLoadingDelay config value\n        // max video loading delay used in  automatic start level selection :\n        // in that mode ABR controller will ensure that video loading time (ie the time to fetch the first fragment at lowest quality level +\n        // the time to fetch the fragment at the appropriate quality level is less than ```maxLoadingDelay``` )\n        // cap maxLoadingDelay and ensure it is not bigger 'than bitrate test' frag duration\n        const maxLoadingDelay = currentFragDuration\n          ? Math.min(currentFragDuration, config.maxLoadingDelay)\n          : config.maxLoadingDelay;\n        maxStarvationDelay = maxLoadingDelay - bitrateTestDelay;\n        logger.trace(\n          `bitrate test took ${Math.round(\n            1000 * bitrateTestDelay\n          )}ms, set first fragment max fetchDuration to ${Math.round(\n            1000 * maxStarvationDelay\n          )} ms`\n        );\n        // don't use conservative factor on bitrate test\n        bwFactor = bwUpFactor = 1;\n      }\n    }\n    bestLevel = this.findBestLevel(\n      avgbw,\n      minAutoLevel,\n      maxAutoLevel,\n      bufferStarvationDelay + maxStarvationDelay,\n      bwFactor,\n      bwUpFactor\n    );\n    return Math.max(bestLevel, 0);\n  }\n\n  private findBestLevel(\n    currentBw: number,\n    minAutoLevel: number,\n    maxAutoLevel: number,\n    maxFetchDuration: number,\n    bwFactor: number,\n    bwUpFactor: number\n  ): number {\n    const {\n      fragCurrent,\n      partCurrent,\n      lastLoadedFragLevel: currentLevel,\n    } = this;\n    const { levels } = this.hls;\n    const level = levels[currentLevel];\n    const live = !!level?.details?.live;\n    const currentCodecSet = level?.codecSet;\n\n    const currentFragDuration = partCurrent\n      ? partCurrent.duration\n      : fragCurrent\n      ? fragCurrent.duration\n      : 0;\n    for (let i = maxAutoLevel; i >= minAutoLevel; i--) {\n      const levelInfo = levels[i];\n\n      if (\n        !levelInfo ||\n        (currentCodecSet && levelInfo.codecSet !== currentCodecSet)\n      ) {\n        continue;\n      }\n\n      const levelDetails = levelInfo.details;\n      const avgDuration =\n        (partCurrent\n          ? levelDetails?.partTarget\n          : levelDetails?.averagetargetduration) || currentFragDuration;\n\n      let adjustedbw: number;\n      // follow algorithm captured from stagefright :\n      // https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/httplive/LiveSession.cpp\n      // Pick the highest bandwidth stream below or equal to estimated bandwidth.\n      // consider only 80% of the available bandwidth, but if we are switching up,\n      // be even more conservative (70%) to avoid overestimating and immediately\n      // switching back.\n      if (i <= currentLevel) {\n        adjustedbw = bwFactor * currentBw;\n      } else {\n        adjustedbw = bwUpFactor * currentBw;\n      }\n\n      const bitrate: number = levels[i].maxBitrate;\n      const fetchDuration: number = (bitrate * avgDuration) / adjustedbw;\n\n      logger.trace(\n        `level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: ${i}/${Math.round(\n          adjustedbw\n        )}/${bitrate}/${avgDuration}/${maxFetchDuration}/${fetchDuration}`\n      );\n      // if adjusted bw is greater than level bitrate AND\n      if (\n        adjustedbw > bitrate &&\n        // fragment fetchDuration unknown OR live stream OR fragment fetchDuration less than max allowed fetch duration, then this level matches\n        // we don't account for max Fetch Duration for live streams, this is to avoid switching down when near the edge of live sliding window ...\n        // special case to support startLevel = -1 (bitrateTest) on live streams : in that case we should not exit loop so that findBestLevel will return -1\n        (fetchDuration === 0 ||\n          !Number.isFinite(fetchDuration) ||\n          (live && !this.bitrateTestDelay) ||\n          fetchDuration < maxFetchDuration)\n      ) {\n        // as we are looping from highest to lowest, this will return the best achievable quality level\n        return i;\n      }\n    }\n    // not enough time budget even with quality level 0 ... rebuffering might happen\n    return -1;\n  }\n\n  set nextAutoLevel(nextLevel) {\n    this._nextAutoLevel = nextLevel;\n  }\n}\n\nexport default AbrController;\n", "import BaseStreamController, { State } from './base-stream-controller';\nimport { Events } from '../events';\nimport { Bufferable, BufferHelper } from '../utils/buffer-helper';\nimport { FragmentState } from './fragment-tracker';\nimport { Level } from '../types/level';\nimport { PlaylistLevelType } from '../types/loader';\nimport { Fragment, ElementaryStreamTypes, Part } from '../loader/fragment';\nimport ChunkCache from '../demux/chunk-cache';\nimport TransmuxerInterface from '../demux/transmuxer-interface';\nimport { ChunkMetadata } from '../types/transmuxer';\nimport { fragmentWithinToleranceTest } from './fragment-finders';\nimport { alignMediaPlaylistByPDT } from '../utils/discontinuities';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport type { NetworkComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\nimport type { FragmentTracker } from './fragment-tracker';\nimport type KeyLoader from '../loader/key-loader';\nimport type { TransmuxerResult } from '../types/transmuxer';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { TrackSet } from '../types/track';\nimport type {\n  BufferCreatedData,\n  AudioTracksUpdatedData,\n  AudioTrackSwitchingData,\n  LevelLoadedData,\n  TrackLoadedData,\n  BufferAppendingData,\n  BufferFlushedData,\n  InitPTSFoundData,\n  FragLoadedData,\n  FragParsingMetadataData,\n  FragParsingUserdataData,\n  FragBufferedData,\n  ErrorData,\n} from '../types/events';\n\nconst TICK_INTERVAL = 100; // how often to tick in ms\n\ntype WaitingForPTSData = {\n  frag: Fragment;\n  part: Part | null;\n  cache: ChunkCache;\n  complete: boolean;\n};\n\nclass AudioStreamController\n  extends BaseStreamController\n  implements NetworkComponentAPI\n{\n  private videoBuffer: Bufferable | null = null;\n  private videoTrackCC: number = -1;\n  private waitingVideoCC: number = -1;\n  private audioSwitch: boolean = false;\n  private trackId: number = -1;\n  private waitingData: WaitingForPTSData | null = null;\n  private mainDetails: LevelDetails | null = null;\n  private bufferFlushed: boolean = false;\n  private cachedTrackLoadedData: TrackLoadedData | null = null;\n\n  constructor(\n    hls: Hls,\n    fragmentTracker: FragmentTracker,\n    keyLoader: KeyLoader\n  ) {\n    super(hls, fragmentTracker, keyLoader, '[audio-stream-controller]');\n    this._registerListeners();\n  }\n\n  protected onHandlerDestroying() {\n    this._unregisterListeners();\n    this.mainDetails = null;\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.on(Events.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this);\n    hls.on(Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this);\n    hls.on(Events.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this);\n    hls.on(Events.ERROR, this.onError, this);\n    hls.on(Events.BUFFER_RESET, this.onBufferReset, this);\n    hls.on(Events.BUFFER_CREATED, this.onBufferCreated, this);\n    hls.on(Events.BUFFER_FLUSHED, this.onBufferFlushed, this);\n    hls.on(Events.INIT_PTS_FOUND, this.onInitPtsFound, this);\n    hls.on(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n  }\n\n  private _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.off(Events.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this);\n    hls.off(Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this);\n    hls.off(Events.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this);\n    hls.off(Events.ERROR, this.onError, this);\n    hls.off(Events.BUFFER_RESET, this.onBufferReset, this);\n    hls.off(Events.BUFFER_CREATED, this.onBufferCreated, this);\n    hls.off(Events.BUFFER_FLUSHED, this.onBufferFlushed, this);\n    hls.off(Events.INIT_PTS_FOUND, this.onInitPtsFound, this);\n    hls.off(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n  }\n\n  // INIT_PTS_FOUND is triggered when the video track parsed in the stream-controller has a new PTS value\n  onInitPtsFound(\n    event: Events.INIT_PTS_FOUND,\n    { frag, id, initPTS }: InitPTSFoundData\n  ) {\n    // Always update the new INIT PTS\n    // Can change due level switch\n    if (id === 'main') {\n      const cc = frag.cc;\n      this.initPTS[frag.cc] = initPTS;\n      this.log(`InitPTS for cc: ${cc} found from main: ${initPTS}`);\n      this.videoTrackCC = cc;\n      // If we are waiting, tick immediately to unblock audio fragment transmuxing\n      if (this.state === State.WAITING_INIT_PTS) {\n        this.tick();\n      }\n    }\n  }\n\n  startLoad(startPosition: number) {\n    if (!this.levels) {\n      this.startPosition = startPosition;\n      this.state = State.STOPPED;\n      return;\n    }\n    const lastCurrentTime = this.lastCurrentTime;\n    this.stopLoad();\n    this.setInterval(TICK_INTERVAL);\n    this.fragLoadError = 0;\n    if (lastCurrentTime > 0 && startPosition === -1) {\n      this.log(\n        `Override startPosition with lastCurrentTime @${lastCurrentTime.toFixed(\n          3\n        )}`\n      );\n      startPosition = lastCurrentTime;\n      this.state = State.IDLE;\n    } else {\n      this.loadedmetadata = false;\n      this.state = State.WAITING_TRACK;\n    }\n    this.nextLoadPosition =\n      this.startPosition =\n      this.lastCurrentTime =\n        startPosition;\n\n    this.tick();\n  }\n\n  doTick() {\n    switch (this.state) {\n      case State.IDLE:\n        this.doTickIdle();\n        break;\n      case State.WAITING_TRACK: {\n        const { levels, trackId } = this;\n        const details = levels?.[trackId]?.details;\n        if (details) {\n          if (this.waitForCdnTuneIn(details)) {\n            break;\n          }\n          this.state = State.WAITING_INIT_PTS;\n        }\n        break;\n      }\n      case State.FRAG_LOADING_WAITING_RETRY: {\n        const now = performance.now();\n        const retryDate = this.retryDate;\n        // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\n        if (!retryDate || now >= retryDate || this.media?.seeking) {\n          this.log('RetryDate reached, switch back to IDLE state');\n          this.resetStartWhenNotLoaded(this.trackId);\n          this.state = State.IDLE;\n        }\n        break;\n      }\n      case State.WAITING_INIT_PTS: {\n        // Ensure we don't get stuck in the WAITING_INIT_PTS state if the waiting frag CC doesn't match any initPTS\n        const waitingData = this.waitingData;\n        if (waitingData) {\n          const { frag, part, cache, complete } = waitingData;\n          if (this.initPTS[frag.cc] !== undefined) {\n            this.waitingData = null;\n            this.waitingVideoCC = -1;\n            this.state = State.FRAG_LOADING;\n            const payload = cache.flush();\n            const data: FragLoadedData = {\n              frag,\n              part,\n              payload,\n              networkDetails: null,\n            };\n            this._handleFragmentLoadProgress(data);\n            if (complete) {\n              super._handleFragmentLoadComplete(data);\n            }\n          } else if (this.videoTrackCC !== this.waitingVideoCC) {\n            // Drop waiting fragment if videoTrackCC has changed since waitingFragment was set and initPTS was not found\n            this.log(\n              `Waiting fragment cc (${frag.cc}) cancelled because video is at cc ${this.videoTrackCC}`\n            );\n            this.clearWaitingFragment();\n          } else {\n            // Drop waiting fragment if an earlier fragment is needed\n            const pos = this.getLoadPosition();\n            const bufferInfo = BufferHelper.bufferInfo(\n              this.mediaBuffer,\n              pos,\n              this.config.maxBufferHole\n            );\n            const waitingFragmentAtPosition = fragmentWithinToleranceTest(\n              bufferInfo.end,\n              this.config.maxFragLookUpTolerance,\n              frag\n            );\n            if (waitingFragmentAtPosition < 0) {\n              this.log(\n                `Waiting fragment cc (${frag.cc}) @ ${frag.start} cancelled because another fragment at ${bufferInfo.end} is needed`\n              );\n              this.clearWaitingFragment();\n            }\n          }\n        } else {\n          this.state = State.IDLE;\n        }\n      }\n    }\n\n    this.onTickEnd();\n  }\n\n  clearWaitingFragment() {\n    const waitingData = this.waitingData;\n    if (waitingData) {\n      this.fragmentTracker.removeFragment(waitingData.frag);\n      this.waitingData = null;\n      this.waitingVideoCC = -1;\n      this.state = State.IDLE;\n    }\n  }\n\n  protected resetLoadingState() {\n    this.clearWaitingFragment();\n    super.resetLoadingState();\n  }\n\n  protected onTickEnd() {\n    const { media } = this;\n    if (!media || !media.readyState) {\n      // Exit early if we don't have media or if the media hasn't buffered anything yet (readyState 0)\n      return;\n    }\n\n    this.lastCurrentTime = media.currentTime;\n  }\n\n  private doTickIdle() {\n    const { hls, levels, media, trackId } = this;\n    const config = hls.config;\n\n    if (!levels || !levels[trackId]) {\n      return;\n    }\n\n    // if video not attached AND\n    // start fragment already requested OR start frag prefetch not enabled\n    // exit loop\n    // => if media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop\n    if (!media && (this.startFragRequested || !config.startFragPrefetch)) {\n      return;\n    }\n\n    const levelInfo = levels[trackId];\n\n    const trackDetails = levelInfo.details;\n    if (\n      !trackDetails ||\n      (trackDetails.live && this.levelLastLoaded !== trackId) ||\n      this.waitForCdnTuneIn(trackDetails)\n    ) {\n      this.state = State.WAITING_TRACK;\n      return;\n    }\n\n    const bufferable = this.mediaBuffer ? this.mediaBuffer : this.media;\n    if (this.bufferFlushed && bufferable) {\n      this.bufferFlushed = false;\n      this.afterBufferFlushed(\n        bufferable,\n        ElementaryStreamTypes.AUDIO,\n        PlaylistLevelType.AUDIO\n      );\n    }\n\n    const bufferInfo = this.getFwdBufferInfo(\n      bufferable,\n      PlaylistLevelType.AUDIO\n    );\n    if (bufferInfo === null) {\n      return;\n    }\n    const audioSwitch = this.audioSwitch;\n\n    if (!audioSwitch && this._streamEnded(bufferInfo, trackDetails)) {\n      hls.trigger(Events.BUFFER_EOS, { type: 'audio' });\n      this.state = State.ENDED;\n      return;\n    }\n\n    const mainBufferInfo = this.getFwdBufferInfo(\n      this.videoBuffer ? this.videoBuffer : this.media,\n      PlaylistLevelType.MAIN\n    );\n    const bufferLen = bufferInfo.len;\n    const maxBufLen = this.getMaxBufferLength(mainBufferInfo?.len);\n\n    // if buffer length is less than maxBufLen try to load a new fragment\n    if (bufferLen >= maxBufLen && !audioSwitch) {\n      return;\n    }\n    const fragments = trackDetails.fragments;\n    const start = fragments[0].start;\n    let targetBufferTime = bufferInfo.end;\n\n    if (audioSwitch && media) {\n      const pos = this.getLoadPosition();\n      targetBufferTime = pos;\n      // if currentTime (pos) is less than alt audio playlist start time, it means that alt audio is ahead of currentTime\n      if (trackDetails.PTSKnown && pos < start) {\n        // if everything is buffered from pos to start or if audio buffer upfront, let's seek to start\n        if (bufferInfo.end > start || bufferInfo.nextStart) {\n          this.log(\n            'Alt audio track ahead of main track, seek to start of alt audio track'\n          );\n          media.currentTime = start + 0.05;\n        }\n      }\n    }\n\n    // buffer audio up to one target duration ahead of main buffer\n    if (\n      mainBufferInfo &&\n      targetBufferTime > mainBufferInfo.end + trackDetails.targetduration\n    ) {\n      return;\n    }\n    // wait for main buffer after buffing some audio\n    if ((!mainBufferInfo || !mainBufferInfo.len) && bufferInfo.len) {\n      return;\n    }\n\n    const frag = this.getNextFragment(targetBufferTime, trackDetails);\n    if (!frag) {\n      this.bufferFlushed = true;\n      return;\n    }\n\n    this.loadFragment(frag, trackDetails, targetBufferTime);\n  }\n\n  protected getMaxBufferLength(mainBufferLength?: number): number {\n    const maxConfigBuffer = super.getMaxBufferLength();\n    if (!mainBufferLength) {\n      return maxConfigBuffer;\n    }\n    return Math.max(maxConfigBuffer, mainBufferLength);\n  }\n\n  onMediaDetaching() {\n    this.videoBuffer = null;\n    super.onMediaDetaching();\n  }\n\n  onAudioTracksUpdated(\n    event: Events.AUDIO_TRACKS_UPDATED,\n    { audioTracks }: AudioTracksUpdatedData\n  ) {\n    this.resetTransmuxer();\n    this.levels = audioTracks.map((mediaPlaylist) => new Level(mediaPlaylist));\n  }\n\n  onAudioTrackSwitching(\n    event: Events.AUDIO_TRACK_SWITCHING,\n    data: AudioTrackSwitchingData\n  ) {\n    // if any URL found on new audio track, it is an alternate audio track\n    const altAudio = !!data.url;\n    this.trackId = data.id;\n    const { fragCurrent } = this;\n\n    if (fragCurrent) {\n      fragCurrent.abortRequests();\n    }\n    this.fragCurrent = null;\n    this.clearWaitingFragment();\n    // destroy useless transmuxer when switching audio to main\n    if (!altAudio) {\n      this.resetTransmuxer();\n    } else {\n      // switching to audio track, start timer if not already started\n      this.setInterval(TICK_INTERVAL);\n    }\n\n    // should we switch tracks ?\n    if (altAudio) {\n      this.audioSwitch = true;\n      // main audio track are handled by stream-controller, just do something if switching to alt audio track\n      this.state = State.IDLE;\n    } else {\n      this.state = State.STOPPED;\n    }\n    this.tick();\n  }\n\n  onManifestLoading() {\n    this.mainDetails = null;\n    this.fragmentTracker.removeAllFragments();\n    this.startPosition = this.lastCurrentTime = 0;\n    this.bufferFlushed = false;\n  }\n\n  onLevelLoaded(event: Events.LEVEL_LOADED, data: LevelLoadedData) {\n    this.mainDetails = data.details;\n    if (this.cachedTrackLoadedData !== null) {\n      this.hls.trigger(Events.AUDIO_TRACK_LOADED, this.cachedTrackLoadedData);\n      this.cachedTrackLoadedData = null;\n    }\n  }\n\n  onAudioTrackLoaded(event: Events.AUDIO_TRACK_LOADED, data: TrackLoadedData) {\n    if (this.mainDetails == null) {\n      this.cachedTrackLoadedData = data;\n      return;\n    }\n    const { levels } = this;\n    const { details: newDetails, id: trackId } = data;\n    if (!levels) {\n      this.warn(`Audio tracks were reset while loading level ${trackId}`);\n      return;\n    }\n    this.log(\n      `Track ${trackId} loaded [${newDetails.startSN},${newDetails.endSN}],duration:${newDetails.totalduration}`\n    );\n\n    const track = levels[trackId];\n    let sliding = 0;\n    if (newDetails.live || track.details?.live) {\n      const mainDetails = this.mainDetails;\n      if (!newDetails.fragments[0]) {\n        newDetails.deltaUpdateFailed = true;\n      }\n      if (newDetails.deltaUpdateFailed || !mainDetails) {\n        return;\n      }\n      if (\n        !track.details &&\n        newDetails.hasProgramDateTime &&\n        mainDetails.hasProgramDateTime\n      ) {\n        // Make sure our audio rendition is aligned with the \"main\" rendition, using\n        // pdt as our reference times.\n        alignMediaPlaylistByPDT(newDetails, mainDetails);\n        sliding = newDetails.fragments[0].start;\n      } else {\n        sliding = this.alignPlaylists(newDetails, track.details);\n      }\n    }\n    track.details = newDetails;\n    this.levelLastLoaded = trackId;\n\n    // compute start position if we are aligned with the main playlist\n    if (!this.startFragRequested && (this.mainDetails || !newDetails.live)) {\n      this.setStartPosition(track.details, sliding);\n    }\n    // only switch back to IDLE state if we were waiting for track to start downloading a new fragment\n    if (\n      this.state === State.WAITING_TRACK &&\n      !this.waitForCdnTuneIn(newDetails)\n    ) {\n      this.state = State.IDLE;\n    }\n\n    // trigger handler right now\n    this.tick();\n  }\n\n  _handleFragmentLoadProgress(data: FragLoadedData) {\n    const { frag, part, payload } = data;\n    const { config, trackId, levels } = this;\n    if (!levels) {\n      this.warn(\n        `Audio tracks were reset while fragment load was in progress. Fragment ${frag.sn} of level ${frag.level} will not be buffered`\n      );\n      return;\n    }\n\n    const track = levels[trackId] as Level;\n    console.assert(track, 'Audio track is defined on fragment load progress');\n    const details = track.details as LevelDetails;\n    console.assert(\n      details,\n      'Audio track details are defined on fragment load progress'\n    );\n    const audioCodec =\n      config.defaultAudioCodec || track.audioCodec || 'mp4a.40.2';\n\n    let transmuxer = this.transmuxer;\n    if (!transmuxer) {\n      transmuxer = this.transmuxer = new TransmuxerInterface(\n        this.hls,\n        PlaylistLevelType.AUDIO,\n        this._handleTransmuxComplete.bind(this),\n        this._handleTransmuxerFlush.bind(this)\n      );\n    }\n\n    // Check if we have video initPTS\n    // If not we need to wait for it\n    const initPTS = this.initPTS[frag.cc];\n    const initSegmentData = frag.initSegment?.data;\n    if (initPTS !== undefined) {\n      // this.log(`Transmuxing ${sn} of [${details.startSN} ,${details.endSN}],track ${trackId}`);\n      // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live)\n      const accurateTimeOffset = false; // details.PTSKnown || !details.live;\n      const partIndex = part ? part.index : -1;\n      const partial = partIndex !== -1;\n      const chunkMeta = new ChunkMetadata(\n        frag.level,\n        frag.sn as number,\n        frag.stats.chunkCount,\n        payload.byteLength,\n        partIndex,\n        partial\n      );\n      transmuxer.push(\n        payload,\n        initSegmentData,\n        audioCodec,\n        '',\n        frag,\n        part,\n        details.totalduration,\n        accurateTimeOffset,\n        chunkMeta,\n        initPTS\n      );\n    } else {\n      this.log(\n        `Unknown video PTS for cc ${frag.cc}, waiting for video PTS before demuxing audio frag ${frag.sn} of [${details.startSN} ,${details.endSN}],track ${trackId}`\n      );\n      const { cache } = (this.waitingData = this.waitingData || {\n        frag,\n        part,\n        cache: new ChunkCache(),\n        complete: false,\n      });\n      cache.push(new Uint8Array(payload));\n      this.waitingVideoCC = this.videoTrackCC;\n      this.state = State.WAITING_INIT_PTS;\n    }\n  }\n\n  protected _handleFragmentLoadComplete(fragLoadedData: FragLoadedData) {\n    if (this.waitingData) {\n      this.waitingData.complete = true;\n      return;\n    }\n    super._handleFragmentLoadComplete(fragLoadedData);\n  }\n\n  onBufferReset(/* event: Events.BUFFER_RESET */) {\n    // reset reference to sourcebuffers\n    this.mediaBuffer = this.videoBuffer = null;\n    this.loadedmetadata = false;\n  }\n\n  onBufferCreated(event: Events.BUFFER_CREATED, data: BufferCreatedData) {\n    const audioTrack = data.tracks.audio;\n    if (audioTrack) {\n      this.mediaBuffer = audioTrack.buffer || null;\n    }\n    if (data.tracks.video) {\n      this.videoBuffer = data.tracks.video.buffer || null;\n    }\n  }\n\n  onFragBuffered(event: Events.FRAG_BUFFERED, data: FragBufferedData) {\n    const { frag, part } = data;\n    if (frag.type !== PlaylistLevelType.AUDIO) {\n      if (!this.loadedmetadata && frag.type === PlaylistLevelType.MAIN) {\n        if ((this.videoBuffer || this.media)?.buffered.length) {\n          this.loadedmetadata = true;\n        }\n      }\n      return;\n    }\n    if (this.fragContextChanged(frag)) {\n      // If a level switch was requested while a fragment was buffering, it will emit the FRAG_BUFFERED event upon completion\n      // Avoid setting state back to IDLE or concluding the audio switch; otherwise, the switched-to track will not buffer\n      this.warn(\n        `Fragment ${frag.sn}${part ? ' p: ' + part.index : ''} of level ${\n          frag.level\n        } finished buffering, but was aborted. state: ${\n          this.state\n        }, audioSwitch: ${this.audioSwitch}`\n      );\n      return;\n    }\n    if (frag.sn !== 'initSegment') {\n      this.fragPrevious = frag;\n      if (this.audioSwitch) {\n        this.audioSwitch = false;\n        this.hls.trigger(Events.AUDIO_TRACK_SWITCHED, { id: this.trackId });\n      }\n    }\n    this.fragBufferedComplete(frag, part);\n  }\n\n  private onError(event: Events.ERROR, data: ErrorData) {\n    if (data.type === ErrorTypes.KEY_SYSTEM_ERROR) {\n      this.onFragmentOrKeyLoadError(PlaylistLevelType.AUDIO, data);\n      return;\n    }\n    switch (data.details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n      case ErrorDetails.FRAG_PARSING_ERROR:\n      case ErrorDetails.KEY_LOAD_ERROR:\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\n        // TODO: Skip fragments that do not belong to this.fragCurrent audio-group id\n        this.onFragmentOrKeyLoadError(PlaylistLevelType.AUDIO, data);\n        break;\n      case ErrorDetails.AUDIO_TRACK_LOAD_ERROR:\n      case ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:\n        //  when in ERROR state, don't switch back to IDLE state in case a non-fatal error is received\n        if (this.state !== State.ERROR && this.state !== State.STOPPED) {\n          // if fatal error, stop processing, otherwise move to IDLE to retry loading\n          this.state = data.fatal ? State.ERROR : State.IDLE;\n          this.warn(\n            `${data.details} while loading frag, switching to ${this.state} state`\n          );\n        }\n        break;\n      case ErrorDetails.BUFFER_FULL_ERROR:\n        // if in appending state\n        if (\n          data.parent === 'audio' &&\n          (this.state === State.PARSING || this.state === State.PARSED)\n        ) {\n          let flushBuffer = true;\n          const bufferedInfo = this.getFwdBufferInfo(\n            this.mediaBuffer,\n            PlaylistLevelType.AUDIO\n          );\n          // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end\n          // reduce max buf len if current position is buffered\n          if (bufferedInfo && bufferedInfo.len > 0.5) {\n            flushBuffer = !this.reduceMaxBufferLength(bufferedInfo.len);\n          }\n          if (flushBuffer) {\n            // current position is not buffered, but browser is still complaining about buffer full error\n            // this happens on IE/Edge, refer to https://github.com/video-dev/hls.js/pull/708\n            // in that case flush the whole audio buffer to recover\n            this.warn(\n              'Buffer full error also media.currentTime is not buffered, flush audio buffer'\n            );\n            this.fragCurrent = null;\n            super.flushMainBuffer(0, Number.POSITIVE_INFINITY, 'audio');\n          }\n          this.resetLoadingState();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private onBufferFlushed(\n    event: Events.BUFFER_FLUSHED,\n    { type }: BufferFlushedData\n  ) {\n    if (type === ElementaryStreamTypes.AUDIO) {\n      this.bufferFlushed = true;\n      if (this.state === State.ENDED) {\n        this.state = State.IDLE;\n      }\n    }\n  }\n\n  private _handleTransmuxComplete(transmuxResult: TransmuxerResult) {\n    const id = 'audio';\n    const { hls } = this;\n    const { remuxResult, chunkMeta } = transmuxResult;\n\n    const context = this.getCurrentContext(chunkMeta);\n    if (!context) {\n      this.warn(\n        `The loading context changed while buffering fragment ${chunkMeta.sn} of level ${chunkMeta.level}. This chunk will not be buffered.`\n      );\n      this.resetStartWhenNotLoaded(chunkMeta.level);\n      return;\n    }\n    const {\n      frag,\n      part,\n      level: { details },\n    } = context;\n    const { audio, text, id3, initSegment } = remuxResult;\n\n    // Check if the current fragment has been aborted. We check this by first seeing if we're still playing the current level.\n    // If we are, subsequently check if the currently loading fragment (fragCurrent) has changed.\n    if (this.fragContextChanged(frag) || !details) {\n      return;\n    }\n\n    this.state = State.PARSING;\n    if (this.audioSwitch && audio) {\n      this.completeAudioSwitch();\n    }\n\n    if (initSegment?.tracks) {\n      this._bufferInitSegment(initSegment.tracks, frag, chunkMeta);\n      hls.trigger(Events.FRAG_PARSING_INIT_SEGMENT, {\n        frag,\n        id,\n        tracks: initSegment.tracks,\n      });\n      // Only flush audio from old audio tracks when PTS is known on new audio track\n    }\n    if (audio) {\n      const { startPTS, endPTS, startDTS, endDTS } = audio;\n      if (part) {\n        part.elementaryStreams[ElementaryStreamTypes.AUDIO] = {\n          startPTS,\n          endPTS,\n          startDTS,\n          endDTS,\n        };\n      }\n      frag.setElementaryStreamInfo(\n        ElementaryStreamTypes.AUDIO,\n        startPTS,\n        endPTS,\n        startDTS,\n        endDTS\n      );\n      this.bufferFragmentData(audio, frag, part, chunkMeta);\n    }\n\n    if (id3?.samples?.length) {\n      const emittedID3: FragParsingMetadataData = Object.assign(\n        {\n          id,\n          frag,\n          details,\n        },\n        id3\n      );\n      hls.trigger(Events.FRAG_PARSING_METADATA, emittedID3);\n    }\n    if (text) {\n      const emittedText: FragParsingUserdataData = Object.assign(\n        {\n          id,\n          frag,\n          details,\n        },\n        text\n      );\n      hls.trigger(Events.FRAG_PARSING_USERDATA, emittedText);\n    }\n  }\n\n  private _bufferInitSegment(\n    tracks: TrackSet,\n    frag: Fragment,\n    chunkMeta: ChunkMetadata\n  ) {\n    if (this.state !== State.PARSING) {\n      return;\n    }\n    // delete any video track found on audio transmuxer\n    if (tracks.video) {\n      delete tracks.video;\n    }\n\n    // include levelCodec in audio and video tracks\n    const track = tracks.audio;\n    if (!track) {\n      return;\n    }\n\n    track.levelCodec = track.codec;\n    track.id = 'audio';\n    this.log(\n      `Init audio buffer, container:${track.container}, codecs[parsed]=[${track.codec}]`\n    );\n    this.hls.trigger(Events.BUFFER_CODECS, tracks);\n    const initSegment = track.initSegment;\n    if (initSegment?.byteLength) {\n      const segment: BufferAppendingData = {\n        type: 'audio',\n        frag,\n        part: null,\n        chunkMeta,\n        parent: frag.type,\n        data: initSegment,\n      };\n      this.hls.trigger(Events.BUFFER_APPENDING, segment);\n    }\n    // trigger handler right now\n    this.tick();\n  }\n\n  protected loadFragment(\n    frag: Fragment,\n    trackDetails: LevelDetails,\n    targetBufferTime: number\n  ) {\n    // only load if fragment is not loaded or if in audio switch\n    const fragState = this.fragmentTracker.getState(frag);\n    this.fragCurrent = frag;\n\n    // we force a frag loading in audio switch as fragment tracker might not have evicted previous frags in case of quick audio switch\n    if (\n      this.audioSwitch ||\n      fragState === FragmentState.NOT_LOADED ||\n      fragState === FragmentState.PARTIAL\n    ) {\n      if (frag.sn === 'initSegment') {\n        this._loadInitSegment(frag, trackDetails);\n      } else if (trackDetails.live && !Number.isFinite(this.initPTS[frag.cc])) {\n        this.log(\n          `Waiting for video PTS in continuity counter ${frag.cc} of live stream before loading audio fragment ${frag.sn} of level ${this.trackId}`\n        );\n        this.state = State.WAITING_INIT_PTS;\n      } else {\n        this.startFragRequested = true;\n        super.loadFragment(frag, trackDetails, targetBufferTime);\n      }\n    }\n  }\n\n  private completeAudioSwitch() {\n    const { hls, media, trackId } = this;\n    if (media) {\n      this.log('Switching audio track : flushing all audio');\n      super.flushMainBuffer(0, Number.POSITIVE_INFINITY, 'audio');\n    }\n    this.audioSwitch = false;\n    hls.trigger(Events.AUDIO_TRACK_SWITCHED, { id: trackId });\n  }\n}\nexport default AudioStreamController;\n", "import { Events } from '../events';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport {\n  ManifestParsedData,\n  AudioTracksUpdatedData,\n  ErrorData,\n  LevelLoadingData,\n  AudioTrackLoadedData,\n  LevelSwitchingData,\n} from '../types/events';\nimport BasePlaylistController from './base-playlist-controller';\nimport { PlaylistContextType } from '../types/loader';\nimport type Hls from '../hls';\nimport type { HlsUrlParameters } from '../types/level';\nimport type { MediaPlaylist } from '../types/media-playlist';\n\nclass AudioTrackController extends BasePlaylistController {\n  private tracks: MediaPlaylist[] = [];\n  private groupId: string | null = null;\n  private tracksInGroup: MediaPlaylist[] = [];\n  private trackId: number = -1;\n  private trackName: string = '';\n  private selectDefaultTrack: boolean = true;\n\n  constructor(hls: Hls) {\n    super(hls, '[audio-track-controller]');\n    this.registerListeners();\n  }\n\n  private registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.on(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.on(Events.LEVEL_SWITCHING, this.onLevelSwitching, this);\n    hls.on(Events.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this);\n    hls.on(Events.ERROR, this.onError, this);\n  }\n\n  private unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.off(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.off(Events.LEVEL_SWITCHING, this.onLevelSwitching, this);\n    hls.off(Events.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this);\n    hls.off(Events.ERROR, this.onError, this);\n  }\n\n  public destroy() {\n    this.unregisterListeners();\n    this.tracks.length = 0;\n    this.tracksInGroup.length = 0;\n    super.destroy();\n  }\n\n  protected onManifestLoading(): void {\n    this.tracks = [];\n    this.groupId = null;\n    this.tracksInGroup = [];\n    this.trackId = -1;\n    this.trackName = '';\n    this.selectDefaultTrack = true;\n  }\n\n  protected onManifestParsed(\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ): void {\n    this.tracks = data.audioTracks || [];\n  }\n\n  protected onAudioTrackLoaded(\n    event: Events.AUDIO_TRACK_LOADED,\n    data: AudioTrackLoadedData\n  ): void {\n    const { id, details } = data;\n    const currentTrack = this.tracksInGroup[id];\n\n    if (!currentTrack) {\n      this.warn(`Invalid audio track id ${id}`);\n      return;\n    }\n\n    const curDetails = currentTrack.details;\n    currentTrack.details = data.details;\n    this.log(`audioTrack ${id} loaded [${details.startSN}-${details.endSN}]`);\n\n    if (id === this.trackId) {\n      this.retryCount = 0;\n      this.playlistLoaded(id, data, curDetails);\n    }\n  }\n\n  protected onLevelLoading(\n    event: Events.LEVEL_LOADING,\n    data: LevelLoadingData\n  ): void {\n    this.switchLevel(data.level);\n  }\n\n  protected onLevelSwitching(\n    event: Events.LEVEL_SWITCHING,\n    data: LevelSwitchingData\n  ): void {\n    this.switchLevel(data.level);\n  }\n\n  private switchLevel(levelIndex: number) {\n    const levelInfo = this.hls.levels[levelIndex];\n\n    if (!levelInfo?.audioGroupIds) {\n      return;\n    }\n\n    const audioGroupId = levelInfo.audioGroupIds[levelInfo.urlId];\n    if (this.groupId !== audioGroupId) {\n      this.groupId = audioGroupId;\n\n      const audioTracks = this.tracks.filter(\n        (track): boolean => !audioGroupId || track.groupId === audioGroupId\n      );\n\n      // Disable selectDefaultTrack if there are no default tracks\n      if (\n        this.selectDefaultTrack &&\n        !audioTracks.some((track) => track.default)\n      ) {\n        this.selectDefaultTrack = false;\n      }\n\n      this.tracksInGroup = audioTracks;\n      const audioTracksUpdated: AudioTracksUpdatedData = { audioTracks };\n      this.log(\n        `Updating audio tracks, ${audioTracks.length} track(s) found in \"${audioGroupId}\" group-id`\n      );\n      this.hls.trigger(Events.AUDIO_TRACKS_UPDATED, audioTracksUpdated);\n\n      this.selectInitialTrack();\n    }\n  }\n\n  protected onError(event: Events.ERROR, data: ErrorData): void {\n    super.onError(event, data);\n    if (data.fatal || !data.context) {\n      return;\n    }\n\n    if (\n      data.context.type === PlaylistContextType.AUDIO_TRACK &&\n      data.context.id === this.trackId &&\n      data.context.groupId === this.groupId\n    ) {\n      this.retryLoadingOrFail(data);\n    }\n  }\n\n  get audioTracks(): MediaPlaylist[] {\n    return this.tracksInGroup;\n  }\n\n  get audioTrack(): number {\n    return this.trackId;\n  }\n\n  set audioTrack(newId: number) {\n    // If audio track is selected from API then don't choose from the manifest default track\n    this.selectDefaultTrack = false;\n    this.setAudioTrack(newId);\n  }\n\n  private setAudioTrack(newId: number): void {\n    const tracks = this.tracksInGroup;\n\n    // check if level idx is valid\n    if (newId < 0 || newId >= tracks.length) {\n      this.warn('Invalid id passed to audio-track controller');\n      return;\n    }\n\n    // stopping live reloading timer if any\n    this.clearTimer();\n\n    const lastTrack = tracks[this.trackId];\n    this.log(`Now switching to audio-track index ${newId}`);\n    const track = tracks[newId];\n    const { id, groupId = '', name, type, url } = track;\n    this.trackId = newId;\n    this.trackName = name;\n    this.selectDefaultTrack = false;\n    this.hls.trigger(Events.AUDIO_TRACK_SWITCHING, {\n      id,\n      groupId,\n      name,\n      type,\n      url,\n    });\n    // Do not reload track unless live\n    if (track.details && !track.details.live) {\n      return;\n    }\n    const hlsUrlParameters = this.switchParams(track.url, lastTrack?.details);\n    this.loadPlaylist(hlsUrlParameters);\n  }\n\n  private selectInitialTrack(): void {\n    const audioTracks = this.tracksInGroup;\n    console.assert(\n      audioTracks.length,\n      'Initial audio track should be selected when tracks are known'\n    );\n    const currentAudioTrackName = this.trackName;\n    const trackId =\n      this.findTrackId(currentAudioTrackName) || this.findTrackId();\n\n    if (trackId !== -1) {\n      this.setAudioTrack(trackId);\n    } else {\n      this.warn(`No track found for running audio group-ID: ${this.groupId}`);\n\n      this.hls.trigger(Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.AUDIO_TRACK_LOAD_ERROR,\n        fatal: true,\n      });\n    }\n  }\n\n  private findTrackId(name?: string): number {\n    const audioTracks = this.tracksInGroup;\n    for (let i = 0; i < audioTracks.length; i++) {\n      const track = audioTracks[i];\n      if (!this.selectDefaultTrack || track.default) {\n        if (!name || name === track.name) {\n          return track.id;\n        }\n      }\n    }\n    return -1;\n  }\n\n  protected loadPlaylist(hlsUrlParameters?: HlsUrlParameters): void {\n    super.loadPlaylist();\n    const audioTrack = this.tracksInGroup[this.trackId];\n    if (this.shouldLoadTrack(audioTrack)) {\n      const id = audioTrack.id;\n      const groupId = audioTrack.groupId as string;\n      let url = audioTrack.url;\n      if (hlsUrlParameters) {\n        try {\n          url = hlsUrlParameters.addDirectives(url);\n        } catch (error) {\n          this.warn(\n            `Could not construct new URL with HLS Delivery Directives: ${error}`\n          );\n        }\n      }\n      // track not retrieved yet, or live playlist we need to (re)load it\n      this.log(`loading audio-track playlist for id: ${id}`);\n      this.clearTimer();\n      this.hls.trigger(Events.AUDIO_TRACK_LOADING, {\n        url,\n        id,\n        groupId,\n        deliveryDirectives: hlsUrlParameters || null,\n      });\n    }\n  }\n}\n\nexport default AudioTrackController;\n", "import type Hls from '../hls';\nimport type { NetworkComponentAPI } from '../types/component-api';\nimport { getSkipValue, HlsSkip, HlsUrlParameters } from '../types/level';\nimport { computeReloadInterval, mergeDetails } from './level-helper';\nimport { logger } from '../utils/logger';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { MediaPlaylist } from '../types/media-playlist';\nimport type {\n  AudioTrackLoadedData,\n  LevelLoadedData,\n  TrackLoadedData,\n} from '../types/events';\nimport { ErrorData } from '../types/events';\nimport { Events } from '../events';\nimport { ErrorTypes } from '../errors';\n\nexport default class BasePlaylistController implements NetworkComponentAPI {\n  protected hls: Hls;\n  protected timer: number = -1;\n  protected requestScheduled: number = -1;\n  protected canLoad: boolean = false;\n  protected retryCount: number = 0;\n  protected log: (msg: any) => void;\n  protected warn: (msg: any) => void;\n\n  constructor(hls: Hls, logPrefix: string) {\n    this.log = logger.log.bind(logger, `${logPrefix}:`);\n    this.warn = logger.warn.bind(logger, `${logPrefix}:`);\n    this.hls = hls;\n  }\n\n  public destroy(): void {\n    this.clearTimer();\n    // @ts-ignore\n    this.hls = this.log = this.warn = null;\n  }\n\n  protected onError(event: Events.ERROR, data: ErrorData): void {\n    if (\n      data.fatal &&\n      (data.type === ErrorTypes.NETWORK_ERROR ||\n        data.type === ErrorTypes.KEY_SYSTEM_ERROR)\n    ) {\n      this.stopLoad();\n    }\n  }\n\n  protected clearTimer(): void {\n    clearTimeout(this.timer);\n    this.timer = -1;\n  }\n\n  public startLoad(): void {\n    this.canLoad = true;\n    this.retryCount = 0;\n    this.requestScheduled = -1;\n    this.loadPlaylist();\n  }\n\n  public stopLoad(): void {\n    this.canLoad = false;\n    this.clearTimer();\n  }\n\n  protected switchParams(\n    playlistUri: string,\n    previous: LevelDetails | undefined\n  ): HlsUrlParameters | undefined {\n    const renditionReports = previous?.renditionReports;\n    if (renditionReports) {\n      for (let i = 0; i < renditionReports.length; i++) {\n        const attr = renditionReports[i];\n        let uri: string;\n        try {\n          uri = new self.URL(attr.URI, previous.url).href;\n        } catch (error) {\n          logger.warn(\n            `Could not construct new URL for Rendition Report: ${error}`\n          );\n          uri = attr.URI || '';\n        }\n        if (uri === playlistUri.slice(-uri.length)) {\n          const msn = parseInt(attr['LAST-MSN']) || previous?.lastPartSn;\n          let part = parseInt(attr['LAST-PART']) || previous?.lastPartIndex;\n          if (this.hls.config.lowLatencyMode) {\n            const currentGoal = Math.min(\n              previous.age - previous.partTarget,\n              previous.targetduration\n            );\n            if (part >= 0 && currentGoal > previous.partTarget) {\n              part += 1;\n            }\n          }\n          return new HlsUrlParameters(\n            msn,\n            part >= 0 ? part : undefined,\n            HlsSkip.No\n          );\n        }\n      }\n    }\n  }\n\n  protected loadPlaylist(hlsUrlParameters?: HlsUrlParameters): void {\n    if (this.requestScheduled === -1) {\n      this.requestScheduled = self.performance.now();\n    }\n  }\n\n  protected shouldLoadTrack(track: MediaPlaylist): boolean {\n    return (\n      this.canLoad &&\n      track &&\n      !!track.url &&\n      (!track.details || track.details.live)\n    );\n  }\n\n  protected playlistLoaded(\n    index: number,\n    data: LevelLoadedData | AudioTrackLoadedData | TrackLoadedData,\n    previousDetails?: LevelDetails\n  ) {\n    const { details, stats } = data;\n\n    // Set last updated date-time\n    const now = self.performance.now();\n    const elapsed = stats.loading.first\n      ? Math.max(0, now - stats.loading.first)\n      : 0;\n    details.advancedDateTime = Date.now() - elapsed;\n\n    // if current playlist is a live playlist, arm a timer to reload it\n    if (details.live || previousDetails?.live) {\n      details.reloaded(previousDetails);\n      if (previousDetails) {\n        this.log(\n          `live playlist ${index} ${\n            details.advanced\n              ? 'REFRESHED ' + details.lastPartSn + '-' + details.lastPartIndex\n              : 'MISSED'\n          }`\n        );\n      }\n      // Merge live playlists to adjust fragment starts and fill in delta playlist skipped segments\n      if (previousDetails && details.fragments.length > 0) {\n        mergeDetails(previousDetails, details);\n      }\n      if (!this.canLoad || !details.live) {\n        return;\n      }\n      let deliveryDirectives: HlsUrlParameters;\n      let msn: number | undefined = undefined;\n      let part: number | undefined = undefined;\n      if (details.canBlockReload && details.endSN && details.advanced) {\n        // Load level with LL-HLS delivery directives\n        const lowLatencyMode = this.hls.config.lowLatencyMode;\n        const lastPartSn = details.lastPartSn;\n        const endSn = details.endSN;\n        const lastPartIndex = details.lastPartIndex;\n        const hasParts = lastPartIndex !== -1;\n        const lastPart = lastPartSn === endSn;\n        // When low latency mode is disabled, we'll skip part requests once the last part index is found\n        const nextSnStartIndex = lowLatencyMode ? 0 : lastPartIndex;\n        if (hasParts) {\n          msn = lastPart ? endSn + 1 : lastPartSn;\n          part = lastPart ? nextSnStartIndex : lastPartIndex + 1;\n        } else {\n          msn = endSn + 1;\n        }\n        // Low-Latency CDN Tune-in: \"age\" header and time since load indicates we're behind by more than one part\n        // Update directives to obtain the Playlist that has the estimated additional duration of media\n        const lastAdvanced = details.age;\n        const cdnAge = lastAdvanced + details.ageHeader;\n        let currentGoal = Math.min(\n          cdnAge - details.partTarget,\n          details.targetduration * 1.5\n        );\n        if (currentGoal > 0) {\n          if (previousDetails && currentGoal > previousDetails.tuneInGoal) {\n            // If we attempted to get the next or latest playlist update, but currentGoal increased,\n            // then we either can't catchup, or the \"age\" header cannot be trusted.\n            this.warn(\n              `CDN Tune-in goal increased from: ${previousDetails.tuneInGoal} to: ${currentGoal} with playlist age: ${details.age}`\n            );\n            currentGoal = 0;\n          } else {\n            const segments = Math.floor(currentGoal / details.targetduration);\n            msn += segments;\n            if (part !== undefined) {\n              const parts = Math.round(\n                (currentGoal % details.targetduration) / details.partTarget\n              );\n              part += parts;\n            }\n            this.log(\n              `CDN Tune-in age: ${\n                details.ageHeader\n              }s last advanced ${lastAdvanced.toFixed(\n                2\n              )}s goal: ${currentGoal} skip sn ${segments} to part ${part}`\n            );\n          }\n          details.tuneInGoal = currentGoal;\n        }\n        deliveryDirectives = this.getDeliveryDirectives(\n          details,\n          data.deliveryDirectives,\n          msn,\n          part\n        );\n        if (lowLatencyMode || !lastPart) {\n          this.loadPlaylist(deliveryDirectives);\n          return;\n        }\n      } else {\n        deliveryDirectives = this.getDeliveryDirectives(\n          details,\n          data.deliveryDirectives,\n          msn,\n          part\n        );\n      }\n      const bufferInfo = this.hls.mainForwardBufferInfo;\n      const position = bufferInfo ? bufferInfo.end - bufferInfo.len : 0;\n      const distanceToLiveEdgeMs = (details.edge - position) * 1000;\n      const reloadInterval = computeReloadInterval(\n        details,\n        distanceToLiveEdgeMs\n      );\n      if (!details.updated) {\n        this.requestScheduled = -1;\n      } else if (now > this.requestScheduled + reloadInterval) {\n        this.requestScheduled = stats.loading.start;\n      }\n\n      if (msn !== undefined && details.canBlockReload) {\n        this.requestScheduled =\n          stats.loading.first +\n          reloadInterval -\n          (details.partTarget * 1000 || 1000);\n      } else {\n        this.requestScheduled =\n          (this.requestScheduled === -1 ? now : this.requestScheduled) +\n          reloadInterval;\n      }\n      let estimatedTimeUntilUpdate = this.requestScheduled - now;\n      estimatedTimeUntilUpdate = Math.max(0, estimatedTimeUntilUpdate);\n      this.log(\n        `reload live playlist ${index} in ${Math.round(\n          estimatedTimeUntilUpdate\n        )} ms`\n      );\n      //     this.log(\n      //       `live reload ${details.updated ? 'REFRESHED' : 'MISSED'}\n      // reload in ${estimatedTimeUntilUpdate / 1000}\n      // round trip ${(stats.loading.end - stats.loading.start) / 1000}\n      // diff ${\n      //   (reloadInterval -\n      //     (estimatedTimeUntilUpdate + stats.loading.end - stats.loading.start)) /\n      //   1000\n      // }\n      // reload interval ${reloadInterval / 1000}\n      // target duration ${details.targetduration}\n      // distance to edge ${distanceToLiveEdgeMs / 1000}`\n      //     );\n\n      this.timer = self.setTimeout(\n        () => this.loadPlaylist(deliveryDirectives),\n        estimatedTimeUntilUpdate\n      );\n    } else {\n      this.clearTimer();\n    }\n  }\n\n  private getDeliveryDirectives(\n    details: LevelDetails,\n    previousDeliveryDirectives: HlsUrlParameters | null,\n    msn?: number,\n    part?: number\n  ): HlsUrlParameters {\n    let skip = getSkipValue(details, msn);\n    if (previousDeliveryDirectives?.skip && details.deltaUpdateFailed) {\n      msn = previousDeliveryDirectives.msn;\n      part = previousDeliveryDirectives.part;\n      skip = HlsSkip.No;\n    }\n    return new HlsUrlParameters(msn, part, skip);\n  }\n\n  protected retryLoadingOrFail(errorEvent: ErrorData): boolean {\n    const { config } = this.hls;\n    const retry = this.retryCount < config.levelLoadingMaxRetry;\n    if (retry) {\n      this.requestScheduled = -1;\n      this.retryCount++;\n      if (\n        errorEvent.details.indexOf('LoadTimeOut') > -1 &&\n        errorEvent.context?.deliveryDirectives\n      ) {\n        // The LL-HLS request already timed out so retry immediately\n        this.warn(\n          `retry playlist loading #${this.retryCount} after \"${errorEvent.details}\"`\n        );\n        this.loadPlaylist();\n      } else {\n        // exponential backoff capped to max retry timeout\n        const delay = Math.min(\n          Math.pow(2, this.retryCount) * config.levelLoadingRetryDelay,\n          config.levelLoadingMaxRetryTimeout\n        );\n        // Schedule level/track reload\n        this.timer = self.setTimeout(() => this.loadPlaylist(), delay);\n        this.warn(\n          `retry playlist loading #${this.retryCount} in ${delay} ms after \"${errorEvent.details}\"`\n        );\n      }\n    } else {\n      this.warn(`cannot recover from error \"${errorEvent.details}\"`);\n      // stopping live reloading timer if any\n      this.clearTimer();\n      // switch error to fatal\n      errorEvent.fatal = true;\n    }\n    return retry;\n  }\n}\n", "import TaskLoop from '../task-loop';\nimport { FragmentState } from './fragment-tracker';\nimport { Bufferable, BufferHelper, BufferInfo } from '../utils/buffer-helper';\nimport { logger } from '../utils/logger';\nimport { Events } from '../events';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport { ChunkMetadata } from '../types/transmuxer';\nimport { appendUint8Array } from '../utils/mp4-tools';\nimport { alignStream } from '../utils/discontinuities';\nimport {\n  findFragmentByPDT,\n  findFragmentByPTS,\n  findFragWithCC,\n} from './fragment-finders';\nimport {\n  getFragmentWithSN,\n  getPartWith,\n  updateFragPTSDTS,\n} from './level-helper';\nimport TransmuxerInterface from '../demux/transmuxer-interface';\nimport { Fragment, Part } from '../loader/fragment';\nimport FragmentLoader, {\n  FragmentLoadProgressCallback,\n  LoadError,\n} from '../loader/fragment-loader';\nimport KeyLoader from '../loader/key-loader';\nimport { LevelDetails } from '../loader/level-details';\nimport Decrypter from '../crypt/decrypter';\nimport TimeRanges from '../utils/time-ranges';\nimport { PlaylistLevelType } from '../types/loader';\nimport type {\n  BufferAppendingData,\n  ErrorData,\n  FragLoadedData,\n  PartsLoadedData,\n  KeyLoadedData,\n  MediaAttachingData,\n  BufferFlushingData,\n  LevelSwitchingData,\n} from '../types/events';\nimport type { FragmentTracker } from './fragment-tracker';\nimport type { Level } from '../types/level';\nimport type { RemuxedTrack } from '../types/remuxer';\nimport type Hls from '../hls';\nimport type { HlsConfig } from '../config';\nimport type { NetworkComponentAPI } from '../types/component-api';\nimport type { SourceBufferName } from '../types/buffer';\n\ntype ResolveFragLoaded = (FragLoadedEndData) => void;\ntype RejectFragLoaded = (LoadError) => void;\n\nexport const State = {\n  STOPPED: 'STOPPED',\n  IDLE: 'IDLE',\n  KEY_LOADING: 'KEY_LOADING',\n  FRAG_LOADING: 'FRAG_LOADING',\n  FRAG_LOADING_WAITING_RETRY: 'FRAG_LOADING_WAITING_RETRY',\n  WAITING_TRACK: 'WAITING_TRACK',\n  PARSING: 'PARSING',\n  PARSED: 'PARSED',\n  ENDED: 'ENDED',\n  ERROR: 'ERROR',\n  WAITING_INIT_PTS: 'WAITING_INIT_PTS',\n  WAITING_LEVEL: 'WAITING_LEVEL',\n};\n\nexport default class BaseStreamController\n  extends TaskLoop\n  implements NetworkComponentAPI\n{\n  protected hls: Hls;\n\n  protected fragPrevious: Fragment | null = null;\n  protected fragCurrent: Fragment | null = null;\n  protected fragmentTracker: FragmentTracker;\n  protected transmuxer: TransmuxerInterface | null = null;\n  protected _state: string = State.STOPPED;\n  protected media: HTMLMediaElement | null = null;\n  protected mediaBuffer: Bufferable | null = null;\n  protected config: HlsConfig;\n  protected bitrateTest: boolean = false;\n  protected lastCurrentTime: number = 0;\n  protected nextLoadPosition: number = 0;\n  protected startPosition: number = 0;\n  protected loadedmetadata: boolean = false;\n  protected fragLoadError: number = 0;\n  protected retryDate: number = 0;\n  protected levels: Array<Level> | null = null;\n  protected fragmentLoader: FragmentLoader;\n  protected keyLoader: KeyLoader;\n  protected levelLastLoaded: number | null = null;\n  protected startFragRequested: boolean = false;\n  protected decrypter: Decrypter;\n  protected initPTS: Array<number> = [];\n  protected onvseeking: EventListener | null = null;\n  protected onvended: EventListener | null = null;\n\n  private readonly logPrefix: string = '';\n  protected log: (msg: any) => void;\n  protected warn: (msg: any) => void;\n\n  constructor(\n    hls: Hls,\n    fragmentTracker: FragmentTracker,\n    keyLoader: KeyLoader,\n    logPrefix: string\n  ) {\n    super();\n    this.logPrefix = logPrefix;\n    this.log = logger.log.bind(logger, `${logPrefix}:`);\n    this.warn = logger.warn.bind(logger, `${logPrefix}:`);\n    this.hls = hls;\n    this.fragmentLoader = new FragmentLoader(hls.config);\n    this.keyLoader = keyLoader;\n    this.fragmentTracker = fragmentTracker;\n    this.config = hls.config;\n    this.decrypter = new Decrypter(hls.config);\n    hls.on(Events.LEVEL_SWITCHING, this.onLevelSwitching, this);\n  }\n\n  protected doTick() {\n    this.onTickEnd();\n  }\n\n  protected onTickEnd() {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public startLoad(startPosition: number): void {}\n\n  public stopLoad() {\n    this.fragmentLoader.abort();\n    this.keyLoader.abort();\n    const frag = this.fragCurrent;\n    if (frag) {\n      frag.abortRequests();\n      this.fragmentTracker.removeFragment(frag);\n    }\n    this.resetTransmuxer();\n    this.fragCurrent = null;\n    this.fragPrevious = null;\n    this.clearInterval();\n    this.clearNextTick();\n    this.state = State.STOPPED;\n  }\n\n  protected _streamEnded(\n    bufferInfo: BufferInfo,\n    levelDetails: LevelDetails\n  ): boolean {\n    // If playlist is live, there is another buffered range after the current range, nothing buffered, media is detached,\n    // of nothing loading/loaded return false\n    if (\n      levelDetails.live ||\n      bufferInfo.nextStart ||\n      !bufferInfo.end ||\n      !this.media\n    ) {\n      return false;\n    }\n    const partList = levelDetails.partList;\n    // Since the last part isn't guaranteed to correspond to the last playlist segment for Low-Latency HLS,\n    // check instead if the last part is buffered.\n    if (partList?.length) {\n      const lastPart = partList[partList.length - 1];\n\n      // Checking the midpoint of the part for potential margin of error and related issues.\n      // NOTE: Technically I believe parts could yield content that is < the computed duration (including potential a duration of 0)\n      // and still be spec-compliant, so there may still be edge cases here. Likewise, there could be issues in end of stream\n      // part mismatches for independent audio and video playlists/segments.\n      const lastPartBuffered = BufferHelper.isBuffered(\n        this.media,\n        lastPart.start + lastPart.duration / 2\n      );\n      return lastPartBuffered;\n    }\n\n    const playlistType =\n      levelDetails.fragments[levelDetails.fragments.length - 1].type;\n    return this.fragmentTracker.isEndListAppended(playlistType);\n  }\n\n  protected getLevelDetails(): LevelDetails | undefined {\n    if (this.levels && this.levelLastLoaded !== null) {\n      return this.levels[this.levelLastLoaded]?.details;\n    }\n  }\n\n  protected onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachingData\n  ) {\n    const media = (this.media = this.mediaBuffer = data.media);\n    this.onvseeking = this.onMediaSeeking.bind(this) as EventListener;\n    this.onvended = this.onMediaEnded.bind(this) as EventListener;\n    media.addEventListener('seeking', this.onvseeking);\n    media.addEventListener('ended', this.onvended);\n    const config = this.config;\n    if (this.levels && config.autoStartLoad && this.state === State.STOPPED) {\n      this.startLoad(config.startPosition);\n    }\n  }\n\n  protected onMediaDetaching() {\n    const media = this.media;\n    if (media?.ended) {\n      this.log('MSE detaching and video ended, reset startPosition');\n      this.startPosition = this.lastCurrentTime = 0;\n    }\n\n    // remove video listeners\n    if (media && this.onvseeking && this.onvended) {\n      media.removeEventListener('seeking', this.onvseeking);\n      media.removeEventListener('ended', this.onvended);\n      this.onvseeking = this.onvended = null;\n    }\n    if (this.keyLoader) {\n      this.keyLoader.detach();\n    }\n    this.media = this.mediaBuffer = null;\n    this.loadedmetadata = false;\n    this.fragmentTracker.removeAllFragments();\n    this.stopLoad();\n  }\n\n  protected onMediaSeeking() {\n    const { config, fragCurrent, media, mediaBuffer, state } = this;\n    const currentTime: number = media ? media.currentTime : 0;\n    const bufferInfo = BufferHelper.bufferInfo(\n      mediaBuffer ? mediaBuffer : media,\n      currentTime,\n      config.maxBufferHole\n    );\n\n    this.log(\n      `media seeking to ${\n        Number.isFinite(currentTime) ? currentTime.toFixed(3) : currentTime\n      }, state: ${state}`\n    );\n\n    if (this.state === State.ENDED) {\n      this.resetLoadingState();\n    } else if (fragCurrent) {\n      // Seeking while frag load is in progress\n      const tolerance = config.maxFragLookUpTolerance;\n      const fragStartOffset = fragCurrent.start - tolerance;\n      const fragEndOffset =\n        fragCurrent.start + fragCurrent.duration + tolerance;\n      // if seeking out of buffered range or into new one\n      if (\n        !bufferInfo.len ||\n        fragEndOffset < bufferInfo.start ||\n        fragStartOffset > bufferInfo.end\n      ) {\n        const pastFragment = currentTime > fragEndOffset;\n        // if the seek position is outside the current fragment range\n        if (currentTime < fragStartOffset || pastFragment) {\n          if (pastFragment && fragCurrent.loader) {\n            this.log(\n              'seeking outside of buffer while fragment load in progress, cancel fragment load'\n            );\n            fragCurrent.abortRequests();\n          }\n          this.resetLoadingState();\n        }\n      }\n    }\n\n    if (media) {\n      this.lastCurrentTime = currentTime;\n    }\n\n    // in case seeking occurs although no media buffered, adjust startPosition and nextLoadPosition to seek target\n    if (!this.loadedmetadata && !bufferInfo.len) {\n      this.nextLoadPosition = this.startPosition = currentTime;\n    }\n\n    // Async tick to speed up processing\n    this.tickImmediate();\n  }\n\n  protected onMediaEnded() {\n    // reset startPosition and lastCurrentTime to restart playback @ stream beginning\n    this.startPosition = this.lastCurrentTime = 0;\n  }\n\n  protected onLevelSwitching(\n    event: Events.LEVEL_SWITCHING,\n    data: LevelSwitchingData\n  ): void {\n    this.fragLoadError = 0;\n  }\n\n  protected onHandlerDestroying() {\n    this.stopLoad();\n    super.onHandlerDestroying();\n  }\n\n  protected onHandlerDestroyed() {\n    this.state = State.STOPPED;\n    this.hls.off(Events.LEVEL_SWITCHING, this.onLevelSwitching, this);\n    if (this.fragmentLoader) {\n      this.fragmentLoader.destroy();\n    }\n    if (this.keyLoader) {\n      this.keyLoader.destroy();\n    }\n    if (this.decrypter) {\n      this.decrypter.destroy();\n    }\n\n    this.hls =\n      this.log =\n      this.warn =\n      this.decrypter =\n      this.keyLoader =\n      this.fragmentLoader =\n      this.fragmentTracker =\n        null as any;\n    super.onHandlerDestroyed();\n  }\n\n  protected loadFragment(\n    frag: Fragment,\n    levelDetails: LevelDetails,\n    targetBufferTime: number\n  ) {\n    this._loadFragForPlayback(frag, levelDetails, targetBufferTime);\n  }\n\n  private _loadFragForPlayback(\n    frag: Fragment,\n    levelDetails: LevelDetails,\n    targetBufferTime: number\n  ) {\n    const progressCallback: FragmentLoadProgressCallback = (\n      data: FragLoadedData\n    ) => {\n      if (this.fragContextChanged(frag)) {\n        this.warn(\n          `Fragment ${frag.sn}${\n            data.part ? ' p: ' + data.part.index : ''\n          } of level ${frag.level} was dropped during download.`\n        );\n        this.fragmentTracker.removeFragment(frag);\n        return;\n      }\n      frag.stats.chunkCount++;\n      this._handleFragmentLoadProgress(data);\n    };\n\n    this._doFragLoad(frag, levelDetails, targetBufferTime, progressCallback)\n      .then((data) => {\n        if (!data) {\n          // if we're here we probably needed to backtrack or are waiting for more parts\n          return;\n        }\n        this.fragLoadError = 0;\n        const state = this.state;\n        if (this.fragContextChanged(frag)) {\n          if (\n            state === State.FRAG_LOADING ||\n            (!this.fragCurrent && state === State.PARSING)\n          ) {\n            this.fragmentTracker.removeFragment(frag);\n            this.state = State.IDLE;\n          }\n          return;\n        }\n\n        if ('payload' in data) {\n          this.log(`Loaded fragment ${frag.sn} of level ${frag.level}`);\n          this.hls.trigger(Events.FRAG_LOADED, data);\n        }\n\n        // Pass through the whole payload; controllers not implementing progressive loading receive data from this callback\n        this._handleFragmentLoadComplete(data);\n      })\n      .catch((reason) => {\n        if (this.state === State.STOPPED || this.state === State.ERROR) {\n          return;\n        }\n        this.warn(reason);\n        this.resetFragmentLoading(frag);\n      });\n  }\n\n  protected flushMainBuffer(\n    startOffset: number,\n    endOffset: number,\n    type: SourceBufferName | null = null\n  ) {\n    if (!(startOffset - endOffset)) {\n      return;\n    }\n    // When alternate audio is playing, the audio-stream-controller is responsible for the audio buffer. Otherwise,\n    // passing a null type flushes both buffers\n    const flushScope: BufferFlushingData = { startOffset, endOffset, type };\n    // Reset load errors on flush\n    this.fragLoadError = 0;\n    this.hls.trigger(Events.BUFFER_FLUSHING, flushScope);\n  }\n\n  protected _loadInitSegment(frag: Fragment, details: LevelDetails) {\n    this._doFragLoad(frag, details)\n      .then((data) => {\n        if (!data || this.fragContextChanged(frag) || !this.levels) {\n          throw new Error('init load aborted');\n        }\n\n        return data;\n      })\n      .then((data: FragLoadedData) => {\n        const { hls } = this;\n        const { payload } = data;\n        const decryptData = frag.decryptdata;\n\n        // check to see if the payload needs to be decrypted\n        if (\n          payload &&\n          payload.byteLength > 0 &&\n          decryptData &&\n          decryptData.key &&\n          decryptData.iv &&\n          decryptData.method === 'AES-128'\n        ) {\n          const startTime = self.performance.now();\n          // decrypt the subtitles\n          return this.decrypter\n            .decrypt(\n              new Uint8Array(payload),\n              decryptData.key.buffer,\n              decryptData.iv.buffer\n            )\n            .then((decryptedData) => {\n              const endTime = self.performance.now();\n              hls.trigger(Events.FRAG_DECRYPTED, {\n                frag,\n                payload: decryptedData,\n                stats: {\n                  tstart: startTime,\n                  tdecrypt: endTime,\n                },\n              });\n              data.payload = decryptedData;\n\n              return data;\n            });\n        }\n\n        return data;\n      })\n      .then((data: FragLoadedData) => {\n        const { fragCurrent, hls, levels } = this;\n        if (!levels) {\n          throw new Error('init load aborted, missing levels');\n        }\n\n        const details = levels[frag.level].details as LevelDetails;\n        console.assert(\n          details,\n          'Level details are defined when init segment is loaded'\n        );\n\n        const stats = frag.stats;\n        this.state = State.IDLE;\n        this.fragLoadError = 0;\n        frag.data = new Uint8Array(data.payload);\n        stats.parsing.start = stats.buffering.start = self.performance.now();\n        stats.parsing.end = stats.buffering.end = self.performance.now();\n\n        // Silence FRAG_BUFFERED event if fragCurrent is null\n        if (data.frag === fragCurrent) {\n          hls.trigger(Events.FRAG_BUFFERED, {\n            stats,\n            frag: fragCurrent,\n            part: null,\n            id: frag.type,\n          });\n        }\n        this.tick();\n      })\n      .catch((reason) => {\n        if (this.state === State.STOPPED || this.state === State.ERROR) {\n          return;\n        }\n        this.warn(reason);\n        this.resetFragmentLoading(frag);\n      });\n  }\n\n  protected fragContextChanged(frag: Fragment | null) {\n    const { fragCurrent } = this;\n    return (\n      !frag ||\n      !fragCurrent ||\n      frag.level !== fragCurrent.level ||\n      frag.sn !== fragCurrent.sn ||\n      frag.urlId !== fragCurrent.urlId\n    );\n  }\n\n  protected fragBufferedComplete(frag: Fragment, part: Part | null) {\n    const media = this.mediaBuffer ? this.mediaBuffer : this.media;\n    this.log(\n      `Buffered ${frag.type} sn: ${frag.sn}${\n        part ? ' part: ' + part.index : ''\n      } of ${this.logPrefix === '[stream-controller]' ? 'level' : 'track'} ${\n        frag.level\n      } (frag:[${(frag.startPTS ?? NaN).toFixed(3)}-${(\n        frag.endPTS ?? NaN\n      ).toFixed(3)}] > buffer:${\n        media\n          ? TimeRanges.toString(BufferHelper.getBuffered(media))\n          : '(detached)'\n      })`\n    );\n    this.state = State.IDLE;\n    if (!media) {\n      return;\n    }\n    if (\n      !this.loadedmetadata &&\n      frag.type == PlaylistLevelType.MAIN &&\n      media.buffered.length &&\n      this.fragCurrent?.sn === this.fragPrevious?.sn\n    ) {\n      this.loadedmetadata = true;\n      this.seekToStartPos();\n    }\n    this.tick();\n  }\n\n  protected seekToStartPos() {}\n\n  protected _handleFragmentLoadComplete(fragLoadedEndData: PartsLoadedData) {\n    const { transmuxer } = this;\n    if (!transmuxer) {\n      return;\n    }\n    const { frag, part, partsLoaded } = fragLoadedEndData;\n    // If we did not load parts, or loaded all parts, we have complete (not partial) fragment data\n    const complete =\n      !partsLoaded ||\n      partsLoaded.length === 0 ||\n      partsLoaded.some((fragLoaded) => !fragLoaded);\n    const chunkMeta = new ChunkMetadata(\n      frag.level,\n      frag.sn as number,\n      frag.stats.chunkCount + 1,\n      0,\n      part ? part.index : -1,\n      !complete\n    );\n    transmuxer.flush(chunkMeta);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected _handleFragmentLoadProgress(\n    frag: PartsLoadedData | FragLoadedData\n  ) {}\n\n  protected _doFragLoad(\n    frag: Fragment,\n    details: LevelDetails,\n    targetBufferTime: number | null = null,\n    progressCallback?: FragmentLoadProgressCallback\n  ): Promise<PartsLoadedData | FragLoadedData | null> {\n    if (!this.levels) {\n      throw new Error('frag load aborted, missing levels');\n    }\n\n    let keyLoadingPromise: Promise<KeyLoadedData | void> | null = null;\n    if (frag.encrypted && !frag.decryptdata?.key) {\n      this.log(\n        `Loading key for ${frag.sn} of [${details.startSN}-${details.endSN}], ${\n          this.logPrefix === '[stream-controller]' ? 'level' : 'track'\n        } ${frag.level}`\n      );\n      this.state = State.KEY_LOADING;\n      this.fragCurrent = frag;\n      keyLoadingPromise = this.keyLoader.load(frag).then((keyLoadedData) => {\n        if (!this.fragContextChanged(keyLoadedData.frag)) {\n          this.hls.trigger(Events.KEY_LOADED, keyLoadedData);\n          if (this.state === State.KEY_LOADING) {\n            this.state = State.IDLE;\n          }\n          return keyLoadedData;\n        }\n      });\n      this.hls.trigger(Events.KEY_LOADING, { frag });\n      this.throwIfFragContextChanged('KEY_LOADING');\n    } else if (!frag.encrypted && details.encryptedFragments.length) {\n      this.keyLoader.loadClear(frag, details.encryptedFragments);\n    }\n\n    targetBufferTime = Math.max(frag.start, targetBufferTime || 0);\n    if (this.config.lowLatencyMode && details) {\n      const partList = details.partList;\n      if (partList && progressCallback) {\n        if (targetBufferTime > frag.end && details.fragmentHint) {\n          frag = details.fragmentHint;\n        }\n        const partIndex = this.getNextPart(partList, frag, targetBufferTime);\n        if (partIndex > -1) {\n          const part = partList[partIndex];\n          this.log(\n            `Loading part sn: ${frag.sn} p: ${part.index} cc: ${\n              frag.cc\n            } of playlist [${details.startSN}-${\n              details.endSN\n            }] parts [0-${partIndex}-${partList.length - 1}] ${\n              this.logPrefix === '[stream-controller]' ? 'level' : 'track'\n            }: ${frag.level}, target: ${parseFloat(\n              targetBufferTime.toFixed(3)\n            )}`\n          );\n          this.nextLoadPosition = part.start + part.duration;\n          this.state = State.FRAG_LOADING;\n          this.hls.trigger(Events.FRAG_LOADING, {\n            frag,\n            part: partList[partIndex],\n            targetBufferTime,\n          });\n          this.throwIfFragContextChanged('FRAG_LOADING parts');\n          if (keyLoadingPromise) {\n            return keyLoadingPromise\n              .then((keyLoadedData) => {\n                if (\n                  !keyLoadedData ||\n                  this.fragContextChanged(keyLoadedData.frag)\n                ) {\n                  return null;\n                }\n                return this.doFragPartsLoad(\n                  frag,\n                  partList,\n                  partIndex,\n                  progressCallback\n                );\n              })\n              .catch((error) => this.handleFragLoadError(error));\n          }\n\n          return this.doFragPartsLoad(\n            frag,\n            partList,\n            partIndex,\n            progressCallback\n          ).catch((error: LoadError) => this.handleFragLoadError(error));\n        } else if (\n          !frag.url ||\n          this.loadedEndOfParts(partList, targetBufferTime)\n        ) {\n          // Fragment hint has no parts\n          return Promise.resolve(null);\n        }\n      }\n    }\n\n    this.log(\n      `Loading fragment ${frag.sn} cc: ${frag.cc} ${\n        details ? 'of [' + details.startSN + '-' + details.endSN + '] ' : ''\n      }${this.logPrefix === '[stream-controller]' ? 'level' : 'track'}: ${\n        frag.level\n      }, target: ${parseFloat(targetBufferTime.toFixed(3))}`\n    );\n    // Don't update nextLoadPosition for fragments which are not buffered\n    if (Number.isFinite(frag.sn as number) && !this.bitrateTest) {\n      this.nextLoadPosition = frag.start + frag.duration;\n    }\n    this.state = State.FRAG_LOADING;\n    this.hls.trigger(Events.FRAG_LOADING, { frag, targetBufferTime });\n    this.throwIfFragContextChanged('FRAG_LOADING');\n\n    // Load key before streaming fragment data\n    const dataOnProgress = this.config.progressive;\n    if (dataOnProgress && keyLoadingPromise) {\n      return keyLoadingPromise\n        .then((keyLoadedData) => {\n          if (!keyLoadedData || this.fragContextChanged(keyLoadedData?.frag)) {\n            return null;\n          }\n          return this.fragmentLoader.load(frag, progressCallback);\n        })\n        .catch((error) => this.handleFragLoadError(error));\n    }\n\n    // load unencrypted fragment data with progress event,\n    // or handle fragment result after key and fragment are finished loading\n    return Promise.all([\n      this.fragmentLoader.load(\n        frag,\n        dataOnProgress ? progressCallback : undefined\n      ),\n      keyLoadingPromise,\n    ])\n      .then(([fragLoadedData]) => {\n        if (!dataOnProgress && fragLoadedData && progressCallback) {\n          progressCallback(fragLoadedData);\n        }\n        return fragLoadedData;\n      })\n      .catch((error) => this.handleFragLoadError(error));\n  }\n\n  private throwIfFragContextChanged(context: string): void | never {\n    // exit if context changed during event loop\n    if (this.fragCurrent === null) {\n      throw new Error(`frag load aborted, context changed in ${context}`);\n    }\n  }\n\n  private doFragPartsLoad(\n    frag: Fragment,\n    partList: Part[],\n    partIndex: number,\n    progressCallback: FragmentLoadProgressCallback\n  ): Promise<PartsLoadedData | null> {\n    return new Promise(\n      (resolve: ResolveFragLoaded, reject: RejectFragLoaded) => {\n        const partsLoaded: FragLoadedData[] = [];\n        const loadPartIndex = (index: number) => {\n          const part = partList[index];\n          this.fragmentLoader\n            .loadPart(frag, part, progressCallback)\n            .then((partLoadedData: FragLoadedData) => {\n              partsLoaded[part.index] = partLoadedData;\n              const loadedPart = partLoadedData.part as Part;\n              this.hls.trigger(Events.FRAG_LOADED, partLoadedData);\n              const nextPart = partList[index + 1];\n              if (nextPart && nextPart.fragment === frag) {\n                loadPartIndex(index + 1);\n              } else {\n                return resolve({\n                  frag,\n                  part: loadedPart,\n                  partsLoaded,\n                });\n              }\n            })\n            .catch(reject);\n        };\n        loadPartIndex(partIndex);\n      }\n    );\n  }\n\n  private handleFragLoadError(error: LoadError | Error) {\n    if ('data' in error) {\n      const data = error.data;\n      if (error.data && data.details === ErrorDetails.INTERNAL_ABORTED) {\n        this.handleFragLoadAborted(data.frag, data.part);\n      } else {\n        this.hls.trigger(Events.ERROR, data as ErrorData);\n      }\n    } else {\n      this.hls.trigger(Events.ERROR, {\n        type: ErrorTypes.OTHER_ERROR,\n        details: ErrorDetails.INTERNAL_EXCEPTION,\n        err: error,\n        fatal: true,\n      });\n    }\n    return null;\n  }\n\n  protected _handleTransmuxerFlush(chunkMeta: ChunkMetadata) {\n    const context = this.getCurrentContext(chunkMeta);\n    if (!context || this.state !== State.PARSING) {\n      if (\n        !this.fragCurrent &&\n        this.state !== State.STOPPED &&\n        this.state !== State.ERROR\n      ) {\n        this.state = State.IDLE;\n      }\n      return;\n    }\n    const { frag, part, level } = context;\n    const now = self.performance.now();\n    frag.stats.parsing.end = now;\n    if (part) {\n      part.stats.parsing.end = now;\n    }\n    this.updateLevelTiming(frag, part, level, chunkMeta.partial);\n  }\n\n  protected getCurrentContext(\n    chunkMeta: ChunkMetadata\n  ): { frag: Fragment; part: Part | null; level: Level } | null {\n    const { levels } = this;\n    const { level: levelIndex, sn, part: partIndex } = chunkMeta;\n    if (!levels || !levels[levelIndex]) {\n      this.warn(\n        `Levels object was unset while buffering fragment ${sn} of level ${levelIndex}. The current chunk will not be buffered.`\n      );\n      return null;\n    }\n    const level = levels[levelIndex];\n    const part = partIndex > -1 ? getPartWith(level, sn, partIndex) : null;\n    const frag = part\n      ? part.fragment\n      : getFragmentWithSN(level, sn, this.fragCurrent);\n    if (!frag) {\n      return null;\n    }\n    return { frag, part, level };\n  }\n\n  protected bufferFragmentData(\n    data: RemuxedTrack,\n    frag: Fragment,\n    part: Part | null,\n    chunkMeta: ChunkMetadata\n  ) {\n    if (!data || this.state !== State.PARSING) {\n      return;\n    }\n\n    const { data1, data2 } = data;\n    let buffer = data1;\n    if (data1 && data2) {\n      // Combine the moof + mdat so that we buffer with a single append\n      buffer = appendUint8Array(data1, data2);\n    }\n\n    if (!buffer || !buffer.length) {\n      return;\n    }\n\n    const segment: BufferAppendingData = {\n      type: data.type,\n      frag,\n      part,\n      chunkMeta,\n      parent: frag.type,\n      data: buffer,\n    };\n    this.hls.trigger(Events.BUFFER_APPENDING, segment);\n\n    if (data.dropped && data.independent && !part) {\n      // Clear buffer so that we reload previous segments sequentially if required\n      this.flushBufferGap(frag);\n    }\n  }\n\n  protected flushBufferGap(frag: Fragment) {\n    const media = this.media;\n    if (!media) {\n      return;\n    }\n    // If currentTime is not buffered, clear the back buffer so that we can backtrack as much as needed\n    if (!BufferHelper.isBuffered(media, media.currentTime)) {\n      this.flushMainBuffer(0, frag.start);\n      return;\n    }\n    // Remove back-buffer without interrupting playback to allow back tracking\n    const currentTime = media.currentTime;\n    const bufferInfo = BufferHelper.bufferInfo(media, currentTime, 0);\n    const fragDuration = frag.duration;\n    const segmentFraction = Math.min(\n      this.config.maxFragLookUpTolerance * 2,\n      fragDuration * 0.25\n    );\n    const start = Math.max(\n      Math.min(frag.start - segmentFraction, bufferInfo.end - segmentFraction),\n      currentTime + segmentFraction\n    );\n    if (frag.start - start > segmentFraction) {\n      this.flushMainBuffer(start, frag.start);\n    }\n  }\n\n  protected getFwdBufferInfo(\n    bufferable: Bufferable | null,\n    type: PlaylistLevelType\n  ): BufferInfo | null {\n    const { config } = this;\n    const pos = this.getLoadPosition();\n    if (!Number.isFinite(pos)) {\n      return null;\n    }\n    const bufferInfo = BufferHelper.bufferInfo(\n      bufferable,\n      pos,\n      config.maxBufferHole\n    );\n    // Workaround flaw in getting forward buffer when maxBufferHole is smaller than gap at current pos\n    if (bufferInfo.len === 0 && bufferInfo.nextStart !== undefined) {\n      const bufferedFragAtPos = this.fragmentTracker.getBufferedFrag(pos, type);\n      if (bufferedFragAtPos && bufferInfo.nextStart < bufferedFragAtPos.end) {\n        return BufferHelper.bufferInfo(\n          bufferable,\n          pos,\n          Math.max(bufferInfo.nextStart, config.maxBufferHole)\n        );\n      }\n    }\n    return bufferInfo;\n  }\n\n  protected getMaxBufferLength(levelBitrate?: number): number {\n    const { config } = this;\n    let maxBufLen;\n    if (levelBitrate) {\n      maxBufLen = Math.max(\n        (8 * config.maxBufferSize) / levelBitrate,\n        config.maxBufferLength\n      );\n    } else {\n      maxBufLen = config.maxBufferLength;\n    }\n    return Math.min(maxBufLen, config.maxMaxBufferLength);\n  }\n\n  protected reduceMaxBufferLength(threshold?: number) {\n    const config = this.config;\n    const minLength = threshold || config.maxBufferLength;\n    if (config.maxMaxBufferLength >= minLength) {\n      // reduce max buffer length as it might be too high. we do this to avoid loop flushing ...\n      config.maxMaxBufferLength /= 2;\n      this.warn(`Reduce max buffer length to ${config.maxMaxBufferLength}s`);\n      return true;\n    }\n    return false;\n  }\n\n  protected getNextFragment(\n    pos: number,\n    levelDetails: LevelDetails\n  ): Fragment | null {\n    const fragments = levelDetails.fragments;\n    const fragLen = fragments.length;\n\n    if (!fragLen) {\n      return null;\n    }\n\n    // find fragment index, contiguous with end of buffer position\n    const { config } = this;\n    const start = fragments[0].start;\n    let frag;\n\n    if (levelDetails.live) {\n      const initialLiveManifestSize = config.initialLiveManifestSize;\n      if (fragLen < initialLiveManifestSize) {\n        this.warn(\n          `Not enough fragments to start playback (have: ${fragLen}, need: ${initialLiveManifestSize})`\n        );\n        return null;\n      }\n      // The real fragment start times for a live stream are only known after the PTS range for that level is known.\n      // In order to discover the range, we load the best matching fragment for that level and demux it.\n      // Do not load using live logic if the starting frag is requested - we want to use getFragmentAtPosition() so that\n      // we get the fragment matching that start time\n      if (\n        !levelDetails.PTSKnown &&\n        !this.startFragRequested &&\n        this.startPosition === -1\n      ) {\n        frag = this.getInitialLiveFragment(levelDetails, fragments);\n        this.startPosition = frag\n          ? this.hls.liveSyncPosition || frag.start\n          : pos;\n      }\n    } else if (pos <= start) {\n      // VoD playlist: if loadPosition before start of playlist, load first fragment\n      frag = fragments[0];\n    }\n\n    // If we haven't run into any special cases already, just load the fragment most closely matching the requested position\n    if (!frag) {\n      const end = config.lowLatencyMode\n        ? levelDetails.partEnd\n        : levelDetails.fragmentEnd;\n      frag = this.getFragmentAtPosition(pos, end, levelDetails);\n    }\n\n    return this.mapToInitFragWhenRequired(frag);\n  }\n\n  mapToInitFragWhenRequired(frag: Fragment | null): typeof frag {\n    // If an initSegment is present, it must be buffered first\n    if (frag?.initSegment && !frag?.initSegment.data && !this.bitrateTest) {\n      return frag.initSegment;\n    }\n\n    return frag;\n  }\n\n  getNextPart(\n    partList: Part[],\n    frag: Fragment,\n    targetBufferTime: number\n  ): number {\n    let nextPart = -1;\n    let contiguous = false;\n    let independentAttrOmitted = true;\n    for (let i = 0, len = partList.length; i < len; i++) {\n      const part = partList[i];\n      independentAttrOmitted = independentAttrOmitted && !part.independent;\n      if (nextPart > -1 && targetBufferTime < part.start) {\n        break;\n      }\n      const loaded = part.loaded;\n      if (loaded) {\n        nextPart = -1;\n      } else if (\n        (contiguous || part.independent || independentAttrOmitted) &&\n        part.fragment === frag\n      ) {\n        nextPart = i;\n      }\n      contiguous = loaded;\n    }\n    return nextPart;\n  }\n\n  private loadedEndOfParts(\n    partList: Part[],\n    targetBufferTime: number\n  ): boolean {\n    const lastPart = partList[partList.length - 1];\n    return lastPart && targetBufferTime > lastPart.start && lastPart.loaded;\n  }\n\n  /*\n   This method is used find the best matching first fragment for a live playlist. This fragment is used to calculate the\n   \"sliding\" of the playlist, which is its offset from the start of playback. After sliding we can compute the real\n   start and end times for each fragment in the playlist (after which this method will not need to be called).\n  */\n  protected getInitialLiveFragment(\n    levelDetails: LevelDetails,\n    fragments: Array<Fragment>\n  ): Fragment | null {\n    const fragPrevious = this.fragPrevious;\n    let frag: Fragment | null = null;\n    if (fragPrevious) {\n      if (levelDetails.hasProgramDateTime) {\n        // Prefer using PDT, because it can be accurate enough to choose the correct fragment without knowing the level sliding\n        this.log(\n          `Live playlist, switching playlist, load frag with same PDT: ${fragPrevious.programDateTime}`\n        );\n        frag = findFragmentByPDT(\n          fragments,\n          fragPrevious.endProgramDateTime,\n          this.config.maxFragLookUpTolerance\n        );\n      }\n      if (!frag) {\n        // SN does not need to be accurate between renditions, but depending on the packaging it may be so.\n        const targetSN = (fragPrevious.sn as number) + 1;\n        if (\n          targetSN >= levelDetails.startSN &&\n          targetSN <= levelDetails.endSN\n        ) {\n          const fragNext = fragments[targetSN - levelDetails.startSN];\n          // Ensure that we're staying within the continuity range, since PTS resets upon a new range\n          if (fragPrevious.cc === fragNext.cc) {\n            frag = fragNext;\n            this.log(\n              `Live playlist, switching playlist, load frag with next SN: ${\n                frag!.sn\n              }`\n            );\n          }\n        }\n        // It's important to stay within the continuity range if available; otherwise the fragments in the playlist\n        // will have the wrong start times\n        if (!frag) {\n          frag = findFragWithCC(fragments, fragPrevious.cc);\n          if (frag) {\n            this.log(\n              `Live playlist, switching playlist, load frag with same CC: ${frag.sn}`\n            );\n          }\n        }\n      }\n    } else {\n      // Find a new start fragment when fragPrevious is null\n      const liveStart = this.hls.liveSyncPosition;\n      if (liveStart !== null) {\n        frag = this.getFragmentAtPosition(\n          liveStart,\n          this.bitrateTest ? levelDetails.fragmentEnd : levelDetails.edge,\n          levelDetails\n        );\n      }\n    }\n\n    return frag;\n  }\n\n  /*\n  This method finds the best matching fragment given the provided position.\n   */\n  protected getFragmentAtPosition(\n    bufferEnd: number,\n    end: number,\n    levelDetails: LevelDetails\n  ): Fragment | null {\n    const { config } = this;\n    let { fragPrevious } = this;\n    let { fragments, endSN } = levelDetails;\n    const { fragmentHint } = levelDetails;\n    const tolerance = config.maxFragLookUpTolerance;\n\n    const loadingParts = !!(\n      config.lowLatencyMode &&\n      levelDetails.partList &&\n      fragmentHint\n    );\n    if (loadingParts && fragmentHint && !this.bitrateTest) {\n      // Include incomplete fragment with parts at end\n      fragments = fragments.concat(fragmentHint);\n      endSN = fragmentHint.sn as number;\n    }\n\n    let frag;\n    if (bufferEnd < end) {\n      const lookupTolerance = bufferEnd > end - tolerance ? 0 : tolerance;\n      // Remove the tolerance if it would put the bufferEnd past the actual end of stream\n      // Uses buffer and sequence number to calculate switch segment (required if using EXT-X-DISCONTINUITY-SEQUENCE)\n      frag = findFragmentByPTS(\n        fragPrevious,\n        fragments,\n        bufferEnd,\n        lookupTolerance\n      );\n    } else {\n      // reach end of playlist\n      frag = fragments[fragments.length - 1];\n    }\n\n    if (frag) {\n      const curSNIdx = frag.sn - levelDetails.startSN;\n      // Move fragPrevious forward to support forcing the next fragment to load\n      // when the buffer catches up to a previously buffered range.\n      if (this.fragmentTracker.getState(frag) === FragmentState.OK) {\n        fragPrevious = frag;\n      }\n      if (fragPrevious && frag.sn === fragPrevious.sn && !loadingParts) {\n        // Force the next fragment to load if the previous one was already selected. This can occasionally happen with\n        // non-uniform fragment durations\n        const sameLevel = fragPrevious && frag.level === fragPrevious.level;\n        if (sameLevel) {\n          const nextFrag = fragments[curSNIdx + 1];\n          if (\n            frag.sn < endSN &&\n            this.fragmentTracker.getState(nextFrag) !== FragmentState.OK\n          ) {\n            this.log(\n              `SN ${frag.sn} just loaded, load next one: ${nextFrag.sn}`\n            );\n            frag = nextFrag;\n          } else {\n            frag = null;\n          }\n        }\n      }\n    }\n    return frag;\n  }\n\n  protected synchronizeToLiveEdge(levelDetails: LevelDetails) {\n    const { config, media } = this;\n    if (!media) {\n      return;\n    }\n    const liveSyncPosition = this.hls.liveSyncPosition;\n    const currentTime = media.currentTime;\n    const start = levelDetails.fragments[0].start;\n    const end = levelDetails.edge;\n    const withinSlidingWindow =\n      currentTime >= start - config.maxFragLookUpTolerance &&\n      currentTime <= end;\n    // Continue if we can seek forward to sync position or if current time is outside of sliding window\n    if (\n      liveSyncPosition !== null &&\n      media.duration > liveSyncPosition &&\n      (currentTime < liveSyncPosition || !withinSlidingWindow)\n    ) {\n      // Continue if buffer is starving or if current time is behind max latency\n      const maxLatency =\n        config.liveMaxLatencyDuration !== undefined\n          ? config.liveMaxLatencyDuration\n          : config.liveMaxLatencyDurationCount * levelDetails.targetduration;\n      if (\n        (!withinSlidingWindow && media.readyState < 4) ||\n        currentTime < end - maxLatency\n      ) {\n        if (!this.loadedmetadata) {\n          this.nextLoadPosition = liveSyncPosition;\n        }\n        // Only seek if ready and there is not a significant forward buffer available for playback\n        if (media.readyState) {\n          this.warn(\n            `Playback: ${currentTime.toFixed(\n              3\n            )} is located too far from the end of live sliding playlist: ${end}, reset currentTime to : ${liveSyncPosition.toFixed(\n              3\n            )}`\n          );\n          media.currentTime = liveSyncPosition;\n        }\n      }\n    }\n  }\n\n  protected alignPlaylists(\n    details: LevelDetails,\n    previousDetails?: LevelDetails\n  ): number {\n    const { levels, levelLastLoaded, fragPrevious } = this;\n    const lastLevel: Level | null =\n      levelLastLoaded !== null ? levels![levelLastLoaded] : null;\n\n    // FIXME: If not for `shouldAlignOnDiscontinuities` requiring fragPrevious.cc,\n    //  this could all go in level-helper mergeDetails()\n    const length = details.fragments.length;\n    if (!length) {\n      this.warn(`No fragments in live playlist`);\n      return 0;\n    }\n    const slidingStart = details.fragments[0].start;\n    const firstLevelLoad = !previousDetails;\n    const aligned = details.alignedSliding && Number.isFinite(slidingStart);\n    if (firstLevelLoad || (!aligned && !slidingStart)) {\n      alignStream(fragPrevious, lastLevel, details);\n      const alignedSlidingStart = details.fragments[0].start;\n      this.log(\n        `Live playlist sliding: ${alignedSlidingStart.toFixed(2)} start-sn: ${\n          previousDetails ? previousDetails.startSN : 'na'\n        }->${details.startSN} prev-sn: ${\n          fragPrevious ? fragPrevious.sn : 'na'\n        } fragments: ${length}`\n      );\n      return alignedSlidingStart;\n    }\n    return slidingStart;\n  }\n\n  protected waitForCdnTuneIn(details: LevelDetails) {\n    // Wait for Low-Latency CDN Tune-in to get an updated playlist\n    const advancePartLimit = 3;\n    return (\n      details.live &&\n      details.canBlockReload &&\n      details.partTarget &&\n      details.tuneInGoal >\n        Math.max(details.partHoldBack, details.partTarget * advancePartLimit)\n    );\n  }\n\n  protected setStartPosition(details: LevelDetails, sliding: number) {\n    // compute start position if set to -1. use it straight away if value is defined\n    let startPosition = this.startPosition;\n    if (startPosition < sliding) {\n      startPosition = -1;\n    }\n    if (startPosition === -1 || this.lastCurrentTime === -1) {\n      // first, check if start time offset has been set in playlist, if yes, use this value\n      const startTimeOffset = details.startTimeOffset!;\n      if (Number.isFinite(startTimeOffset)) {\n        startPosition = sliding + startTimeOffset;\n        if (startTimeOffset < 0) {\n          startPosition += details.totalduration;\n        }\n        startPosition = Math.min(\n          Math.max(sliding, startPosition),\n          sliding + details.totalduration\n        );\n        this.log(\n          `Start time offset ${startTimeOffset} found in playlist, adjust startPosition to ${startPosition}`\n        );\n        this.startPosition = startPosition;\n      } else if (details.live) {\n        // Leave this.startPosition at -1, so that we can use `getInitialLiveFragment` logic when startPosition has\n        // not been specified via the config or an as an argument to startLoad (#3736).\n        startPosition = this.hls.liveSyncPosition || sliding;\n      } else {\n        this.startPosition = startPosition = 0;\n      }\n      this.lastCurrentTime = startPosition;\n    }\n    this.nextLoadPosition = startPosition;\n  }\n\n  protected getLoadPosition(): number {\n    const { media } = this;\n    // if we have not yet loaded any fragment, start loading from start position\n    let pos = 0;\n    if (this.loadedmetadata && media) {\n      pos = media.currentTime;\n    } else if (this.nextLoadPosition) {\n      pos = this.nextLoadPosition;\n    }\n\n    return pos;\n  }\n\n  private handleFragLoadAborted(frag: Fragment, part: Part | undefined) {\n    if (this.transmuxer && frag.sn !== 'initSegment' && frag.stats.aborted) {\n      this.warn(\n        `Fragment ${frag.sn}${part ? ' part' + part.index : ''} of level ${\n          frag.level\n        } was aborted`\n      );\n      this.resetFragmentLoading(frag);\n    }\n  }\n\n  protected resetFragmentLoading(frag: Fragment) {\n    if (\n      !this.fragCurrent ||\n      (!this.fragContextChanged(frag) &&\n        this.state !== State.FRAG_LOADING_WAITING_RETRY)\n    ) {\n      this.state = State.IDLE;\n    }\n  }\n\n  protected onFragmentOrKeyLoadError(\n    filterType: PlaylistLevelType,\n    data: ErrorData\n  ) {\n    if (data.fatal) {\n      this.stopLoad();\n      this.state = State.ERROR;\n      return;\n    }\n    const config = this.config;\n    if (data.chunkMeta) {\n      // Parsing Error: no retries\n      const context = this.getCurrentContext(data.chunkMeta);\n      if (context) {\n        data.frag = context.frag;\n        data.levelRetry = true;\n        this.fragLoadError = config.fragLoadingMaxRetry;\n      }\n    }\n    const frag = data.frag;\n    // Handle frag error related to caller's filterType\n    if (!frag || frag.type !== filterType) {\n      return;\n    }\n    const fragCurrent = this.fragCurrent;\n    console.assert(\n      fragCurrent &&\n        frag.sn === fragCurrent.sn &&\n        frag.level === fragCurrent.level &&\n        frag.urlId === fragCurrent.urlId,\n      'Frag load error must match current frag to retry'\n    );\n    // keep retrying until the limit will be reached\n    if (this.fragLoadError + 1 <= config.fragLoadingMaxRetry) {\n      if (!this.loadedmetadata) {\n        this.startFragRequested = false;\n        this.nextLoadPosition = this.startPosition;\n      }\n      // exponential backoff capped to config.fragLoadingMaxRetryTimeout\n      const delay = Math.min(\n        Math.pow(2, this.fragLoadError) * config.fragLoadingRetryDelay,\n        config.fragLoadingMaxRetryTimeout\n      );\n      this.warn(\n        `Fragment ${frag.sn} of ${filterType} ${frag.level} failed to load, retrying in ${delay}ms`\n      );\n      this.retryDate = self.performance.now() + delay;\n      this.fragLoadError++;\n      this.state = State.FRAG_LOADING_WAITING_RETRY;\n    } else if (data.levelRetry) {\n      if (filterType === PlaylistLevelType.AUDIO) {\n        // Reset current fragment since audio track audio is essential and may not have a fail-over track\n        this.fragCurrent = null;\n      }\n      // Fragment errors that result in a level switch or redundant fail-over\n      // should reset the stream controller state to idle\n      this.fragLoadError = 0;\n      this.state = State.IDLE;\n    } else {\n      logger.error(\n        `${data.details} reaches max retry, redispatch as fatal ...`\n      );\n      // switch error to fatal\n      data.fatal = true;\n      this.hls.stopLoad();\n      this.state = State.ERROR;\n    }\n  }\n\n  protected afterBufferFlushed(\n    media: Bufferable,\n    bufferType: SourceBufferName,\n    playlistType: PlaylistLevelType\n  ) {\n    if (!media) {\n      return;\n    }\n    // After successful buffer flushing, filter flushed fragments from bufferedFrags use mediaBuffered instead of media\n    // (so that we will check against video.buffered ranges in case of alt audio track)\n    const bufferedTimeRanges = BufferHelper.getBuffered(media);\n    this.fragmentTracker.detectEvictedFragments(\n      bufferType,\n      bufferedTimeRanges,\n      playlistType\n    );\n    if (this.state === State.ENDED) {\n      this.resetLoadingState();\n    }\n  }\n\n  protected resetLoadingState() {\n    this.log('Reset loading state');\n    this.fragCurrent = null;\n    this.fragPrevious = null;\n    this.state = State.IDLE;\n  }\n\n  protected resetStartWhenNotLoaded(level: number): void {\n    // if loadedmetadata is not set, it means that first frag request failed\n    // in that case, reset startFragRequested flag\n    if (!this.loadedmetadata) {\n      this.startFragRequested = false;\n      const details = this.levels ? this.levels[level].details : null;\n      if (details?.live) {\n        // Update the start position and return to IDLE to recover live start\n        this.startPosition = -1;\n        this.setStartPosition(details, 0);\n        this.resetLoadingState();\n      } else {\n        this.nextLoadPosition = this.startPosition;\n      }\n    }\n  }\n\n  private updateLevelTiming(\n    frag: Fragment,\n    part: Part | null,\n    level: Level,\n    partial: boolean\n  ) {\n    const details = level.details as LevelDetails;\n    console.assert(!!details, 'level.details must be defined');\n    const parsed = Object.keys(frag.elementaryStreams).reduce(\n      (result, type) => {\n        const info = frag.elementaryStreams[type];\n        if (info) {\n          const parsedDuration = info.endPTS - info.startPTS;\n          if (parsedDuration <= 0) {\n            // Destroy the transmuxer after it's next time offset failed to advance because duration was <= 0.\n            // The new transmuxer will be configured with a time offset matching the next fragment start,\n            // preventing the timeline from shifting.\n            this.warn(\n              `Could not parse fragment ${frag.sn} ${type} duration reliably (${parsedDuration})`\n            );\n            return result || false;\n          }\n          const drift = partial\n            ? 0\n            : updateFragPTSDTS(\n                details,\n                frag,\n                info.startPTS,\n                info.endPTS,\n                info.startDTS,\n                info.endDTS\n              );\n          this.hls.trigger(Events.LEVEL_PTS_UPDATED, {\n            details,\n            level,\n            drift,\n            type,\n            frag,\n            start: info.startPTS,\n            end: info.endPTS,\n          });\n          return true;\n        }\n        return result;\n      },\n      false\n    );\n    if (!parsed) {\n      this.warn(\n        `Found no media in fragment ${frag.sn} of level ${level.id} resetting transmuxer to fallback to playlist timing`\n      );\n      this.resetTransmuxer();\n    }\n    this.state = State.PARSED;\n    this.hls.trigger(Events.FRAG_PARSED, { frag, part });\n  }\n\n  protected resetTransmuxer() {\n    if (this.transmuxer) {\n      this.transmuxer.destroy();\n      this.transmuxer = null;\n    }\n  }\n\n  set state(nextState) {\n    const previousState = this._state;\n    if (previousState !== nextState) {\n      this._state = nextState;\n      this.log(`${previousState}->${nextState}`);\n    }\n  }\n\n  get state() {\n    return this._state;\n  }\n}\n", "import { Events } from '../events';\nimport { logger } from '../utils/logger';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport { BufferHelper } from '../utils/buffer-helper';\nimport { getMediaSource } from '../utils/mediasource-helper';\nimport { ElementaryStreamTypes } from '../loader/fragment';\nimport type { TrackSet } from '../types/track';\nimport BufferOperationQueue from './buffer-operation-queue';\nimport {\n  BufferOperation,\n  SourceBuffers,\n  SourceBufferName,\n  SourceBufferListeners,\n} from '../types/buffer';\nimport type {\n  LevelUpdatedData,\n  BufferAppendingData,\n  MediaAttachingData,\n  ManifestParsedData,\n  BufferCodecsData,\n  BufferEOSData,\n  BufferFlushingData,\n  FragParsedData,\n  FragChangedData,\n} from '../types/events';\nimport type { ComponentAPI } from '../types/component-api';\nimport type { ChunkMetadata } from '../types/transmuxer';\nimport type Hls from '../hls';\nimport type { LevelDetails } from '../loader/level-details';\n\nconst MediaSource = getMediaSource();\nconst VIDEO_CODEC_PROFILE_REPACE = /([ha]vc.)(?:\\.[^.,]+)+/;\n\nexport default class BufferController implements ComponentAPI {\n  // The level details used to determine duration, target-duration and live\n  private details: LevelDetails | null = null;\n  // cache the self generated object url to detect hijack of video tag\n  private _objectUrl: string | null = null;\n  // A queue of buffer operations which require the SourceBuffer to not be updating upon execution\n  private operationQueue!: BufferOperationQueue;\n  // References to event listeners for each SourceBuffer, so that they can be referenced for event removal\n  private listeners!: SourceBufferListeners;\n\n  private hls: Hls;\n\n  // The number of BUFFER_CODEC events received before any sourceBuffers are created\n  public bufferCodecEventsExpected: number = 0;\n\n  // The total number of BUFFER_CODEC events received\n  private _bufferCodecEventsTotal: number = 0;\n\n  // A reference to the attached media element\n  public media: HTMLMediaElement | null = null;\n\n  // A reference to the active media source\n  public mediaSource: MediaSource | null = null;\n\n  // Last MP3 audio chunk appended\n  private lastMpegAudioChunk: ChunkMetadata | null = null;\n\n  // counters\n  public appendError: number = 0;\n\n  public tracks: TrackSet = {};\n  public pendingTracks: TrackSet = {};\n  public sourceBuffer!: SourceBuffers;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this._initSourceBuffer();\n    this.registerListeners();\n  }\n\n  public hasSourceTypes(): boolean {\n    return (\n      this.getSourceBufferTypes().length > 0 ||\n      Object.keys(this.pendingTracks).length > 0\n    );\n  }\n\n  public destroy() {\n    this.unregisterListeners();\n    this.details = null;\n    this.lastMpegAudioChunk = null;\n  }\n\n  protected registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.on(Events.BUFFER_RESET, this.onBufferReset, this);\n    hls.on(Events.BUFFER_APPENDING, this.onBufferAppending, this);\n    hls.on(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.on(Events.BUFFER_EOS, this.onBufferEos, this);\n    hls.on(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.on(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n    hls.on(Events.FRAG_PARSED, this.onFragParsed, this);\n    hls.on(Events.FRAG_CHANGED, this.onFragChanged, this);\n  }\n\n  protected unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.off(Events.BUFFER_RESET, this.onBufferReset, this);\n    hls.off(Events.BUFFER_APPENDING, this.onBufferAppending, this);\n    hls.off(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.off(Events.BUFFER_EOS, this.onBufferEos, this);\n    hls.off(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.off(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n    hls.off(Events.FRAG_PARSED, this.onFragParsed, this);\n    hls.off(Events.FRAG_CHANGED, this.onFragChanged, this);\n  }\n\n  private _initSourceBuffer() {\n    this.sourceBuffer = {};\n    this.operationQueue = new BufferOperationQueue(this.sourceBuffer);\n    this.listeners = {\n      audio: [],\n      video: [],\n      audiovideo: [],\n    };\n    this.lastMpegAudioChunk = null;\n  }\n\n  protected onManifestParsed(\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ) {\n    // in case of alt audio 2 BUFFER_CODECS events will be triggered, one per stream controller\n    // sourcebuffers will be created all at once when the expected nb of tracks will be reached\n    // in case alt audio is not used, only one BUFFER_CODEC event will be fired from main stream controller\n    // it will contain the expected nb of source buffers, no need to compute it\n    let codecEvents: number = 2;\n    if ((data.audio && !data.video) || !data.altAudio) {\n      codecEvents = 1;\n    }\n    this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = codecEvents;\n    this.details = null;\n    logger.log(\n      `${this.bufferCodecEventsExpected} bufferCodec event(s) expected`\n    );\n  }\n\n  protected onMediaAttaching(\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) {\n    const media = (this.media = data.media);\n    if (media && MediaSource) {\n      const ms = (this.mediaSource = new MediaSource());\n      // MediaSource listeners are arrow functions with a lexical scope, and do not need to be bound\n      ms.addEventListener('sourceopen', this._onMediaSourceOpen);\n      ms.addEventListener('sourceended', this._onMediaSourceEnded);\n      ms.addEventListener('sourceclose', this._onMediaSourceClose);\n      // link video and media Source\n      media.src = self.URL.createObjectURL(ms);\n      // cache the locally generated object url\n      this._objectUrl = media.src;\n      media.addEventListener('emptied', this._onMediaEmptied);\n    }\n  }\n\n  protected onMediaDetaching() {\n    const { media, mediaSource, _objectUrl } = this;\n    if (mediaSource) {\n      logger.log('[buffer-controller]: media source detaching');\n      if (mediaSource.readyState === 'open') {\n        try {\n          // endOfStream could trigger exception if any sourcebuffer is in updating state\n          // we don't really care about checking sourcebuffer state here,\n          // as we are anyway detaching the MediaSource\n          // let's just avoid this exception to propagate\n          mediaSource.endOfStream();\n        } catch (err) {\n          logger.warn(\n            `[buffer-controller]: onMediaDetaching: ${err.message} while calling endOfStream`\n          );\n        }\n      }\n      // Clean up the SourceBuffers by invoking onBufferReset\n      this.onBufferReset();\n      mediaSource.removeEventListener('sourceopen', this._onMediaSourceOpen);\n      mediaSource.removeEventListener('sourceended', this._onMediaSourceEnded);\n      mediaSource.removeEventListener('sourceclose', this._onMediaSourceClose);\n\n      // Detach properly the MediaSource from the HTMLMediaElement as\n      // suggested in https://github.com/w3c/media-source/issues/53.\n      if (media) {\n        media.removeEventListener('emptied', this._onMediaEmptied);\n        if (_objectUrl) {\n          self.URL.revokeObjectURL(_objectUrl);\n        }\n\n        // clean up video tag src only if it's our own url. some external libraries might\n        // hijack the video tag and change its 'src' without destroying the Hls instance first\n        if (media.src === _objectUrl) {\n          media.removeAttribute('src');\n          media.load();\n        } else {\n          logger.warn(\n            '[buffer-controller]: media.src was changed by a third party - skip cleanup'\n          );\n        }\n      }\n\n      this.mediaSource = null;\n      this.media = null;\n      this._objectUrl = null;\n      this.bufferCodecEventsExpected = this._bufferCodecEventsTotal;\n      this.pendingTracks = {};\n      this.tracks = {};\n    }\n\n    this.hls.trigger(Events.MEDIA_DETACHED, undefined);\n  }\n\n  protected onBufferReset() {\n    this.getSourceBufferTypes().forEach((type) => {\n      const sb = this.sourceBuffer[type];\n      try {\n        if (sb) {\n          this.removeBufferListeners(type);\n          if (this.mediaSource) {\n            this.mediaSource.removeSourceBuffer(sb);\n          }\n          // Synchronously remove the SB from the map before the next call in order to prevent an async function from\n          // accessing it\n          this.sourceBuffer[type] = undefined;\n        }\n      } catch (err) {\n        logger.warn(\n          `[buffer-controller]: Failed to reset the ${type} buffer`,\n          err\n        );\n      }\n    });\n    this._initSourceBuffer();\n  }\n\n  protected onBufferCodecs(\n    event: Events.BUFFER_CODECS,\n    data: BufferCodecsData\n  ) {\n    const sourceBufferCount = this.getSourceBufferTypes().length;\n\n    Object.keys(data).forEach((trackName) => {\n      if (sourceBufferCount) {\n        // check if SourceBuffer codec needs to change\n        const track = this.tracks[trackName];\n        if (track && typeof track.buffer.changeType === 'function') {\n          const { id, codec, levelCodec, container, metadata } =\n            data[trackName];\n          const currentCodec = (track.levelCodec || track.codec).replace(\n            VIDEO_CODEC_PROFILE_REPACE,\n            '$1'\n          );\n          const nextCodec = (levelCodec || codec).replace(\n            VIDEO_CODEC_PROFILE_REPACE,\n            '$1'\n          );\n          if (currentCodec !== nextCodec) {\n            const mimeType = `${container};codecs=${levelCodec || codec}`;\n            this.appendChangeType(trackName, mimeType);\n            logger.log(\n              `[buffer-controller]: switching codec ${currentCodec} to ${nextCodec}`\n            );\n            this.tracks[trackName] = {\n              buffer: track.buffer,\n              codec,\n              container,\n              levelCodec,\n              metadata,\n              id,\n            };\n          }\n        }\n      } else {\n        // if source buffer(s) not created yet, appended buffer tracks in this.pendingTracks\n        this.pendingTracks[trackName] = data[trackName];\n      }\n    });\n\n    // if sourcebuffers already created, do nothing ...\n    if (sourceBufferCount) {\n      return;\n    }\n\n    this.bufferCodecEventsExpected = Math.max(\n      this.bufferCodecEventsExpected - 1,\n      0\n    );\n    if (this.mediaSource && this.mediaSource.readyState === 'open') {\n      this.checkPendingTracks();\n    }\n  }\n\n  protected appendChangeType(type, mimeType) {\n    const { operationQueue } = this;\n    const operation: BufferOperation = {\n      execute: () => {\n        const sb = this.sourceBuffer[type];\n        if (sb) {\n          logger.log(\n            `[buffer-controller]: changing ${type} sourceBuffer type to ${mimeType}`\n          );\n          sb.changeType(mimeType);\n        }\n        operationQueue.shiftAndExecuteNext(type);\n      },\n      onStart: () => {},\n      onComplete: () => {},\n      onError: (e) => {\n        logger.warn(\n          `[buffer-controller]: Failed to change ${type} SourceBuffer type`,\n          e\n        );\n      },\n    };\n\n    operationQueue.append(operation, type);\n  }\n\n  protected onBufferAppending(\n    event: Events.BUFFER_APPENDING,\n    eventData: BufferAppendingData\n  ) {\n    const { hls, operationQueue, tracks } = this;\n    const { data, type, frag, part, chunkMeta } = eventData;\n    const chunkStats = chunkMeta.buffering[type];\n\n    const bufferAppendingStart = self.performance.now();\n    chunkStats.start = bufferAppendingStart;\n    const fragBuffering = frag.stats.buffering;\n    const partBuffering = part ? part.stats.buffering : null;\n    if (fragBuffering.start === 0) {\n      fragBuffering.start = bufferAppendingStart;\n    }\n    if (partBuffering && partBuffering.start === 0) {\n      partBuffering.start = bufferAppendingStart;\n    }\n\n    // TODO: Only update timestampOffset when audio/mpeg fragment or part is not contiguous with previously appended\n    // Adjusting `SourceBuffer.timestampOffset` (desired point in the timeline where the next frames should be appended)\n    // in Chrome browser when we detect MPEG audio container and time delta between level PTS and `SourceBuffer.timestampOffset`\n    // is greater than 100ms (this is enough to handle seek for VOD or level change for LIVE videos).\n    // More info here: https://github.com/video-dev/hls.js/issues/332#issuecomment-257986486\n    const audioTrack = tracks.audio;\n    let checkTimestampOffset = false;\n    if (type === 'audio' && audioTrack?.container === 'audio/mpeg') {\n      checkTimestampOffset =\n        !this.lastMpegAudioChunk ||\n        chunkMeta.id === 1 ||\n        this.lastMpegAudioChunk.sn !== chunkMeta.sn;\n      this.lastMpegAudioChunk = chunkMeta;\n    }\n\n    const fragStart = frag.start;\n    const operation: BufferOperation = {\n      execute: () => {\n        chunkStats.executeStart = self.performance.now();\n        if (checkTimestampOffset) {\n          const sb = this.sourceBuffer[type];\n          if (sb) {\n            const delta = fragStart - sb.timestampOffset;\n            if (Math.abs(delta) >= 0.1) {\n              logger.log(\n                `[buffer-controller]: Updating audio SourceBuffer timestampOffset to ${fragStart} (delta: ${delta}) sn: ${frag.sn})`\n              );\n              sb.timestampOffset = fragStart;\n            }\n          }\n        }\n        this.appendExecutor(data, type);\n      },\n      onStart: () => {\n        // logger.debug(`[buffer-controller]: ${type} SourceBuffer updatestart`);\n      },\n      onComplete: () => {\n        // logger.debug(`[buffer-controller]: ${type} SourceBuffer updateend`);\n        const end = self.performance.now();\n        chunkStats.executeEnd = chunkStats.end = end;\n        if (fragBuffering.first === 0) {\n          fragBuffering.first = end;\n        }\n        if (partBuffering && partBuffering.first === 0) {\n          partBuffering.first = end;\n        }\n\n        const { sourceBuffer } = this;\n        const timeRanges = {};\n        for (const type in sourceBuffer) {\n          timeRanges[type] = BufferHelper.getBuffered(sourceBuffer[type]);\n        }\n        this.appendError = 0;\n        this.hls.trigger(Events.BUFFER_APPENDED, {\n          type,\n          frag,\n          part,\n          chunkMeta,\n          parent: frag.type,\n          timeRanges,\n        });\n      },\n      onError: (err) => {\n        // in case any error occured while appending, put back segment in segments table\n        logger.error(\n          `[buffer-controller]: Error encountered while trying to append to the ${type} SourceBuffer`,\n          err\n        );\n        const event = {\n          type: ErrorTypes.MEDIA_ERROR,\n          parent: frag.type,\n          details: ErrorDetails.BUFFER_APPEND_ERROR,\n          err,\n          fatal: false,\n        };\n\n        if (err.code === DOMException.QUOTA_EXCEEDED_ERR) {\n          // QuotaExceededError: http://www.w3.org/TR/html5/infrastructure.html#quotaexceedederror\n          // let's stop appending any segments, and report BUFFER_FULL_ERROR error\n          event.details = ErrorDetails.BUFFER_FULL_ERROR;\n        } else {\n          this.appendError++;\n          event.details = ErrorDetails.BUFFER_APPEND_ERROR;\n          /* with UHD content, we could get loop of quota exceeded error until\n            browser is able to evict some data from sourcebuffer. Retrying can help recover.\n          */\n          if (this.appendError > hls.config.appendErrorMaxRetry) {\n            logger.error(\n              `[buffer-controller]: Failed ${hls.config.appendErrorMaxRetry} times to append segment in sourceBuffer`\n            );\n            event.fatal = true;\n            hls.stopLoad();\n          }\n        }\n        hls.trigger(Events.ERROR, event);\n      },\n    };\n    operationQueue.append(operation, type);\n  }\n\n  protected onBufferFlushing(\n    event: Events.BUFFER_FLUSHING,\n    data: BufferFlushingData\n  ) {\n    const { operationQueue } = this;\n    const flushOperation = (type: SourceBufferName): BufferOperation => ({\n      execute: this.removeExecutor.bind(\n        this,\n        type,\n        data.startOffset,\n        data.endOffset\n      ),\n      onStart: () => {\n        // logger.debug(`[buffer-controller]: Started flushing ${data.startOffset} -> ${data.endOffset} for ${type} Source Buffer`);\n      },\n      onComplete: () => {\n        // logger.debug(`[buffer-controller]: Finished flushing ${data.startOffset} -> ${data.endOffset} for ${type} Source Buffer`);\n        this.hls.trigger(Events.BUFFER_FLUSHED, { type });\n      },\n      onError: (e) => {\n        logger.warn(\n          `[buffer-controller]: Failed to remove from ${type} SourceBuffer`,\n          e\n        );\n      },\n    });\n\n    if (data.type) {\n      operationQueue.append(flushOperation(data.type), data.type);\n    } else {\n      this.getSourceBufferTypes().forEach((type: SourceBufferName) => {\n        operationQueue.append(flushOperation(type), type);\n      });\n    }\n  }\n\n  protected onFragParsed(event: Events.FRAG_PARSED, data: FragParsedData) {\n    const { frag, part } = data;\n    const buffersAppendedTo: Array<SourceBufferName> = [];\n    const elementaryStreams = part\n      ? part.elementaryStreams\n      : frag.elementaryStreams;\n    if (elementaryStreams[ElementaryStreamTypes.AUDIOVIDEO]) {\n      buffersAppendedTo.push('audiovideo');\n    } else {\n      if (elementaryStreams[ElementaryStreamTypes.AUDIO]) {\n        buffersAppendedTo.push('audio');\n      }\n      if (elementaryStreams[ElementaryStreamTypes.VIDEO]) {\n        buffersAppendedTo.push('video');\n      }\n    }\n\n    const onUnblocked = () => {\n      const now = self.performance.now();\n      frag.stats.buffering.end = now;\n      if (part) {\n        part.stats.buffering.end = now;\n      }\n      const stats = part ? part.stats : frag.stats;\n      this.hls.trigger(Events.FRAG_BUFFERED, {\n        frag,\n        part,\n        stats,\n        id: frag.type,\n      });\n    };\n\n    if (buffersAppendedTo.length === 0) {\n      logger.warn(\n        `Fragments must have at least one ElementaryStreamType set. type: ${frag.type} level: ${frag.level} sn: ${frag.sn}`\n      );\n    }\n\n    this.blockBuffers(onUnblocked, buffersAppendedTo);\n  }\n\n  private onFragChanged(event: Events.FRAG_CHANGED, data: FragChangedData) {\n    this.flushBackBuffer();\n  }\n\n  // on BUFFER_EOS mark matching sourcebuffer(s) as ended and trigger checkEos()\n  // an undefined data.type will mark all buffers as EOS.\n  protected onBufferEos(event: Events.BUFFER_EOS, data: BufferEOSData) {\n    const ended = this.getSourceBufferTypes().reduce((acc, type) => {\n      const sb = this.sourceBuffer[type];\n      if (sb && (!data.type || data.type === type)) {\n        sb.ending = true;\n        if (!sb.ended) {\n          sb.ended = true;\n          logger.log(`[buffer-controller]: ${type} sourceBuffer now EOS`);\n        }\n      }\n      return acc && !!(!sb || sb.ended);\n    }, true);\n\n    if (ended) {\n      logger.log(`[buffer-controller]: Queueing mediaSource.endOfStream()`);\n      this.blockBuffers(() => {\n        this.getSourceBufferTypes().forEach((type) => {\n          const sb = this.sourceBuffer[type];\n          if (sb) {\n            sb.ending = false;\n          }\n        });\n        const { mediaSource } = this;\n        if (!mediaSource || mediaSource.readyState !== 'open') {\n          if (mediaSource) {\n            logger.info(\n              `[buffer-controller]: Could not call mediaSource.endOfStream(). mediaSource.readyState: ${mediaSource.readyState}`\n            );\n          }\n          return;\n        }\n        logger.log(`[buffer-controller]: Calling mediaSource.endOfStream()`);\n        // Allow this to throw and be caught by the enqueueing function\n        mediaSource.endOfStream();\n      });\n    }\n  }\n\n  protected onLevelUpdated(\n    event: Events.LEVEL_UPDATED,\n    { details }: LevelUpdatedData\n  ) {\n    if (!details.fragments.length) {\n      return;\n    }\n    this.details = details;\n\n    if (this.getSourceBufferTypes().length) {\n      this.blockBuffers(this.updateMediaElementDuration.bind(this));\n    } else {\n      this.updateMediaElementDuration();\n    }\n  }\n\n  flushBackBuffer() {\n    const { hls, details, media, sourceBuffer } = this;\n    if (!media || details === null) {\n      return;\n    }\n\n    const sourceBufferTypes = this.getSourceBufferTypes();\n    if (!sourceBufferTypes.length) {\n      return;\n    }\n\n    // Support for deprecated liveBackBufferLength\n    const backBufferLength =\n      details.live && hls.config.liveBackBufferLength !== null\n        ? hls.config.liveBackBufferLength\n        : hls.config.backBufferLength;\n\n    if (!Number.isFinite(backBufferLength) || backBufferLength < 0) {\n      return;\n    }\n\n    const currentTime = media.currentTime;\n    const targetDuration = details.levelTargetDuration;\n    const maxBackBufferLength = Math.max(backBufferLength, targetDuration);\n    const targetBackBufferPosition =\n      Math.floor(currentTime / targetDuration) * targetDuration -\n      maxBackBufferLength;\n    sourceBufferTypes.forEach((type: SourceBufferName) => {\n      const sb = sourceBuffer[type];\n      if (sb) {\n        const buffered = BufferHelper.getBuffered(sb);\n        // when target buffer start exceeds actual buffer start\n        if (\n          buffered.length > 0 &&\n          targetBackBufferPosition > buffered.start(0)\n        ) {\n          hls.trigger(Events.BACK_BUFFER_REACHED, {\n            bufferEnd: targetBackBufferPosition,\n          });\n\n          // Support for deprecated event:\n          if (details.live) {\n            hls.trigger(Events.LIVE_BACK_BUFFER_REACHED, {\n              bufferEnd: targetBackBufferPosition,\n            });\n          } else if (\n            sb.ended &&\n            buffered.end(buffered.length - 1) - currentTime < targetDuration * 2\n          ) {\n            logger.info(\n              `[buffer-controller]: Cannot flush ${type} back buffer while SourceBuffer is in ended state`\n            );\n            return;\n          }\n\n          hls.trigger(Events.BUFFER_FLUSHING, {\n            startOffset: 0,\n            endOffset: targetBackBufferPosition,\n            type,\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Update Media Source duration to current level duration or override to Infinity if configuration parameter\n   * 'liveDurationInfinity` is set to `true`\n   * More details: https://github.com/video-dev/hls.js/issues/355\n   */\n  private updateMediaElementDuration() {\n    if (\n      !this.details ||\n      !this.media ||\n      !this.mediaSource ||\n      this.mediaSource.readyState !== 'open'\n    ) {\n      return;\n    }\n    const { details, hls, media, mediaSource } = this;\n    const levelDuration = details.fragments[0].start + details.totalduration;\n    const mediaDuration = media.duration;\n    const msDuration = Number.isFinite(mediaSource.duration)\n      ? mediaSource.duration\n      : 0;\n\n    if (details.live && hls.config.liveDurationInfinity) {\n      // Override duration to Infinity\n      logger.log(\n        '[buffer-controller]: Media Source duration is set to Infinity'\n      );\n      mediaSource.duration = Infinity;\n      this.updateSeekableRange(details);\n    } else if (\n      (levelDuration > msDuration && levelDuration > mediaDuration) ||\n      !Number.isFinite(mediaDuration)\n    ) {\n      // levelDuration was the last value we set.\n      // not using mediaSource.duration as the browser may tweak this value\n      // only update Media Source duration if its value increase, this is to avoid\n      // flushing already buffered portion when switching between quality level\n      logger.log(\n        `[buffer-controller]: Updating Media Source duration to ${levelDuration.toFixed(\n          3\n        )}`\n      );\n      mediaSource.duration = levelDuration;\n    }\n  }\n\n  updateSeekableRange(levelDetails) {\n    const mediaSource = this.mediaSource;\n    const fragments = levelDetails.fragments;\n    const len = fragments.length;\n    if (len && levelDetails.live && mediaSource?.setLiveSeekableRange) {\n      const start = Math.max(0, fragments[0].start);\n      const end = Math.max(start, start + levelDetails.totalduration);\n      mediaSource.setLiveSeekableRange(start, end);\n    }\n  }\n\n  protected checkPendingTracks() {\n    const { bufferCodecEventsExpected, operationQueue, pendingTracks } = this;\n\n    // Check if we've received all of the expected bufferCodec events. When none remain, create all the sourceBuffers at once.\n    // This is important because the MSE spec allows implementations to throw QuotaExceededErrors if creating new sourceBuffers after\n    // data has been appended to existing ones.\n    // 2 tracks is the max (one for audio, one for video). If we've reach this max go ahead and create the buffers.\n    const pendingTracksCount = Object.keys(pendingTracks).length;\n    if (\n      (pendingTracksCount && !bufferCodecEventsExpected) ||\n      pendingTracksCount === 2\n    ) {\n      // ok, let's create them now !\n      this.createSourceBuffers(pendingTracks);\n      this.pendingTracks = {};\n      // append any pending segments now !\n      const buffers = this.getSourceBufferTypes();\n      if (buffers.length === 0) {\n        this.hls.trigger(Events.ERROR, {\n          type: ErrorTypes.MEDIA_ERROR,\n          details: ErrorDetails.BUFFER_INCOMPATIBLE_CODECS_ERROR,\n          fatal: true,\n          reason: 'could not create source buffer for media codec(s)',\n        });\n        return;\n      }\n      buffers.forEach((type: SourceBufferName) => {\n        operationQueue.executeNext(type);\n      });\n    }\n  }\n\n  protected createSourceBuffers(tracks: TrackSet) {\n    const { sourceBuffer, mediaSource } = this;\n    if (!mediaSource) {\n      throw Error('createSourceBuffers called when mediaSource was null');\n    }\n    let tracksCreated = 0;\n    for (const trackName in tracks) {\n      if (!sourceBuffer[trackName]) {\n        const track = tracks[trackName as keyof TrackSet];\n        if (!track) {\n          throw Error(\n            `source buffer exists for track ${trackName}, however track does not`\n          );\n        }\n        // use levelCodec as first priority\n        const codec = track.levelCodec || track.codec;\n        const mimeType = `${track.container};codecs=${codec}`;\n        logger.log(`[buffer-controller]: creating sourceBuffer(${mimeType})`);\n        try {\n          const sb = (sourceBuffer[trackName] =\n            mediaSource.addSourceBuffer(mimeType));\n          const sbName = trackName as SourceBufferName;\n          this.addBufferListener(sbName, 'updatestart', this._onSBUpdateStart);\n          this.addBufferListener(sbName, 'updateend', this._onSBUpdateEnd);\n          this.addBufferListener(sbName, 'error', this._onSBUpdateError);\n          this.tracks[trackName] = {\n            buffer: sb,\n            codec: codec,\n            container: track.container,\n            levelCodec: track.levelCodec,\n            metadata: track.metadata,\n            id: track.id,\n          };\n          tracksCreated++;\n        } catch (err) {\n          logger.error(\n            `[buffer-controller]: error while trying to add sourceBuffer: ${err.message}`\n          );\n          this.hls.trigger(Events.ERROR, {\n            type: ErrorTypes.MEDIA_ERROR,\n            details: ErrorDetails.BUFFER_ADD_CODEC_ERROR,\n            fatal: false,\n            error: err,\n            mimeType: mimeType,\n          });\n        }\n      }\n    }\n    if (tracksCreated) {\n      this.hls.trigger(Events.BUFFER_CREATED, { tracks: this.tracks });\n    }\n  }\n\n  // Keep as arrow functions so that we can directly reference these functions directly as event listeners\n  private _onMediaSourceOpen = () => {\n    const { media, mediaSource } = this;\n    logger.log('[buffer-controller]: Media source opened');\n    if (media) {\n      media.removeEventListener('emptied', this._onMediaEmptied);\n      this.updateMediaElementDuration();\n      this.hls.trigger(Events.MEDIA_ATTACHED, { media });\n    }\n\n    if (mediaSource) {\n      // once received, don't listen anymore to sourceopen event\n      mediaSource.removeEventListener('sourceopen', this._onMediaSourceOpen);\n    }\n    this.checkPendingTracks();\n  };\n\n  private _onMediaSourceClose = () => {\n    logger.log('[buffer-controller]: Media source closed');\n  };\n\n  private _onMediaSourceEnded = () => {\n    logger.log('[buffer-controller]: Media source ended');\n  };\n\n  private _onMediaEmptied = () => {\n    const { media, _objectUrl } = this;\n    if (media && media.src !== _objectUrl) {\n      logger.error(\n        `Media element src was set while attaching MediaSource (${_objectUrl} > ${media.src})`\n      );\n    }\n  };\n\n  private _onSBUpdateStart(type: SourceBufferName) {\n    const { operationQueue } = this;\n    const operation = operationQueue.current(type);\n    operation.onStart();\n  }\n\n  private _onSBUpdateEnd(type: SourceBufferName) {\n    const { operationQueue } = this;\n    const operation = operationQueue.current(type);\n    operation.onComplete();\n    operationQueue.shiftAndExecuteNext(type);\n  }\n\n  private _onSBUpdateError(type: SourceBufferName, event: Event) {\n    logger.error(`[buffer-controller]: ${type} SourceBuffer error`, event);\n    // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\n    // SourceBuffer errors are not necessarily fatal; if so, the HTMLMediaElement will fire an error event\n    this.hls.trigger(Events.ERROR, {\n      type: ErrorTypes.MEDIA_ERROR,\n      details: ErrorDetails.BUFFER_APPENDING_ERROR,\n      fatal: false,\n    });\n    // updateend is always fired after error, so we'll allow that to shift the current operation off of the queue\n    const operation = this.operationQueue.current(type);\n    if (operation) {\n      operation.onError(event);\n    }\n  }\n\n  // This method must result in an updateend event; if remove is not called, _onSBUpdateEnd must be called manually\n  private removeExecutor(\n    type: SourceBufferName,\n    startOffset: number,\n    endOffset: number\n  ) {\n    const { media, mediaSource, operationQueue, sourceBuffer } = this;\n    const sb = sourceBuffer[type];\n    if (!media || !mediaSource || !sb) {\n      logger.warn(\n        `[buffer-controller]: Attempting to remove from the ${type} SourceBuffer, but it does not exist`\n      );\n      operationQueue.shiftAndExecuteNext(type);\n      return;\n    }\n    const mediaDuration = Number.isFinite(media.duration)\n      ? media.duration\n      : Infinity;\n    const msDuration = Number.isFinite(mediaSource.duration)\n      ? mediaSource.duration\n      : Infinity;\n    const removeStart = Math.max(0, startOffset);\n    const removeEnd = Math.min(endOffset, mediaDuration, msDuration);\n    if (removeEnd > removeStart && !sb.ending) {\n      sb.ended = false;\n      logger.log(\n        `[buffer-controller]: Removing [${removeStart},${removeEnd}] from the ${type} SourceBuffer`\n      );\n      console.assert(!sb.updating, `${type} sourceBuffer must not be updating`);\n      sb.remove(removeStart, removeEnd);\n    } else {\n      // Cycle the queue\n      operationQueue.shiftAndExecuteNext(type);\n    }\n  }\n\n  // This method must result in an updateend event; if append is not called, _onSBUpdateEnd must be called manually\n  private appendExecutor(data: Uint8Array, type: SourceBufferName) {\n    const { operationQueue, sourceBuffer } = this;\n    const sb = sourceBuffer[type];\n    if (!sb) {\n      logger.warn(\n        `[buffer-controller]: Attempting to append to the ${type} SourceBuffer, but it does not exist`\n      );\n      operationQueue.shiftAndExecuteNext(type);\n      return;\n    }\n\n    sb.ended = false;\n    console.assert(!sb.updating, `${type} sourceBuffer must not be updating`);\n    sb.appendBuffer(data);\n  }\n\n  // Enqueues an operation to each SourceBuffer queue which, upon execution, resolves a promise. When all promises\n  // resolve, the onUnblocked function is executed. Functions calling this method do not need to unblock the queue\n  // upon completion, since we already do it here\n  private blockBuffers(\n    onUnblocked: () => void,\n    buffers: Array<SourceBufferName> = this.getSourceBufferTypes()\n  ) {\n    if (!buffers.length) {\n      logger.log(\n        '[buffer-controller]: Blocking operation requested, but no SourceBuffers exist'\n      );\n      Promise.resolve().then(onUnblocked);\n      return;\n    }\n    const { operationQueue } = this;\n\n    // logger.debug(`[buffer-controller]: Blocking ${buffers} SourceBuffer`);\n    const blockingOperations = buffers.map((type) =>\n      operationQueue.appendBlocker(type as SourceBufferName)\n    );\n    Promise.all(blockingOperations).then(() => {\n      // logger.debug(`[buffer-controller]: Blocking operation resolved; unblocking ${buffers} SourceBuffer`);\n      onUnblocked();\n      buffers.forEach((type) => {\n        const sb = this.sourceBuffer[type];\n        // Only cycle the queue if the SB is not updating. There's a bug in Chrome which sets the SB updating flag to\n        // true when changing the MediaSource duration (https://bugs.chromium.org/p/chromium/issues/detail?id=959359&can=2&q=mediasource%20duration)\n        // While this is a workaround, it's probably useful to have around\n        if (!sb || !sb.updating) {\n          operationQueue.shiftAndExecuteNext(type);\n        }\n      });\n    });\n  }\n\n  private getSourceBufferTypes(): Array<SourceBufferName> {\n    return Object.keys(this.sourceBuffer) as Array<SourceBufferName>;\n  }\n\n  private addBufferListener(\n    type: SourceBufferName,\n    event: string,\n    fn: Function\n  ) {\n    const buffer = this.sourceBuffer[type];\n    if (!buffer) {\n      return;\n    }\n    const listener = fn.bind(this, type);\n    this.listeners[type].push({ event, listener });\n    buffer.addEventListener(event, listener);\n  }\n\n  private removeBufferListeners(type: SourceBufferName) {\n    const buffer = this.sourceBuffer[type];\n    if (!buffer) {\n      return;\n    }\n    this.listeners[type].forEach((l) => {\n      buffer.removeEventListener(l.event, l.listener);\n    });\n  }\n}\n", "import { logger } from '../utils/logger';\nimport type {\n  BufferOperation,\n  BufferOperationQueues,\n  SourceBuffers,\n  SourceBufferName,\n} from '../types/buffer';\n\nexport default class BufferOperationQueue {\n  private buffers: SourceBuffers;\n  private queues: BufferOperationQueues = {\n    video: [],\n    audio: [],\n    audiovideo: [],\n  };\n\n  constructor(sourceBufferReference: SourceBuffers) {\n    this.buffers = sourceBufferReference;\n  }\n\n  public append(operation: BufferOperation, type: SourceBufferName) {\n    const queue = this.queues[type];\n    queue.push(operation);\n    if (queue.length === 1 && this.buffers[type]) {\n      this.executeNext(type);\n    }\n  }\n\n  public insertAbort(operation: BufferOperation, type: SourceBufferName) {\n    const queue = this.queues[type];\n    queue.unshift(operation);\n    this.executeNext(type);\n  }\n\n  public appendBlocker(type: SourceBufferName): Promise<{}> {\n    let execute;\n    const promise: Promise<{}> = new Promise((resolve) => {\n      execute = resolve;\n    });\n    const operation: BufferOperation = {\n      execute,\n      onStart: () => {},\n      onComplete: () => {},\n      onError: () => {},\n    };\n\n    this.append(operation, type);\n    return promise;\n  }\n\n  public executeNext(type: SourceBufferName) {\n    const { buffers, queues } = this;\n    const sb = buffers[type];\n    const queue = queues[type];\n    if (queue.length) {\n      const operation: BufferOperation = queue[0];\n      try {\n        // Operations are expected to result in an 'updateend' event being fired. If not, the queue will lock. Operations\n        // which do not end with this event must call _onSBUpdateEnd manually\n        operation.execute();\n      } catch (e) {\n        logger.warn(\n          '[buffer-operation-queue]: Unhandled exception executing the current operation'\n        );\n        operation.onError(e);\n\n        // Only shift the current operation off, otherwise the updateend handler will do this for us\n        if (!sb || !sb.updating) {\n          queue.shift();\n          this.executeNext(type);\n        }\n      }\n    }\n  }\n\n  public shiftAndExecuteNext(type: SourceBufferName) {\n    this.queues[type].shift();\n    this.executeNext(type);\n  }\n\n  public current(type: SourceBufferName) {\n    return this.queues[type][0];\n  }\n}\n", "/*\n * cap stream level to media size dimension controller\n */\n\nimport { Events } from '../events';\nimport type { Level } from '../types/level';\nimport type {\n  ManifestParsedData,\n  BufferCodecsData,\n  MediaAttachingData,\n  FPSDropLevelCappingData,\n} from '../types/events';\nimport StreamController from './stream-controller';\nimport type { ComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\n\nclass CapLevelController implements ComponentAPI {\n  public autoLevelCapping: number;\n  public firstLevel: number;\n  public media: HTMLVideoElement | null;\n  public restrictedLevels: Array<number>;\n  public timer: number | undefined;\n\n  private hls: Hls;\n  private streamController?: StreamController;\n  public clientRect: { width: number; height: number } | null;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    this.firstLevel = -1;\n    this.media = null;\n    this.restrictedLevels = [];\n    this.timer = undefined;\n    this.clientRect = null;\n\n    this.registerListeners();\n  }\n\n  public setStreamController(streamController: StreamController) {\n    this.streamController = streamController;\n  }\n\n  public destroy() {\n    this.unregisterListener();\n    if (this.hls.config.capLevelToPlayerSize) {\n      this.stopCapping();\n    }\n    this.media = null;\n    this.clientRect = null;\n    // @ts-ignore\n    this.hls = this.streamController = null;\n  }\n\n  protected registerListeners() {\n    const { hls } = this;\n    hls.on(Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this);\n    hls.on(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.on(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n  }\n\n  protected unregisterListener() {\n    const { hls } = this;\n    hls.off(Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this);\n    hls.off(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.off(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n  }\n\n  protected onFpsDropLevelCapping(\n    event: Events.FPS_DROP_LEVEL_CAPPING,\n    data: FPSDropLevelCappingData\n  ) {\n    // Don't add a restricted level more than once\n    if (\n      CapLevelController.isLevelAllowed(\n        data.droppedLevel,\n        this.restrictedLevels\n      )\n    ) {\n      this.restrictedLevels.push(data.droppedLevel);\n    }\n  }\n\n  protected onMediaAttaching(\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) {\n    this.media = data.media instanceof HTMLVideoElement ? data.media : null;\n    this.clientRect = null;\n  }\n\n  protected onManifestParsed(\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ) {\n    const hls = this.hls;\n    this.restrictedLevels = [];\n    this.firstLevel = data.firstLevel;\n    if (hls.config.capLevelToPlayerSize && data.video) {\n      // Start capping immediately if the manifest has signaled video codecs\n      this.startCapping();\n    }\n  }\n\n  // Only activate capping when playing a video stream; otherwise, multi-bitrate audio-only streams will be restricted\n  // to the first level\n  protected onBufferCodecs(\n    event: Events.BUFFER_CODECS,\n    data: BufferCodecsData\n  ) {\n    const hls = this.hls;\n    if (hls.config.capLevelToPlayerSize && data.video) {\n      // If the manifest did not signal a video codec capping has been deferred until we're certain video is present\n      this.startCapping();\n    }\n  }\n\n  protected onMediaDetaching() {\n    this.stopCapping();\n  }\n\n  detectPlayerSize() {\n    if (this.media && this.mediaHeight > 0 && this.mediaWidth > 0) {\n      const levels = this.hls.levels;\n      if (levels.length) {\n        const hls = this.hls;\n        hls.autoLevelCapping = this.getMaxLevel(levels.length - 1);\n        if (\n          hls.autoLevelCapping > this.autoLevelCapping &&\n          this.streamController\n        ) {\n          // if auto level capping has a higher value for the previous one, flush the buffer using nextLevelSwitch\n          // usually happen when the user go to the fullscreen mode.\n          this.streamController.nextLevelSwitch();\n        }\n        this.autoLevelCapping = hls.autoLevelCapping;\n      }\n    }\n  }\n\n  /*\n   * returns level should be the one with the dimensions equal or greater than the media (player) dimensions (so the video will be downscaled)\n   */\n  getMaxLevel(capLevelIndex: number): number {\n    const levels = this.hls.levels;\n    if (!levels.length) {\n      return -1;\n    }\n\n    const validLevels = levels.filter(\n      (level, index) =>\n        CapLevelController.isLevelAllowed(index, this.restrictedLevels) &&\n        index <= capLevelIndex\n    );\n\n    this.clientRect = null;\n    return CapLevelController.getMaxLevelByMediaSize(\n      validLevels,\n      this.mediaWidth,\n      this.mediaHeight\n    );\n  }\n\n  startCapping() {\n    if (this.timer) {\n      // Don't reset capping if started twice; this can happen if the manifest signals a video codec\n      return;\n    }\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    this.hls.firstLevel = this.getMaxLevel(this.firstLevel);\n    self.clearInterval(this.timer);\n    this.timer = self.setInterval(this.detectPlayerSize.bind(this), 1000);\n    this.detectPlayerSize();\n  }\n\n  stopCapping() {\n    this.restrictedLevels = [];\n    this.firstLevel = -1;\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    if (this.timer) {\n      self.clearInterval(this.timer);\n      this.timer = undefined;\n    }\n  }\n\n  getDimensions(): { width: number; height: number } {\n    if (this.clientRect) {\n      return this.clientRect;\n    }\n    const media = this.media;\n    const boundsRect = {\n      width: 0,\n      height: 0,\n    };\n\n    if (media) {\n      const clientRect = media.getBoundingClientRect();\n      boundsRect.width = clientRect.width;\n      boundsRect.height = clientRect.height;\n      if (!boundsRect.width && !boundsRect.height) {\n        // When the media element has no width or height (equivalent to not being in the DOM),\n        // then use its width and height attributes (media.width, media.height)\n        boundsRect.width =\n          clientRect.right - clientRect.left || media.width || 0;\n        boundsRect.height =\n          clientRect.bottom - clientRect.top || media.height || 0;\n      }\n    }\n    this.clientRect = boundsRect;\n    return boundsRect;\n  }\n\n  get mediaWidth(): number {\n    return this.getDimensions().width * this.contentScaleFactor;\n  }\n\n  get mediaHeight(): number {\n    return this.getDimensions().height * this.contentScaleFactor;\n  }\n\n  get contentScaleFactor(): number {\n    let pixelRatio = 1;\n    if (!this.hls.config.ignoreDevicePixelRatio) {\n      try {\n        pixelRatio = self.devicePixelRatio;\n      } catch (e) {\n        /* no-op */\n      }\n    }\n\n    return pixelRatio;\n  }\n\n  static isLevelAllowed(\n    level: number,\n    restrictedLevels: Array<number> = []\n  ): boolean {\n    return restrictedLevels.indexOf(level) === -1;\n  }\n\n  static getMaxLevelByMediaSize(\n    levels: Array<Level>,\n    width: number,\n    height: number\n  ): number {\n    if (!levels || !levels.length) {\n      return -1;\n    }\n\n    // Levels can have the same dimensions but differing bandwidths - since levels are ordered, we can look to the next\n    // to determine whether we've chosen the greatest bandwidth for the media's dimensions\n    const atGreatestBandwidth = (curLevel, nextLevel) => {\n      if (!nextLevel) {\n        return true;\n      }\n\n      return (\n        curLevel.width !== nextLevel.width ||\n        curLevel.height !== nextLevel.height\n      );\n    };\n\n    // If we run through the loop without breaking, the media's dimensions are greater than every level, so default to\n    // the max level\n    let maxLevelIndex = levels.length - 1;\n\n    for (let i = 0; i < levels.length; i += 1) {\n      const level = levels[i];\n      if (\n        (level.width >= width || level.height >= height) &&\n        atGreatestBandwidth(level, levels[i + 1])\n      ) {\n        maxLevelIndex = i;\n        break;\n      }\n    }\n\n    return maxLevelIndex;\n  }\n}\n\nexport default CapLevelController;\n", "import {\n  FragmentLoaderConstructor,\n  HlsConfig,\n  PlaylistLoaderConstructor,\n} from '../config';\nimport { Events } from '../events';\nimport Hls, { Fragment } from '../hls';\nimport {\n  CMCD,\n  CMCDHeaders,\n  CMCDObjectType,\n  CMCDStreamingFormat,\n  CMCDVersion,\n} from '../types/cmcd';\nimport { ComponentAPI } from '../types/component-api';\nimport { BufferCreatedData, MediaAttachedData } from '../types/events';\nimport {\n  FragmentLoaderContext,\n  Loader,\n  LoaderCallbacks,\n  LoaderConfiguration,\n  LoaderContext,\n  PlaylistLoaderContext,\n} from '../types/loader';\nimport { BufferHelper } from '../utils/buffer-helper';\nimport { logger } from '../utils/logger';\n\n/**\n * Controller to deal with Common Media Client Data (CMCD)\n * @see https://cdn.cta.tech/cta/media/media/resources/standards/pdfs/cta-5004-final.pdf\n */\nexport default class CMCDController implements ComponentAPI {\n  private hls: Hls;\n  private config: HlsConfig;\n  private media?: HTMLMediaElement;\n  private sid?: string;\n  private cid?: string;\n  private useHeaders: boolean = false;\n  private initialized: boolean = false;\n  private starved: boolean = false;\n  private buffering: boolean = true;\n  private audioBuffer?: SourceBuffer; // eslint-disable-line no-restricted-globals\n  private videoBuffer?: SourceBuffer; // eslint-disable-line no-restricted-globals\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    const config = (this.config = hls.config);\n    const { cmcd } = config;\n\n    if (cmcd != null) {\n      config.pLoader = this.createPlaylistLoader();\n      config.fLoader = this.createFragmentLoader();\n\n      this.sid = cmcd.sessionId || CMCDController.uuid();\n      this.cid = cmcd.contentId;\n      this.useHeaders = cmcd.useHeaders === true;\n      this.registerListeners();\n    }\n  }\n\n  private registerListeners() {\n    const hls = this.hls;\n    hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.on(Events.MEDIA_DETACHED, this.onMediaDetached, this);\n    hls.on(Events.BUFFER_CREATED, this.onBufferCreated, this);\n  }\n\n  private unregisterListeners() {\n    const hls = this.hls;\n    hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.off(Events.MEDIA_DETACHED, this.onMediaDetached, this);\n    hls.off(Events.BUFFER_CREATED, this.onBufferCreated, this);\n\n    this.onMediaDetached();\n  }\n\n  destroy() {\n    this.unregisterListeners();\n\n    // @ts-ignore\n    this.hls = this.config = this.audioBuffer = this.videoBuffer = null;\n  }\n\n  private onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachedData\n  ) {\n    this.media = data.media;\n    this.media.addEventListener('waiting', this.onWaiting);\n    this.media.addEventListener('playing', this.onPlaying);\n  }\n\n  private onMediaDetached() {\n    if (!this.media) {\n      return;\n    }\n\n    this.media.removeEventListener('waiting', this.onWaiting);\n    this.media.removeEventListener('playing', this.onPlaying);\n\n    // @ts-ignore\n    this.media = null;\n  }\n\n  private onBufferCreated(\n    event: Events.BUFFER_CREATED,\n    data: BufferCreatedData\n  ) {\n    this.audioBuffer = data.tracks.audio?.buffer;\n    this.videoBuffer = data.tracks.video?.buffer;\n  }\n\n  private onWaiting = () => {\n    if (this.initialized) {\n      this.starved = true;\n    }\n\n    this.buffering = true;\n  };\n\n  private onPlaying = () => {\n    if (!this.initialized) {\n      this.initialized = true;\n    }\n\n    this.buffering = false;\n  };\n\n  /**\n   * Create baseline CMCD data\n   */\n  private createData(): CMCD {\n    return {\n      v: CMCDVersion,\n      sf: CMCDStreamingFormat.HLS,\n      sid: this.sid,\n      cid: this.cid,\n      pr: this.media?.playbackRate,\n      mtp: this.hls.bandwidthEstimate / 1000,\n    };\n  }\n\n  /**\n   * Apply CMCD data to a request.\n   */\n  private apply(context: LoaderContext, data: CMCD = {}) {\n    // apply baseline data\n    Object.assign(data, this.createData());\n\n    const isVideo =\n      data.ot === CMCDObjectType.INIT ||\n      data.ot === CMCDObjectType.VIDEO ||\n      data.ot === CMCDObjectType.MUXED;\n\n    if (this.starved && isVideo) {\n      data.bs = true;\n      data.su = true;\n      this.starved = false;\n    }\n\n    if (data.su == null) {\n      data.su = this.buffering;\n    }\n\n    // TODO: Implement rtp, nrr, nor, dl\n\n    if (this.useHeaders) {\n      const headers = CMCDController.toHeaders(data);\n      if (!Object.keys(headers).length) {\n        return;\n      }\n\n      if (!context.headers) {\n        context.headers = {};\n      }\n\n      Object.assign(context.headers, headers);\n    } else {\n      const query = CMCDController.toQuery(data);\n      if (!query) {\n        return;\n      }\n\n      context.url = CMCDController.appendQueryToUri(context.url, query);\n    }\n  }\n\n  /**\n   * Apply CMCD data to a manifest request.\n   */\n  private applyPlaylistData = (context: PlaylistLoaderContext) => {\n    try {\n      this.apply(context, {\n        ot: CMCDObjectType.MANIFEST,\n        su: !this.initialized,\n      });\n    } catch (error) {\n      logger.warn('Could not generate manifest CMCD data.', error);\n    }\n  };\n\n  /**\n   * Apply CMCD data to a segment request\n   */\n  private applyFragmentData = (context: FragmentLoaderContext) => {\n    try {\n      const fragment = context.frag;\n      const level = this.hls.levels[fragment.level];\n      const ot = this.getObjectType(fragment);\n      const data: CMCD = {\n        d: fragment.duration * 1000,\n        ot,\n      };\n\n      if (\n        ot === CMCDObjectType.VIDEO ||\n        ot === CMCDObjectType.AUDIO ||\n        ot == CMCDObjectType.MUXED\n      ) {\n        data.br = level.bitrate / 1000;\n        data.tb = this.getTopBandwidth(ot) / 1000;\n        data.bl = this.getBufferLength(ot);\n      }\n\n      this.apply(context, data);\n    } catch (error) {\n      logger.warn('Could not generate segment CMCD data.', error);\n    }\n  };\n\n  /**\n   * The CMCD object type.\n   */\n  private getObjectType(fragment: Fragment): CMCDObjectType | undefined {\n    const { type } = fragment;\n\n    if (type === 'subtitle') {\n      return CMCDObjectType.TIMED_TEXT;\n    }\n\n    if (fragment.sn === 'initSegment') {\n      return CMCDObjectType.INIT;\n    }\n\n    if (type === 'audio') {\n      return CMCDObjectType.AUDIO;\n    }\n\n    if (type === 'main') {\n      if (!this.hls.audioTracks.length) {\n        return CMCDObjectType.MUXED;\n      }\n\n      return CMCDObjectType.VIDEO;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Get the highest bitrate.\n   */\n  private getTopBandwidth(type: CMCDObjectType) {\n    let bitrate: number = 0;\n    let levels;\n    const hls = this.hls;\n\n    if (type === CMCDObjectType.AUDIO) {\n      levels = hls.audioTracks;\n    } else {\n      const max = hls.maxAutoLevel;\n      const len = max > -1 ? max + 1 : hls.levels.length;\n      levels = hls.levels.slice(0, len);\n    }\n\n    for (const level of levels) {\n      if (level.bitrate > bitrate) {\n        bitrate = level.bitrate;\n      }\n    }\n\n    return bitrate > 0 ? bitrate : NaN;\n  }\n\n  /**\n   * Get the buffer length for a media type in milliseconds\n   */\n  private getBufferLength(type: CMCDObjectType) {\n    const media = this.hls.media;\n    const buffer =\n      type === CMCDObjectType.AUDIO ? this.audioBuffer : this.videoBuffer;\n\n    if (!buffer || !media) {\n      return NaN;\n    }\n\n    const info = BufferHelper.bufferInfo(\n      buffer,\n      media.currentTime,\n      this.config.maxBufferHole\n    );\n\n    return info.len * 1000;\n  }\n\n  /**\n   * Create a playlist loader\n   */\n  private createPlaylistLoader(): PlaylistLoaderConstructor | undefined {\n    const { pLoader } = this.config;\n    const apply = this.applyPlaylistData;\n    const Ctor = pLoader || (this.config.loader as PlaylistLoaderConstructor);\n\n    return class CmcdPlaylistLoader {\n      private loader: Loader<PlaylistLoaderContext>;\n\n      constructor(config: HlsConfig) {\n        this.loader = new Ctor(config);\n      }\n\n      get stats() {\n        return this.loader.stats;\n      }\n\n      get context() {\n        return this.loader.context;\n      }\n\n      destroy() {\n        this.loader.destroy();\n      }\n\n      abort() {\n        this.loader.abort();\n      }\n\n      load(\n        context: PlaylistLoaderContext,\n        config: LoaderConfiguration,\n        callbacks: LoaderCallbacks<PlaylistLoaderContext>\n      ) {\n        apply(context);\n        this.loader.load(context, config, callbacks);\n      }\n    };\n  }\n\n  /**\n   * Create a playlist loader\n   */\n  private createFragmentLoader(): FragmentLoaderConstructor | undefined {\n    const { fLoader } = this.config;\n    const apply = this.applyFragmentData;\n    const Ctor = fLoader || (this.config.loader as FragmentLoaderConstructor);\n\n    return class CmcdFragmentLoader {\n      private loader: Loader<FragmentLoaderContext>;\n\n      constructor(config: HlsConfig) {\n        this.loader = new Ctor(config);\n      }\n\n      get stats() {\n        return this.loader.stats;\n      }\n\n      get context() {\n        return this.loader.context;\n      }\n\n      destroy() {\n        this.loader.destroy();\n      }\n\n      abort() {\n        this.loader.abort();\n      }\n\n      load(\n        context: FragmentLoaderContext,\n        config: LoaderConfiguration,\n        callbacks: LoaderCallbacks<FragmentLoaderContext>\n      ) {\n        apply(context);\n        this.loader.load(context, config, callbacks);\n      }\n    };\n  }\n\n  /**\n   * Generate a random v4 UUI\n   *\n   * @returns {string}\n   */\n  static uuid(): string {\n    const url = URL.createObjectURL(new Blob());\n    const uuid = url.toString();\n    URL.revokeObjectURL(url);\n    return uuid.slice(uuid.lastIndexOf('/') + 1);\n  }\n\n  /**\n   * Serialize a CMCD data object according to the rules defined in the\n   * section 3.2 of\n   * [CTA-5004](https://cdn.cta.tech/cta/media/media/resources/standards/pdfs/cta-5004-final.pdf).\n   */\n  static serialize(data: CMCD): string {\n    const results: string[] = [];\n    const isValid = (value: any) =>\n      !Number.isNaN(value) && value != null && value !== '' && value !== false;\n    const toRounded = (value: number) => Math.round(value);\n    const toHundred = (value: number) => toRounded(value / 100) * 100;\n    const toUrlSafe = (value: string) => encodeURIComponent(value);\n    const formatters = {\n      br: toRounded,\n      d: toRounded,\n      bl: toHundred,\n      dl: toHundred,\n      mtp: toHundred,\n      nor: toUrlSafe,\n      rtp: toHundred,\n      tb: toRounded,\n    };\n\n    const keys = Object.keys(data || {}).sort();\n\n    for (const key of keys) {\n      let value = data[key];\n\n      // ignore invalid values\n      if (!isValid(value)) {\n        continue;\n      }\n\n      // Version should only be reported if not equal to 1.\n      if (key === 'v' && value === 1) {\n        continue;\n      }\n\n      // Playback rate should only be sent if not equal to 1.\n      if (key == 'pr' && value === 1) {\n        continue;\n      }\n\n      // Certain values require special formatting\n      const formatter = formatters[key];\n      if (formatter) {\n        value = formatter(value);\n      }\n\n      // Serialize the key/value pair\n      const type = typeof value;\n      let result: string;\n\n      if (key === 'ot' || key === 'sf' || key === 'st') {\n        result = `${key}=${value}`;\n      } else if (type === 'boolean') {\n        result = key;\n      } else if (type === 'number') {\n        result = `${key}=${value}`;\n      } else {\n        result = `${key}=${JSON.stringify(value)}`;\n      }\n\n      results.push(result);\n    }\n\n    return results.join(',');\n  }\n\n  /**\n   * Convert a CMCD data object to request headers according to the rules\n   * defined in the section 2.1 and 3.2 of\n   * [CTA-5004](https://cdn.cta.tech/cta/media/media/resources/standards/pdfs/cta-5004-final.pdf).\n   */\n  static toHeaders(data: CMCD): Partial<CMCDHeaders> {\n    const keys = Object.keys(data);\n    const headers = {};\n    const headerNames = ['Object', 'Request', 'Session', 'Status'];\n    const headerGroups = [{}, {}, {}, {}];\n    const headerMap = {\n      br: 0,\n      d: 0,\n      ot: 0,\n      tb: 0,\n      bl: 1,\n      dl: 1,\n      mtp: 1,\n      nor: 1,\n      nrr: 1,\n      su: 1,\n      cid: 2,\n      pr: 2,\n      sf: 2,\n      sid: 2,\n      st: 2,\n      v: 2,\n      bs: 3,\n      rtp: 3,\n    };\n\n    for (const key of keys) {\n      // Unmapped fields are mapped to the Request header\n      const index = headerMap[key] != null ? headerMap[key] : 1;\n      headerGroups[index][key] = data[key];\n    }\n\n    for (let i = 0; i < headerGroups.length; i++) {\n      const value = CMCDController.serialize(headerGroups[i]);\n      if (value) {\n        headers[`CMCD-${headerNames[i]}`] = value;\n      }\n    }\n\n    return headers;\n  }\n\n  /**\n   * Convert a CMCD data object to query args according to the rules\n   * defined in the section 2.2 and 3.2 of\n   * [CTA-5004](https://cdn.cta.tech/cta/media/media/resources/standards/pdfs/cta-5004-final.pdf).\n   */\n  static toQuery(data: CMCD): string {\n    return `CMCD=${encodeURIComponent(CMCDController.serialize(data))}`;\n  }\n\n  /**\n   * Append query args to a uri.\n   */\n  static appendQueryToUri(uri, query) {\n    if (!query) {\n      return uri;\n    }\n\n    const separator = uri.includes('?') ? '&' : '?';\n    return `${uri}${separator}${query}`;\n  }\n}\n", "/**\n * @author Stephan Hesse <disparat@gmail.com> | <tchakabam@gmail.com>\n *\n * DRM support for Hls.js\n */\nimport { Events } from '../events';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport { logger } from '../utils/logger';\nimport {\n  getKeySystemsForConfig,\n  getSupportedMediaKeySystemConfigurations,\n  keySystemDomainToKeySystemFormat as keySystemToKeySystemFormat,\n  KeySystemFormats,\n  keySystemFormatToKeySystemDomain,\n  KeySystemIds,\n  keySystemIdToKeySystemDomain,\n} from '../utils/mediakeys-helper';\nimport {\n  KeySystems,\n  requestMediaKeySystemAccess,\n} from '../utils/mediakeys-helper';\nimport { strToUtf8array } from '../utils/keysystem-util';\nimport { base64Decode } from '../utils/numeric-encoding-utils';\nimport { DecryptData, LevelKey } from '../loader/level-key';\nimport Hex from '../utils/hex';\nimport { bin2str, parsePssh, parseSinf } from '../utils/mp4-tools';\nimport EventEmitter from 'eventemitter3';\nimport type Hls from '../hls';\nimport type { ComponentAPI } from '../types/component-api';\nimport type {\n  MediaAttachedData,\n  KeyLoadedData,\n  ErrorData,\n  ManifestLoadedData,\n} from '../types/events';\nimport type { EMEControllerConfig } from '../config';\nimport type { Fragment } from '../loader/fragment';\n\nconst MAX_LICENSE_REQUEST_FAILURES = 3;\nconst LOGGER_PREFIX = '[eme]';\n\ninterface KeySystemAccessPromises {\n  keySystemAccess: Promise<MediaKeySystemAccess>;\n  mediaKeys?: Promise<MediaKeys>;\n  certificate?: Promise<BufferSource | void>;\n}\n\nexport interface MediaKeySessionContext {\n  keySystem: KeySystems;\n  mediaKeys: MediaKeys;\n  decryptdata: LevelKey;\n  mediaKeysSession: MediaKeySession;\n  keyStatus: MediaKeyStatus;\n  licenseXhr?: XMLHttpRequest;\n}\n\n/**\n * Controller to deal with encrypted media extensions (EME)\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Encrypted_Media_Extensions_API\n *\n * @class\n * @constructor\n */\nclass EMEController implements ComponentAPI {\n  public static CDMCleanupPromise: Promise<void> | void;\n\n  private readonly hls: Hls;\n  private readonly config: EMEControllerConfig;\n  private media: HTMLMediaElement | null = null;\n  private keyFormatPromise: Promise<KeySystemFormats> | null = null;\n  private keySystemAccessPromises: {\n    [keysystem: string]: KeySystemAccessPromises;\n  } = {};\n  private _requestLicenseFailureCount: number = 0;\n  private mediaKeySessions: MediaKeySessionContext[] = [];\n  private keyIdToKeySessionPromise: {\n    [keyId: string]: Promise<MediaKeySessionContext>;\n  } = {};\n  private setMediaKeysQueue: Promise<void>[] = EMEController.CDMCleanupPromise\n    ? [EMEController.CDMCleanupPromise]\n    : [];\n  private onMediaEncrypted = this._onMediaEncrypted.bind(this);\n  private onWaitingForKey = this._onWaitingForKey.bind(this);\n\n  private debug: (msg: any) => void = logger.debug.bind(logger, LOGGER_PREFIX);\n  private log: (msg: any) => void = logger.log.bind(logger, LOGGER_PREFIX);\n  private warn: (msg: any) => void = logger.warn.bind(logger, LOGGER_PREFIX);\n  private error: (msg: any) => void = logger.error.bind(logger, LOGGER_PREFIX);\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this.config = hls.config;\n    this.registerListeners();\n  }\n\n  public destroy() {\n    this.unregisterListeners();\n    this.onMediaDetached();\n    // @ts-ignore\n    this.hls =\n      this.onMediaEncrypted =\n      this.onWaitingForKey =\n      this.keyIdToKeySessionPromise =\n        null as any;\n  }\n\n  private registerListeners() {\n    this.hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    this.hls.on(Events.MEDIA_DETACHED, this.onMediaDetached, this);\n    this.hls.on(Events.MANIFEST_LOADED, this.onManifestLoaded, this);\n  }\n\n  private unregisterListeners() {\n    this.hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    this.hls.off(Events.MEDIA_DETACHED, this.onMediaDetached, this);\n    this.hls.off(Events.MANIFEST_LOADED, this.onManifestLoaded, this);\n  }\n\n  private getLicenseServerUrl(keySystem: KeySystems): string | never {\n    const { drmSystems, widevineLicenseUrl } = this.config;\n    const keySystemConfiguration = drmSystems[keySystem];\n\n    if (keySystemConfiguration) {\n      return keySystemConfiguration.licenseUrl;\n    }\n\n    // For backward compatibility\n    if (keySystem === KeySystems.WIDEVINE && widevineLicenseUrl) {\n      return widevineLicenseUrl;\n    }\n\n    throw new Error(\n      `no license server URL configured for key-system \"${keySystem}\"`\n    );\n  }\n\n  private getServerCertificateUrl(keySystem: KeySystems): string | void {\n    const { drmSystems } = this.config;\n    const keySystemConfiguration = drmSystems[keySystem];\n\n    if (keySystemConfiguration) {\n      return keySystemConfiguration.serverCertificateUrl;\n    } else {\n      this.log(`No Server Certificate in config.drmSystems[\"${keySystem}\"]`);\n    }\n  }\n\n  private attemptKeySystemAccess(\n    keySystemsToAttempt: KeySystems[]\n  ): Promise<{ keySystem: KeySystems; mediaKeys: MediaKeys }> {\n    const levels = this.hls.levels;\n    const uniqueCodec = (value: string | undefined, i, a): value is string =>\n      !!value && a.indexOf(value) === i;\n    const audioCodecs = levels\n      .map((level) => level.audioCodec)\n      .filter(uniqueCodec);\n    const videoCodecs = levels\n      .map((level) => level.videoCodec)\n      .filter(uniqueCodec);\n    if (audioCodecs.length + videoCodecs.length === 0) {\n      videoCodecs.push('avc1.42e01e');\n    }\n\n    return new Promise(\n      (\n        resolve: (result: {\n          keySystem: KeySystems;\n          mediaKeys: MediaKeys;\n        }) => void,\n        reject: (Error) => void\n      ) => {\n        const attempt = (keySystems) => {\n          const keySystem = keySystems.shift();\n          this.getMediaKeysPromise(keySystem, audioCodecs, videoCodecs)\n            .then((mediaKeys) => resolve({ keySystem, mediaKeys }))\n            .catch((error) => {\n              if (keySystems.length) {\n                attempt(keySystems);\n              } else if (error instanceof EMEKeyError) {\n                reject(error);\n              } else {\n                reject(\n                  new EMEKeyError(\n                    {\n                      type: ErrorTypes.KEY_SYSTEM_ERROR,\n                      details: ErrorDetails.KEY_SYSTEM_NO_ACCESS,\n                      error,\n                      fatal: true,\n                    },\n                    error.message\n                  )\n                );\n              }\n            });\n        };\n        attempt(keySystemsToAttempt);\n      }\n    );\n  }\n\n  private requestMediaKeySystemAccess(\n    keySystem: KeySystems,\n    supportedConfigurations: MediaKeySystemConfiguration[]\n  ): Promise<MediaKeySystemAccess> {\n    const { requestMediaKeySystemAccessFunc } = this.config;\n    if (!(typeof requestMediaKeySystemAccessFunc === 'function')) {\n      let errMessage = `Configured requestMediaKeySystemAccess is not a function ${requestMediaKeySystemAccessFunc}`;\n      if (\n        requestMediaKeySystemAccess === null &&\n        self.location.protocol === 'http:'\n      ) {\n        errMessage = `navigator.requestMediaKeySystemAccess is not available over insecure protocol ${location.protocol}`;\n      }\n      return Promise.reject(new Error(errMessage));\n    }\n\n    return requestMediaKeySystemAccessFunc(keySystem, supportedConfigurations);\n  }\n\n  private getMediaKeysPromise(\n    keySystem: KeySystems,\n    audioCodecs: string[],\n    videoCodecs: string[]\n  ): Promise<MediaKeys> {\n    // This can throw, but is caught in event handler callpath\n    const mediaKeySystemConfigs = getSupportedMediaKeySystemConfigurations(\n      keySystem,\n      audioCodecs,\n      videoCodecs,\n      this.config.drmSystemOptions\n    );\n    const keySystemAccessPromises: KeySystemAccessPromises =\n      this.keySystemAccessPromises[keySystem];\n    let keySystemAccess = keySystemAccessPromises?.keySystemAccess;\n    if (!keySystemAccess) {\n      this.log(\n        `Requesting encrypted media \"${keySystem}\" key-system access with config: ${JSON.stringify(\n          mediaKeySystemConfigs\n        )}`\n      );\n      keySystemAccess = this.requestMediaKeySystemAccess(\n        keySystem,\n        mediaKeySystemConfigs\n      );\n      const keySystemAccessPromises: KeySystemAccessPromises =\n        (this.keySystemAccessPromises[keySystem] = {\n          keySystemAccess,\n        });\n      keySystemAccess.catch((error) => {\n        this.log(\n          `Failed to obtain access to key-system \"${keySystem}\": ${error}`\n        );\n      });\n      return keySystemAccess.then((mediaKeySystemAccess) => {\n        this.log(\n          `Access for key-system \"${mediaKeySystemAccess.keySystem}\" obtained`\n        );\n\n        const certificateRequest = this.fetchServerCertificate(keySystem);\n\n        this.log(`Create media-keys for \"${keySystem}\"`);\n        keySystemAccessPromises.mediaKeys = mediaKeySystemAccess\n          .createMediaKeys()\n          .then((mediaKeys) => {\n            this.log(`Media-keys created for \"${keySystem}\"`);\n            return certificateRequest.then((certificate) => {\n              if (certificate) {\n                return this.setMediaKeysServerCertificate(\n                  mediaKeys,\n                  keySystem,\n                  certificate\n                );\n              }\n              return mediaKeys;\n            });\n          });\n\n        keySystemAccessPromises.mediaKeys.catch((error) => {\n          this.error(\n            `Failed to create media-keys for \"${keySystem}\"}: ${error}`\n          );\n        });\n\n        return keySystemAccessPromises.mediaKeys;\n      });\n    }\n    return keySystemAccess.then(() => keySystemAccessPromises.mediaKeys!);\n  }\n\n  private createMediaKeySessionContext({\n    decryptdata,\n    keySystem,\n    mediaKeys,\n  }: {\n    decryptdata: LevelKey;\n    keySystem: KeySystems;\n    mediaKeys: MediaKeys;\n  }): MediaKeySessionContext {\n    console.assert(!!mediaKeys, 'mediaKeys is defined');\n\n    this.log(\n      `Creating key-system session \"${keySystem}\" keyId: ${Hex.hexDump(\n        decryptdata.keyId! || []\n      )}`\n    );\n\n    const mediaKeysSession = mediaKeys.createSession();\n\n    const mediaKeySessionContext: MediaKeySessionContext = {\n      decryptdata,\n      keySystem,\n      mediaKeys,\n      mediaKeysSession,\n      keyStatus: 'status-pending',\n    };\n\n    this.mediaKeySessions.push(mediaKeySessionContext);\n\n    return mediaKeySessionContext;\n  }\n\n  private renewKeySession(mediaKeySessionContext: MediaKeySessionContext) {\n    const decryptdata = mediaKeySessionContext.decryptdata;\n    if (decryptdata.pssh) {\n      const keySessionContext = this.createMediaKeySessionContext(\n        mediaKeySessionContext\n      );\n      const keyId = this.getKeyIdString(decryptdata);\n      const scheme = 'cenc';\n      this.keyIdToKeySessionPromise[keyId] =\n        this.generateRequestWithPreferredKeySession(\n          keySessionContext,\n          scheme,\n          decryptdata.pssh,\n          'expired'\n        );\n    } else {\n      this.warn(`Could not renew expired session. Missing pssh initData.`);\n    }\n    this.removeSession(mediaKeySessionContext);\n  }\n\n  private getKeyIdString(decryptdata: DecryptData | undefined): string | never {\n    if (!decryptdata) {\n      throw new Error('Could not read keyId of undefined decryptdata');\n    }\n    if (decryptdata.keyId === null) {\n      throw new Error('keyId is null');\n    }\n    return Hex.hexDump(decryptdata.keyId);\n  }\n\n  private updateKeySession(\n    mediaKeySessionContext: MediaKeySessionContext,\n    data: Uint8Array\n  ): Promise<void> {\n    const keySession = mediaKeySessionContext.mediaKeysSession;\n    this.log(\n      `Updating key-session \"${keySession.sessionId}\" for keyID ${Hex.hexDump(\n        mediaKeySessionContext.decryptdata?.keyId! || []\n      )}\n      } (data length: ${data ? data.byteLength : data})`\n    );\n    return keySession.update(data);\n  }\n\n  public selectKeySystemFormat(frag: Fragment): Promise<KeySystemFormats> {\n    const keyFormats = Object.keys(frag.levelkeys || {}) as KeySystemFormats[];\n    if (!this.keyFormatPromise) {\n      this.log(\n        `Selecting key-system from fragment (sn: ${frag.sn} ${frag.type}: ${\n          frag.level\n        }) key formats ${keyFormats.join(', ')}`\n      );\n      this.keyFormatPromise = this.getKeyFormatPromise(keyFormats);\n    }\n    return this.keyFormatPromise;\n  }\n\n  private getKeyFormatPromise(\n    keyFormats: KeySystemFormats[]\n  ): Promise<KeySystemFormats> {\n    return new Promise((resolve, reject) => {\n      const keySystemsInConfig = getKeySystemsForConfig(this.config);\n      const keySystemsToAttempt = keyFormats\n        .map(keySystemFormatToKeySystemDomain)\n        .filter(\n          (value) => !!value && keySystemsInConfig.indexOf(value) !== -1\n        ) as any as KeySystems[];\n      return this.getKeySystemSelectionPromise(keySystemsToAttempt)\n        .then(({ keySystem }) => {\n          const keySystemFormat = keySystemToKeySystemFormat(keySystem);\n          if (keySystemFormat) {\n            resolve(keySystemFormat);\n          } else {\n            reject(\n              new Error(`Unable to find format for key-system \"${keySystem}\"`)\n            );\n          }\n        })\n        .catch(reject);\n    });\n  }\n\n  public loadKey(data: KeyLoadedData): Promise<MediaKeySessionContext> {\n    const decryptdata = data.keyInfo.decryptdata;\n\n    const keyId = this.getKeyIdString(decryptdata);\n    const keyDetails = `(keyId: ${keyId} format: \"${decryptdata.keyFormat}\" method: ${decryptdata.method} uri: ${decryptdata.uri})`;\n\n    this.log(`Starting session for key ${keyDetails}`);\n\n    let keySessionContextPromise = this.keyIdToKeySessionPromise[keyId];\n    if (!keySessionContextPromise) {\n      keySessionContextPromise = this.keyIdToKeySessionPromise[keyId] =\n        this.getKeySystemForKeyPromise(decryptdata).then(\n          ({ keySystem, mediaKeys }) => {\n            this.throwIfDestroyed();\n            this.log(\n              `Handle encrypted media sn: ${data.frag.sn} ${data.frag.type}: ${data.frag.level} using key ${keyDetails}`\n            );\n\n            return this.attemptSetMediaKeys(keySystem, mediaKeys).then(() => {\n              this.throwIfDestroyed();\n              const keySessionContext = this.createMediaKeySessionContext({\n                keySystem,\n                mediaKeys,\n                decryptdata,\n              });\n              const scheme = 'cenc';\n              return this.generateRequestWithPreferredKeySession(\n                keySessionContext,\n                scheme,\n                decryptdata.pssh,\n                'playlist-key'\n              );\n            });\n          }\n        );\n\n      keySessionContextPromise.catch((error) => this.handleError(error));\n    }\n\n    return keySessionContextPromise;\n  }\n\n  private throwIfDestroyed(message = 'Invalid state'): void | never {\n    if (!this.hls) {\n      throw new Error('invalid state');\n    }\n  }\n\n  private handleError(error: EMEKeyError | Error) {\n    if (!this.hls) {\n      return;\n    }\n    this.error(error.message);\n    if (error instanceof EMEKeyError) {\n      this.hls.trigger(Events.ERROR, error.data);\n    } else {\n      this.hls.trigger(Events.ERROR, {\n        type: ErrorTypes.KEY_SYSTEM_ERROR,\n        details: ErrorDetails.KEY_SYSTEM_NO_KEYS,\n        error,\n        fatal: true,\n      });\n    }\n  }\n\n  private getKeySystemForKeyPromise(\n    decryptdata: LevelKey\n  ): Promise<{ keySystem: KeySystems; mediaKeys: MediaKeys }> {\n    const keyId = this.getKeyIdString(decryptdata);\n    const mediaKeySessionContext = this.keyIdToKeySessionPromise[keyId];\n    if (!mediaKeySessionContext) {\n      const keySystem = keySystemFormatToKeySystemDomain(\n        decryptdata.keyFormat as KeySystemFormats\n      );\n      const keySystemsToAttempt = keySystem\n        ? [keySystem]\n        : getKeySystemsForConfig(this.config);\n      return this.attemptKeySystemAccess(keySystemsToAttempt);\n    }\n    return mediaKeySessionContext;\n  }\n\n  private getKeySystemSelectionPromise(\n    keySystemsToAttempt: KeySystems[]\n  ): Promise<{ keySystem: KeySystems; mediaKeys: MediaKeys }> | never {\n    if (!keySystemsToAttempt.length) {\n      keySystemsToAttempt = getKeySystemsForConfig(this.config);\n    }\n    if (keySystemsToAttempt.length === 0) {\n      throw new EMEKeyError(\n        {\n          type: ErrorTypes.KEY_SYSTEM_ERROR,\n          details: ErrorDetails.KEY_SYSTEM_NO_CONFIGURED_LICENSE,\n          fatal: true,\n        },\n        `Missing key-system license configuration options ${JSON.stringify({\n          drmSystems: this.config.drmSystems,\n        })}`\n      );\n    }\n    return this.attemptKeySystemAccess(keySystemsToAttempt);\n  }\n\n  private _onMediaEncrypted(event: MediaEncryptedEvent) {\n    const { initDataType, initData } = event;\n    this.debug(`\"${event.type}\" event: init data type: \"${initDataType}\"`);\n\n    // Ignore event when initData is null\n    if (initData === null) {\n      return;\n    }\n\n    let keyId: Uint8Array | undefined;\n    let keySystemDomain: KeySystems | undefined;\n\n    if (\n      initDataType === 'sinf' &&\n      this.config.drmSystems[KeySystems.FAIRPLAY]\n    ) {\n      // Match sinf keyId to playlist skd://keyId=\n      const json = bin2str(new Uint8Array(initData));\n      try {\n        const sinf = base64Decode(JSON.parse(json).sinf);\n        const tenc = parseSinf(new Uint8Array(sinf));\n        if (!tenc) {\n          return;\n        }\n        keyId = tenc.subarray(8, 24);\n        keySystemDomain = KeySystems.FAIRPLAY;\n      } catch (error) {\n        this.warn('Failed to parse sinf \"encrypted\" event message initData');\n        return;\n      }\n    } else {\n      // Support clear-lead key-session creation (otherwise depend on playlist keys)\n      const psshInfo = parsePssh(initData);\n      if (psshInfo === null) {\n        return;\n      }\n      if (\n        psshInfo.version === 0 &&\n        psshInfo.systemId === KeySystemIds.WIDEVINE &&\n        psshInfo.data\n      ) {\n        keyId = psshInfo.data.subarray(8, 24);\n      }\n      keySystemDomain = keySystemIdToKeySystemDomain(\n        psshInfo.systemId as KeySystemIds\n      );\n    }\n\n    if (!keySystemDomain || !keyId) {\n      return;\n    }\n\n    const keyIdHex = Hex.hexDump(keyId);\n    const { keyIdToKeySessionPromise, mediaKeySessions } = this;\n\n    let keySessionContextPromise = keyIdToKeySessionPromise[keyIdHex];\n    for (let i = 0; i < mediaKeySessions.length; i++) {\n      // Match playlist key\n      const keyContext = mediaKeySessions[i];\n      const decryptdata = keyContext.decryptdata;\n      if (decryptdata.pssh || !decryptdata.keyId) {\n        continue;\n      }\n      const oldKeyIdHex = Hex.hexDump(decryptdata.keyId);\n      if (\n        keyIdHex === oldKeyIdHex ||\n        decryptdata.uri.replace(/-/g, '').indexOf(keyIdHex) !== -1\n      ) {\n        keySessionContextPromise = keyIdToKeySessionPromise[oldKeyIdHex];\n        delete keyIdToKeySessionPromise[oldKeyIdHex];\n        decryptdata.pssh = new Uint8Array(initData);\n        decryptdata.keyId = keyId;\n        keySessionContextPromise = keyIdToKeySessionPromise[keyIdHex] =\n          keySessionContextPromise.then(() => {\n            return this.generateRequestWithPreferredKeySession(\n              keyContext,\n              initDataType,\n              initData,\n              'encrypted-event-key-match'\n            );\n          });\n        break;\n      }\n    }\n\n    if (!keySessionContextPromise) {\n      // Clear-lead key (not encountered in playlist)\n      keySessionContextPromise = keyIdToKeySessionPromise[keyIdHex] =\n        this.getKeySystemSelectionPromise([keySystemDomain]).then(\n          ({ keySystem, mediaKeys }) => {\n            this.throwIfDestroyed();\n            const decryptdata = new LevelKey(\n              'ISO-23001-7',\n              keyIdHex,\n              keySystemToKeySystemFormat(keySystem) ?? ''\n            );\n            decryptdata.pssh = new Uint8Array(initData);\n            decryptdata.keyId = keyId as Uint8Array;\n            return this.attemptSetMediaKeys(keySystem, mediaKeys).then(() => {\n              this.throwIfDestroyed();\n              const keySessionContext = this.createMediaKeySessionContext({\n                decryptdata,\n                keySystem,\n                mediaKeys,\n              });\n              return this.generateRequestWithPreferredKeySession(\n                keySessionContext,\n                initDataType,\n                initData,\n                'encrypted-event-no-match'\n              );\n            });\n          }\n        );\n    }\n    keySessionContextPromise.catch((error) => this.handleError(error));\n  }\n\n  private _onWaitingForKey(event: Event) {\n    this.log(`\"${event.type}\" event`);\n  }\n\n  private attemptSetMediaKeys(\n    keySystem: KeySystems,\n    mediaKeys: MediaKeys\n  ): Promise<void> {\n    const queue = this.setMediaKeysQueue.slice();\n\n    this.log(`Setting media-keys for \"${keySystem}\"`);\n    // Only one setMediaKeys() can run at one time, and multiple setMediaKeys() operations\n    // can be queued for execution for multiple key sessions.\n    const setMediaKeysPromise = Promise.all(queue).then(() => {\n      if (!this.media) {\n        throw new Error(\n          'Attempted to set mediaKeys without media element attached'\n        );\n      }\n      return this.media.setMediaKeys(mediaKeys);\n    });\n    this.setMediaKeysQueue.push(setMediaKeysPromise);\n    return setMediaKeysPromise.then(() => {\n      this.log(`Media-keys set for \"${keySystem}\"`);\n      queue.push(setMediaKeysPromise!);\n      this.setMediaKeysQueue = this.setMediaKeysQueue.filter(\n        (p) => queue.indexOf(p) === -1\n      );\n    });\n  }\n\n  private generateRequestWithPreferredKeySession(\n    context: MediaKeySessionContext,\n    initDataType: string,\n    initData: ArrayBuffer | null,\n    reason:\n      | 'playlist-key'\n      | 'encrypted-event-key-match'\n      | 'encrypted-event-no-match'\n      | 'expired'\n  ): Promise<MediaKeySessionContext> | never {\n    const generateRequestFilter =\n      this.config.drmSystems?.[context.keySystem]?.generateRequest;\n    if (generateRequestFilter) {\n      try {\n        const mappedInitData: ReturnType<typeof generateRequestFilter> =\n          generateRequestFilter.call(this.hls, initDataType, initData, context);\n        if (!mappedInitData) {\n          throw new Error(\n            'Invalid response from configured generateRequest filter'\n          );\n        }\n        initDataType = mappedInitData.initDataType;\n        initData = context.decryptdata.pssh = mappedInitData.initData\n          ? new Uint8Array(mappedInitData.initData)\n          : null;\n      } catch (error) {\n        this.warn(error.message);\n        if (this.hls?.config.debug) {\n          throw error;\n        }\n      }\n    }\n\n    if (initData === null) {\n      this.log(`Skipping key-session request for \"${reason}\" (no initData)`);\n      return Promise.resolve(context);\n    }\n\n    const keyId = this.getKeyIdString(context.decryptdata);\n    this.log(\n      `Generating key-session request for \"${reason}\": ${keyId} (init data type: ${initDataType} length: ${\n        initData ? initData.byteLength : null\n      })`\n    );\n\n    const licenseStatus = new EventEmitter();\n\n    context.mediaKeysSession.onmessage = (event: MediaKeyMessageEvent) => {\n      const keySession = context.mediaKeysSession;\n      if (!keySession) {\n        licenseStatus.emit('error', new Error('invalid state'));\n        return;\n      }\n      const { messageType, message } = event;\n      this.log(\n        `\"${messageType}\" message event for session \"${keySession.sessionId}\" message size: ${message.byteLength}`\n      );\n      if (\n        messageType === 'license-request' ||\n        messageType === 'license-renewal'\n      ) {\n        this.renewLicense(context, message).catch((error) => {\n          this.handleError(error);\n          licenseStatus.emit('error', error);\n        });\n      } else if (messageType === 'license-release') {\n        if (context.keySystem === KeySystems.FAIRPLAY) {\n          this.updateKeySession(context, strToUtf8array('acknowledged'));\n          this.removeSession(context);\n        }\n      } else {\n        this.warn(`unhandled media key message type \"${messageType}\"`);\n      }\n    };\n\n    context.mediaKeysSession.onkeystatuseschange = (\n      event: MediaKeyMessageEvent\n    ) => {\n      const keySession = context.mediaKeysSession;\n      if (!keySession) {\n        licenseStatus.emit('error', new Error('invalid state'));\n        return;\n      }\n      this.onKeyStatusChange(context);\n      const keyStatus = context.keyStatus;\n      licenseStatus.emit('keyStatus', keyStatus);\n      if (keyStatus === 'expired') {\n        this.warn(`${context.keySystem} expired for key ${keyId}`);\n        this.renewKeySession(context);\n      }\n    };\n\n    const keyUsablePromise = new Promise(\n      (resolve: (value?: void) => void, reject) => {\n        licenseStatus.on('error', reject);\n\n        licenseStatus.on('keyStatus', (keyStatus) => {\n          if (keyStatus.startsWith('usable')) {\n            resolve();\n          } else if (keyStatus === 'output-restricted') {\n            reject(\n              new EMEKeyError(\n                {\n                  type: ErrorTypes.KEY_SYSTEM_ERROR,\n                  details: ErrorDetails.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED,\n                  fatal: false,\n                },\n                'HDCP level output restricted'\n              )\n            );\n          } else if (keyStatus === 'internal-error') {\n            reject(\n              new EMEKeyError(\n                {\n                  type: ErrorTypes.KEY_SYSTEM_ERROR,\n                  details: ErrorDetails.KEY_SYSTEM_STATUS_INTERNAL_ERROR,\n                  fatal: true,\n                },\n                `key status changed to \"${keyStatus}\"`\n              )\n            );\n          } else if (keyStatus === 'expired') {\n            reject(new Error('key expired while generating request'));\n          } else {\n            this.warn(`unhandled key status change \"${keyStatus}\"`);\n          }\n        });\n      }\n    );\n\n    return context.mediaKeysSession\n      .generateRequest(initDataType, initData)\n      .then(() => {\n        this.log(\n          `Request generated for key-session \"${context.mediaKeysSession?.sessionId}\" keyId: ${keyId}`\n        );\n      })\n      .catch((error) => {\n        throw new EMEKeyError(\n          {\n            type: ErrorTypes.KEY_SYSTEM_ERROR,\n            details: ErrorDetails.KEY_SYSTEM_NO_SESSION,\n            error,\n            fatal: false,\n          },\n          `Error generating key-session request: ${error}`\n        );\n      })\n      .then(() => keyUsablePromise)\n      .catch((error) => {\n        licenseStatus.removeAllListeners();\n        this.removeSession(context);\n        throw error;\n      })\n      .then(() => {\n        licenseStatus.removeAllListeners();\n        return context;\n      });\n  }\n\n  private onKeyStatusChange(mediaKeySessionContext: MediaKeySessionContext) {\n    mediaKeySessionContext.mediaKeysSession.keyStatuses.forEach(\n      (status: MediaKeyStatus, keyId: BufferSource) => {\n        this.log(\n          `key status change \"${status}\" for keyStatuses keyId: ${Hex.hexDump(\n            'buffer' in keyId\n              ? new Uint8Array(keyId.buffer, keyId.byteOffset, keyId.byteLength)\n              : new Uint8Array(keyId)\n          )} session keyId: ${Hex.hexDump(\n            new Uint8Array(mediaKeySessionContext.decryptdata.keyId || [])\n          )} uri: ${mediaKeySessionContext.decryptdata.uri}`\n        );\n        mediaKeySessionContext.keyStatus = status;\n      }\n    );\n  }\n\n  private fetchServerCertificate(\n    keySystem: KeySystems\n  ): Promise<BufferSource | void> {\n    return new Promise((resolve, reject) => {\n      const url = this.getServerCertificateUrl(keySystem);\n      if (!url) {\n        return resolve();\n      }\n      this.log(`Fetching serverCertificate for \"${keySystem}\"`);\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'arraybuffer';\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          if (xhr.status === 200) {\n            resolve(xhr.response);\n          } else {\n            reject(\n              new EMEKeyError(\n                {\n                  type: ErrorTypes.KEY_SYSTEM_ERROR,\n                  details:\n                    ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,\n                  fatal: true,\n                  networkDetails: xhr,\n                },\n                `\"${keySystem}\" certificate request XHR failed (${url}). Status: ${xhr.status} (${xhr.statusText})`\n              )\n            );\n          }\n        }\n      };\n      xhr.send();\n    });\n  }\n\n  private setMediaKeysServerCertificate(\n    mediaKeys: MediaKeys,\n    keySystem: KeySystems,\n    cert: BufferSource\n  ): Promise<MediaKeys> {\n    return new Promise((resolve, reject) => {\n      mediaKeys\n        .setServerCertificate(cert)\n        .then((success) => {\n          this.log(\n            `setServerCertificate ${\n              success ? 'success' : 'not supported by CDM'\n            } (${cert?.byteLength}) on \"${keySystem}\"`\n          );\n          resolve(mediaKeys);\n        })\n        .catch((error) => {\n          reject(\n            new EMEKeyError(\n              {\n                type: ErrorTypes.KEY_SYSTEM_ERROR,\n                details:\n                  ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED,\n                error,\n                fatal: true,\n              },\n              error.message\n            )\n          );\n        });\n    });\n  }\n\n  private renewLicense(\n    context: MediaKeySessionContext,\n    keyMessage: ArrayBuffer\n  ): Promise<void> {\n    return this.requestLicense(context, new Uint8Array(keyMessage)).then(\n      (data: ArrayBuffer) => {\n        return this.updateKeySession(context, new Uint8Array(data)).catch(\n          (error) => {\n            throw new EMEKeyError(\n              {\n                type: ErrorTypes.KEY_SYSTEM_ERROR,\n                details: ErrorDetails.KEY_SYSTEM_SESSION_UPDATE_FAILED,\n                error,\n                fatal: true,\n              },\n              error.message\n            );\n          }\n        );\n      }\n    );\n  }\n\n  private setupLicenseXHR(\n    xhr: XMLHttpRequest,\n    url: string,\n    keysListItem: MediaKeySessionContext,\n    licenseChallenge: Uint8Array\n  ): Promise<{ xhr: XMLHttpRequest; licenseChallenge: Uint8Array }> {\n    const licenseXhrSetup = this.config.licenseXhrSetup;\n\n    if (!licenseXhrSetup) {\n      xhr.open('POST', url, true);\n\n      return Promise.resolve({ xhr, licenseChallenge });\n    }\n\n    return Promise.resolve()\n      .then(() => {\n        if (!keysListItem.decryptdata) {\n          throw new Error('Key removed');\n        }\n        return licenseXhrSetup.call(\n          this.hls,\n          xhr,\n          url,\n          keysListItem,\n          licenseChallenge\n        );\n      })\n      .catch((error: Error) => {\n        if (!keysListItem.decryptdata) {\n          // Key session removed. Cancel license request.\n          throw error;\n        }\n        // let's try to open before running setup\n        xhr.open('POST', url, true);\n\n        return licenseXhrSetup.call(\n          this.hls,\n          xhr,\n          url,\n          keysListItem,\n          licenseChallenge\n        );\n      })\n      .then((licenseXhrSetupResult) => {\n        // if licenseXhrSetup did not yet call open, let's do it now\n        if (!xhr.readyState) {\n          xhr.open('POST', url, true);\n        }\n        const finalLicenseChallenge = licenseXhrSetupResult\n          ? licenseXhrSetupResult\n          : licenseChallenge;\n        return { xhr, licenseChallenge: finalLicenseChallenge };\n      });\n  }\n\n  private requestLicense(\n    keySessionContext: MediaKeySessionContext,\n    licenseChallenge: Uint8Array\n  ): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const url = this.getLicenseServerUrl(keySessionContext.keySystem);\n      this.log(`Sending license request to URL: ${url}`);\n      const xhr = new XMLHttpRequest();\n      xhr.responseType = 'arraybuffer';\n      xhr.onreadystatechange = () => {\n        if (!this.hls || !keySessionContext.mediaKeysSession) {\n          return reject(new Error('invalid state'));\n        }\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            this._requestLicenseFailureCount = 0;\n            let data = xhr.response;\n            this.log(\n              `License received ${\n                data instanceof ArrayBuffer ? data.byteLength : data\n              }`\n            );\n            const licenseResponseCallback = this.config.licenseResponseCallback;\n            if (licenseResponseCallback) {\n              try {\n                data = licenseResponseCallback.call(\n                  this.hls,\n                  xhr,\n                  url,\n                  keySessionContext\n                );\n              } catch (error) {\n                this.error(error);\n              }\n            }\n            resolve(data);\n          } else {\n            this._requestLicenseFailureCount++;\n            if (\n              this._requestLicenseFailureCount > MAX_LICENSE_REQUEST_FAILURES ||\n              (xhr.status >= 400 && xhr.status < 500)\n            ) {\n              reject(\n                new EMEKeyError(\n                  {\n                    type: ErrorTypes.KEY_SYSTEM_ERROR,\n                    details: ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED,\n                    fatal: true,\n                    networkDetails: xhr,\n                  },\n                  `License Request XHR failed (${url}). Status: ${xhr.status} (${xhr.statusText})`\n                )\n              );\n            } else {\n              const attemptsLeft =\n                MAX_LICENSE_REQUEST_FAILURES -\n                this._requestLicenseFailureCount +\n                1;\n              this.warn(\n                `Retrying license request, ${attemptsLeft} attempts left`\n              );\n              this.requestLicense(keySessionContext, licenseChallenge).then(\n                resolve,\n                reject\n              );\n            }\n          }\n        }\n      };\n      if (\n        keySessionContext.licenseXhr &&\n        keySessionContext.licenseXhr.readyState !== XMLHttpRequest.DONE\n      ) {\n        keySessionContext.licenseXhr.abort();\n      }\n      keySessionContext.licenseXhr = xhr;\n\n      this.setupLicenseXHR(xhr, url, keySessionContext, licenseChallenge).then(\n        ({ xhr, licenseChallenge }) => {\n          xhr.send(licenseChallenge);\n        }\n      );\n    });\n  }\n\n  private onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachedData\n  ) {\n    if (!this.config.emeEnabled) {\n      return;\n    }\n\n    const media = data.media;\n\n    // keep reference of media\n    this.media = media;\n\n    media.addEventListener('encrypted', this.onMediaEncrypted);\n    media.addEventListener('waitingforkey', this.onWaitingForKey);\n  }\n\n  private onMediaDetached() {\n    const media = this.media;\n    const mediaKeysList = this.mediaKeySessions;\n    if (media) {\n      media.removeEventListener('encrypted', this.onMediaEncrypted);\n      media.removeEventListener('waitingforkey', this.onWaitingForKey);\n      this.media = null;\n    }\n\n    this._requestLicenseFailureCount = 0;\n    this.setMediaKeysQueue = [];\n    this.mediaKeySessions = [];\n    this.keyIdToKeySessionPromise = {};\n    LevelKey.clearKeyUriToKeyIdMap();\n\n    // Close all sessions and remove media keys from the video element.\n    const keySessionCount = mediaKeysList.length;\n    EMEController.CDMCleanupPromise = Promise.all(\n      mediaKeysList\n        .map((mediaKeySessionContext) =>\n          this.removeSession(mediaKeySessionContext)\n        )\n        .concat(\n          media?.setMediaKeys(null).catch((error) => {\n            this.log(\n              `Could not clear media keys: ${error}. media.src: ${media?.src}`\n            );\n          })\n        )\n    )\n      .then(() => {\n        if (keySessionCount) {\n          this.log('finished closing key sessions and clearing media keys');\n          mediaKeysList.length = 0;\n        }\n      })\n      .catch((error) => {\n        this.log(\n          `Could not close sessions and clear media keys: ${error}. media.src: ${media?.src}`\n        );\n      });\n  }\n\n  private onManifestLoaded(\n    event: Events.MANIFEST_LOADED,\n    { sessionKeys }: ManifestLoadedData\n  ) {\n    if (!sessionKeys || !this.config.emeEnabled) {\n      return;\n    }\n    if (!this.keyFormatPromise) {\n      const keyFormats: KeySystemFormats[] = sessionKeys.reduce(\n        (formats: KeySystemFormats[], sessionKey: LevelKey) => {\n          if (\n            formats.indexOf(sessionKey.keyFormat as KeySystemFormats) === -1\n          ) {\n            formats.push(sessionKey.keyFormat as KeySystemFormats);\n          }\n          return formats;\n        },\n        []\n      );\n      this.log(\n        `Selecting key-system from session-keys ${keyFormats.join(', ')}`\n      );\n      this.keyFormatPromise = this.getKeyFormatPromise(keyFormats);\n    }\n  }\n\n  private removeSession(\n    mediaKeySessionContext: MediaKeySessionContext\n  ): Promise<void> | void {\n    const { mediaKeysSession, licenseXhr } = mediaKeySessionContext;\n    if (mediaKeysSession) {\n      this.log(\n        `Remove licenses and keys and close session ${mediaKeysSession.sessionId}`\n      );\n      mediaKeysSession.onmessage = null;\n      mediaKeysSession.onkeystatuseschange = null;\n      if (licenseXhr && licenseXhr.readyState !== XMLHttpRequest.DONE) {\n        licenseXhr.abort();\n      }\n      mediaKeySessionContext.mediaKeysSession =\n        mediaKeySessionContext.decryptdata =\n        mediaKeySessionContext.licenseXhr =\n          undefined!;\n      const index = this.mediaKeySessions.indexOf(mediaKeySessionContext);\n      if (index > -1) {\n        this.mediaKeySessions.splice(index, 1);\n      }\n      return mediaKeysSession\n        .remove()\n        .catch((error) => {\n          this.log(`Could not remove session: ${error}`);\n        })\n        .then(() => {\n          return mediaKeysSession.close();\n        })\n        .catch((error) => {\n          this.log(`Could not close session: ${error}`);\n        });\n    }\n  }\n}\n\nclass EMEKeyError extends Error {\n  public readonly data: ErrorData;\n  constructor(data: ErrorData, message: string) {\n    super(message);\n    this.data = data;\n    data.err = data.error;\n  }\n}\n\nexport default EMEController;\n", "import { Events } from '../events';\nimport { logger } from '../utils/logger';\nimport type { ComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\nimport type { MediaAttachingData } from '../types/events';\nimport StreamController from './stream-controller';\n\nclass FPSController implements ComponentAPI {\n  private hls: Hls;\n  private isVideoPlaybackQualityAvailable: boolean = false;\n  private timer?: number;\n  private media: HTMLVideoElement | null = null;\n  private lastTime: any;\n  private lastDroppedFrames: number = 0;\n  private lastDecodedFrames: number = 0;\n  // stream controller must be provided as a dependency!\n  private streamController!: StreamController;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n\n    this.registerListeners();\n  }\n\n  public setStreamController(streamController: StreamController) {\n    this.streamController = streamController;\n  }\n\n  protected registerListeners() {\n    this.hls.on(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n  }\n\n  protected unregisterListeners() {\n    this.hls.off(Events.MEDIA_ATTACHING, this.onMediaAttaching);\n  }\n\n  destroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n\n    this.unregisterListeners();\n    this.isVideoPlaybackQualityAvailable = false;\n    this.media = null;\n  }\n\n  protected onMediaAttaching(\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) {\n    const config = this.hls.config;\n    if (config.capLevelOnFPSDrop) {\n      const media =\n        data.media instanceof self.HTMLVideoElement ? data.media : null;\n      this.media = media;\n      if (media && typeof media.getVideoPlaybackQuality === 'function') {\n        this.isVideoPlaybackQualityAvailable = true;\n      }\n\n      self.clearInterval(this.timer);\n      this.timer = self.setInterval(\n        this.checkFPSInterval.bind(this),\n        config.fpsDroppedMonitoringPeriod\n      );\n    }\n  }\n\n  checkFPS(\n    video: HTMLVideoElement,\n    decodedFrames: number,\n    droppedFrames: number\n  ) {\n    const currentTime = performance.now();\n    if (decodedFrames) {\n      if (this.lastTime) {\n        const currentPeriod = currentTime - this.lastTime;\n        const currentDropped = droppedFrames - this.lastDroppedFrames;\n        const currentDecoded = decodedFrames - this.lastDecodedFrames;\n        const droppedFPS = (1000 * currentDropped) / currentPeriod;\n        const hls = this.hls;\n        hls.trigger(Events.FPS_DROP, {\n          currentDropped: currentDropped,\n          currentDecoded: currentDecoded,\n          totalDroppedFrames: droppedFrames,\n        });\n        if (droppedFPS > 0) {\n          // logger.log('checkFPS : droppedFPS/decodedFPS:' + droppedFPS/(1000 * currentDecoded / currentPeriod));\n          if (\n            currentDropped >\n            hls.config.fpsDroppedMonitoringThreshold * currentDecoded\n          ) {\n            let currentLevel = hls.currentLevel;\n            logger.warn(\n              'drop FPS ratio greater than max allowed value for currentLevel: ' +\n                currentLevel\n            );\n            if (\n              currentLevel > 0 &&\n              (hls.autoLevelCapping === -1 ||\n                hls.autoLevelCapping >= currentLevel)\n            ) {\n              currentLevel = currentLevel - 1;\n              hls.trigger(Events.FPS_DROP_LEVEL_CAPPING, {\n                level: currentLevel,\n                droppedLevel: hls.currentLevel,\n              });\n              hls.autoLevelCapping = currentLevel;\n              this.streamController.nextLevelSwitch();\n            }\n          }\n        }\n      }\n      this.lastTime = currentTime;\n      this.lastDroppedFrames = droppedFrames;\n      this.lastDecodedFrames = decodedFrames;\n    }\n  }\n\n  checkFPSInterval() {\n    const video = this.media;\n    if (video) {\n      if (this.isVideoPlaybackQualityAvailable) {\n        const videoPlaybackQuality = video.getVideoPlaybackQuality();\n        this.checkFPS(\n          video,\n          videoPlaybackQuality.totalVideoFrames,\n          videoPlaybackQuality.droppedVideoFrames\n        );\n      } else {\n        // HTMLVideoElement doesn't include the webkit types\n        this.checkFPS(\n          video,\n          (video as any).webkitDecodedFrameCount as number,\n          (video as any).webkitDroppedFrameCount as number\n        );\n      }\n    }\n  }\n}\n\nexport default FPSController;\n", "import BinarySearch from '../utils/binary-search';\nimport { Fragment } from '../loader/fragment';\n\n/**\n * Returns first fragment whose endPdt value exceeds the given PDT.\n * @param {Array<Fragment>} fragments - The array of candidate fragments\n * @param {number|null} [PDTValue = null] - The PDT value which must be exceeded\n * @param {number} [maxFragLookUpTolerance = 0] - The amount of time that a fragment's start/end can be within in order to be considered contiguous\n * @returns {*|null} fragment - The best matching fragment\n */\nexport function findFragmentByPDT(\n  fragments: Array<Fragment>,\n  PDTValue: number | null,\n  maxFragLookUpTolerance: number\n): Fragment | null {\n  if (\n    PDTValue === null ||\n    !Array.isArray(fragments) ||\n    !fragments.length ||\n    !Number.isFinite(PDTValue)\n  ) {\n    return null;\n  }\n\n  // if less than start\n  const startPDT = fragments[0].programDateTime;\n  if (PDTValue < (startPDT || 0)) {\n    return null;\n  }\n\n  const endPDT = fragments[fragments.length - 1].endProgramDateTime;\n  if (PDTValue >= (endPDT || 0)) {\n    return null;\n  }\n\n  maxFragLookUpTolerance = maxFragLookUpTolerance || 0;\n  for (let seg = 0; seg < fragments.length; ++seg) {\n    const frag = fragments[seg];\n    if (pdtWithinToleranceTest(PDTValue, maxFragLookUpTolerance, frag)) {\n      return frag;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Finds a fragment based on the SN of the previous fragment; or based on the needs of the current buffer.\n * This method compensates for small buffer gaps by applying a tolerance to the start of any candidate fragment, thus\n * breaking any traps which would cause the same fragment to be continuously selected within a small range.\n * @param {*} fragPrevious - The last frag successfully appended\n * @param {Array} fragments - The array of candidate fragments\n * @param {number} [bufferEnd = 0] - The end of the contiguous buffered range the playhead is currently within\n * @param {number} maxFragLookUpTolerance - The amount of time that a fragment's start/end can be within in order to be considered contiguous\n * @returns {*} foundFrag - The best matching fragment\n */\nexport function findFragmentByPTS(\n  fragPrevious: Fragment | null,\n  fragments: Array<Fragment>,\n  bufferEnd: number = 0,\n  maxFragLookUpTolerance: number = 0\n): Fragment | null {\n  let fragNext: Fragment | null = null;\n  if (fragPrevious) {\n    fragNext =\n      fragments[\n        (fragPrevious.sn as number) - (fragments[0].sn as number) + 1\n      ] || null;\n  } else if (bufferEnd === 0 && fragments[0].start === 0) {\n    fragNext = fragments[0];\n  }\n  // Prefer the next fragment if it's within tolerance\n  if (\n    fragNext &&\n    fragmentWithinToleranceTest(bufferEnd, maxFragLookUpTolerance, fragNext) ===\n      0\n  ) {\n    return fragNext;\n  }\n  // We might be seeking past the tolerance so find the best match\n  const foundFragment = BinarySearch.search(\n    fragments,\n    fragmentWithinToleranceTest.bind(null, bufferEnd, maxFragLookUpTolerance)\n  );\n  if (foundFragment && (foundFragment !== fragPrevious || !fragNext)) {\n    return foundFragment;\n  }\n  // If no match was found return the next fragment after fragPrevious, or null\n  return fragNext;\n}\n\n/**\n * The test function used by the findFragmentBySn's BinarySearch to look for the best match to the current buffer conditions.\n * @param {*} candidate - The fragment to test\n * @param {number} [bufferEnd = 0] - The end of the current buffered range the playhead is currently within\n * @param {number} [maxFragLookUpTolerance = 0] - The amount of time that a fragment's start can be within in order to be considered contiguous\n * @returns {number} - 0 if it matches, 1 if too low, -1 if too high\n */\nexport function fragmentWithinToleranceTest(\n  bufferEnd = 0,\n  maxFragLookUpTolerance = 0,\n  candidate: Fragment\n) {\n  // eagerly accept an accurate match (no tolerance)\n  if (\n    candidate.start <= bufferEnd &&\n    candidate.start + candidate.duration > bufferEnd\n  ) {\n    return 0;\n  }\n  // offset should be within fragment boundary - config.maxFragLookUpTolerance\n  // this is to cope with situations like\n  // bufferEnd = 9.991\n  // frag[Ø] : [0,10]\n  // frag[1] : [10,20]\n  // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here\n  //              frag start               frag start+duration\n  //                  |-----------------------------|\n  //              <--->                         <--->\n  //  ...--------><-----------------------------><---------....\n  // previous frag         matching fragment         next frag\n  //  return -1             return 0                 return 1\n  // logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);\n  // Set the lookup tolerance to be small enough to detect the current segment - ensures we don't skip over very small segments\n  const candidateLookupTolerance = Math.min(\n    maxFragLookUpTolerance,\n    candidate.duration + (candidate.deltaPTS ? candidate.deltaPTS : 0)\n  );\n  if (\n    candidate.start + candidate.duration - candidateLookupTolerance <=\n    bufferEnd\n  ) {\n    return 1;\n  } else if (\n    candidate.start - candidateLookupTolerance > bufferEnd &&\n    candidate.start\n  ) {\n    // if maxFragLookUpTolerance will have negative value then don't return -1 for first element\n    return -1;\n  }\n\n  return 0;\n}\n\n/**\n * The test function used by the findFragmentByPdt's BinarySearch to look for the best match to the current buffer conditions.\n * This function tests the candidate's program date time values, as represented in Unix time\n * @param {*} candidate - The fragment to test\n * @param {number} [pdtBufferEnd = 0] - The Unix time representing the end of the current buffered range\n * @param {number} [maxFragLookUpTolerance = 0] - The amount of time that a fragment's start can be within in order to be considered contiguous\n * @returns {boolean} True if contiguous, false otherwise\n */\nexport function pdtWithinToleranceTest(\n  pdtBufferEnd: number,\n  maxFragLookUpTolerance: number,\n  candidate: Fragment\n): boolean {\n  const candidateLookupTolerance =\n    Math.min(\n      maxFragLookUpTolerance,\n      candidate.duration + (candidate.deltaPTS ? candidate.deltaPTS : 0)\n    ) * 1000;\n\n  // endProgramDateTime can be null, default to zero\n  const endProgramDateTime = candidate.endProgramDateTime || 0;\n  return endProgramDateTime - candidateLookupTolerance > pdtBufferEnd;\n}\n\nexport function findFragWithCC(\n  fragments: Fragment[],\n  cc: number\n): Fragment | null {\n  return BinarySearch.search(fragments, (candidate) => {\n    if (candidate.cc < cc) {\n      return 1;\n    } else if (candidate.cc > cc) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n}\n", "import { Events } from '../events';\nimport { Fragment, Part } from '../loader/fragment';\nimport { PlaylistLevelType } from '../types/loader';\nimport type { SourceBufferName } from '../types/buffer';\nimport type {\n  FragmentBufferedRange,\n  FragmentEntity,\n  FragmentTimeRange,\n} from '../types/fragment-tracker';\nimport type { ComponentAPI } from '../types/component-api';\nimport type {\n  BufferAppendedData,\n  FragBufferedData,\n  FragLoadedData,\n} from '../types/events';\nimport type Hls from '../hls';\n\nexport enum FragmentState {\n  NOT_LOADED = 'NOT_LOADED',\n  APPENDING = 'APPENDING',\n  PARTIAL = 'PARTIAL',\n  OK = 'OK',\n}\n\nexport class FragmentTracker implements ComponentAPI {\n  private activeFragment: Fragment | null = null;\n  private activeParts: Part[] | null = null;\n  private endListFragments: { [key in PlaylistLevelType]?: FragmentEntity } =\n    Object.create(null);\n  private fragments: Partial<Record<string, FragmentEntity>> =\n    Object.create(null);\n  private timeRanges:\n    | {\n        [key in SourceBufferName]?: TimeRanges;\n      }\n    | null = Object.create(null);\n\n  private bufferPadding: number = 0.2;\n  private hls: Hls;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n\n    this._registerListeners();\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.BUFFER_APPENDED, this.onBufferAppended, this);\n    hls.on(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n    hls.on(Events.FRAG_LOADED, this.onFragLoaded, this);\n  }\n\n  private _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.BUFFER_APPENDED, this.onBufferAppended, this);\n    hls.off(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n    hls.off(Events.FRAG_LOADED, this.onFragLoaded, this);\n  }\n\n  public destroy() {\n    this._unregisterListeners();\n    // @ts-ignore\n    this.fragments =\n      // @ts-ignore\n      this.endListFragments =\n      this.timeRanges =\n      this.activeFragment =\n      this.activeParts =\n        null;\n  }\n\n  /**\n   * Return a Fragment with an appended range that matches the position and levelType.\n   * If not found any Fragment, return null\n   */\n  public getAppendedFrag(\n    position: number,\n    levelType: PlaylistLevelType\n  ): Fragment | Part | null {\n    if (levelType === PlaylistLevelType.MAIN) {\n      const { activeFragment, activeParts } = this;\n      if (!activeFragment) {\n        return null;\n      }\n      if (activeParts) {\n        for (let i = activeParts.length; i--; ) {\n          const activePart = activeParts[i];\n          const appendedPTS = activePart\n            ? activePart.end\n            : activeFragment.appendedPTS;\n          if (\n            activePart.start <= position &&\n            appendedPTS !== undefined &&\n            position <= appendedPTS\n          ) {\n            // 9 is a magic number. remove parts from lookup after a match but keep some short seeks back.\n            if (i > 9) {\n              this.activeParts = activeParts.slice(i - 9);\n            }\n            return activePart;\n          }\n        }\n      } else if (\n        activeFragment.start <= position &&\n        activeFragment.appendedPTS !== undefined &&\n        position <= activeFragment.appendedPTS\n      ) {\n        return activeFragment;\n      }\n    }\n    return this.getBufferedFrag(position, levelType);\n  }\n\n  /**\n   * Return a buffered Fragment that matches the position and levelType.\n   * A buffered Fragment is one whose loading, parsing and appending is done (completed or \"partial\" meaning aborted).\n   * If not found any Fragment, return null\n   */\n  public getBufferedFrag(\n    position: number,\n    levelType: PlaylistLevelType\n  ): Fragment | null {\n    const { fragments } = this;\n    const keys = Object.keys(fragments);\n    for (let i = keys.length; i--; ) {\n      const fragmentEntity = fragments[keys[i]];\n      if (fragmentEntity?.body.type === levelType && fragmentEntity.buffered) {\n        const frag = fragmentEntity.body;\n        if (frag.start <= position && position <= frag.end) {\n          return frag;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Partial fragments effected by coded frame eviction will be removed\n   * The browser will unload parts of the buffer to free up memory for new buffer data\n   * Fragments will need to be reloaded when the buffer is freed up, removing partial fragments will allow them to reload(since there might be parts that are still playable)\n   */\n  public detectEvictedFragments(\n    elementaryStream: SourceBufferName,\n    timeRange: TimeRanges,\n    playlistType?: PlaylistLevelType\n  ) {\n    if (this.timeRanges) {\n      this.timeRanges[elementaryStream] = timeRange;\n    }\n    // Check if any flagged fragments have been unloaded\n    Object.keys(this.fragments).forEach((key) => {\n      const fragmentEntity = this.fragments[key];\n      if (!fragmentEntity) {\n        return;\n      }\n      if (!fragmentEntity.buffered && !fragmentEntity.loaded) {\n        if (fragmentEntity.body.type === playlistType) {\n          this.removeFragment(fragmentEntity.body);\n        }\n        return;\n      }\n      const esData = fragmentEntity.range[elementaryStream];\n      if (!esData) {\n        return;\n      }\n      esData.time.some((time: FragmentTimeRange) => {\n        const isNotBuffered = !this.isTimeBuffered(\n          time.startPTS,\n          time.endPTS,\n          timeRange\n        );\n        if (isNotBuffered) {\n          // Unregister partial fragment as it needs to load again to be reused\n          this.removeFragment(fragmentEntity.body);\n        }\n        return isNotBuffered;\n      });\n    });\n  }\n\n  /**\n   * Checks if the fragment passed in is loaded in the buffer properly\n   * Partially loaded fragments will be registered as a partial fragment\n   */\n  private detectPartialFragments(data: FragBufferedData) {\n    const timeRanges = this.timeRanges;\n    const { frag, part } = data;\n    if (!timeRanges || frag.sn === 'initSegment') {\n      return;\n    }\n\n    const fragKey = getFragmentKey(frag);\n    const fragmentEntity = this.fragments[fragKey];\n    if (!fragmentEntity) {\n      return;\n    }\n    Object.keys(timeRanges).forEach((elementaryStream) => {\n      const streamInfo = frag.elementaryStreams[elementaryStream];\n      if (!streamInfo) {\n        return;\n      }\n      const timeRange = timeRanges[elementaryStream];\n      const partial = part !== null || streamInfo.partial === true;\n      fragmentEntity.range[elementaryStream] = this.getBufferedTimes(\n        frag,\n        part,\n        partial,\n        timeRange\n      );\n    });\n    fragmentEntity.loaded = null;\n    if (Object.keys(fragmentEntity.range).length) {\n      fragmentEntity.buffered = true;\n      if (fragmentEntity.body.endList) {\n        this.endListFragments[fragmentEntity.body.type] = fragmentEntity;\n      }\n    } else {\n      // remove fragment if nothing was appended\n      this.removeFragment(fragmentEntity.body);\n    }\n  }\n\n  public fragBuffered(frag: Fragment) {\n    const fragKey = getFragmentKey(frag);\n    const fragmentEntity = this.fragments[fragKey];\n    if (fragmentEntity) {\n      fragmentEntity.loaded = null;\n      fragmentEntity.buffered = true;\n    }\n  }\n\n  private getBufferedTimes(\n    fragment: Fragment,\n    part: Part | null,\n    partial: boolean,\n    timeRange: TimeRanges\n  ): FragmentBufferedRange {\n    const buffered: FragmentBufferedRange = {\n      time: [],\n      partial,\n    };\n    const startPTS = part ? part.start : fragment.start;\n    const endPTS = part ? part.end : fragment.end;\n    const minEndPTS = fragment.minEndPTS || endPTS;\n    const maxStartPTS = fragment.maxStartPTS || startPTS;\n    for (let i = 0; i < timeRange.length; i++) {\n      const startTime = timeRange.start(i) - this.bufferPadding;\n      const endTime = timeRange.end(i) + this.bufferPadding;\n      if (maxStartPTS >= startTime && minEndPTS <= endTime) {\n        // Fragment is entirely contained in buffer\n        // No need to check the other timeRange times since it's completely playable\n        buffered.time.push({\n          startPTS: Math.max(startPTS, timeRange.start(i)),\n          endPTS: Math.min(endPTS, timeRange.end(i)),\n        });\n        break;\n      } else if (startPTS < endTime && endPTS > startTime) {\n        buffered.partial = true;\n        // Check for intersection with buffer\n        // Get playable sections of the fragment\n        buffered.time.push({\n          startPTS: Math.max(startPTS, timeRange.start(i)),\n          endPTS: Math.min(endPTS, timeRange.end(i)),\n        });\n      } else if (endPTS <= startTime) {\n        // No need to check the rest of the timeRange as it is in order\n        break;\n      }\n    }\n    return buffered;\n  }\n\n  /**\n   * Gets the partial fragment for a certain time\n   */\n  public getPartialFragment(time: number): Fragment | null {\n    let bestFragment: Fragment | null = null;\n    let timePadding: number;\n    let startTime: number;\n    let endTime: number;\n    let bestOverlap: number = 0;\n    const { bufferPadding, fragments } = this;\n    Object.keys(fragments).forEach((key) => {\n      const fragmentEntity = fragments[key];\n      if (!fragmentEntity) {\n        return;\n      }\n      if (isPartial(fragmentEntity)) {\n        startTime = fragmentEntity.body.start - bufferPadding;\n        endTime = fragmentEntity.body.end + bufferPadding;\n        if (time >= startTime && time <= endTime) {\n          // Use the fragment that has the most padding from start and end time\n          timePadding = Math.min(time - startTime, endTime - time);\n          if (bestOverlap <= timePadding) {\n            bestFragment = fragmentEntity.body;\n            bestOverlap = timePadding;\n          }\n        }\n      }\n    });\n    return bestFragment;\n  }\n\n  public isEndListAppended(type: PlaylistLevelType): boolean {\n    const lastFragmentEntity = this.endListFragments[type];\n    return (\n      lastFragmentEntity !== undefined &&\n      (lastFragmentEntity.buffered || isPartial(lastFragmentEntity))\n    );\n  }\n\n  public getState(fragment: Fragment): FragmentState {\n    const fragKey = getFragmentKey(fragment);\n    const fragmentEntity = this.fragments[fragKey];\n\n    if (fragmentEntity) {\n      if (!fragmentEntity.buffered) {\n        return FragmentState.APPENDING;\n      } else if (isPartial(fragmentEntity)) {\n        return FragmentState.PARTIAL;\n      } else {\n        return FragmentState.OK;\n      }\n    }\n\n    return FragmentState.NOT_LOADED;\n  }\n\n  private isTimeBuffered(\n    startPTS: number,\n    endPTS: number,\n    timeRange: TimeRanges\n  ): boolean {\n    let startTime;\n    let endTime;\n    for (let i = 0; i < timeRange.length; i++) {\n      startTime = timeRange.start(i) - this.bufferPadding;\n      endTime = timeRange.end(i) + this.bufferPadding;\n      if (startPTS >= startTime && endPTS <= endTime) {\n        return true;\n      }\n\n      if (endPTS <= startTime) {\n        // No need to check the rest of the timeRange as it is in order\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  private onFragLoaded(event: Events.FRAG_LOADED, data: FragLoadedData) {\n    const { frag, part } = data;\n    // don't track initsegment (for which sn is not a number)\n    // don't track frags used for bitrateTest, they're irrelevant.\n    // don't track parts for memory efficiency\n    if (frag.sn === 'initSegment' || frag.bitrateTest || part) {\n      return;\n    }\n\n    const fragKey = getFragmentKey(frag);\n    this.fragments[fragKey] = {\n      body: frag,\n      loaded: data,\n      buffered: false,\n      range: Object.create(null),\n    };\n  }\n\n  private onBufferAppended(\n    event: Events.BUFFER_APPENDED,\n    data: BufferAppendedData\n  ) {\n    const { frag, part, timeRanges } = data;\n    if (frag.type === PlaylistLevelType.MAIN) {\n      if (this.activeFragment !== frag) {\n        this.activeFragment = frag;\n        frag.appendedPTS = undefined;\n      }\n      if (part) {\n        let activeParts = this.activeParts;\n        if (!activeParts) {\n          this.activeParts = activeParts = [];\n        }\n        activeParts.push(part);\n      } else {\n        this.activeParts = null;\n      }\n    }\n    // Store the latest timeRanges loaded in the buffer\n    this.timeRanges = timeRanges;\n    Object.keys(timeRanges).forEach((elementaryStream: SourceBufferName) => {\n      const timeRange = timeRanges[elementaryStream] as TimeRanges;\n      this.detectEvictedFragments(elementaryStream, timeRange);\n      if (!part && frag.type === PlaylistLevelType.MAIN) {\n        const streamInfo = frag.elementaryStreams[elementaryStream];\n        if (!streamInfo) {\n          return;\n        }\n        for (let i = 0; i < timeRange.length; i++) {\n          const rangeEnd = timeRange.end(i);\n          if (rangeEnd <= streamInfo.endPTS && rangeEnd > streamInfo.startPTS) {\n            frag.appendedPTS = Math.max(rangeEnd, frag.appendedPTS || 0);\n          } else {\n            frag.appendedPTS = streamInfo.endPTS;\n          }\n        }\n      }\n    });\n  }\n\n  private onFragBuffered(event: Events.FRAG_BUFFERED, data: FragBufferedData) {\n    this.detectPartialFragments(data);\n  }\n\n  private hasFragment(fragment: Fragment): boolean {\n    const fragKey = getFragmentKey(fragment);\n    return !!this.fragments[fragKey];\n  }\n\n  public removeFragmentsInRange(\n    start: number,\n    end: number,\n    playlistType: PlaylistLevelType\n  ) {\n    Object.keys(this.fragments).forEach((key) => {\n      const fragmentEntity = this.fragments[key];\n      if (!fragmentEntity) {\n        return;\n      }\n      if (fragmentEntity.buffered) {\n        const frag = fragmentEntity.body;\n        if (\n          frag.type === playlistType &&\n          frag.start < end &&\n          frag.end > start\n        ) {\n          this.removeFragment(frag);\n        }\n      }\n    });\n  }\n\n  public removeFragment(fragment: Fragment) {\n    const fragKey = getFragmentKey(fragment);\n    fragment.stats.loaded = 0;\n    fragment.clearElementaryStreamInfo();\n    fragment.appendedPTS = undefined;\n    delete this.fragments[fragKey];\n    if (fragment.endList) {\n      delete this.endListFragments[fragment.type];\n    }\n  }\n\n  public removeAllFragments() {\n    this.fragments = Object.create(null);\n    this.endListFragments = Object.create(null);\n    this.activeFragment = null;\n    this.activeParts = null;\n  }\n}\n\nfunction isPartial(fragmentEntity: FragmentEntity): boolean {\n  return (\n    fragmentEntity.buffered &&\n    (fragmentEntity.range.video?.partial || fragmentEntity.range.audio?.partial)\n  );\n}\n\nfunction getFragmentKey(fragment: Fragment): string {\n  return `${fragment.type}_${fragment.level}_${fragment.urlId}_${fragment.sn}`;\n}\n", "import type { BufferInfo } from '../utils/buffer-helper';\nimport { BufferHelper } from '../utils/buffer-helper';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport { Events } from '../events';\nimport { logger } from '../utils/logger';\nimport type Hls from '../hls';\nimport type { HlsConfig } from '../config';\nimport type { Fragment } from '../loader/fragment';\nimport type { FragmentTracker } from './fragment-tracker';\n\nexport const STALL_MINIMUM_DURATION_MS = 250;\nexport const MAX_START_GAP_JUMP = 2.0;\nexport const SKIP_BUFFER_HOLE_STEP_SECONDS = 0.1;\nexport const SKIP_BUFFER_RANGE_START = 0.05;\n\nexport default class GapController {\n  private config: HlsConfig;\n  private media: HTMLMediaElement | null = null;\n  private fragmentTracker: FragmentTracker;\n  private hls: Hls;\n  private nudgeRetry: number = 0;\n  private stallReported: boolean = false;\n  private stalled: number | null = null;\n  private moved: boolean = false;\n  private seeking: boolean = false;\n\n  constructor(config, media, fragmentTracker, hls) {\n    this.config = config;\n    this.media = media;\n    this.fragmentTracker = fragmentTracker;\n    this.hls = hls;\n  }\n\n  public destroy() {\n    this.media = null;\n    // @ts-ignore\n    this.hls = this.fragmentTracker = null;\n  }\n\n  /**\n   * Checks if the playhead is stuck within a gap, and if so, attempts to free it.\n   * A gap is an unbuffered range between two buffered ranges (or the start and the first buffered range).\n   *\n   * @param {number} lastCurrentTime Previously read playhead position\n   */\n  public poll(lastCurrentTime: number, activeFrag: Fragment | null) {\n    const { config, media, stalled } = this;\n    if (media === null) {\n      return;\n    }\n    const { currentTime, seeking } = media;\n    const seeked = this.seeking && !seeking;\n    const beginSeek = !this.seeking && seeking;\n\n    this.seeking = seeking;\n\n    // The playhead is moving, no-op\n    if (currentTime !== lastCurrentTime) {\n      this.moved = true;\n      if (stalled !== null) {\n        // The playhead is now moving, but was previously stalled\n        if (this.stallReported) {\n          const stalledDuration = self.performance.now() - stalled;\n          logger.warn(\n            `playback not stuck anymore @${currentTime}, after ${Math.round(\n              stalledDuration\n            )}ms`\n          );\n          this.stallReported = false;\n        }\n        this.stalled = null;\n        this.nudgeRetry = 0;\n      }\n      return;\n    }\n\n    // Clear stalled state when beginning or finishing seeking so that we don't report stalls coming out of a seek\n    if (beginSeek || seeked) {\n      this.stalled = null;\n    }\n\n    // The playhead should not be moving\n    if (\n      (media.paused && !seeking) ||\n      media.ended ||\n      media.playbackRate === 0 ||\n      !BufferHelper.getBuffered(media).length\n    ) {\n      return;\n    }\n\n    const bufferInfo = BufferHelper.bufferInfo(media, currentTime, 0);\n    const isBuffered = bufferInfo.len > 0;\n    const nextStart = bufferInfo.nextStart || 0;\n\n    // There is no playable buffer (seeked, waiting for buffer)\n    if (!isBuffered && !nextStart) {\n      return;\n    }\n\n    if (seeking) {\n      // Waiting for seeking in a buffered range to complete\n      const hasEnoughBuffer = bufferInfo.len > MAX_START_GAP_JUMP;\n      // Next buffered range is too far ahead to jump to while still seeking\n      const noBufferGap =\n        !nextStart ||\n        (activeFrag && activeFrag.start <= currentTime) ||\n        (nextStart - currentTime > MAX_START_GAP_JUMP &&\n          !this.fragmentTracker.getPartialFragment(currentTime));\n      if (hasEnoughBuffer || noBufferGap) {\n        return;\n      }\n      // Reset moved state when seeking to a point in or before a gap\n      this.moved = false;\n    }\n\n    // Skip start gaps if we haven't played, but the last poll detected the start of a stall\n    // The addition poll gives the browser a chance to jump the gap for us\n    if (!this.moved && this.stalled !== null) {\n      // Jump start gaps within jump threshold\n      const startJump =\n        Math.max(nextStart, bufferInfo.start || 0) - currentTime;\n\n      // When joining a live stream with audio tracks, account for live playlist window sliding by allowing\n      // a larger jump over start gaps caused by the audio-stream-controller buffering a start fragment\n      // that begins over 1 target duration after the video start position.\n      const level = this.hls.levels\n        ? this.hls.levels[this.hls.currentLevel]\n        : null;\n      const isLive = level?.details?.live;\n      const maxStartGapJump = isLive\n        ? level!.details!.targetduration * 2\n        : MAX_START_GAP_JUMP;\n      if (startJump > 0 && startJump <= maxStartGapJump) {\n        this._trySkipBufferHole(null);\n        return;\n      }\n    }\n\n    // Start tracking stall time\n    const tnow = self.performance.now();\n    if (stalled === null) {\n      this.stalled = tnow;\n      return;\n    }\n\n    const stalledDuration = tnow - stalled;\n    if (!seeking && stalledDuration >= STALL_MINIMUM_DURATION_MS) {\n      // Report stalling after trying to fix\n      this._reportStall(bufferInfo);\n      if (!this.media) {\n        return;\n      }\n    }\n\n    const bufferedWithHoles = BufferHelper.bufferInfo(\n      media,\n      currentTime,\n      config.maxBufferHole\n    );\n    this._tryFixBufferStall(bufferedWithHoles, stalledDuration);\n  }\n\n  /**\n   * Detects and attempts to fix known buffer stalling issues.\n   * @param bufferInfo - The properties of the current buffer.\n   * @param stalledDurationMs - The amount of time Hls.js has been stalling for.\n   * @private\n   */\n  private _tryFixBufferStall(\n    bufferInfo: BufferInfo,\n    stalledDurationMs: number\n  ) {\n    const { config, fragmentTracker, media } = this;\n    if (media === null) {\n      return;\n    }\n    const currentTime = media.currentTime;\n\n    const partial = fragmentTracker.getPartialFragment(currentTime);\n    if (partial) {\n      // Try to skip over the buffer hole caused by a partial fragment\n      // This method isn't limited by the size of the gap between buffered ranges\n      const targetTime = this._trySkipBufferHole(partial);\n      // we return here in this case, meaning\n      // the branch below only executes when we don't handle a partial fragment\n      if (targetTime || !this.media) {\n        return;\n      }\n    }\n\n    // if we haven't had to skip over a buffer hole of a partial fragment\n    // we may just have to \"nudge\" the playlist as the browser decoding/rendering engine\n    // needs to cross some sort of threshold covering all source-buffers content\n    // to start playing properly.\n    if (\n      bufferInfo.len > config.maxBufferHole &&\n      stalledDurationMs > config.highBufferWatchdogPeriod * 1000\n    ) {\n      logger.warn('Trying to nudge playhead over buffer-hole');\n      // Try to nudge currentTime over a buffer hole if we've been stalling for the configured amount of seconds\n      // We only try to jump the hole if it's under the configured size\n      // Reset stalled so to rearm watchdog timer\n      this.stalled = null;\n      this._tryNudgeBuffer();\n    }\n  }\n\n  /**\n   * Triggers a BUFFER_STALLED_ERROR event, but only once per stall period.\n   * @param bufferLen - The playhead distance from the end of the current buffer segment.\n   * @private\n   */\n  private _reportStall(bufferInfo: BufferInfo) {\n    const { hls, media, stallReported } = this;\n    if (!stallReported && media) {\n      // Report stalled error once\n      this.stallReported = true;\n      logger.warn(\n        `Playback stalling at @${\n          media.currentTime\n        } due to low buffer (${JSON.stringify(bufferInfo)})`\n      );\n      hls.trigger(Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.BUFFER_STALLED_ERROR,\n        fatal: false,\n        buffer: bufferInfo.len,\n      });\n    }\n  }\n\n  /**\n   * Attempts to fix buffer stalls by jumping over known gaps caused by partial fragments\n   * @param partial - The partial fragment found at the current time (where playback is stalling).\n   * @private\n   */\n  private _trySkipBufferHole(partial: Fragment | null): number {\n    const { config, hls, media } = this;\n    if (media === null) {\n      return 0;\n    }\n    const currentTime = media.currentTime;\n    let lastEndTime = 0;\n    // Check if currentTime is between unbuffered regions of partial fragments\n    const buffered = BufferHelper.getBuffered(media);\n    for (let i = 0; i < buffered.length; i++) {\n      const startTime = buffered.start(i);\n      if (\n        currentTime + config.maxBufferHole >= lastEndTime &&\n        currentTime < startTime\n      ) {\n        const targetTime = Math.max(\n          startTime + SKIP_BUFFER_RANGE_START,\n          media.currentTime + SKIP_BUFFER_HOLE_STEP_SECONDS\n        );\n        logger.warn(\n          `skipping hole, adjusting currentTime from ${currentTime} to ${targetTime}`\n        );\n        this.moved = true;\n        this.stalled = null;\n        media.currentTime = targetTime;\n        if (partial) {\n          hls.trigger(Events.ERROR, {\n            type: ErrorTypes.MEDIA_ERROR,\n            details: ErrorDetails.BUFFER_SEEK_OVER_HOLE,\n            fatal: false,\n            reason: `fragment loaded with buffer holes, seeking from ${currentTime} to ${targetTime}`,\n            frag: partial,\n          });\n        }\n        return targetTime;\n      }\n      lastEndTime = buffered.end(i);\n    }\n    return 0;\n  }\n\n  /**\n   * Attempts to fix buffer stalls by advancing the mediaElement's current time by a small amount.\n   * @private\n   */\n  private _tryNudgeBuffer() {\n    const { config, hls, media, nudgeRetry } = this;\n    if (media === null) {\n      return;\n    }\n    const currentTime = media.currentTime;\n    this.nudgeRetry++;\n\n    if (nudgeRetry < config.nudgeMaxRetry) {\n      const targetTime = currentTime + (nudgeRetry + 1) * config.nudgeOffset;\n      // playback stalled in buffered area ... let's nudge currentTime to try to overcome this\n      logger.warn(`Nudging 'currentTime' from ${currentTime} to ${targetTime}`);\n      media.currentTime = targetTime;\n      hls.trigger(Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.BUFFER_NUDGE_ON_STALL,\n        fatal: false,\n      });\n    } else {\n      logger.error(\n        `Playhead still not moving while enough data buffered @${currentTime} after ${config.nudgeMaxRetry} nudges`\n      );\n      hls.trigger(Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.BUFFER_STALLED_ERROR,\n        fatal: true,\n      });\n    }\n  }\n}\n", "import { Events } from '../events';\nimport {\n  sendAddTrackEvent,\n  clearCurrentCues,\n  removeCuesInRange,\n} from '../utils/texttrack-utils';\nimport * as ID3 from '../demux/id3';\nimport { DateRange, DateRangeAttribute } from '../loader/date-range';\nimport { MetadataSchema } from '../types/demuxer';\nimport type {\n  BufferFlushingData,\n  FragParsingMetadataData,\n  LevelUpdatedData,\n  MediaAttachedData,\n} from '../types/events';\nimport type { ComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\n\ndeclare global {\n  interface Window {\n    WebKitDataCue: VTTCue | void;\n  }\n}\n\ntype Cue = VTTCue | TextTrackCue;\n\nconst MIN_CUE_DURATION = 0.25;\n\nfunction getCueClass() {\n  // Attempt to recreate Safari functionality by creating\n  // WebKitDataCue objects when available and store the decoded\n  // ID3 data in the value property of the cue\n  return (self.WebKitDataCue || self.VTTCue || self.TextTrackCue) as any;\n}\n\n// VTTCue latest draft allows an infinite duration, fallback\n// to MAX_VALUE if necessary\nconst MAX_CUE_ENDTIME = (() => {\n  const Cue = getCueClass();\n  try {\n    new Cue(0, Number.POSITIVE_INFINITY, '');\n  } catch (e) {\n    return Number.MAX_VALUE;\n  }\n  return Number.POSITIVE_INFINITY;\n})();\n\nfunction dateRangeDateToTimelineSeconds(date: Date, offset: number): number {\n  return date.getTime() / 1000 - offset;\n}\n\nfunction hexToArrayBuffer(str): ArrayBuffer {\n  return Uint8Array.from(\n    str\n      .replace(/^0x/, '')\n      .replace(/([\\da-fA-F]{2}) ?/g, '0x$1 ')\n      .replace(/ +$/, '')\n      .split(' ')\n  ).buffer;\n}\nclass ID3TrackController implements ComponentAPI {\n  private hls: Hls;\n  private id3Track: TextTrack | null = null;\n  private media: HTMLMediaElement | null = null;\n  private dateRangeCuesAppended: Record<\n    string,\n    { cues: Record<string, Cue>; dateRange: DateRange; durationKnown: boolean }\n  > = {};\n\n  constructor(hls) {\n    this.hls = hls;\n    this._registerListeners();\n  }\n\n  destroy() {\n    this._unregisterListeners();\n    this.id3Track = null;\n    this.media = null;\n    this.dateRangeCuesAppended = {};\n    // @ts-ignore\n    this.hls = null;\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this);\n    hls.on(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.on(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n  }\n\n  private _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this);\n    hls.off(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.off(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n  }\n\n  // Add ID3 metatadata text track.\n  protected onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachedData\n  ): void {\n    this.media = data.media;\n  }\n\n  protected onMediaDetaching(): void {\n    if (!this.id3Track) {\n      return;\n    }\n    clearCurrentCues(this.id3Track);\n    this.id3Track = null;\n    this.media = null;\n    this.dateRangeCuesAppended = {};\n  }\n\n  private onManifestLoading() {\n    this.dateRangeCuesAppended = {};\n  }\n\n  createTrack(media: HTMLMediaElement): TextTrack {\n    const track = this.getID3Track(media.textTracks) as TextTrack;\n    track.mode = 'hidden';\n    return track;\n  }\n\n  getID3Track(textTracks: TextTrackList): TextTrack | void {\n    if (!this.media) {\n      return;\n    }\n    for (let i = 0; i < textTracks.length; i++) {\n      const textTrack: TextTrack = textTracks[i];\n      if (textTrack.kind === 'metadata' && textTrack.label === 'id3') {\n        // send 'addtrack' when reusing the textTrack for metadata,\n        // same as what we do for captions\n        sendAddTrackEvent(textTrack, this.media);\n\n        return textTrack;\n      }\n    }\n    return this.media.addTextTrack('metadata', 'id3');\n  }\n\n  onFragParsingMetadata(\n    event: Events.FRAG_PARSING_METADATA,\n    data: FragParsingMetadataData\n  ) {\n    if (!this.media) {\n      return;\n    }\n\n    const {\n      hls: {\n        config: { enableEmsgMetadataCues, enableID3MetadataCues },\n      },\n    } = this;\n    if (!enableEmsgMetadataCues && !enableID3MetadataCues) {\n      return;\n    }\n\n    const { samples } = data;\n\n    // create track dynamically\n    if (!this.id3Track) {\n      this.id3Track = this.createTrack(this.media);\n    }\n\n    const Cue = getCueClass();\n\n    for (let i = 0; i < samples.length; i++) {\n      const type = samples[i].type;\n      if (\n        (type === MetadataSchema.emsg && !enableEmsgMetadataCues) ||\n        !enableID3MetadataCues\n      ) {\n        continue;\n      }\n\n      const frames = ID3.getID3Frames(samples[i].data);\n      if (frames) {\n        const startTime = samples[i].pts;\n        let endTime: number = startTime + samples[i].duration;\n\n        if (endTime > MAX_CUE_ENDTIME) {\n          endTime = MAX_CUE_ENDTIME;\n        }\n\n        const timeDiff = endTime - startTime;\n        if (timeDiff <= 0) {\n          endTime = startTime + MIN_CUE_DURATION;\n        }\n\n        for (let j = 0; j < frames.length; j++) {\n          const frame = frames[j];\n          // Safari doesn't put the timestamp frame in the TextTrack\n          if (!ID3.isTimeStampFrame(frame)) {\n            // add a bounds to any unbounded cues\n            this.updateId3CueEnds(startTime);\n\n            const cue = new Cue(startTime, endTime, '');\n            cue.value = frame;\n            if (type) {\n              cue.type = type;\n            }\n            this.id3Track.addCue(cue);\n          }\n        }\n      }\n    }\n  }\n\n  updateId3CueEnds(startTime: number) {\n    const cues = this.id3Track?.cues;\n    if (cues) {\n      for (let i = cues.length; i--; ) {\n        const cue = cues[i] as any;\n        if (cue.startTime < startTime && cue.endTime === MAX_CUE_ENDTIME) {\n          cue.endTime = startTime;\n        }\n      }\n    }\n  }\n\n  onBufferFlushing(\n    event: Events.BUFFER_FLUSHING,\n    { startOffset, endOffset, type }: BufferFlushingData\n  ) {\n    const { id3Track, hls } = this;\n    if (!hls) {\n      return;\n    }\n\n    const {\n      config: { enableEmsgMetadataCues, enableID3MetadataCues },\n    } = hls;\n    if (id3Track && (enableEmsgMetadataCues || enableID3MetadataCues)) {\n      let predicate;\n\n      if (type === 'audio') {\n        predicate = (cue) =>\n          (cue as any).type === MetadataSchema.audioId3 &&\n          enableID3MetadataCues;\n      } else if (type === 'video') {\n        predicate = (cue) =>\n          (cue as any).type === MetadataSchema.emsg && enableEmsgMetadataCues;\n      } else {\n        predicate = (cue) =>\n          ((cue as any).type === MetadataSchema.audioId3 &&\n            enableID3MetadataCues) ||\n          ((cue as any).type === MetadataSchema.emsg && enableEmsgMetadataCues);\n      }\n      removeCuesInRange(id3Track, startOffset, endOffset, predicate);\n    }\n  }\n\n  onLevelUpdated(event: Events.LEVEL_UPDATED, { details }: LevelUpdatedData) {\n    if (\n      !this.media ||\n      !details.hasProgramDateTime ||\n      !this.hls.config.enableDateRangeMetadataCues\n    ) {\n      return;\n    }\n    const { dateRangeCuesAppended, id3Track } = this;\n    const { dateRanges } = details;\n    const ids = Object.keys(dateRanges);\n    // Remove cues from track not found in details.dateRanges\n    if (id3Track) {\n      const idsToRemove = Object.keys(dateRangeCuesAppended).filter(\n        (id) => !ids.includes(id)\n      );\n      for (let i = idsToRemove.length; i--; ) {\n        const id = idsToRemove[i];\n        Object.keys(dateRangeCuesAppended[id].cues).forEach((key) => {\n          id3Track.removeCue(dateRangeCuesAppended[id].cues[key]);\n        });\n        delete dateRangeCuesAppended[id];\n      }\n    }\n    // Exit if the playlist does not have Date Ranges or does not have Program Date Time\n    const lastFragment = details.fragments[details.fragments.length - 1];\n    if (ids.length === 0 || !Number.isFinite(lastFragment?.programDateTime)) {\n      return;\n    }\n\n    if (!this.id3Track) {\n      this.id3Track = this.createTrack(this.media);\n    }\n\n    const dateTimeOffset =\n      (lastFragment.programDateTime as number) / 1000 - lastFragment.start;\n    const Cue = getCueClass();\n\n    for (let i = 0; i < ids.length; i++) {\n      const id = ids[i];\n      const dateRange = dateRanges[id];\n      const appendedDateRangeCues = dateRangeCuesAppended[id];\n      const cues = appendedDateRangeCues?.cues || {};\n      let durationKnown = appendedDateRangeCues?.durationKnown || false;\n      const startTime = dateRangeDateToTimelineSeconds(\n        dateRange.startDate,\n        dateTimeOffset\n      );\n      let endTime = MAX_CUE_ENDTIME;\n      const endDate = dateRange.endDate;\n      if (endDate) {\n        endTime = dateRangeDateToTimelineSeconds(endDate, dateTimeOffset);\n        durationKnown = true;\n      } else if (dateRange.endOnNext && !durationKnown) {\n        const nextDateRangeWithSameClass = ids\n          .reduce((filterMapArray, id) => {\n            const candidate = dateRanges[id];\n            if (\n              candidate.class === dateRange.class &&\n              candidate.id !== id &&\n              candidate.startDate > dateRange.startDate\n            ) {\n              filterMapArray.push(candidate);\n            }\n            return filterMapArray;\n          }, [] as DateRange[])\n          .sort((a, b) => a.startDate.getTime() - b.startDate.getTime())[0];\n        if (nextDateRangeWithSameClass) {\n          endTime = dateRangeDateToTimelineSeconds(\n            nextDateRangeWithSameClass.startDate,\n            dateTimeOffset\n          );\n          durationKnown = true;\n        }\n      }\n\n      const attributes = Object.keys(dateRange.attr);\n      for (let j = 0; j < attributes.length; j++) {\n        const key = attributes[j];\n        if (\n          key === DateRangeAttribute.ID ||\n          key === DateRangeAttribute.CLASS ||\n          key === DateRangeAttribute.START_DATE ||\n          key === DateRangeAttribute.DURATION ||\n          key === DateRangeAttribute.END_DATE ||\n          key === DateRangeAttribute.END_ON_NEXT\n        ) {\n          continue;\n        }\n        let cue = cues[key] as any;\n        if (cue) {\n          if (durationKnown && !appendedDateRangeCues.durationKnown) {\n            cue.endTime = endTime;\n          }\n        } else {\n          let data = dateRange.attr[key];\n          cue = new Cue(startTime, endTime, '');\n          if (\n            key === DateRangeAttribute.SCTE35_OUT ||\n            key === DateRangeAttribute.SCTE35_IN\n          ) {\n            data = hexToArrayBuffer(data);\n          }\n          cue.value = { key, data };\n          cue.type = MetadataSchema.dateRange;\n          this.id3Track.addCue(cue);\n          cues[key] = cue;\n        }\n      }\n      dateRangeCuesAppended[id] = {\n        cues,\n        dateRange,\n        durationKnown,\n      };\n    }\n  }\n}\n\nexport default ID3TrackController;\n", "import { LevelDetails } from '../loader/level-details';\nimport { ErrorDetails } from '../errors';\nimport { Events } from '../events';\nimport type {\n  ErrorData,\n  LevelUpdatedData,\n  MediaAttachingData,\n} from '../types/events';\nimport { logger } from '../utils/logger';\nimport type { ComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\nimport type { HlsConfig } from '../config';\n\nexport default class LatencyController implements ComponentAPI {\n  private hls: Hls;\n  private readonly config: HlsConfig;\n  private media: HTMLMediaElement | null = null;\n  private levelDetails: LevelDetails | null = null;\n  private currentTime: number = 0;\n  private stallCount: number = 0;\n  private _latency: number | null = null;\n  private timeupdateHandler = () => this.timeupdate();\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this.config = hls.config;\n    this.registerListeners();\n  }\n\n  get latency(): number {\n    return this._latency || 0;\n  }\n\n  get maxLatency(): number {\n    const { config, levelDetails } = this;\n    if (config.liveMaxLatencyDuration !== undefined) {\n      return config.liveMaxLatencyDuration;\n    }\n    return levelDetails\n      ? config.liveMaxLatencyDurationCount * levelDetails.targetduration\n      : 0;\n  }\n\n  get targetLatency(): number | null {\n    const { levelDetails } = this;\n    if (levelDetails === null) {\n      return null;\n    }\n    const { holdBack, partHoldBack, targetduration } = levelDetails;\n    const { liveSyncDuration, liveSyncDurationCount, lowLatencyMode } =\n      this.config;\n    const userConfig = this.hls.userConfig;\n    let targetLatency = lowLatencyMode ? partHoldBack || holdBack : holdBack;\n    if (\n      userConfig.liveSyncDuration ||\n      userConfig.liveSyncDurationCount ||\n      targetLatency === 0\n    ) {\n      targetLatency =\n        liveSyncDuration !== undefined\n          ? liveSyncDuration\n          : liveSyncDurationCount * targetduration;\n    }\n    const maxLiveSyncOnStallIncrease = targetduration;\n    const liveSyncOnStallIncrease = 1.0;\n    return (\n      targetLatency +\n      Math.min(\n        this.stallCount * liveSyncOnStallIncrease,\n        maxLiveSyncOnStallIncrease\n      )\n    );\n  }\n\n  get liveSyncPosition(): number | null {\n    const liveEdge = this.estimateLiveEdge();\n    const targetLatency = this.targetLatency;\n    const levelDetails = this.levelDetails;\n    if (liveEdge === null || targetLatency === null || levelDetails === null) {\n      return null;\n    }\n    const edge = levelDetails.edge;\n    const syncPosition = liveEdge - targetLatency - this.edgeStalled;\n    const min = edge - levelDetails.totalduration;\n    const max =\n      edge -\n      ((this.config.lowLatencyMode && levelDetails.partTarget) ||\n        levelDetails.targetduration);\n    return Math.min(Math.max(min, syncPosition), max);\n  }\n\n  get drift(): number {\n    const { levelDetails } = this;\n    if (levelDetails === null) {\n      return 1;\n    }\n    return levelDetails.drift;\n  }\n\n  get edgeStalled(): number {\n    const { levelDetails } = this;\n    if (levelDetails === null) {\n      return 0;\n    }\n    const maxLevelUpdateAge =\n      ((this.config.lowLatencyMode && levelDetails.partTarget) ||\n        levelDetails.targetduration) * 3;\n    return Math.max(levelDetails.age - maxLevelUpdateAge, 0);\n  }\n\n  private get forwardBufferLength(): number {\n    const { media, levelDetails } = this;\n    if (!media || !levelDetails) {\n      return 0;\n    }\n    const bufferedRanges = media.buffered.length;\n    return (\n      (bufferedRanges\n        ? media.buffered.end(bufferedRanges - 1)\n        : levelDetails.edge) - this.currentTime\n    );\n  }\n\n  public destroy(): void {\n    this.unregisterListeners();\n    this.onMediaDetaching();\n    this.levelDetails = null;\n    // @ts-ignore\n    this.hls = this.timeupdateHandler = null;\n  }\n\n  private registerListeners() {\n    this.hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    this.hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    this.hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    this.hls.on(Events.LEVEL_UPDATED, this.onLevelUpdated, this);\n    this.hls.on(Events.ERROR, this.onError, this);\n  }\n\n  private unregisterListeners() {\n    this.hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached);\n    this.hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching);\n    this.hls.off(Events.MANIFEST_LOADING, this.onManifestLoading);\n    this.hls.off(Events.LEVEL_UPDATED, this.onLevelUpdated);\n    this.hls.off(Events.ERROR, this.onError);\n  }\n\n  private onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachingData\n  ) {\n    this.media = data.media;\n    this.media.addEventListener('timeupdate', this.timeupdateHandler);\n  }\n\n  private onMediaDetaching() {\n    if (this.media) {\n      this.media.removeEventListener('timeupdate', this.timeupdateHandler);\n      this.media = null;\n    }\n  }\n\n  private onManifestLoading() {\n    this.levelDetails = null;\n    this._latency = null;\n    this.stallCount = 0;\n  }\n\n  private onLevelUpdated(\n    event: Events.LEVEL_UPDATED,\n    { details }: LevelUpdatedData\n  ) {\n    this.levelDetails = details;\n    if (details.advanced) {\n      this.timeupdate();\n    }\n    if (!details.live && this.media) {\n      this.media.removeEventListener('timeupdate', this.timeupdateHandler);\n    }\n  }\n\n  private onError(event: Events.ERROR, data: ErrorData) {\n    if (data.details !== ErrorDetails.BUFFER_STALLED_ERROR) {\n      return;\n    }\n    this.stallCount++;\n    logger.warn(\n      '[playback-rate-controller]: Stall detected, adjusting target latency'\n    );\n  }\n\n  private timeupdate() {\n    const { media, levelDetails } = this;\n    if (!media || !levelDetails) {\n      return;\n    }\n    this.currentTime = media.currentTime;\n\n    const latency = this.computeLatency();\n    if (latency === null) {\n      return;\n    }\n    this._latency = latency;\n\n    // Adapt playbackRate to meet target latency in low-latency mode\n    const { lowLatencyMode, maxLiveSyncPlaybackRate } = this.config;\n    if (!lowLatencyMode || maxLiveSyncPlaybackRate === 1) {\n      return;\n    }\n    const targetLatency = this.targetLatency;\n    if (targetLatency === null) {\n      return;\n    }\n    const distanceFromTarget = latency - targetLatency;\n    // Only adjust playbackRate when within one target duration of targetLatency\n    // and more than one second from under-buffering.\n    // Playback further than one target duration from target can be considered DVR playback.\n    const liveMinLatencyDuration = Math.min(\n      this.maxLatency,\n      targetLatency + levelDetails.targetduration\n    );\n    const inLiveRange = distanceFromTarget < liveMinLatencyDuration;\n    if (\n      levelDetails.live &&\n      inLiveRange &&\n      distanceFromTarget > 0.05 &&\n      this.forwardBufferLength > 1\n    ) {\n      const max = Math.min(2, Math.max(1.0, maxLiveSyncPlaybackRate));\n      const rate =\n        Math.round(\n          (2 / (1 + Math.exp(-0.75 * distanceFromTarget - this.edgeStalled))) *\n            20\n        ) / 20;\n      media.playbackRate = Math.min(max, Math.max(1, rate));\n    } else if (media.playbackRate !== 1 && media.playbackRate !== 0) {\n      media.playbackRate = 1;\n    }\n  }\n\n  private estimateLiveEdge(): number | null {\n    const { levelDetails } = this;\n    if (levelDetails === null) {\n      return null;\n    }\n    return levelDetails.edge + levelDetails.age;\n  }\n\n  private computeLatency(): number | null {\n    const liveEdge = this.estimateLiveEdge();\n    if (liveEdge === null) {\n      return null;\n    }\n    return liveEdge - this.currentTime;\n  }\n}\n", "/*\n * Level Controller\n */\n\nimport {\n  ManifestLoadedData,\n  ManifestParsedData,\n  LevelLoadedData,\n  TrackSwitchedData,\n  FragLoadedData,\n  ErrorData,\n  LevelSwitchingData,\n} from '../types/events';\nimport { HdcpLevel, HdcpLevels, Level } from '../types/level';\nimport { Events } from '../events';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport { isCodecSupportedInMp4 } from '../utils/codecs';\nimport { addGroupId, assignTrackIdsByGroup } from './level-helper';\nimport BasePlaylistController from './base-playlist-controller';\nimport { PlaylistContextType, PlaylistLevelType } from '../types/loader';\nimport type Hls from '../hls';\nimport type { HlsUrlParameters, LevelParsed } from '../types/level';\nimport type { MediaPlaylist } from '../types/media-playlist';\n\nconst chromeOrFirefox: boolean = /chrome|firefox/.test(\n  navigator.userAgent.toLowerCase()\n);\n\nexport default class LevelController extends BasePlaylistController {\n  private _levels: Level[] = [];\n  private _firstLevel: number = -1;\n  private _startLevel?: number;\n  private currentLevelIndex: number = -1;\n  private manualLevelIndex: number = -1;\n\n  public onParsedComplete!: Function;\n\n  constructor(hls: Hls) {\n    super(hls, '[level-controller]');\n    this._registerListeners();\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MANIFEST_LOADED, this.onManifestLoaded, this);\n    hls.on(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.on(Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this);\n    hls.on(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.on(Events.ERROR, this.onError, this);\n  }\n\n  private _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MANIFEST_LOADED, this.onManifestLoaded, this);\n    hls.off(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.off(Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this);\n    hls.off(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.off(Events.ERROR, this.onError, this);\n  }\n\n  public destroy() {\n    this._unregisterListeners();\n    this.manualLevelIndex = -1;\n    this._levels.length = 0;\n    super.destroy();\n  }\n\n  public startLoad(): void {\n    const levels = this._levels;\n\n    // clean up live level details to force reload them, and reset load errors\n    levels.forEach((level) => {\n      level.loadError = 0;\n    });\n\n    super.startLoad();\n  }\n\n  protected onManifestLoaded(\n    event: Events.MANIFEST_LOADED,\n    data: ManifestLoadedData\n  ): void {\n    let levels: Level[] = [];\n    let audioTracks: MediaPlaylist[] = [];\n    let subtitleTracks: MediaPlaylist[] = [];\n    let bitrateStart: number | undefined;\n    const levelSet: { [key: string]: Level } = {};\n    let levelFromSet: Level;\n    let resolutionFound = false;\n    let videoCodecFound = false;\n    let audioCodecFound = false;\n\n    // regroup redundant levels together\n    data.levels.forEach((levelParsed: LevelParsed) => {\n      const attributes = levelParsed.attrs;\n\n      resolutionFound =\n        resolutionFound || !!(levelParsed.width && levelParsed.height);\n      videoCodecFound = videoCodecFound || !!levelParsed.videoCodec;\n      audioCodecFound = audioCodecFound || !!levelParsed.audioCodec;\n\n      // erase audio codec info if browser does not support mp4a.40.34.\n      // demuxer will autodetect codec and fallback to mpeg/audio\n      if (\n        chromeOrFirefox &&\n        levelParsed.audioCodec &&\n        levelParsed.audioCodec.indexOf('mp4a.40.34') !== -1\n      ) {\n        levelParsed.audioCodec = undefined;\n      }\n\n      const levelKey = `${levelParsed.bitrate}-${levelParsed.attrs.RESOLUTION}-${levelParsed.attrs.CODECS}`;\n      levelFromSet = levelSet[levelKey];\n\n      if (!levelFromSet) {\n        levelFromSet = new Level(levelParsed);\n        levelSet[levelKey] = levelFromSet;\n        levels.push(levelFromSet);\n      } else {\n        levelFromSet.url.push(levelParsed.url);\n      }\n\n      if (attributes) {\n        if (attributes.AUDIO) {\n          addGroupId(levelFromSet, 'audio', attributes.AUDIO);\n        }\n        if (attributes.SUBTITLES) {\n          addGroupId(levelFromSet, 'text', attributes.SUBTITLES);\n        }\n      }\n    });\n\n    // remove audio-only level if we also have levels with video codecs or RESOLUTION signalled\n    if ((resolutionFound || videoCodecFound) && audioCodecFound) {\n      levels = levels.filter(\n        ({ videoCodec, width, height }) => !!videoCodec || !!(width && height)\n      );\n    }\n\n    // only keep levels with supported audio/video codecs\n    levels = levels.filter(({ audioCodec, videoCodec }) => {\n      return (\n        (!audioCodec || isCodecSupportedInMp4(audioCodec, 'audio')) &&\n        (!videoCodec || isCodecSupportedInMp4(videoCodec, 'video'))\n      );\n    });\n\n    if (data.audioTracks) {\n      audioTracks = data.audioTracks.filter(\n        (track) =>\n          !track.audioCodec || isCodecSupportedInMp4(track.audioCodec, 'audio')\n      );\n      // Assign ids after filtering as array indices by group-id\n      assignTrackIdsByGroup(audioTracks);\n    }\n\n    if (data.subtitles) {\n      subtitleTracks = data.subtitles;\n      assignTrackIdsByGroup(subtitleTracks);\n    }\n\n    if (levels.length > 0) {\n      // start bitrate is the first bitrate of the manifest\n      bitrateStart = levels[0].bitrate;\n      // sort levels from lowest to highest\n      levels.sort((a, b) => {\n        if (a.attrs['HDCP-LEVEL'] !== b.attrs['HDCP-LEVEL']) {\n          return (a.attrs['HDCP-LEVEL'] || '') > (b.attrs['HDCP-LEVEL'] || '')\n            ? 1\n            : -1;\n        }\n        if (a.bitrate !== b.bitrate) {\n          return a.bitrate - b.bitrate;\n        }\n        if (a.attrs.SCORE !== b.attrs.SCORE) {\n          return (\n            a.attrs.decimalFloatingPoint('SCORE') -\n            b.attrs.decimalFloatingPoint('SCORE')\n          );\n        }\n        if (resolutionFound && a.height !== b.height) {\n          return a.height - b.height;\n        }\n        return 0;\n      });\n      this._levels = levels;\n      // find index of first level in sorted levels\n      for (let i = 0; i < levels.length; i++) {\n        if (levels[i].bitrate === bitrateStart) {\n          this._firstLevel = i;\n          this.log(\n            `manifest loaded, ${levels.length} level(s) found, first bitrate: ${bitrateStart}`\n          );\n          break;\n        }\n      }\n\n      // Audio is only alternate if manifest include a URI along with the audio group tag,\n      // and this is not an audio-only stream where levels contain audio-only\n      const audioOnly = audioCodecFound && !videoCodecFound;\n      const edata: ManifestParsedData = {\n        levels,\n        audioTracks,\n        subtitleTracks,\n        sessionData: data.sessionData,\n        sessionKeys: data.sessionKeys,\n        firstLevel: this._firstLevel,\n        stats: data.stats,\n        audio: audioCodecFound,\n        video: videoCodecFound,\n        altAudio: !audioOnly && audioTracks.some((t) => !!t.url),\n      };\n      this.hls.trigger(Events.MANIFEST_PARSED, edata);\n\n      // Initiate loading after all controllers have received MANIFEST_PARSED\n      if (this.hls.config.autoStartLoad || this.hls.forceStartLoad) {\n        this.hls.startLoad(this.hls.config.startPosition);\n      }\n    } else {\n      this.hls.trigger(Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR,\n        fatal: true,\n        url: data.url,\n        reason: 'no level with compatible codecs found in manifest',\n      });\n    }\n  }\n\n  get levels(): Level[] | null {\n    if (this._levels.length === 0) {\n      return null;\n    }\n    return this._levels;\n  }\n\n  get level(): number {\n    return this.currentLevelIndex;\n  }\n\n  set level(newLevel: number) {\n    const levels = this._levels;\n    if (levels.length === 0) {\n      return;\n    }\n    if (this.currentLevelIndex === newLevel && levels[newLevel]?.details) {\n      return;\n    }\n    // check if level idx is valid\n    if (newLevel < 0 || newLevel >= levels.length) {\n      // invalid level id given, trigger error\n      const fatal = newLevel < 0;\n      this.hls.trigger(Events.ERROR, {\n        type: ErrorTypes.OTHER_ERROR,\n        details: ErrorDetails.LEVEL_SWITCH_ERROR,\n        level: newLevel,\n        fatal,\n        reason: 'invalid level idx',\n      });\n      if (fatal) {\n        return;\n      }\n      newLevel = Math.min(newLevel, levels.length - 1);\n    }\n\n    // stopping live reloading timer if any\n    this.clearTimer();\n\n    const lastLevelIndex = this.currentLevelIndex;\n    const lastLevel = levels[lastLevelIndex];\n    const level = levels[newLevel];\n    this.log(`switching to level ${newLevel} from ${lastLevelIndex}`);\n    this.currentLevelIndex = newLevel;\n\n    const levelSwitchingData: LevelSwitchingData = Object.assign({}, level, {\n      level: newLevel,\n      maxBitrate: level.maxBitrate,\n      uri: level.uri,\n      urlId: level.urlId,\n    });\n    // @ts-ignore\n    delete levelSwitchingData._urlId;\n    this.hls.trigger(Events.LEVEL_SWITCHING, levelSwitchingData);\n    // check if we need to load playlist for this level\n    const levelDetails = level.details;\n    if (!levelDetails || levelDetails.live) {\n      // level not retrieved yet, or live playlist we need to (re)load it\n      const hlsUrlParameters = this.switchParams(level.uri, lastLevel?.details);\n      this.loadPlaylist(hlsUrlParameters);\n    }\n  }\n\n  get manualLevel(): number {\n    return this.manualLevelIndex;\n  }\n\n  set manualLevel(newLevel) {\n    this.manualLevelIndex = newLevel;\n    if (this._startLevel === undefined) {\n      this._startLevel = newLevel;\n    }\n\n    if (newLevel !== -1) {\n      this.level = newLevel;\n    }\n  }\n\n  get firstLevel(): number {\n    return this._firstLevel;\n  }\n\n  set firstLevel(newLevel) {\n    this._firstLevel = newLevel;\n  }\n\n  get startLevel() {\n    // hls.startLevel takes precedence over config.startLevel\n    // if none of these values are defined, fallback on this._firstLevel (first quality level appearing in variant manifest)\n    if (this._startLevel === undefined) {\n      const configStartLevel = this.hls.config.startLevel;\n      if (configStartLevel !== undefined) {\n        return configStartLevel;\n      } else {\n        return this._firstLevel;\n      }\n    } else {\n      return this._startLevel;\n    }\n  }\n\n  set startLevel(newLevel) {\n    this._startLevel = newLevel;\n  }\n\n  protected onError(event: Events.ERROR, data: ErrorData) {\n    super.onError(event, data);\n    if (data.fatal) {\n      return;\n    }\n\n    // Switch to redundant level when track fails to load\n    const context = data.context;\n    const level = this._levels[this.currentLevelIndex];\n    if (\n      context &&\n      ((context.type === PlaylistContextType.AUDIO_TRACK &&\n        level.audioGroupIds &&\n        context.groupId === level.audioGroupIds[level.urlId]) ||\n        (context.type === PlaylistContextType.SUBTITLE_TRACK &&\n          level.textGroupIds &&\n          context.groupId === level.textGroupIds[level.urlId]))\n    ) {\n      this.redundantFailover(this.currentLevelIndex);\n      return;\n    }\n\n    let levelError = false;\n    let levelSwitch = true;\n    let levelIndex;\n\n    // try to recover not fatal errors\n    switch (data.details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n      case ErrorDetails.KEY_LOAD_ERROR:\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\n        if (data.frag) {\n          // Share fragment error count accross media options (main, audio, subs)\n          // This allows for level based rendition switching when media option assets fail\n          const variantLevelIndex =\n            data.frag.type === PlaylistLevelType.MAIN\n              ? data.frag.level\n              : this.currentLevelIndex;\n          const level = this._levels[variantLevelIndex];\n          // Set levelIndex when we're out of fragment retries\n          if (level) {\n            level.fragmentError++;\n            if (level.fragmentError > this.hls.config.fragLoadingMaxRetry) {\n              levelIndex = variantLevelIndex;\n            }\n          } else {\n            levelIndex = variantLevelIndex;\n          }\n        }\n        break;\n      case ErrorDetails.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED: {\n        const restrictedHdcpLevel = level.attrs['HDCP-LEVEL'];\n        if (restrictedHdcpLevel) {\n          this.hls.maxHdcpLevel =\n            HdcpLevels[\n              HdcpLevels.indexOf(restrictedHdcpLevel as HdcpLevel) - 1\n            ];\n          this.warn(\n            `Restricting playback to HDCP-LEVEL of \"${this.hls.maxHdcpLevel}\" or lower`\n          );\n        }\n      }\n      // eslint-disable-next-line no-fallthrough\n      case ErrorDetails.FRAG_PARSING_ERROR:\n      case ErrorDetails.KEY_SYSTEM_NO_SESSION:\n        levelIndex =\n          data.frag?.type === PlaylistLevelType.MAIN\n            ? data.frag.level\n            : this.currentLevelIndex;\n        // Do not retry level. Escalate to fatal if switching levels fails.\n        data.levelRetry = false;\n        break;\n      case ErrorDetails.LEVEL_LOAD_ERROR:\n      case ErrorDetails.LEVEL_LOAD_TIMEOUT:\n        // Do not perform level switch if an error occurred using delivery directives\n        // Attempt to reload level without directives first\n        if (context) {\n          if (context.deliveryDirectives) {\n            levelSwitch = false;\n          }\n          levelIndex = context.level;\n        }\n        levelError = true;\n        break;\n      case ErrorDetails.REMUX_ALLOC_ERROR:\n        levelIndex = data.level ?? this.currentLevelIndex;\n        levelError = true;\n        break;\n    }\n\n    if (levelIndex !== undefined) {\n      this.recoverLevel(data, levelIndex, levelError, levelSwitch);\n    }\n  }\n\n  /**\n   * Switch to a redundant stream if any available.\n   * If redundant stream is not available, emergency switch down if ABR mode is enabled.\n   */\n  private recoverLevel(\n    errorEvent: ErrorData,\n    levelIndex: number,\n    levelError: boolean,\n    levelSwitch: boolean\n  ): void {\n    const { details: errorDetails } = errorEvent;\n    const level = this._levels[levelIndex];\n\n    level.loadError++;\n\n    if (levelError) {\n      const retrying = this.retryLoadingOrFail(errorEvent);\n      if (retrying) {\n        // boolean used to inform stream controller not to switch back to IDLE on non fatal error\n        errorEvent.levelRetry = true;\n      } else {\n        this.currentLevelIndex = -1;\n        return;\n      }\n    }\n\n    if (levelSwitch) {\n      const redundantLevels = level.url.length;\n      // Try redundant fail-over until level.loadError reaches redundantLevels\n      if (redundantLevels > 1 && level.loadError < redundantLevels) {\n        errorEvent.levelRetry = true;\n        this.redundantFailover(levelIndex);\n      } else if (this.manualLevelIndex === -1) {\n        // Search for next level to retry\n        let nextLevel = -1;\n        const levels = this._levels;\n        for (let i = levels.length; i--; ) {\n          const candidate = (i + this.currentLevelIndex) % levels.length;\n          if (\n            candidate !== this.currentLevelIndex &&\n            levels[candidate].loadError === 0\n          ) {\n            nextLevel = candidate;\n            break;\n          }\n        }\n        if (nextLevel > -1 && this.currentLevelIndex !== nextLevel) {\n          this.warn(`${errorDetails}: switch to ${nextLevel}`);\n          errorEvent.levelRetry = true;\n          this.hls.nextAutoLevel = nextLevel;\n        } else if (errorEvent.levelRetry === false) {\n          // No levels to switch to and no more retries\n          errorEvent.fatal = true;\n        }\n      }\n    }\n  }\n\n  private redundantFailover(levelIndex: number) {\n    const level = this._levels[levelIndex];\n    const redundantLevels = level.url.length;\n    if (redundantLevels > 1) {\n      // Update the url id of all levels so that we stay on the same set of variants when level switching\n      const newUrlId = (level.urlId + 1) % redundantLevels;\n      this.warn(`Switching to redundant URL-id ${newUrlId}`);\n      this._levels.forEach((level) => {\n        level.urlId = newUrlId;\n      });\n      this.level = levelIndex;\n    }\n  }\n\n  // reset errors on the successful load of a fragment\n  protected onFragLoaded(event: Events.FRAG_LOADED, { frag }: FragLoadedData) {\n    if (frag !== undefined && frag.type === PlaylistLevelType.MAIN) {\n      const level = this._levels[frag.level];\n      if (level !== undefined) {\n        level.fragmentError = 0;\n        level.loadError = 0;\n      }\n    }\n  }\n\n  protected onLevelLoaded(event: Events.LEVEL_LOADED, data: LevelLoadedData) {\n    const { level, details } = data;\n    const curLevel = this._levels[level];\n\n    if (!curLevel) {\n      this.warn(`Invalid level index ${level}`);\n      if (data.deliveryDirectives?.skip) {\n        details.deltaUpdateFailed = true;\n      }\n      return;\n    }\n\n    // only process level loaded events matching with expected level\n    if (level === this.currentLevelIndex) {\n      // reset level load error counter on successful level loaded only if there is no issues with fragments\n      if (curLevel.fragmentError === 0) {\n        curLevel.loadError = 0;\n        this.retryCount = 0;\n      }\n      this.playlistLoaded(level, data, curLevel.details);\n    } else if (data.deliveryDirectives?.skip) {\n      // received a delta playlist update that cannot be merged\n      details.deltaUpdateFailed = true;\n    }\n  }\n\n  protected onAudioTrackSwitched(\n    event: Events.AUDIO_TRACK_SWITCHED,\n    data: TrackSwitchedData\n  ) {\n    const currentLevel = this.hls.levels[this.currentLevelIndex];\n    if (!currentLevel) {\n      return;\n    }\n\n    if (currentLevel.audioGroupIds) {\n      let urlId = -1;\n      const audioGroupId = this.hls.audioTracks[data.id].groupId;\n      for (let i = 0; i < currentLevel.audioGroupIds.length; i++) {\n        if (currentLevel.audioGroupIds[i] === audioGroupId) {\n          urlId = i;\n          break;\n        }\n      }\n\n      if (urlId !== currentLevel.urlId) {\n        currentLevel.urlId = urlId;\n        this.startLoad();\n      }\n    }\n  }\n\n  protected loadPlaylist(hlsUrlParameters?: HlsUrlParameters) {\n    super.loadPlaylist();\n    const level = this.currentLevelIndex;\n    const currentLevel = this._levels[level];\n\n    if (this.canLoad && currentLevel && currentLevel.url.length > 0) {\n      const id = currentLevel.urlId;\n      let url = currentLevel.url[id];\n      if (hlsUrlParameters) {\n        try {\n          url = hlsUrlParameters.addDirectives(url);\n        } catch (error) {\n          this.warn(\n            `Could not construct new URL with HLS Delivery Directives: ${error}`\n          );\n        }\n      }\n\n      this.log(\n        `Attempt loading level index ${level}${\n          hlsUrlParameters?.msn !== undefined\n            ? ' at sn ' +\n              hlsUrlParameters.msn +\n              ' part ' +\n              hlsUrlParameters.part\n            : ''\n        } with URL-id ${id} ${url}`\n      );\n\n      // console.log('Current audio track group ID:', this.hls.audioTracks[this.hls.audioTrack].groupId);\n      // console.log('New video quality level audio group id:', levelObject.attrs.AUDIO, level);\n      this.clearTimer();\n      this.hls.trigger(Events.LEVEL_LOADING, {\n        url,\n        level,\n        id,\n        deliveryDirectives: hlsUrlParameters || null,\n      });\n    }\n  }\n\n  get nextLoadLevel() {\n    if (this.manualLevelIndex !== -1) {\n      return this.manualLevelIndex;\n    } else {\n      return this.hls.nextAutoLevel;\n    }\n  }\n\n  set nextLoadLevel(nextLevel) {\n    this.level = nextLevel;\n    if (this.manualLevelIndex === -1) {\n      this.hls.nextAutoLevel = nextLevel;\n    }\n  }\n\n  removeLevel(levelIndex, urlId) {\n    const filterLevelAndGroupByIdIndex = (url, id) => id !== urlId;\n    const levels = this._levels\n      .filter((level, index) => {\n        if (index !== levelIndex) {\n          return true;\n        }\n\n        if (level.url.length > 1 && urlId !== undefined) {\n          level.url = level.url.filter(filterLevelAndGroupByIdIndex);\n          if (level.audioGroupIds) {\n            level.audioGroupIds = level.audioGroupIds.filter(\n              filterLevelAndGroupByIdIndex\n            );\n          }\n          if (level.textGroupIds) {\n            level.textGroupIds = level.textGroupIds.filter(\n              filterLevelAndGroupByIdIndex\n            );\n          }\n          level.urlId = 0;\n          return true;\n        }\n        return false;\n      })\n      .map((level, index) => {\n        const { details } = level;\n        if (details?.fragments) {\n          details.fragments.forEach((fragment) => {\n            fragment.level = index;\n          });\n        }\n        return level;\n      });\n    this._levels = levels;\n\n    this.hls.trigger(Events.LEVELS_UPDATED, { levels });\n  }\n}\n", "/**\n * @module LevelHelper\n * Providing methods dealing with playlist sliding and drift\n * */\n\nimport { logger } from '../utils/logger';\nimport { Fragment, Part } from '../loader/fragment';\nimport { LevelDetails } from '../loader/level-details';\nimport type { Level } from '../types/level';\nimport type { MediaPlaylist } from '../types/media-playlist';\nimport { DateRange } from '../loader/date-range';\n\ntype FragmentIntersection = (oldFrag: Fragment, newFrag: Fragment) => void;\ntype PartIntersection = (oldPart: Part, newPart: Part) => void;\n\nexport function addGroupId(level: Level, type: string, id: string): void {\n  switch (type) {\n    case 'audio':\n      if (!level.audioGroupIds) {\n        level.audioGroupIds = [];\n      }\n      level.audioGroupIds.push(id);\n      break;\n    case 'text':\n      if (!level.textGroupIds) {\n        level.textGroupIds = [];\n      }\n      level.textGroupIds.push(id);\n      break;\n  }\n}\n\nexport function assignTrackIdsByGroup(tracks: MediaPlaylist[]): void {\n  const groups = {};\n  tracks.forEach((track) => {\n    const groupId = track.groupId || '';\n    track.id = groups[groupId] = groups[groupId] || 0;\n    groups[groupId]++;\n  });\n}\n\nexport function updatePTS(\n  fragments: Fragment[],\n  fromIdx: number,\n  toIdx: number\n): void {\n  const fragFrom = fragments[fromIdx];\n  const fragTo = fragments[toIdx];\n  updateFromToPTS(fragFrom, fragTo);\n}\n\nfunction updateFromToPTS(fragFrom: Fragment, fragTo: Fragment) {\n  const fragToPTS = fragTo.startPTS as number;\n  // if we know startPTS[toIdx]\n  if (Number.isFinite(fragToPTS)) {\n    // update fragment duration.\n    // it helps to fix drifts between playlist reported duration and fragment real duration\n    let duration: number = 0;\n    let frag: Fragment;\n    if (fragTo.sn > fragFrom.sn) {\n      duration = fragToPTS - fragFrom.start;\n      frag = fragFrom;\n    } else {\n      duration = fragFrom.start - fragToPTS;\n      frag = fragTo;\n    }\n    // TODO? Drift can go either way, or the playlist could be completely accurate\n    // console.assert(duration > 0,\n    //   `duration of ${duration} computed for frag ${frag.sn}, level ${frag.level}, there should be some duration drift between playlist and fragment!`);\n    if (frag.duration !== duration) {\n      frag.duration = duration;\n    }\n    // we dont know startPTS[toIdx]\n  } else if (fragTo.sn > fragFrom.sn) {\n    const contiguous = fragFrom.cc === fragTo.cc;\n    // TODO: With part-loading end/durations we need to confirm the whole fragment is loaded before using (or setting) minEndPTS\n    if (contiguous && fragFrom.minEndPTS) {\n      fragTo.start = fragFrom.start + (fragFrom.minEndPTS - fragFrom.start);\n    } else {\n      fragTo.start = fragFrom.start + fragFrom.duration;\n    }\n  } else {\n    fragTo.start = Math.max(fragFrom.start - fragTo.duration, 0);\n  }\n}\n\nexport function updateFragPTSDTS(\n  details: LevelDetails | undefined,\n  frag: Fragment,\n  startPTS: number,\n  endPTS: number,\n  startDTS: number,\n  endDTS: number\n): number {\n  const parsedMediaDuration = endPTS - startPTS;\n  if (parsedMediaDuration <= 0) {\n    logger.warn('Fragment should have a positive duration', frag);\n    endPTS = startPTS + frag.duration;\n    endDTS = startDTS + frag.duration;\n  }\n  let maxStartPTS = startPTS;\n  let minEndPTS = endPTS;\n  const fragStartPts = frag.startPTS as number;\n  const fragEndPts = frag.endPTS as number;\n  if (Number.isFinite(fragStartPts)) {\n    // delta PTS between audio and video\n    const deltaPTS = Math.abs(fragStartPts - startPTS);\n    if (!Number.isFinite(frag.deltaPTS as number)) {\n      frag.deltaPTS = deltaPTS;\n    } else {\n      frag.deltaPTS = Math.max(deltaPTS, frag.deltaPTS as number);\n    }\n\n    maxStartPTS = Math.max(startPTS, fragStartPts);\n    startPTS = Math.min(startPTS, fragStartPts);\n    startDTS = Math.min(startDTS, frag.startDTS);\n\n    minEndPTS = Math.min(endPTS, fragEndPts);\n    endPTS = Math.max(endPTS, fragEndPts);\n    endDTS = Math.max(endDTS, frag.endDTS);\n  }\n  frag.duration = endPTS - startPTS;\n\n  const drift = startPTS - frag.start;\n  frag.start = frag.startPTS = startPTS;\n  frag.maxStartPTS = maxStartPTS;\n  frag.startDTS = startDTS;\n  frag.endPTS = endPTS;\n  frag.minEndPTS = minEndPTS;\n  frag.endDTS = endDTS;\n\n  const sn = frag.sn as number; // 'initSegment'\n  // exit if sn out of range\n  if (!details || sn < details.startSN || sn > details.endSN) {\n    return 0;\n  }\n  let i;\n  const fragIdx = sn - details.startSN;\n  const fragments = details.fragments;\n  // update frag reference in fragments array\n  // rationale is that fragments array might not contain this frag object.\n  // this will happen if playlist has been refreshed between frag loading and call to updateFragPTSDTS()\n  // if we don't update frag, we won't be able to propagate PTS info on the playlist\n  // resulting in invalid sliding computation\n  fragments[fragIdx] = frag;\n  // adjust fragment PTS/duration from seqnum-1 to frag 0\n  for (i = fragIdx; i > 0; i--) {\n    updateFromToPTS(fragments[i], fragments[i - 1]);\n  }\n\n  // adjust fragment PTS/duration from seqnum to last frag\n  for (i = fragIdx; i < fragments.length - 1; i++) {\n    updateFromToPTS(fragments[i], fragments[i + 1]);\n  }\n  if (details.fragmentHint) {\n    updateFromToPTS(fragments[fragments.length - 1], details.fragmentHint);\n  }\n\n  details.PTSKnown = details.alignedSliding = true;\n  return drift;\n}\n\nexport function mergeDetails(\n  oldDetails: LevelDetails,\n  newDetails: LevelDetails\n): void {\n  // Track the last initSegment processed. Initialize it to the last one on the timeline.\n  let currentInitSegment: Fragment | null = null;\n  const oldFragments = oldDetails.fragments;\n  for (let i = oldFragments.length - 1; i >= 0; i--) {\n    const oldInit = oldFragments[i].initSegment;\n    if (oldInit) {\n      currentInitSegment = oldInit;\n      break;\n    }\n  }\n\n  if (oldDetails.fragmentHint) {\n    // prevent PTS and duration from being adjusted on the next hint\n    delete oldDetails.fragmentHint.endPTS;\n  }\n  // check if old/new playlists have fragments in common\n  // loop through overlapping SN and update startPTS , cc, and duration if any found\n  let ccOffset = 0;\n  let PTSFrag;\n  mapFragmentIntersection(\n    oldDetails,\n    newDetails,\n    (oldFrag: Fragment, newFrag: Fragment) => {\n      if (oldFrag.relurl) {\n        // Do not compare CC if the old fragment has no url. This is a level.fragmentHint used by LL-HLS parts.\n        // It maybe be off by 1 if it was created before any parts or discontinuity tags were appended to the end\n        // of the playlist.\n        ccOffset = oldFrag.cc - newFrag.cc;\n      }\n      if (\n        Number.isFinite(oldFrag.startPTS) &&\n        Number.isFinite(oldFrag.endPTS)\n      ) {\n        newFrag.start = newFrag.startPTS = oldFrag.startPTS as number;\n        newFrag.startDTS = oldFrag.startDTS;\n        newFrag.appendedPTS = oldFrag.appendedPTS;\n        newFrag.maxStartPTS = oldFrag.maxStartPTS;\n\n        newFrag.endPTS = oldFrag.endPTS;\n        newFrag.endDTS = oldFrag.endDTS;\n        newFrag.minEndPTS = oldFrag.minEndPTS;\n        newFrag.duration =\n          (oldFrag.endPTS as number) - (oldFrag.startPTS as number);\n\n        if (newFrag.duration) {\n          PTSFrag = newFrag;\n        }\n\n        // PTS is known when any segment has startPTS and endPTS\n        newDetails.PTSKnown = newDetails.alignedSliding = true;\n      }\n      newFrag.elementaryStreams = oldFrag.elementaryStreams;\n      newFrag.loader = oldFrag.loader;\n      newFrag.stats = oldFrag.stats;\n      newFrag.urlId = oldFrag.urlId;\n      if (oldFrag.initSegment) {\n        newFrag.initSegment = oldFrag.initSegment;\n        currentInitSegment = oldFrag.initSegment;\n      }\n    }\n  );\n\n  if (currentInitSegment) {\n    const fragmentsToCheck = newDetails.fragmentHint\n      ? newDetails.fragments.concat(newDetails.fragmentHint)\n      : newDetails.fragments;\n    fragmentsToCheck.forEach((frag) => {\n      if (\n        !frag.initSegment ||\n        frag.initSegment.relurl === currentInitSegment?.relurl\n      ) {\n        frag.initSegment = currentInitSegment;\n      }\n    });\n  }\n\n  if (newDetails.skippedSegments) {\n    newDetails.deltaUpdateFailed = newDetails.fragments.some((frag) => !frag);\n    if (newDetails.deltaUpdateFailed) {\n      logger.warn(\n        '[level-helper] Previous playlist missing segments skipped in delta playlist'\n      );\n      for (let i = newDetails.skippedSegments; i--; ) {\n        newDetails.fragments.shift();\n      }\n      newDetails.startSN = newDetails.fragments[0].sn as number;\n      newDetails.startCC = newDetails.fragments[0].cc;\n    } else if (newDetails.canSkipDateRanges) {\n      newDetails.dateRanges = mergeDateRanges(\n        oldDetails.dateRanges,\n        newDetails.dateRanges,\n        newDetails.recentlyRemovedDateranges\n      );\n    }\n  }\n\n  const newFragments = newDetails.fragments;\n  if (ccOffset) {\n    logger.warn('discontinuity sliding from playlist, take drift into account');\n    for (let i = 0; i < newFragments.length; i++) {\n      newFragments[i].cc += ccOffset;\n    }\n  }\n  if (newDetails.skippedSegments) {\n    newDetails.startCC = newDetails.fragments[0].cc;\n  }\n\n  // Merge parts\n  mapPartIntersection(\n    oldDetails.partList,\n    newDetails.partList,\n    (oldPart: Part, newPart: Part) => {\n      newPart.elementaryStreams = oldPart.elementaryStreams;\n      newPart.stats = oldPart.stats;\n    }\n  );\n\n  // if at least one fragment contains PTS info, recompute PTS information for all fragments\n  if (PTSFrag) {\n    updateFragPTSDTS(\n      newDetails,\n      PTSFrag,\n      PTSFrag.startPTS,\n      PTSFrag.endPTS,\n      PTSFrag.startDTS,\n      PTSFrag.endDTS\n    );\n  } else {\n    // ensure that delta is within oldFragments range\n    // also adjust sliding in case delta is 0 (we could have old=[50-60] and new=old=[50-61])\n    // in that case we also need to adjust start offset of all fragments\n    adjustSliding(oldDetails, newDetails);\n  }\n\n  if (newFragments.length) {\n    newDetails.totalduration = newDetails.edge - newFragments[0].start;\n  }\n\n  newDetails.driftStartTime = oldDetails.driftStartTime;\n  newDetails.driftStart = oldDetails.driftStart;\n  const advancedDateTime = newDetails.advancedDateTime;\n  if (newDetails.advanced && advancedDateTime) {\n    const edge = newDetails.edge;\n    if (!newDetails.driftStart) {\n      newDetails.driftStartTime = advancedDateTime;\n      newDetails.driftStart = edge;\n    }\n    newDetails.driftEndTime = advancedDateTime;\n    newDetails.driftEnd = edge;\n  } else {\n    newDetails.driftEndTime = oldDetails.driftEndTime;\n    newDetails.driftEnd = oldDetails.driftEnd;\n    newDetails.advancedDateTime = oldDetails.advancedDateTime;\n  }\n}\n\nfunction mergeDateRanges(\n  oldDateRanges: Record<string, DateRange>,\n  deltaDateRanges: Record<string, DateRange>,\n  recentlyRemovedDateranges: string[] | undefined\n): Record<string, DateRange> {\n  const dateRanges = Object.assign({}, oldDateRanges);\n  if (recentlyRemovedDateranges) {\n    recentlyRemovedDateranges.forEach((id) => {\n      delete dateRanges[id];\n    });\n  }\n  Object.keys(deltaDateRanges).forEach((id) => {\n    const dateRange = new DateRange(deltaDateRanges[id].attr, dateRanges[id]);\n    if (dateRange.isValid) {\n      dateRanges[id] = dateRange;\n    } else {\n      logger.warn(\n        `Ignoring invalid Playlist Delta Update DATERANGE tag: \"${JSON.stringify(\n          deltaDateRanges[id].attr\n        )}\"`\n      );\n    }\n  });\n  return dateRanges;\n}\n\nexport function mapPartIntersection(\n  oldParts: Part[] | null,\n  newParts: Part[] | null,\n  intersectionFn: PartIntersection\n) {\n  if (oldParts && newParts) {\n    let delta = 0;\n    for (let i = 0, len = oldParts.length; i <= len; i++) {\n      const oldPart = oldParts[i];\n      const newPart = newParts[i + delta];\n      if (\n        oldPart &&\n        newPart &&\n        oldPart.index === newPart.index &&\n        oldPart.fragment.sn === newPart.fragment.sn\n      ) {\n        intersectionFn(oldPart, newPart);\n      } else {\n        delta--;\n      }\n    }\n  }\n}\n\nexport function mapFragmentIntersection(\n  oldDetails: LevelDetails,\n  newDetails: LevelDetails,\n  intersectionFn: FragmentIntersection\n): void {\n  const skippedSegments = newDetails.skippedSegments;\n  const start =\n    Math.max(oldDetails.startSN, newDetails.startSN) - newDetails.startSN;\n  const end =\n    (oldDetails.fragmentHint ? 1 : 0) +\n    (skippedSegments\n      ? newDetails.endSN\n      : Math.min(oldDetails.endSN, newDetails.endSN)) -\n    newDetails.startSN;\n  const delta = newDetails.startSN - oldDetails.startSN;\n  const newFrags = newDetails.fragmentHint\n    ? newDetails.fragments.concat(newDetails.fragmentHint)\n    : newDetails.fragments;\n  const oldFrags = oldDetails.fragmentHint\n    ? oldDetails.fragments.concat(oldDetails.fragmentHint)\n    : oldDetails.fragments;\n\n  for (let i = start; i <= end; i++) {\n    const oldFrag = oldFrags[delta + i];\n    let newFrag = newFrags[i];\n    if (skippedSegments && !newFrag && i < skippedSegments) {\n      // Fill in skipped segments in delta playlist\n      newFrag = newDetails.fragments[i] = oldFrag;\n    }\n    if (oldFrag && newFrag) {\n      intersectionFn(oldFrag, newFrag);\n    }\n  }\n}\n\nexport function adjustSliding(\n  oldDetails: LevelDetails,\n  newDetails: LevelDetails\n): void {\n  const delta =\n    newDetails.startSN + newDetails.skippedSegments - oldDetails.startSN;\n  const oldFragments = oldDetails.fragments;\n  if (delta < 0 || delta >= oldFragments.length) {\n    return;\n  }\n  addSliding(newDetails, oldFragments[delta].start);\n}\n\nexport function addSliding(details: LevelDetails, start: number) {\n  if (start) {\n    const fragments = details.fragments;\n    for (let i = details.skippedSegments; i < fragments.length; i++) {\n      fragments[i].start += start;\n    }\n    if (details.fragmentHint) {\n      details.fragmentHint.start += start;\n    }\n  }\n}\n\nexport function computeReloadInterval(\n  newDetails: LevelDetails,\n  distanceToLiveEdgeMs: number = Infinity\n): number {\n  let reloadInterval = 1000 * newDetails.targetduration;\n\n  if (newDetails.updated) {\n    // Use last segment duration when shorter than target duration and near live edge\n    const fragments = newDetails.fragments;\n    const liveEdgeMaxTargetDurations = 4;\n    if (\n      fragments.length &&\n      reloadInterval * liveEdgeMaxTargetDurations > distanceToLiveEdgeMs\n    ) {\n      const lastSegmentDuration =\n        fragments[fragments.length - 1].duration * 1000;\n      if (lastSegmentDuration < reloadInterval) {\n        reloadInterval = lastSegmentDuration;\n      }\n    }\n  } else {\n    // estimate = 'miss half average';\n    // follow HLS Spec, If the client reloads a Playlist file and finds that it has not\n    // changed then it MUST wait for a period of one-half the target\n    // duration before retrying.\n    reloadInterval /= 2;\n  }\n\n  return Math.round(reloadInterval);\n}\n\nexport function getFragmentWithSN(\n  level: Level,\n  sn: number,\n  fragCurrent: Fragment | null\n): Fragment | null {\n  if (!level || !level.details) {\n    return null;\n  }\n  const levelDetails = level.details;\n  let fragment: Fragment | undefined =\n    levelDetails.fragments[sn - levelDetails.startSN];\n  if (fragment) {\n    return fragment;\n  }\n  fragment = levelDetails.fragmentHint;\n  if (fragment && fragment.sn === sn) {\n    return fragment;\n  }\n  if (sn < levelDetails.startSN && fragCurrent && fragCurrent.sn === sn) {\n    return fragCurrent;\n  }\n  return null;\n}\n\nexport function getPartWith(\n  level: Level,\n  sn: number,\n  partIndex: number\n): Part | null {\n  if (!level || !level.details) {\n    return null;\n  }\n  const partList = level.details.partList;\n  if (partList) {\n    for (let i = partList.length; i--; ) {\n      const part = partList[i];\n      if (part.index === partIndex && part.fragment.sn === sn) {\n        return part;\n      }\n    }\n  }\n  return null;\n}\n", "import BaseStreamController, { State } from './base-stream-controller';\nimport { changeTypeSupported } from '../is-supported';\nimport { Events } from '../events';\nimport { BufferHelper, BufferInfo } from '../utils/buffer-helper';\nimport { FragmentState } from './fragment-tracker';\nimport { PlaylistLevelType } from '../types/loader';\nimport { ElementaryStreamTypes, Fragment } from '../loader/fragment';\nimport TransmuxerInterface from '../demux/transmuxer-interface';\nimport { ChunkMetadata } from '../types/transmuxer';\nimport GapController from './gap-controller';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport type { NetworkComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\nimport type { Level } from '../types/level';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { FragmentTracker } from './fragment-tracker';\nimport type KeyLoader from '../loader/key-loader';\nimport type { TransmuxerResult } from '../types/transmuxer';\nimport type { TrackSet } from '../types/track';\nimport type { SourceBufferName } from '../types/buffer';\nimport type {\n  AudioTrackSwitchedData,\n  AudioTrackSwitchingData,\n  BufferCreatedData,\n  BufferEOSData,\n  BufferFlushedData,\n  ErrorData,\n  FragBufferedData,\n  FragLoadedData,\n  FragParsingMetadataData,\n  FragParsingUserdataData,\n  LevelLoadedData,\n  LevelLoadingData,\n  LevelsUpdatedData,\n  ManifestParsedData,\n  MediaAttachedData,\n} from '../types/events';\n\nconst TICK_INTERVAL = 100; // how often to tick in ms\n\nexport default class StreamController\n  extends BaseStreamController\n  implements NetworkComponentAPI\n{\n  private audioCodecSwap: boolean = false;\n  private gapController: GapController | null = null;\n  private level: number = -1;\n  private _forceStartLoad: boolean = false;\n  private altAudio: boolean = false;\n  private audioOnly: boolean = false;\n  private fragPlaying: Fragment | null = null;\n  private onvplaying: EventListener | null = null;\n  private onvseeked: EventListener | null = null;\n  private fragLastKbps: number = 0;\n  private couldBacktrack: boolean = false;\n  private backtrackFragment: Fragment | null = null;\n  private audioCodecSwitch: boolean = false;\n  private videoBuffer: any | null = null;\n\n  constructor(\n    hls: Hls,\n    fragmentTracker: FragmentTracker,\n    keyLoader: KeyLoader\n  ) {\n    super(hls, fragmentTracker, keyLoader, '[stream-controller]');\n    this._registerListeners();\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.on(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.on(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.on(\n      Events.FRAG_LOAD_EMERGENCY_ABORTED,\n      this.onFragLoadEmergencyAborted,\n      this\n    );\n    hls.on(Events.ERROR, this.onError, this);\n    hls.on(Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this);\n    hls.on(Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this);\n    hls.on(Events.BUFFER_CREATED, this.onBufferCreated, this);\n    hls.on(Events.BUFFER_FLUSHED, this.onBufferFlushed, this);\n    hls.on(Events.LEVELS_UPDATED, this.onLevelsUpdated, this);\n    hls.on(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n  }\n\n  protected _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.off(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.off(\n      Events.FRAG_LOAD_EMERGENCY_ABORTED,\n      this.onFragLoadEmergencyAborted,\n      this\n    );\n    hls.off(Events.ERROR, this.onError, this);\n    hls.off(Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this);\n    hls.off(Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this);\n    hls.off(Events.BUFFER_CREATED, this.onBufferCreated, this);\n    hls.off(Events.BUFFER_FLUSHED, this.onBufferFlushed, this);\n    hls.off(Events.LEVELS_UPDATED, this.onLevelsUpdated, this);\n    hls.off(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n  }\n\n  protected onHandlerDestroying() {\n    this._unregisterListeners();\n    this.onMediaDetaching();\n  }\n\n  public startLoad(startPosition: number): void {\n    if (this.levels) {\n      const { lastCurrentTime, hls } = this;\n      this.stopLoad();\n      this.setInterval(TICK_INTERVAL);\n      this.level = -1;\n      this.fragLoadError = 0;\n      if (!this.startFragRequested) {\n        // determine load level\n        let startLevel = hls.startLevel;\n        if (startLevel === -1) {\n          if (hls.config.testBandwidth && this.levels.length > 1) {\n            // -1 : guess start Level by doing a bitrate test by loading first fragment of lowest quality level\n            startLevel = 0;\n            this.bitrateTest = true;\n          } else {\n            startLevel = hls.nextAutoLevel;\n          }\n        }\n        // set new level to playlist loader : this will trigger start level load\n        // hls.nextLoadLevel remains until it is set to a new value or until a new frag is successfully loaded\n        this.level = hls.nextLoadLevel = startLevel;\n        this.loadedmetadata = false;\n      }\n      // if startPosition undefined but lastCurrentTime set, set startPosition to last currentTime\n      if (lastCurrentTime > 0 && startPosition === -1) {\n        this.log(\n          `Override startPosition with lastCurrentTime @${lastCurrentTime.toFixed(\n            3\n          )}`\n        );\n        startPosition = lastCurrentTime;\n      }\n      this.state = State.IDLE;\n      this.nextLoadPosition =\n        this.startPosition =\n        this.lastCurrentTime =\n          startPosition;\n      this.tick();\n    } else {\n      this._forceStartLoad = true;\n      this.state = State.STOPPED;\n    }\n  }\n\n  public stopLoad() {\n    this._forceStartLoad = false;\n    super.stopLoad();\n  }\n\n  protected doTick() {\n    switch (this.state) {\n      case State.IDLE:\n        this.doTickIdle();\n        break;\n      case State.WAITING_LEVEL: {\n        const { levels, level } = this;\n        const details = levels?.[level]?.details;\n        if (details && (!details.live || this.levelLastLoaded === this.level)) {\n          if (this.waitForCdnTuneIn(details)) {\n            break;\n          }\n          this.state = State.IDLE;\n          break;\n        }\n        break;\n      }\n      case State.FRAG_LOADING_WAITING_RETRY:\n        {\n          const now = self.performance.now();\n          const retryDate = this.retryDate;\n          // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\n          if (!retryDate || now >= retryDate || this.media?.seeking) {\n            this.log('retryDate reached, switch back to IDLE state');\n            this.resetStartWhenNotLoaded(this.level);\n            this.state = State.IDLE;\n          }\n        }\n        break;\n      default:\n        break;\n    }\n    // check buffer\n    // check/update current fragment\n    this.onTickEnd();\n  }\n\n  protected onTickEnd() {\n    super.onTickEnd();\n    this.checkBuffer();\n    this.checkFragmentChanged();\n  }\n\n  private doTickIdle() {\n    const { hls, levelLastLoaded, levels, media } = this;\n    const { config, nextLoadLevel: level } = hls;\n\n    // if start level not parsed yet OR\n    // if video not attached AND start fragment already requested OR start frag prefetch not enabled\n    // exit loop, as we either need more info (level not parsed) or we need media to be attached to load new fragment\n    if (\n      levelLastLoaded === null ||\n      (!media && (this.startFragRequested || !config.startFragPrefetch))\n    ) {\n      return;\n    }\n\n    // If the \"main\" level is audio-only but we are loading an alternate track in the same group, do not load anything\n    if (this.altAudio && this.audioOnly) {\n      return;\n    }\n\n    if (!levels || !levels[level]) {\n      return;\n    }\n\n    const levelInfo = levels[level];\n\n    // if buffer length is less than maxBufLen try to load a new fragment\n\n    const bufferInfo = this.getMainFwdBufferInfo();\n    if (bufferInfo === null) {\n      return;\n    }\n\n    const lastDetails = this.getLevelDetails();\n    if (lastDetails && this._streamEnded(bufferInfo, lastDetails)) {\n      const data: BufferEOSData = {};\n      if (this.altAudio) {\n        data.type = 'video';\n      }\n\n      this.hls.trigger(Events.BUFFER_EOS, data);\n      this.state = State.ENDED;\n      return;\n    }\n\n    // set next load level : this will trigger a playlist load if needed\n    this.level = hls.nextLoadLevel = level;\n\n    const levelDetails = levelInfo.details;\n    // if level info not retrieved yet, switch state and wait for level retrieval\n    // if live playlist, ensure that new playlist has been refreshed to avoid loading/try to load\n    // a useless and outdated fragment (that might even introduce load error if it is already out of the live playlist)\n    if (\n      !levelDetails ||\n      this.state === State.WAITING_LEVEL ||\n      (levelDetails.live && this.levelLastLoaded !== level)\n    ) {\n      this.level = level;\n      this.state = State.WAITING_LEVEL;\n      return;\n    }\n\n    const bufferLen = bufferInfo.len;\n\n    // compute max Buffer Length that we could get from this load level, based on level bitrate. don't buffer more than 60 MB and more than 30s\n    const maxBufLen = this.getMaxBufferLength(levelInfo.maxBitrate);\n\n    // Stay idle if we are still with buffer margins\n    if (bufferLen >= maxBufLen) {\n      return;\n    }\n\n    if (\n      this.backtrackFragment &&\n      this.backtrackFragment.start > bufferInfo.end\n    ) {\n      this.backtrackFragment = null;\n    }\n    const targetBufferTime = this.backtrackFragment\n      ? this.backtrackFragment.start\n      : bufferInfo.end;\n    let frag = this.getNextFragment(targetBufferTime, levelDetails);\n    // Avoid backtracking by loading an earlier segment in streams with segments that do not start with a key frame (flagged by `couldBacktrack`)\n    if (\n      this.couldBacktrack &&\n      !this.fragPrevious &&\n      frag &&\n      frag.sn !== 'initSegment' &&\n      this.fragmentTracker.getState(frag) !== FragmentState.OK\n    ) {\n      const backtrackSn = (this.backtrackFragment ?? frag).sn as number;\n      const fragIdx = backtrackSn - levelDetails.startSN;\n      const backtrackFrag = levelDetails.fragments[fragIdx - 1];\n      if (backtrackFrag && frag.cc === backtrackFrag.cc) {\n        frag = backtrackFrag;\n        this.fragmentTracker.removeFragment(backtrackFrag);\n      }\n    } else if (this.backtrackFragment && bufferInfo.len) {\n      this.backtrackFragment = null;\n    }\n    // Avoid loop loading by using nextLoadPosition set for backtracking\n    if (\n      frag &&\n      this.fragmentTracker.getState(frag) === FragmentState.OK &&\n      this.nextLoadPosition > targetBufferTime\n    ) {\n      // Cleanup the fragment tracker before trying to find the next unbuffered fragment\n      const type =\n        this.audioOnly && !this.altAudio\n          ? ElementaryStreamTypes.AUDIO\n          : ElementaryStreamTypes.VIDEO;\n      const mediaBuffer =\n        (type === ElementaryStreamTypes.VIDEO\n          ? this.videoBuffer\n          : this.mediaBuffer) || this.media;\n      if (mediaBuffer) {\n        this.afterBufferFlushed(mediaBuffer, type, PlaylistLevelType.MAIN);\n      }\n      frag = this.getNextFragment(this.nextLoadPosition, levelDetails);\n    }\n    if (!frag) {\n      return;\n    }\n    if (frag.initSegment && !frag.initSegment.data && !this.bitrateTest) {\n      frag = frag.initSegment;\n    }\n\n    this.loadFragment(frag, levelDetails, targetBufferTime);\n  }\n\n  protected loadFragment(\n    frag: Fragment,\n    levelDetails: LevelDetails,\n    targetBufferTime: number\n  ) {\n    // Check if fragment is not loaded\n    const fragState = this.fragmentTracker.getState(frag);\n    this.fragCurrent = frag;\n    if (fragState === FragmentState.NOT_LOADED) {\n      if (frag.sn === 'initSegment') {\n        this._loadInitSegment(frag, levelDetails);\n      } else if (this.bitrateTest) {\n        this.log(\n          `Fragment ${frag.sn} of level ${frag.level} is being downloaded to test bitrate and will not be buffered`\n        );\n        this._loadBitrateTestFrag(frag, levelDetails);\n      } else {\n        this.startFragRequested = true;\n        super.loadFragment(frag, levelDetails, targetBufferTime);\n      }\n    } else if (fragState === FragmentState.APPENDING) {\n      // Lower the buffer size and try again\n      if (this.reduceMaxBufferLength(frag.duration)) {\n        this.fragmentTracker.removeFragment(frag);\n      }\n    } else if (this.media?.buffered.length === 0) {\n      // Stop gap for bad tracker / buffer flush behavior\n      this.fragmentTracker.removeAllFragments();\n    }\n  }\n\n  private getAppendedFrag(position): Fragment | null {\n    const fragOrPart = this.fragmentTracker.getAppendedFrag(\n      position,\n      PlaylistLevelType.MAIN\n    );\n    if (fragOrPart && 'fragment' in fragOrPart) {\n      return fragOrPart.fragment;\n    }\n    return fragOrPart;\n  }\n\n  private getBufferedFrag(position) {\n    return this.fragmentTracker.getBufferedFrag(\n      position,\n      PlaylistLevelType.MAIN\n    );\n  }\n\n  private followingBufferedFrag(frag: Fragment | null) {\n    if (frag) {\n      // try to get range of next fragment (500ms after this range)\n      return this.getBufferedFrag(frag.end + 0.5);\n    }\n    return null;\n  }\n\n  /*\n    on immediate level switch :\n     - pause playback if playing\n     - cancel any pending load request\n     - and trigger a buffer flush\n  */\n  public immediateLevelSwitch() {\n    this.abortCurrentFrag();\n    this.flushMainBuffer(0, Number.POSITIVE_INFINITY);\n  }\n\n  /**\n   * try to switch ASAP without breaking video playback:\n   * in order to ensure smooth but quick level switching,\n   * we need to find the next flushable buffer range\n   * we should take into account new segment fetch time\n   */\n  public nextLevelSwitch() {\n    const { levels, media } = this;\n    // ensure that media is defined and that metadata are available (to retrieve currentTime)\n    if (media?.readyState) {\n      let fetchdelay;\n      const fragPlayingCurrent = this.getAppendedFrag(media.currentTime);\n      if (fragPlayingCurrent && fragPlayingCurrent.start > 1) {\n        // flush buffer preceding current fragment (flush until current fragment start offset)\n        // minus 1s to avoid video freezing, that could happen if we flush keyframe of current video ...\n        this.flushMainBuffer(0, fragPlayingCurrent.start - 1);\n      }\n      if (!media.paused && levels) {\n        // add a safety delay of 1s\n        const nextLevelId = this.hls.nextLoadLevel;\n        const nextLevel = levels[nextLevelId];\n        const fragLastKbps = this.fragLastKbps;\n        if (fragLastKbps && this.fragCurrent) {\n          fetchdelay =\n            (this.fragCurrent.duration * nextLevel.maxBitrate) /\n              (1000 * fragLastKbps) +\n            1;\n        } else {\n          fetchdelay = 0;\n        }\n      } else {\n        fetchdelay = 0;\n      }\n      // this.log('fetchdelay:'+fetchdelay);\n      // find buffer range that will be reached once new fragment will be fetched\n      const bufferedFrag = this.getBufferedFrag(media.currentTime + fetchdelay);\n      if (bufferedFrag) {\n        // we can flush buffer range following this one without stalling playback\n        const nextBufferedFrag = this.followingBufferedFrag(bufferedFrag);\n        if (nextBufferedFrag) {\n          // if we are here, we can also cancel any loading/demuxing in progress, as they are useless\n          this.abortCurrentFrag();\n          // start flush position is in next buffered frag. Leave some padding for non-independent segments and smoother playback.\n          const maxStart = nextBufferedFrag.maxStartPTS\n            ? nextBufferedFrag.maxStartPTS\n            : nextBufferedFrag.start;\n          const fragDuration = nextBufferedFrag.duration;\n          const startPts = Math.max(\n            bufferedFrag.end,\n            maxStart +\n              Math.min(\n                Math.max(\n                  fragDuration - this.config.maxFragLookUpTolerance,\n                  fragDuration * 0.5\n                ),\n                fragDuration * 0.75\n              )\n          );\n          this.flushMainBuffer(startPts, Number.POSITIVE_INFINITY);\n        }\n      }\n    }\n  }\n\n  private abortCurrentFrag() {\n    const fragCurrent = this.fragCurrent;\n    this.fragCurrent = null;\n    this.backtrackFragment = null;\n    if (fragCurrent) {\n      fragCurrent.abortRequests();\n    }\n    switch (this.state) {\n      case State.KEY_LOADING:\n      case State.FRAG_LOADING:\n      case State.FRAG_LOADING_WAITING_RETRY:\n      case State.PARSING:\n      case State.PARSED:\n        this.state = State.IDLE;\n        break;\n    }\n    this.nextLoadPosition = this.getLoadPosition();\n  }\n\n  protected flushMainBuffer(startOffset: number, endOffset: number) {\n    super.flushMainBuffer(\n      startOffset,\n      endOffset,\n      this.altAudio ? 'video' : null\n    );\n  }\n\n  protected onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachedData\n  ) {\n    super.onMediaAttached(event, data);\n    const media = data.media;\n    this.onvplaying = this.onMediaPlaying.bind(this);\n    this.onvseeked = this.onMediaSeeked.bind(this);\n    media.addEventListener('playing', this.onvplaying as EventListener);\n    media.addEventListener('seeked', this.onvseeked as EventListener);\n    this.gapController = new GapController(\n      this.config,\n      media,\n      this.fragmentTracker,\n      this.hls\n    );\n  }\n\n  protected onMediaDetaching() {\n    const { media } = this;\n    if (media && this.onvplaying && this.onvseeked) {\n      media.removeEventListener('playing', this.onvplaying);\n      media.removeEventListener('seeked', this.onvseeked);\n      this.onvplaying = this.onvseeked = null;\n      this.videoBuffer = null;\n    }\n    this.fragPlaying = null;\n    if (this.gapController) {\n      this.gapController.destroy();\n      this.gapController = null;\n    }\n    super.onMediaDetaching();\n  }\n\n  private onMediaPlaying() {\n    // tick to speed up FRAG_CHANGED triggering\n    this.tick();\n  }\n\n  private onMediaSeeked() {\n    const media = this.media;\n    const currentTime = media ? media.currentTime : null;\n    if (Number.isFinite(currentTime)) {\n      this.log(`Media seeked to ${(currentTime as number).toFixed(3)}`);\n    }\n\n    // tick to speed up FRAG_CHANGED triggering\n    this.tick();\n  }\n\n  private onManifestLoading() {\n    // reset buffer on manifest loading\n    this.log('Trigger BUFFER_RESET');\n    this.hls.trigger(Events.BUFFER_RESET, undefined);\n    this.fragmentTracker.removeAllFragments();\n    this.couldBacktrack = false;\n    this.startPosition = this.lastCurrentTime = 0;\n    this.fragPlaying = null;\n    this.backtrackFragment = null;\n  }\n\n  private onManifestParsed(\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ) {\n    let aac = false;\n    let heaac = false;\n    let codec;\n    data.levels.forEach((level) => {\n      // detect if we have different kind of audio codecs used amongst playlists\n      codec = level.audioCodec;\n      if (codec) {\n        if (codec.indexOf('mp4a.40.2') !== -1) {\n          aac = true;\n        }\n\n        if (codec.indexOf('mp4a.40.5') !== -1) {\n          heaac = true;\n        }\n      }\n    });\n    this.audioCodecSwitch = aac && heaac && !changeTypeSupported();\n    if (this.audioCodecSwitch) {\n      this.log(\n        'Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC'\n      );\n    }\n\n    this.levels = data.levels;\n    this.startFragRequested = false;\n  }\n\n  private onLevelLoading(event: Events.LEVEL_LOADING, data: LevelLoadingData) {\n    const { levels } = this;\n    if (!levels || this.state !== State.IDLE) {\n      return;\n    }\n    const level = levels[data.level];\n    if (\n      !level.details ||\n      (level.details.live && this.levelLastLoaded !== data.level) ||\n      this.waitForCdnTuneIn(level.details)\n    ) {\n      this.state = State.WAITING_LEVEL;\n    }\n  }\n\n  private onLevelLoaded(event: Events.LEVEL_LOADED, data: LevelLoadedData) {\n    const { levels } = this;\n    const newLevelId = data.level;\n    const newDetails = data.details;\n    const duration = newDetails.totalduration;\n\n    if (!levels) {\n      this.warn(`Levels were reset while loading level ${newLevelId}`);\n      return;\n    }\n    this.log(\n      `Level ${newLevelId} loaded [${newDetails.startSN},${newDetails.endSN}], cc [${newDetails.startCC}, ${newDetails.endCC}] duration:${duration}`\n    );\n\n    const fragCurrent = this.fragCurrent;\n    if (\n      fragCurrent &&\n      (this.state === State.FRAG_LOADING ||\n        this.state === State.FRAG_LOADING_WAITING_RETRY)\n    ) {\n      if (fragCurrent.level !== data.level && fragCurrent.loader) {\n        this.state = State.IDLE;\n        this.backtrackFragment = null;\n        fragCurrent.abortRequests();\n      }\n    }\n\n    const curLevel = levels[newLevelId];\n    let sliding = 0;\n    if (newDetails.live || curLevel.details?.live) {\n      if (!newDetails.fragments[0]) {\n        newDetails.deltaUpdateFailed = true;\n      }\n      if (newDetails.deltaUpdateFailed) {\n        return;\n      }\n      sliding = this.alignPlaylists(newDetails, curLevel.details);\n    }\n    // override level info\n    curLevel.details = newDetails;\n    this.levelLastLoaded = newLevelId;\n\n    this.hls.trigger(Events.LEVEL_UPDATED, {\n      details: newDetails,\n      level: newLevelId,\n    });\n\n    // only switch back to IDLE state if we were waiting for level to start downloading a new fragment\n    if (this.state === State.WAITING_LEVEL) {\n      if (this.waitForCdnTuneIn(newDetails)) {\n        // Wait for Low-Latency CDN Tune-in\n        return;\n      }\n      this.state = State.IDLE;\n    }\n\n    if (!this.startFragRequested) {\n      this.setStartPosition(newDetails, sliding);\n    } else if (newDetails.live) {\n      this.synchronizeToLiveEdge(newDetails);\n    }\n\n    // trigger handler right now\n    this.tick();\n  }\n\n  protected _handleFragmentLoadProgress(data: FragLoadedData) {\n    const { frag, part, payload } = data;\n    const { levels } = this;\n    if (!levels) {\n      this.warn(\n        `Levels were reset while fragment load was in progress. Fragment ${frag.sn} of level ${frag.level} will not be buffered`\n      );\n      return;\n    }\n    const currentLevel = levels[frag.level];\n    const details = currentLevel.details as LevelDetails;\n    if (!details) {\n      this.warn(\n        `Dropping fragment ${frag.sn} of level ${frag.level} after level details were reset`\n      );\n      return;\n    }\n    const videoCodec = currentLevel.videoCodec;\n\n    // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live)\n    const accurateTimeOffset = details.PTSKnown || !details.live;\n    const initSegmentData = frag.initSegment?.data;\n    const audioCodec = this._getAudioCodec(currentLevel);\n\n    // transmux the MPEG-TS data to ISO-BMFF segments\n    // this.log(`Transmuxing ${frag.sn} of [${details.startSN} ,${details.endSN}],level ${frag.level}, cc ${frag.cc}`);\n    const transmuxer = (this.transmuxer =\n      this.transmuxer ||\n      new TransmuxerInterface(\n        this.hls,\n        PlaylistLevelType.MAIN,\n        this._handleTransmuxComplete.bind(this),\n        this._handleTransmuxerFlush.bind(this)\n      ));\n    const partIndex = part ? part.index : -1;\n    const partial = partIndex !== -1;\n    const chunkMeta = new ChunkMetadata(\n      frag.level,\n      frag.sn as number,\n      frag.stats.chunkCount,\n      payload.byteLength,\n      partIndex,\n      partial\n    );\n    const initPTS = this.initPTS[frag.cc];\n\n    transmuxer.push(\n      payload,\n      initSegmentData,\n      audioCodec,\n      videoCodec,\n      frag,\n      part,\n      details.totalduration,\n      accurateTimeOffset,\n      chunkMeta,\n      initPTS\n    );\n  }\n\n  private onAudioTrackSwitching(\n    event: Events.AUDIO_TRACK_SWITCHING,\n    data: AudioTrackSwitchingData\n  ) {\n    // if any URL found on new audio track, it is an alternate audio track\n    const fromAltAudio = this.altAudio;\n    const altAudio = !!data.url;\n    const trackId = data.id;\n    // if we switch on main audio, ensure that main fragment scheduling is synced with media.buffered\n    // don't do anything if we switch to alt audio: audio stream controller is handling it.\n    // we will just have to change buffer scheduling on audioTrackSwitched\n    if (!altAudio) {\n      if (this.mediaBuffer !== this.media) {\n        this.log(\n          'Switching on main audio, use media.buffered to schedule main fragment loading'\n        );\n        this.mediaBuffer = this.media;\n        const fragCurrent = this.fragCurrent;\n        // we need to refill audio buffer from main: cancel any frag loading to speed up audio switch\n        if (fragCurrent) {\n          this.log('Switching to main audio track, cancel main fragment load');\n          fragCurrent.abortRequests();\n        }\n        // destroy transmuxer to force init segment generation (following audio switch)\n        this.resetTransmuxer();\n        // switch to IDLE state to load new fragment\n        this.resetLoadingState();\n      } else if (this.audioOnly) {\n        // Reset audio transmuxer so when switching back to main audio we're not still appending where we left off\n        this.resetTransmuxer();\n      }\n      const hls = this.hls;\n      // If switching from alt to main audio, flush all audio and trigger track switched\n      if (fromAltAudio) {\n        hls.trigger(Events.BUFFER_FLUSHING, {\n          startOffset: 0,\n          endOffset: Number.POSITIVE_INFINITY,\n          type: 'audio',\n        });\n      }\n      hls.trigger(Events.AUDIO_TRACK_SWITCHED, {\n        id: trackId,\n      });\n    }\n  }\n\n  private onAudioTrackSwitched(\n    event: Events.AUDIO_TRACK_SWITCHED,\n    data: AudioTrackSwitchedData\n  ) {\n    const trackId = data.id;\n    const altAudio = !!this.hls.audioTracks[trackId].url;\n    if (altAudio) {\n      const videoBuffer = this.videoBuffer;\n      // if we switched on alternate audio, ensure that main fragment scheduling is synced with video sourcebuffer buffered\n      if (videoBuffer && this.mediaBuffer !== videoBuffer) {\n        this.log(\n          'Switching on alternate audio, use video.buffered to schedule main fragment loading'\n        );\n        this.mediaBuffer = videoBuffer;\n      }\n    }\n    this.altAudio = altAudio;\n    this.tick();\n  }\n\n  private onBufferCreated(\n    event: Events.BUFFER_CREATED,\n    data: BufferCreatedData\n  ) {\n    const tracks = data.tracks;\n    let mediaTrack;\n    let name;\n    let alternate = false;\n    for (const type in tracks) {\n      const track = tracks[type];\n      if (track.id === 'main') {\n        name = type;\n        mediaTrack = track;\n        // keep video source buffer reference\n        if (type === 'video') {\n          const videoTrack = tracks[type];\n          if (videoTrack) {\n            this.videoBuffer = videoTrack.buffer;\n          }\n        }\n      } else {\n        alternate = true;\n      }\n    }\n    if (alternate && mediaTrack) {\n      this.log(\n        `Alternate track found, use ${name}.buffered to schedule main fragment loading`\n      );\n      this.mediaBuffer = mediaTrack.buffer;\n    } else {\n      this.mediaBuffer = this.media;\n    }\n  }\n\n  private onFragBuffered(event: Events.FRAG_BUFFERED, data: FragBufferedData) {\n    const { frag, part } = data;\n    if (frag && frag.type !== PlaylistLevelType.MAIN) {\n      return;\n    }\n    if (this.fragContextChanged(frag)) {\n      // If a level switch was requested while a fragment was buffering, it will emit the FRAG_BUFFERED event upon completion\n      // Avoid setting state back to IDLE, since that will interfere with a level switch\n      this.warn(\n        `Fragment ${frag.sn}${part ? ' p: ' + part.index : ''} of level ${\n          frag.level\n        } finished buffering, but was aborted. state: ${this.state}`\n      );\n      if (this.state === State.PARSED) {\n        this.state = State.IDLE;\n      }\n      return;\n    }\n    const stats = part ? part.stats : frag.stats;\n    this.fragLastKbps = Math.round(\n      (8 * stats.total) / (stats.buffering.end - stats.loading.first)\n    );\n    if (frag.sn !== 'initSegment') {\n      this.fragPrevious = frag;\n    }\n    this.fragBufferedComplete(frag, part);\n  }\n\n  private onError(event: Events.ERROR, data: ErrorData) {\n    if (data.type === ErrorTypes.KEY_SYSTEM_ERROR) {\n      this.onFragmentOrKeyLoadError(PlaylistLevelType.MAIN, data);\n      return;\n    }\n    switch (data.details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n      case ErrorDetails.FRAG_PARSING_ERROR:\n      case ErrorDetails.KEY_LOAD_ERROR:\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\n        this.onFragmentOrKeyLoadError(PlaylistLevelType.MAIN, data);\n        break;\n      case ErrorDetails.LEVEL_LOAD_ERROR:\n      case ErrorDetails.LEVEL_LOAD_TIMEOUT:\n        if (this.state !== State.ERROR) {\n          if (data.fatal) {\n            // if fatal error, stop processing\n            this.warn(`${data.details}`);\n            this.state = State.ERROR;\n          } else {\n            // in case of non fatal error while loading level, if level controller is not retrying to load level , switch back to IDLE\n            if (!data.levelRetry && this.state === State.WAITING_LEVEL) {\n              this.state = State.IDLE;\n            }\n          }\n        }\n        break;\n      case ErrorDetails.BUFFER_FULL_ERROR:\n        // if in appending state\n        if (\n          data.parent === 'main' &&\n          (this.state === State.PARSING || this.state === State.PARSED)\n        ) {\n          let flushBuffer = true;\n          const bufferedInfo = this.getFwdBufferInfo(\n            this.media,\n            PlaylistLevelType.MAIN\n          );\n          // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end\n          // reduce max buf len if current position is buffered\n          if (bufferedInfo && bufferedInfo.len > 0.5) {\n            flushBuffer = !this.reduceMaxBufferLength(bufferedInfo.len);\n          }\n          if (flushBuffer) {\n            // current position is not buffered, but browser is still complaining about buffer full error\n            // this happens on IE/Edge, refer to https://github.com/video-dev/hls.js/pull/708\n            // in that case flush the whole buffer to recover\n            this.warn(\n              'buffer full error also media.currentTime is not buffered, flush main'\n            );\n            // flush main buffer\n            this.immediateLevelSwitch();\n          }\n          this.resetLoadingState();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Checks the health of the buffer and attempts to resolve playback stalls.\n  private checkBuffer() {\n    const { media, gapController } = this;\n    if (!media || !gapController || !media.readyState) {\n      // Exit early if we don't have media or if the media hasn't buffered anything yet (readyState 0)\n      return;\n    }\n\n    if (this.loadedmetadata || !BufferHelper.getBuffered(media).length) {\n      // Resolve gaps using the main buffer, whose ranges are the intersections of the A/V sourcebuffers\n      const activeFrag = this.state !== State.IDLE ? this.fragCurrent : null;\n      gapController.poll(this.lastCurrentTime, activeFrag);\n    }\n\n    this.lastCurrentTime = media.currentTime;\n  }\n\n  private onFragLoadEmergencyAborted() {\n    this.state = State.IDLE;\n    // if loadedmetadata is not set, it means that we are emergency switch down on first frag\n    // in that case, reset startFragRequested flag\n    if (!this.loadedmetadata) {\n      this.startFragRequested = false;\n      this.nextLoadPosition = this.startPosition;\n    }\n    this.tickImmediate();\n  }\n\n  private onBufferFlushed(\n    event: Events.BUFFER_FLUSHED,\n    { type }: BufferFlushedData\n  ) {\n    if (\n      type !== ElementaryStreamTypes.AUDIO ||\n      (this.audioOnly && !this.altAudio)\n    ) {\n      const mediaBuffer =\n        (type === ElementaryStreamTypes.VIDEO\n          ? this.videoBuffer\n          : this.mediaBuffer) || this.media;\n      this.afterBufferFlushed(mediaBuffer, type, PlaylistLevelType.MAIN);\n    }\n  }\n\n  private onLevelsUpdated(\n    event: Events.LEVELS_UPDATED,\n    data: LevelsUpdatedData\n  ) {\n    this.levels = data.levels;\n  }\n\n  public swapAudioCodec() {\n    this.audioCodecSwap = !this.audioCodecSwap;\n  }\n\n  /**\n   * Seeks to the set startPosition if not equal to the mediaElement's current time.\n   */\n  protected seekToStartPos() {\n    const { media } = this;\n    if (!media) {\n      return;\n    }\n    const currentTime = media.currentTime;\n    let startPosition = this.startPosition;\n    // only adjust currentTime if different from startPosition or if startPosition not buffered\n    // at that stage, there should be only one buffered range, as we reach that code after first fragment has been buffered\n    if (startPosition >= 0 && currentTime < startPosition) {\n      if (media.seeking) {\n        this.log(\n          `could not seek to ${startPosition}, already seeking at ${currentTime}`\n        );\n        return;\n      }\n      const buffered = BufferHelper.getBuffered(media);\n      const bufferStart = buffered.length ? buffered.start(0) : 0;\n      const delta = bufferStart - startPosition;\n      if (\n        delta > 0 &&\n        (delta < this.config.maxBufferHole ||\n          delta < this.config.maxFragLookUpTolerance)\n      ) {\n        this.log(`adjusting start position by ${delta} to match buffer start`);\n        startPosition += delta;\n        this.startPosition = startPosition;\n      }\n      this.log(\n        `seek to target start position ${startPosition} from current time ${currentTime}`\n      );\n      media.currentTime = startPosition;\n    }\n  }\n\n  private _getAudioCodec(currentLevel) {\n    let audioCodec = this.config.defaultAudioCodec || currentLevel.audioCodec;\n    if (this.audioCodecSwap && audioCodec) {\n      this.log('Swapping audio codec');\n      if (audioCodec.indexOf('mp4a.40.5') !== -1) {\n        audioCodec = 'mp4a.40.2';\n      } else {\n        audioCodec = 'mp4a.40.5';\n      }\n    }\n\n    return audioCodec;\n  }\n\n  private _loadBitrateTestFrag(frag: Fragment, levelDetails: LevelDetails) {\n    frag.bitrateTest = true;\n    this._doFragLoad(frag, levelDetails).then((data) => {\n      const { hls } = this;\n      if (!data || this.fragContextChanged(frag)) {\n        return;\n      }\n      this.fragLoadError = 0;\n      this.state = State.IDLE;\n      this.startFragRequested = false;\n      this.bitrateTest = false;\n      const stats = frag.stats;\n      // Bitrate tests fragments are neither parsed nor buffered\n      stats.parsing.start =\n        stats.parsing.end =\n        stats.buffering.start =\n        stats.buffering.end =\n          self.performance.now();\n      hls.trigger(Events.FRAG_LOADED, data as FragLoadedData);\n      frag.bitrateTest = false;\n    });\n  }\n\n  private _handleTransmuxComplete(transmuxResult: TransmuxerResult) {\n    const id = 'main';\n    const { hls } = this;\n    const { remuxResult, chunkMeta } = transmuxResult;\n\n    const context = this.getCurrentContext(chunkMeta);\n    if (!context) {\n      this.warn(\n        `The loading context changed while buffering fragment ${chunkMeta.sn} of level ${chunkMeta.level}. This chunk will not be buffered.`\n      );\n      this.resetStartWhenNotLoaded(chunkMeta.level);\n      return;\n    }\n    const { frag, part, level } = context;\n    const { video, text, id3, initSegment } = remuxResult;\n    const { details } = level;\n    // The audio-stream-controller handles audio buffering if Hls.js is playing an alternate audio track\n    const audio = this.altAudio ? undefined : remuxResult.audio;\n\n    // Check if the current fragment has been aborted. We check this by first seeing if we're still playing the current level.\n    // If we are, subsequently check if the currently loading fragment (fragCurrent) has changed.\n    if (this.fragContextChanged(frag)) {\n      return;\n    }\n\n    this.state = State.PARSING;\n\n    if (initSegment) {\n      if (initSegment.tracks) {\n        this._bufferInitSegment(level, initSegment.tracks, frag, chunkMeta);\n        hls.trigger(Events.FRAG_PARSING_INIT_SEGMENT, {\n          frag,\n          id,\n          tracks: initSegment.tracks,\n        });\n      }\n\n      // This would be nice if Number.isFinite acted as a typeguard, but it doesn't. See: https://github.com/Microsoft/TypeScript/issues/10038\n      const initPTS = initSegment.initPTS as number;\n      const timescale = initSegment.timescale as number;\n      if (Number.isFinite(initPTS)) {\n        this.initPTS[frag.cc] = initPTS;\n        hls.trigger(Events.INIT_PTS_FOUND, { frag, id, initPTS, timescale });\n      }\n    }\n\n    // Avoid buffering if backtracking this fragment\n    if (video && remuxResult.independent !== false) {\n      if (details) {\n        const { startPTS, endPTS, startDTS, endDTS } = video;\n        if (part) {\n          part.elementaryStreams[video.type] = {\n            startPTS,\n            endPTS,\n            startDTS,\n            endDTS,\n          };\n        } else {\n          if (video.firstKeyFrame && video.independent && chunkMeta.id === 1) {\n            this.couldBacktrack = true;\n          }\n          if (video.dropped && video.independent) {\n            // Backtrack if dropped frames create a gap after currentTime\n\n            const bufferInfo = this.getMainFwdBufferInfo();\n            const targetBufferTime =\n              (bufferInfo ? bufferInfo.end : this.getLoadPosition()) +\n              this.config.maxBufferHole;\n            const startTime = video.firstKeyFramePTS\n              ? video.firstKeyFramePTS\n              : startPTS;\n            if (targetBufferTime < startTime - this.config.maxBufferHole) {\n              this.backtrack(frag);\n              return;\n            }\n            // Set video stream start to fragment start so that truncated samples do not distort the timeline, and mark it partial\n            frag.setElementaryStreamInfo(\n              video.type as ElementaryStreamTypes,\n              frag.start,\n              endPTS,\n              frag.start,\n              endDTS,\n              true\n            );\n          }\n        }\n        frag.setElementaryStreamInfo(\n          video.type as ElementaryStreamTypes,\n          startPTS,\n          endPTS,\n          startDTS,\n          endDTS\n        );\n        if (this.backtrackFragment) {\n          this.backtrackFragment = frag;\n        }\n        this.bufferFragmentData(video, frag, part, chunkMeta);\n      }\n    } else if (remuxResult.independent === false) {\n      this.backtrack(frag);\n      return;\n    }\n\n    if (audio) {\n      const { startPTS, endPTS, startDTS, endDTS } = audio;\n      if (part) {\n        part.elementaryStreams[ElementaryStreamTypes.AUDIO] = {\n          startPTS,\n          endPTS,\n          startDTS,\n          endDTS,\n        };\n      }\n      frag.setElementaryStreamInfo(\n        ElementaryStreamTypes.AUDIO,\n        startPTS,\n        endPTS,\n        startDTS,\n        endDTS\n      );\n      this.bufferFragmentData(audio, frag, part, chunkMeta);\n    }\n\n    if (details && id3?.samples?.length) {\n      const emittedID3: FragParsingMetadataData = {\n        id,\n        frag,\n        details,\n        samples: id3.samples,\n      };\n      hls.trigger(Events.FRAG_PARSING_METADATA, emittedID3);\n    }\n    if (details && text) {\n      const emittedText: FragParsingUserdataData = {\n        id,\n        frag,\n        details,\n        samples: text.samples,\n      };\n      hls.trigger(Events.FRAG_PARSING_USERDATA, emittedText);\n    }\n  }\n\n  private _bufferInitSegment(\n    currentLevel: Level,\n    tracks: TrackSet,\n    frag: Fragment,\n    chunkMeta: ChunkMetadata\n  ) {\n    if (this.state !== State.PARSING) {\n      return;\n    }\n\n    this.audioOnly = !!tracks.audio && !tracks.video;\n\n    // if audio track is expected to come from audio stream controller, discard any coming from main\n    if (this.altAudio && !this.audioOnly) {\n      delete tracks.audio;\n    }\n    // include levelCodec in audio and video tracks\n    const { audio, video, audiovideo } = tracks;\n    if (audio) {\n      let audioCodec = currentLevel.audioCodec;\n      const ua = navigator.userAgent.toLowerCase();\n      if (this.audioCodecSwitch) {\n        if (audioCodec) {\n          if (audioCodec.indexOf('mp4a.40.5') !== -1) {\n            audioCodec = 'mp4a.40.2';\n          } else {\n            audioCodec = 'mp4a.40.5';\n          }\n        }\n        // In the case that AAC and HE-AAC audio codecs are signalled in manifest,\n        // force HE-AAC, as it seems that most browsers prefers it.\n        // don't force HE-AAC if mono stream, or in Firefox\n        if (audio.metadata.channelCount !== 1 && ua.indexOf('firefox') === -1) {\n          audioCodec = 'mp4a.40.5';\n        }\n      }\n      // HE-AAC is broken on Android, always signal audio codec as AAC even if variant manifest states otherwise\n      if (ua.indexOf('android') !== -1 && audio.container !== 'audio/mpeg') {\n        // Exclude mpeg audio\n        audioCodec = 'mp4a.40.2';\n        this.log(`Android: force audio codec to ${audioCodec}`);\n      }\n      if (currentLevel.audioCodec && currentLevel.audioCodec !== audioCodec) {\n        this.log(\n          `Swapping manifest audio codec \"${currentLevel.audioCodec}\" for \"${audioCodec}\"`\n        );\n      }\n      audio.levelCodec = audioCodec;\n      audio.id = 'main';\n      this.log(\n        `Init audio buffer, container:${\n          audio.container\n        }, codecs[selected/level/parsed]=[${audioCodec || ''}/${\n          currentLevel.audioCodec || ''\n        }/${audio.codec}]`\n      );\n    }\n    if (video) {\n      video.levelCodec = currentLevel.videoCodec;\n      video.id = 'main';\n      this.log(\n        `Init video buffer, container:${\n          video.container\n        }, codecs[level/parsed]=[${currentLevel.videoCodec || ''}/${\n          video.codec\n        }]`\n      );\n    }\n    if (audiovideo) {\n      this.log(\n        `Init audiovideo buffer, container:${\n          audiovideo.container\n        }, codecs[level/parsed]=[${currentLevel.attrs.CODECS || ''}/${\n          audiovideo.codec\n        }]`\n      );\n    }\n    this.hls.trigger(Events.BUFFER_CODECS, tracks);\n    // loop through tracks that are going to be provided to bufferController\n    Object.keys(tracks).forEach((trackName) => {\n      const track = tracks[trackName];\n      const initSegment = track.initSegment;\n      if (initSegment?.byteLength) {\n        this.hls.trigger(Events.BUFFER_APPENDING, {\n          type: trackName as SourceBufferName,\n          data: initSegment,\n          frag,\n          part: null,\n          chunkMeta,\n          parent: frag.type,\n        });\n      }\n    });\n    // trigger handler right now\n    this.tick();\n  }\n\n  public getMainFwdBufferInfo(): BufferInfo | null {\n    return this.getFwdBufferInfo(\n      this.mediaBuffer ? this.mediaBuffer : this.media,\n      PlaylistLevelType.MAIN\n    );\n  }\n\n  private backtrack(frag: Fragment) {\n    this.couldBacktrack = true;\n    // Causes findFragments to backtrack through fragments to find the keyframe\n    this.backtrackFragment = frag;\n    this.resetTransmuxer();\n    this.flushBufferGap(frag);\n    this.fragmentTracker.removeFragment(frag);\n    this.fragPrevious = null;\n    this.nextLoadPosition = frag.start;\n    this.state = State.IDLE;\n  }\n\n  private checkFragmentChanged() {\n    const video = this.media;\n    let fragPlayingCurrent: Fragment | null = null;\n    if (video && video.readyState > 1 && video.seeking === false) {\n      const currentTime = video.currentTime;\n      /* if video element is in seeked state, currentTime can only increase.\n        (assuming that playback rate is positive ...)\n        As sometimes currentTime jumps back to zero after a\n        media decode error, check this, to avoid seeking back to\n        wrong position after a media decode error\n      */\n\n      if (BufferHelper.isBuffered(video, currentTime)) {\n        fragPlayingCurrent = this.getAppendedFrag(currentTime);\n      } else if (BufferHelper.isBuffered(video, currentTime + 0.1)) {\n        /* ensure that FRAG_CHANGED event is triggered at startup,\n          when first video frame is displayed and playback is paused.\n          add a tolerance of 100ms, in case current position is not buffered,\n          check if current pos+100ms is buffered and use that buffer range\n          for FRAG_CHANGED event reporting */\n        fragPlayingCurrent = this.getAppendedFrag(currentTime + 0.1);\n      }\n      if (fragPlayingCurrent) {\n        this.backtrackFragment = null;\n        const fragPlaying = this.fragPlaying;\n        const fragCurrentLevel = fragPlayingCurrent.level;\n        if (\n          !fragPlaying ||\n          fragPlayingCurrent.sn !== fragPlaying.sn ||\n          fragPlaying.level !== fragCurrentLevel ||\n          fragPlayingCurrent.urlId !== fragPlaying.urlId\n        ) {\n          this.fragPlaying = fragPlayingCurrent;\n          this.hls.trigger(Events.FRAG_CHANGED, { frag: fragPlayingCurrent });\n          if (!fragPlaying || fragPlaying.level !== fragCurrentLevel) {\n            this.hls.trigger(Events.LEVEL_SWITCHED, {\n              level: fragCurrentLevel,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  get nextLevel(): number {\n    const frag = this.nextBufferedFrag;\n    if (frag) {\n      return frag.level;\n    }\n    return -1;\n  }\n\n  get currentFrag(): Fragment | null {\n    const media = this.media;\n    if (media) {\n      return this.fragPlaying || this.getAppendedFrag(media.currentTime);\n    }\n    return null;\n  }\n\n  get currentProgramDateTime(): Date | null {\n    const media = this.media;\n    if (media) {\n      const currentTime = media.currentTime;\n      const frag = this.currentFrag;\n      if (\n        frag &&\n        Number.isFinite(currentTime) &&\n        Number.isFinite(frag.programDateTime)\n      ) {\n        const epocMs =\n          (frag.programDateTime as number) + (currentTime - frag.start) * 1000;\n        return new Date(epocMs);\n      }\n    }\n    return null;\n  }\n\n  get currentLevel(): number {\n    const frag = this.currentFrag;\n    if (frag) {\n      return frag.level;\n    }\n    return -1;\n  }\n\n  get nextBufferedFrag() {\n    const frag = this.currentFrag;\n    if (frag) {\n      return this.followingBufferedFrag(frag);\n    }\n    return null;\n  }\n\n  get forceStartLoad() {\n    return this._forceStartLoad;\n  }\n}\n", "import { Events } from '../events';\nimport { Bufferable, BufferHelper } from '../utils/buffer-helper';\nimport { findFragmentByPTS } from './fragment-finders';\nimport { alignMediaPlaylistByPDT } from '../utils/discontinuities';\nimport { addSliding } from './level-helper';\nimport { FragmentState } from './fragment-tracker';\nimport BaseStreamController, { State } from './base-stream-controller';\nimport { PlaylistLevelType } from '../types/loader';\nimport { Level } from '../types/level';\nimport type { NetworkComponentAPI } from '../types/component-api';\nimport type Hls from '../hls';\nimport type { FragmentTracker } from './fragment-tracker';\nimport type KeyLoader from '../loader/key-loader';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { Fragment } from '../loader/fragment';\nimport type {\n  ErrorData,\n  FragLoadedData,\n  SubtitleFragProcessed,\n  SubtitleTracksUpdatedData,\n  TrackLoadedData,\n  TrackSwitchedData,\n  BufferFlushingData,\n  LevelLoadedData,\n  FragBufferedData,\n} from '../types/events';\n\nconst TICK_INTERVAL = 500; // how often to tick in ms\n\ninterface TimeRange {\n  start: number;\n  end: number;\n}\n\nexport class SubtitleStreamController\n  extends BaseStreamController\n  implements NetworkComponentAPI\n{\n  protected levels: Array<Level> = [];\n\n  private currentTrackId: number = -1;\n  private tracksBuffered: Array<TimeRange[]> = [];\n  private mainDetails: LevelDetails | null = null;\n\n  constructor(\n    hls: Hls,\n    fragmentTracker: FragmentTracker,\n    keyLoader: KeyLoader\n  ) {\n    super(hls, fragmentTracker, keyLoader, '[subtitle-stream-controller]');\n    this._registerListeners();\n  }\n\n  protected onHandlerDestroying() {\n    this._unregisterListeners();\n    this.mainDetails = null;\n  }\n\n  private _registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.on(Events.ERROR, this.onError, this);\n    hls.on(Events.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this);\n    hls.on(Events.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this);\n    hls.on(Events.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this);\n    hls.on(Events.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this);\n    hls.on(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.on(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n  }\n\n  private _unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.LEVEL_LOADED, this.onLevelLoaded, this);\n    hls.off(Events.ERROR, this.onError, this);\n    hls.off(Events.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this);\n    hls.off(Events.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this);\n    hls.off(Events.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this);\n    hls.off(Events.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this);\n    hls.off(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    hls.off(Events.FRAG_BUFFERED, this.onFragBuffered, this);\n  }\n\n  startLoad(startPosition: number) {\n    this.stopLoad();\n    this.state = State.IDLE;\n\n    this.setInterval(TICK_INTERVAL);\n\n    this.nextLoadPosition =\n      this.startPosition =\n      this.lastCurrentTime =\n        startPosition;\n\n    this.tick();\n  }\n\n  onManifestLoading() {\n    this.mainDetails = null;\n    this.fragmentTracker.removeAllFragments();\n  }\n\n  onLevelLoaded(event: Events.LEVEL_LOADED, data: LevelLoadedData) {\n    this.mainDetails = data.details;\n  }\n\n  onSubtitleFragProcessed(\n    event: Events.SUBTITLE_FRAG_PROCESSED,\n    data: SubtitleFragProcessed\n  ) {\n    const { frag, success } = data;\n    this.fragPrevious = frag;\n    this.state = State.IDLE;\n    if (!success) {\n      return;\n    }\n\n    const buffered = this.tracksBuffered[this.currentTrackId];\n    if (!buffered) {\n      return;\n    }\n\n    // Create/update a buffered array matching the interface used by BufferHelper.bufferedInfo\n    // so we can re-use the logic used to detect how much has been buffered\n    let timeRange: TimeRange | undefined;\n    const fragStart = frag.start;\n    for (let i = 0; i < buffered.length; i++) {\n      if (fragStart >= buffered[i].start && fragStart <= buffered[i].end) {\n        timeRange = buffered[i];\n        break;\n      }\n    }\n\n    const fragEnd = frag.start + frag.duration;\n    if (timeRange) {\n      timeRange.end = fragEnd;\n    } else {\n      timeRange = {\n        start: fragStart,\n        end: fragEnd,\n      };\n      buffered.push(timeRange);\n    }\n    this.fragmentTracker.fragBuffered(frag);\n  }\n\n  onBufferFlushing(event: Events.BUFFER_FLUSHING, data: BufferFlushingData) {\n    const { startOffset, endOffset } = data;\n    if (startOffset === 0 && endOffset !== Number.POSITIVE_INFINITY) {\n      const { currentTrackId, levels } = this;\n      if (\n        !levels.length ||\n        !levels[currentTrackId] ||\n        !levels[currentTrackId].details\n      ) {\n        return;\n      }\n      const trackDetails = levels[currentTrackId].details as LevelDetails;\n      const targetDuration = trackDetails.targetduration;\n      const endOffsetSubtitles = endOffset - targetDuration;\n      if (endOffsetSubtitles <= 0) {\n        return;\n      }\n      data.endOffsetSubtitles = Math.max(0, endOffsetSubtitles);\n      this.tracksBuffered.forEach((buffered) => {\n        for (let i = 0; i < buffered.length; ) {\n          if (buffered[i].end <= endOffsetSubtitles) {\n            buffered.shift();\n            continue;\n          } else if (buffered[i].start < endOffsetSubtitles) {\n            buffered[i].start = endOffsetSubtitles;\n          } else {\n            break;\n          }\n          i++;\n        }\n      });\n      this.fragmentTracker.removeFragmentsInRange(\n        startOffset,\n        endOffsetSubtitles,\n        PlaylistLevelType.SUBTITLE\n      );\n    }\n  }\n\n  onFragBuffered(event: Events.FRAG_BUFFERED, data: FragBufferedData) {\n    if (!this.loadedmetadata && data.frag.type === PlaylistLevelType.MAIN) {\n      if (this.media?.buffered.length) {\n        this.loadedmetadata = true;\n      }\n    }\n  }\n\n  // If something goes wrong, proceed to next frag, if we were processing one.\n  onError(event: Events.ERROR, data: ErrorData) {\n    const frag = data.frag;\n    // don't handle error not related to subtitle fragment\n    if (!frag || frag.type !== PlaylistLevelType.SUBTITLE) {\n      return;\n    }\n\n    if (this.fragCurrent) {\n      this.fragCurrent.abortRequests();\n    }\n\n    this.state = State.IDLE;\n  }\n\n  // Got all new subtitle levels.\n  onSubtitleTracksUpdated(\n    event: Events.SUBTITLE_TRACKS_UPDATED,\n    { subtitleTracks }: SubtitleTracksUpdatedData\n  ) {\n    this.tracksBuffered = [];\n    this.levels = subtitleTracks.map(\n      (mediaPlaylist) => new Level(mediaPlaylist)\n    );\n    this.fragmentTracker.removeAllFragments();\n    this.fragPrevious = null;\n    this.levels.forEach((level: Level) => {\n      this.tracksBuffered[level.id] = [];\n    });\n    this.mediaBuffer = null;\n  }\n\n  onSubtitleTrackSwitch(\n    event: Events.SUBTITLE_TRACK_SWITCH,\n    data: TrackSwitchedData\n  ) {\n    this.currentTrackId = data.id;\n\n    if (!this.levels.length || this.currentTrackId === -1) {\n      this.clearInterval();\n      return;\n    }\n\n    // Check if track has the necessary details to load fragments\n    const currentTrack = this.levels[this.currentTrackId];\n    if (currentTrack?.details) {\n      this.mediaBuffer = this.mediaBufferTimeRanges;\n    } else {\n      this.mediaBuffer = null;\n    }\n    if (currentTrack) {\n      this.setInterval(TICK_INTERVAL);\n    }\n  }\n\n  // Got a new set of subtitle fragments.\n  onSubtitleTrackLoaded(\n    event: Events.SUBTITLE_TRACK_LOADED,\n    data: TrackLoadedData\n  ) {\n    const { details: newDetails, id: trackId } = data;\n    const { currentTrackId, levels } = this;\n    if (!levels.length) {\n      return;\n    }\n    const track: Level = levels[currentTrackId];\n    if (trackId >= levels.length || trackId !== currentTrackId || !track) {\n      return;\n    }\n    this.mediaBuffer = this.mediaBufferTimeRanges;\n    let sliding = 0;\n    if (newDetails.live || track.details?.live) {\n      const mainDetails = this.mainDetails;\n      if (newDetails.deltaUpdateFailed || !mainDetails) {\n        return;\n      }\n      const mainSlidingStartFragment = mainDetails.fragments[0];\n      if (!track.details) {\n        if (newDetails.hasProgramDateTime && mainDetails.hasProgramDateTime) {\n          alignMediaPlaylistByPDT(newDetails, mainDetails);\n          sliding = newDetails.fragments[0].start;\n        } else if (mainSlidingStartFragment) {\n          // line up live playlist with main so that fragments in range are loaded\n          sliding = mainSlidingStartFragment.start;\n          addSliding(newDetails, sliding);\n        }\n      } else {\n        sliding = this.alignPlaylists(newDetails, track.details);\n        if (sliding === 0 && mainSlidingStartFragment) {\n          // realign with main when there is no overlap with last refresh\n          sliding = mainSlidingStartFragment.start;\n          addSliding(newDetails, sliding);\n        }\n      }\n    }\n    track.details = newDetails;\n    this.levelLastLoaded = trackId;\n\n    if (!this.startFragRequested && (this.mainDetails || !newDetails.live)) {\n      this.setStartPosition(track.details, sliding);\n    }\n\n    // trigger handler right now\n    this.tick();\n\n    // If playlist is misaligned because of bad PDT or drift, delete details to resync with main on reload\n    if (\n      newDetails.live &&\n      !this.fragCurrent &&\n      this.media &&\n      this.state === State.IDLE\n    ) {\n      const foundFrag = findFragmentByPTS(\n        null,\n        newDetails.fragments,\n        this.media.currentTime,\n        0\n      );\n      if (!foundFrag) {\n        this.warn('Subtitle playlist not aligned with playback');\n        track.details = undefined;\n      }\n    }\n  }\n\n  _handleFragmentLoadComplete(fragLoadedData: FragLoadedData) {\n    const { frag, payload } = fragLoadedData;\n    const decryptData = frag.decryptdata;\n    const hls = this.hls;\n\n    if (this.fragContextChanged(frag)) {\n      return;\n    }\n    // check to see if the payload needs to be decrypted\n    if (\n      payload &&\n      payload.byteLength > 0 &&\n      decryptData &&\n      decryptData.key &&\n      decryptData.iv &&\n      decryptData.method === 'AES-128'\n    ) {\n      const startTime = performance.now();\n      // decrypt the subtitles\n      this.decrypter\n        .decrypt(\n          new Uint8Array(payload),\n          decryptData.key.buffer,\n          decryptData.iv.buffer\n        )\n        .then((decryptedData) => {\n          const endTime = performance.now();\n          hls.trigger(Events.FRAG_DECRYPTED, {\n            frag,\n            payload: decryptedData,\n            stats: {\n              tstart: startTime,\n              tdecrypt: endTime,\n            },\n          });\n        })\n        .catch((err) => {\n          this.warn(`${err.name}: ${err.message}`);\n          this.state = State.IDLE;\n        });\n    }\n  }\n\n  doTick() {\n    if (!this.media) {\n      this.state = State.IDLE;\n      return;\n    }\n\n    if (this.state === State.IDLE) {\n      const { currentTrackId, levels } = this;\n      if (\n        !levels.length ||\n        !levels[currentTrackId] ||\n        !levels[currentTrackId].details\n      ) {\n        return;\n      }\n\n      // Expand range of subs loaded by one target-duration in either direction to make up for misaligned playlists\n      const trackDetails = levels[currentTrackId].details as LevelDetails;\n      const targetDuration = trackDetails.targetduration;\n      const { config } = this;\n      const currentTime = this.getLoadPosition();\n      const bufferedInfo = BufferHelper.bufferedInfo(\n        this.tracksBuffered[this.currentTrackId] || [],\n        currentTime - targetDuration,\n        config.maxBufferHole\n      );\n      const { end: targetBufferTime, len: bufferLen } = bufferedInfo;\n\n      const mainBufferInfo = this.getFwdBufferInfo(\n        this.media,\n        PlaylistLevelType.MAIN\n      );\n      const maxBufLen =\n        this.getMaxBufferLength(mainBufferInfo?.len) + targetDuration;\n\n      if (bufferLen > maxBufLen) {\n        return;\n      }\n\n      console.assert(\n        trackDetails,\n        'Subtitle track details are defined on idle subtitle stream controller tick'\n      );\n      const fragments = trackDetails.fragments;\n      const fragLen = fragments.length;\n      const end = trackDetails.edge;\n\n      let foundFrag: Fragment | null = null;\n      const fragPrevious = this.fragPrevious;\n      if (targetBufferTime < end) {\n        const { maxFragLookUpTolerance } = config;\n        foundFrag = findFragmentByPTS(\n          fragPrevious,\n          fragments,\n          Math.max(fragments[0].start, targetBufferTime),\n          maxFragLookUpTolerance\n        );\n        if (\n          !foundFrag &&\n          fragPrevious &&\n          fragPrevious.start < fragments[0].start\n        ) {\n          foundFrag = fragments[0];\n        }\n      } else {\n        foundFrag = fragments[fragLen - 1];\n      }\n      if (!foundFrag) {\n        return;\n      }\n\n      foundFrag = this.mapToInitFragWhenRequired(foundFrag) as Fragment;\n      if (\n        this.fragmentTracker.getState(foundFrag) === FragmentState.NOT_LOADED\n      ) {\n        // only load if fragment is not loaded\n        this.loadFragment(foundFrag, trackDetails, targetBufferTime);\n      }\n    }\n  }\n\n  protected getMaxBufferLength(mainBufferLength?: number): number {\n    const maxConfigBuffer = super.getMaxBufferLength();\n    if (!mainBufferLength) {\n      return maxConfigBuffer;\n    }\n    return Math.max(maxConfigBuffer, mainBufferLength);\n  }\n\n  protected loadFragment(\n    frag: Fragment,\n    levelDetails: LevelDetails,\n    targetBufferTime: number\n  ) {\n    this.fragCurrent = frag;\n    if (frag.sn === 'initSegment') {\n      this._loadInitSegment(frag, levelDetails);\n    } else {\n      this.startFragRequested = true;\n      super.loadFragment(frag, levelDetails, targetBufferTime);\n    }\n  }\n\n  get mediaBufferTimeRanges(): Bufferable {\n    return new BufferableInstance(\n      this.tracksBuffered[this.currentTrackId] || []\n    );\n  }\n}\n\nclass BufferableInstance implements Bufferable {\n  public readonly buffered: TimeRanges;\n\n  constructor(timeranges: TimeRange[]) {\n    const getRange = (\n      name: 'start' | 'end',\n      index: number,\n      length: number\n    ): number => {\n      index = index >>> 0;\n      if (index > length - 1) {\n        throw new DOMException(\n          `Failed to execute '${name}' on 'TimeRanges': The index provided (${index}) is greater than the maximum bound (${length})`\n        );\n      }\n      return timeranges[index][name];\n    };\n    this.buffered = {\n      get length() {\n        return timeranges.length;\n      },\n      end(index: number): number {\n        return getRange('end', index, timeranges.length);\n      },\n      start(index: number): number {\n        return getRange('start', index, timeranges.length);\n      },\n    };\n  }\n}\n", "import { Events } from '../events';\nimport { clearCurrentCues } from '../utils/texttrack-utils';\nimport BasePlaylistController from './base-playlist-controller';\nimport type { HlsUrlParameters } from '../types/level';\nimport type Hls from '../hls';\nimport type {\n  TrackLoadedData,\n  MediaAttachedData,\n  SubtitleTracksUpdatedData,\n  ManifestParsedData,\n  LevelSwitchingData,\n} from '../types/events';\nimport type { MediaPlaylist } from '../types/media-playlist';\nimport { ErrorData, LevelLoadingData } from '../types/events';\nimport { PlaylistContextType } from '../types/loader';\n\nclass SubtitleTrackController extends BasePlaylistController {\n  private media: HTMLMediaElement | null = null;\n  private tracks: MediaPlaylist[] = [];\n  private groupId: string | null = null;\n  private tracksInGroup: MediaPlaylist[] = [];\n  private trackId: number = -1;\n  private selectDefaultTrack: boolean = true;\n  private queuedDefaultTrack: number = -1;\n  private trackChangeListener: () => void = () => this.onTextTracksChanged();\n  private asyncPollTrackChange: () => void = () => this.pollTrackChange(0);\n  private useTextTrackPolling: boolean = false;\n  private subtitlePollingInterval: number = -1;\n  private _subtitleDisplay: boolean = true;\n\n  constructor(hls: Hls) {\n    super(hls, '[subtitle-track-controller]');\n    this.registerListeners();\n  }\n\n  public destroy() {\n    this.unregisterListeners();\n    this.tracks.length = 0;\n    this.tracksInGroup.length = 0;\n    this.trackChangeListener = this.asyncPollTrackChange = null as any;\n    super.destroy();\n  }\n\n  public get subtitleDisplay(): boolean {\n    return this._subtitleDisplay;\n  }\n\n  public set subtitleDisplay(value: boolean) {\n    this._subtitleDisplay = value;\n    if (this.trackId > -1) {\n      this.toggleTrackModes(this.trackId);\n    }\n  }\n\n  private registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.on(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.on(Events.LEVEL_SWITCHING, this.onLevelSwitching, this);\n    hls.on(Events.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this);\n    hls.on(Events.ERROR, this.onError, this);\n  }\n\n  private unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHED, this.onMediaAttached, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.off(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.off(Events.LEVEL_SWITCHING, this.onLevelSwitching, this);\n    hls.off(Events.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this);\n    hls.off(Events.ERROR, this.onError, this);\n  }\n\n  // Listen for subtitle track change, then extract the current track ID.\n  protected onMediaAttached(\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachedData\n  ): void {\n    this.media = data.media;\n    if (!this.media) {\n      return;\n    }\n\n    if (this.queuedDefaultTrack > -1) {\n      this.subtitleTrack = this.queuedDefaultTrack;\n      this.queuedDefaultTrack = -1;\n    }\n\n    this.useTextTrackPolling = !(\n      this.media.textTracks && 'onchange' in this.media.textTracks\n    );\n    if (this.useTextTrackPolling) {\n      this.pollTrackChange(500);\n    } else {\n      this.media.textTracks.addEventListener(\n        'change',\n        this.asyncPollTrackChange\n      );\n    }\n  }\n\n  private pollTrackChange(timeout: number) {\n    self.clearInterval(this.subtitlePollingInterval);\n    this.subtitlePollingInterval = self.setInterval(\n      this.trackChangeListener,\n      timeout\n    );\n  }\n\n  protected onMediaDetaching(): void {\n    if (!this.media) {\n      return;\n    }\n\n    self.clearInterval(this.subtitlePollingInterval);\n    if (!this.useTextTrackPolling) {\n      this.media.textTracks.removeEventListener(\n        'change',\n        this.asyncPollTrackChange\n      );\n    }\n\n    if (this.trackId > -1) {\n      this.queuedDefaultTrack = this.trackId;\n    }\n\n    const textTracks = filterSubtitleTracks(this.media.textTracks);\n    // Clear loaded cues on media detachment from tracks\n    textTracks.forEach((track) => {\n      clearCurrentCues(track);\n    });\n    // Disable all subtitle tracks before detachment so when reattached only tracks in that content are enabled.\n    this.subtitleTrack = -1;\n    this.media = null;\n  }\n\n  protected onManifestLoading(): void {\n    this.tracks = [];\n    this.groupId = null;\n    this.tracksInGroup = [];\n    this.trackId = -1;\n    this.selectDefaultTrack = true;\n  }\n\n  // Fired whenever a new manifest is loaded.\n  protected onManifestParsed(\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ): void {\n    this.tracks = data.subtitleTracks;\n  }\n\n  protected onSubtitleTrackLoaded(\n    event: Events.SUBTITLE_TRACK_LOADED,\n    data: TrackLoadedData\n  ): void {\n    const { id, details } = data;\n    const { trackId } = this;\n    const currentTrack = this.tracksInGroup[trackId];\n\n    if (!currentTrack) {\n      this.warn(`Invalid subtitle track id ${id}`);\n      return;\n    }\n\n    const curDetails = currentTrack.details;\n    currentTrack.details = data.details;\n    this.log(\n      `subtitle track ${id} loaded [${details.startSN}-${details.endSN}]`\n    );\n\n    if (id === this.trackId) {\n      this.retryCount = 0;\n      this.playlistLoaded(id, data, curDetails);\n    }\n  }\n\n  protected onLevelLoading(\n    event: Events.LEVEL_LOADING,\n    data: LevelLoadingData\n  ): void {\n    this.switchLevel(data.level);\n  }\n\n  protected onLevelSwitching(\n    event: Events.LEVEL_SWITCHING,\n    data: LevelSwitchingData\n  ): void {\n    this.switchLevel(data.level);\n  }\n\n  private switchLevel(levelIndex: number) {\n    const levelInfo = this.hls.levels[levelIndex];\n    if (!levelInfo?.textGroupIds) {\n      return;\n    }\n\n    const textGroupId = levelInfo.textGroupIds[levelInfo.urlId];\n    if (this.groupId !== textGroupId) {\n      const lastTrack = this.tracksInGroup\n        ? this.tracksInGroup[this.trackId]\n        : undefined;\n\n      const subtitleTracks = this.tracks.filter(\n        (track): boolean => !textGroupId || track.groupId === textGroupId\n      );\n      this.tracksInGroup = subtitleTracks;\n      const initialTrackId =\n        this.findTrackId(lastTrack?.name) || this.findTrackId();\n      this.groupId = textGroupId;\n\n      const subtitleTracksUpdated: SubtitleTracksUpdatedData = {\n        subtitleTracks,\n      };\n      this.log(\n        `Updating subtitle tracks, ${subtitleTracks.length} track(s) found in \"${textGroupId}\" group-id`\n      );\n      this.hls.trigger(Events.SUBTITLE_TRACKS_UPDATED, subtitleTracksUpdated);\n\n      if (initialTrackId !== -1) {\n        this.setSubtitleTrack(initialTrackId, lastTrack);\n      }\n    }\n  }\n\n  private findTrackId(name?: string): number {\n    const textTracks = this.tracksInGroup;\n    for (let i = 0; i < textTracks.length; i++) {\n      const track = textTracks[i];\n      if (!this.selectDefaultTrack || track.default) {\n        if (!name || name === track.name) {\n          return track.id;\n        }\n      }\n    }\n    return -1;\n  }\n\n  protected onError(event: Events.ERROR, data: ErrorData): void {\n    super.onError(event, data);\n    if (data.fatal || !data.context) {\n      return;\n    }\n\n    if (\n      data.context.type === PlaylistContextType.SUBTITLE_TRACK &&\n      data.context.id === this.trackId &&\n      data.context.groupId === this.groupId\n    ) {\n      this.retryLoadingOrFail(data);\n    }\n  }\n\n  /** get alternate subtitle tracks list from playlist **/\n  get subtitleTracks(): MediaPlaylist[] {\n    return this.tracksInGroup;\n  }\n\n  /** get/set index of the selected subtitle track (based on index in subtitle track lists) **/\n  get subtitleTrack(): number {\n    return this.trackId;\n  }\n\n  set subtitleTrack(newId: number) {\n    this.selectDefaultTrack = false;\n    const lastTrack = this.tracksInGroup\n      ? this.tracksInGroup[this.trackId]\n      : undefined;\n    this.setSubtitleTrack(newId, lastTrack);\n  }\n\n  protected loadPlaylist(hlsUrlParameters?: HlsUrlParameters): void {\n    super.loadPlaylist();\n    const currentTrack = this.tracksInGroup[this.trackId];\n    if (this.shouldLoadTrack(currentTrack)) {\n      const id = currentTrack.id;\n      const groupId = currentTrack.groupId as string;\n      let url = currentTrack.url;\n      if (hlsUrlParameters) {\n        try {\n          url = hlsUrlParameters.addDirectives(url);\n        } catch (error) {\n          this.warn(\n            `Could not construct new URL with HLS Delivery Directives: ${error}`\n          );\n        }\n      }\n      this.log(`Loading subtitle playlist for id ${id}`);\n      this.hls.trigger(Events.SUBTITLE_TRACK_LOADING, {\n        url,\n        id,\n        groupId,\n        deliveryDirectives: hlsUrlParameters || null,\n      });\n    }\n  }\n\n  /**\n   * Disables the old subtitleTrack and sets current mode on the next subtitleTrack.\n   * This operates on the DOM textTracks.\n   * A value of -1 will disable all subtitle tracks.\n   */\n  private toggleTrackModes(newId: number): void {\n    const { media, trackId } = this;\n    if (!media) {\n      return;\n    }\n\n    const textTracks = filterSubtitleTracks(media.textTracks);\n    const groupTracks = textTracks.filter(\n      (track) => (track as any).groupId === this.groupId\n    );\n    if (newId === -1) {\n      [].slice.call(textTracks).forEach((track) => {\n        track.mode = 'disabled';\n      });\n    } else {\n      const oldTrack = groupTracks[trackId];\n      if (oldTrack) {\n        oldTrack.mode = 'disabled';\n      }\n    }\n\n    const nextTrack = groupTracks[newId];\n    if (nextTrack) {\n      nextTrack.mode = this.subtitleDisplay ? 'showing' : 'hidden';\n    }\n  }\n\n  /**\n   * This method is responsible for validating the subtitle index and periodically reloading if live.\n   * Dispatches the SUBTITLE_TRACK_SWITCH event, which instructs the subtitle-stream-controller to load the selected track.\n   */\n  private setSubtitleTrack(\n    newId: number,\n    lastTrack: MediaPlaylist | undefined\n  ): void {\n    const tracks = this.tracksInGroup;\n\n    // setting this.subtitleTrack will trigger internal logic\n    // if media has not been attached yet, it will fail\n    // we keep a reference to the default track id\n    // and we'll set subtitleTrack when onMediaAttached is triggered\n    if (!this.media) {\n      this.queuedDefaultTrack = newId;\n      return;\n    }\n\n    if (this.trackId !== newId) {\n      this.toggleTrackModes(newId);\n    }\n\n    // exit if track id as already set or invalid\n    if (\n      (this.trackId === newId && (newId === -1 || tracks[newId]?.details)) ||\n      newId < -1 ||\n      newId >= tracks.length\n    ) {\n      return;\n    }\n\n    // stopping live reloading timer if any\n    this.clearTimer();\n\n    const track = tracks[newId];\n    this.log(`Switching to subtitle track ${newId}`);\n    this.trackId = newId;\n    if (track) {\n      const { id, groupId = '', name, type, url } = track;\n      this.hls.trigger(Events.SUBTITLE_TRACK_SWITCH, {\n        id,\n        groupId,\n        name,\n        type,\n        url,\n      });\n      const hlsUrlParameters = this.switchParams(track.url, lastTrack?.details);\n      this.loadPlaylist(hlsUrlParameters);\n    } else {\n      // switch to -1\n      this.hls.trigger(Events.SUBTITLE_TRACK_SWITCH, { id: newId });\n    }\n  }\n\n  private onTextTracksChanged(): void {\n    if (!this.useTextTrackPolling) {\n      self.clearInterval(this.subtitlePollingInterval);\n    }\n    // Media is undefined when switching streams via loadSource()\n    if (!this.media || !this.hls.config.renderTextTracksNatively) {\n      return;\n    }\n\n    let trackId: number = -1;\n    const tracks = filterSubtitleTracks(this.media.textTracks);\n    for (let id = 0; id < tracks.length; id++) {\n      if (tracks[id].mode === 'hidden') {\n        // Do not break in case there is a following track with showing.\n        trackId = id;\n      } else if (tracks[id].mode === 'showing') {\n        trackId = id;\n        break;\n      }\n    }\n\n    // Setting current subtitleTrack will invoke code.\n    if (this.subtitleTrack !== trackId) {\n      this.subtitleTrack = trackId;\n    }\n  }\n}\n\nfunction filterSubtitleTracks(textTrackList: TextTrackList): TextTrack[] {\n  const tracks: TextTrack[] = [];\n  for (let i = 0; i < textTrackList.length; i++) {\n    const track = textTrackList[i];\n    // Edge adds a track without a label; we don't want to use it\n    if (\n      (track.kind === 'subtitles' || track.kind === 'captions') &&\n      track.label\n    ) {\n      tracks.push(textTrackList[i]);\n    }\n  }\n  return tracks;\n}\n\nexport default SubtitleTrackController;\n", "import { Events } from '../events';\nimport Cea608Parser, { CaptionScreen } from '../utils/cea-608-parser';\nimport OutputFilter from '../utils/output-filter';\nimport { parseWebVTT } from '../utils/webvtt-parser';\nimport {\n  sendAddTrackEvent,\n  clearCurrentCues,\n  addCueToTrack,\n  removeCuesInRange,\n} from '../utils/texttrack-utils';\nimport { parseIMSC1, IMSC1_CODEC } from '../utils/imsc1-ttml-parser';\nimport { appendUint8Array } from '../utils/mp4-tools';\nimport { PlaylistLevelType } from '../types/loader';\nimport { Fragment } from '../loader/fragment';\nimport {\n  FragParsingUserdataData,\n  FragLoadedData,\n  FragDecryptedData,\n  MediaAttachingData,\n  ManifestLoadedData,\n  InitPTSFoundData,\n  SubtitleTracksUpdatedData,\n  BufferFlushingData,\n  FragLoadingData,\n} from '../types/events';\nimport { logger } from '../utils/logger';\nimport type Hls from '../hls';\nimport type { ComponentAPI } from '../types/component-api';\nimport type { HlsConfig } from '../config';\nimport type { CuesInterface } from '../utils/cues';\nimport type { MediaPlaylist } from '../types/media-playlist';\nimport type { VTTCCs } from '../types/vtt';\n\ntype TrackProperties = {\n  label: string;\n  languageCode: string;\n  media?: MediaPlaylist;\n};\n\ntype NonNativeCaptionsTrack = {\n  _id?: string;\n  label: string;\n  kind: string;\n  default: boolean;\n  closedCaptions?: MediaPlaylist;\n  subtitleTrack?: MediaPlaylist;\n};\n\nexport class TimelineController implements ComponentAPI {\n  private hls: Hls;\n  private media: HTMLMediaElement | null = null;\n  private config: HlsConfig;\n  private enabled: boolean = true;\n  private Cues: CuesInterface;\n  private textTracks: Array<TextTrack> = [];\n  private tracks: Array<MediaPlaylist> = [];\n  private initPTS: Array<number> = [];\n  private timescale: Array<number> = [];\n  private unparsedVttFrags: Array<FragLoadedData | FragDecryptedData> = [];\n  private captionsTracks: Record<string, TextTrack> = {};\n  private nonNativeCaptionsTracks: Record<string, NonNativeCaptionsTrack> = {};\n  private cea608Parser1!: Cea608Parser;\n  private cea608Parser2!: Cea608Parser;\n  private lastSn: number = -1;\n  private lastPartIndex: number = -1;\n  private prevCC: number = -1;\n  private vttCCs: VTTCCs = newVTTCCs();\n  private captionsProperties: {\n    textTrack1: TrackProperties;\n    textTrack2: TrackProperties;\n    textTrack3: TrackProperties;\n    textTrack4: TrackProperties;\n  };\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this.config = hls.config;\n    this.Cues = hls.config.cueHandler;\n\n    this.captionsProperties = {\n      textTrack1: {\n        label: this.config.captionsTextTrack1Label,\n        languageCode: this.config.captionsTextTrack1LanguageCode,\n      },\n      textTrack2: {\n        label: this.config.captionsTextTrack2Label,\n        languageCode: this.config.captionsTextTrack2LanguageCode,\n      },\n      textTrack3: {\n        label: this.config.captionsTextTrack3Label,\n        languageCode: this.config.captionsTextTrack3LanguageCode,\n      },\n      textTrack4: {\n        label: this.config.captionsTextTrack4Label,\n        languageCode: this.config.captionsTextTrack4LanguageCode,\n      },\n    };\n\n    if (this.config.enableCEA708Captions) {\n      const channel1 = new OutputFilter(this, 'textTrack1');\n      const channel2 = new OutputFilter(this, 'textTrack2');\n      const channel3 = new OutputFilter(this, 'textTrack3');\n      const channel4 = new OutputFilter(this, 'textTrack4');\n      this.cea608Parser1 = new Cea608Parser(1, channel1, channel2);\n      this.cea608Parser2 = new Cea608Parser(3, channel3, channel4);\n    }\n\n    hls.on(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.MANIFEST_LOADED, this.onManifestLoaded, this);\n    hls.on(Events.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this);\n    hls.on(Events.FRAG_LOADING, this.onFragLoading, this);\n    hls.on(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.on(Events.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this);\n    hls.on(Events.FRAG_DECRYPTED, this.onFragDecrypted, this);\n    hls.on(Events.INIT_PTS_FOUND, this.onInitPtsFound, this);\n    hls.on(Events.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this);\n    hls.on(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n  }\n\n  public destroy(): void {\n    const { hls } = this;\n    hls.off(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.MANIFEST_LOADED, this.onManifestLoaded, this);\n    hls.off(Events.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this);\n    hls.off(Events.FRAG_LOADING, this.onFragLoading, this);\n    hls.off(Events.FRAG_LOADED, this.onFragLoaded, this);\n    hls.off(Events.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this);\n    hls.off(Events.FRAG_DECRYPTED, this.onFragDecrypted, this);\n    hls.off(Events.INIT_PTS_FOUND, this.onInitPtsFound, this);\n    hls.off(Events.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this);\n    hls.off(Events.BUFFER_FLUSHING, this.onBufferFlushing, this);\n    // @ts-ignore\n    this.hls = this.config = this.cea608Parser1 = this.cea608Parser2 = null;\n  }\n\n  public addCues(\n    trackName: string,\n    startTime: number,\n    endTime: number,\n    screen: CaptionScreen,\n    cueRanges: Array<[number, number]>\n  ) {\n    // skip cues which overlap more than 50% with previously parsed time ranges\n    let merged = false;\n    for (let i = cueRanges.length; i--; ) {\n      const cueRange = cueRanges[i];\n      const overlap = intersection(\n        cueRange[0],\n        cueRange[1],\n        startTime,\n        endTime\n      );\n      if (overlap >= 0) {\n        cueRange[0] = Math.min(cueRange[0], startTime);\n        cueRange[1] = Math.max(cueRange[1], endTime);\n        merged = true;\n        if (overlap / (endTime - startTime) > 0.5) {\n          return;\n        }\n      }\n    }\n    if (!merged) {\n      cueRanges.push([startTime, endTime]);\n    }\n\n    if (this.config.renderTextTracksNatively) {\n      const track = this.captionsTracks[trackName];\n      this.Cues.newCue(track, startTime, endTime, screen);\n    } else {\n      const cues = this.Cues.newCue(null, startTime, endTime, screen);\n      this.hls.trigger(Events.CUES_PARSED, {\n        type: 'captions',\n        cues,\n        track: trackName,\n      });\n    }\n  }\n\n  // Triggered when an initial PTS is found; used for synchronisation of WebVTT.\n  private onInitPtsFound(\n    event: Events.INIT_PTS_FOUND,\n    { frag, id, initPTS, timescale }: InitPTSFoundData\n  ) {\n    const { unparsedVttFrags } = this;\n    if (id === 'main') {\n      this.initPTS[frag.cc] = initPTS;\n      this.timescale[frag.cc] = timescale;\n    }\n\n    // Due to asynchronous processing, initial PTS may arrive later than the first VTT fragments are loaded.\n    // Parse any unparsed fragments upon receiving the initial PTS.\n    if (unparsedVttFrags.length) {\n      this.unparsedVttFrags = [];\n      unparsedVttFrags.forEach((frag) => {\n        this.onFragLoaded(Events.FRAG_LOADED, frag as FragLoadedData);\n      });\n    }\n  }\n\n  private getExistingTrack(trackName: string): TextTrack | null {\n    const { media } = this;\n    if (media) {\n      for (let i = 0; i < media.textTracks.length; i++) {\n        const textTrack = media.textTracks[i];\n        if (textTrack[trackName]) {\n          return textTrack;\n        }\n      }\n    }\n    return null;\n  }\n\n  public createCaptionsTrack(trackName: string) {\n    if (this.config.renderTextTracksNatively) {\n      this.createNativeTrack(trackName);\n    } else {\n      this.createNonNativeTrack(trackName);\n    }\n  }\n\n  private createNativeTrack(trackName: string) {\n    if (this.captionsTracks[trackName]) {\n      return;\n    }\n    const { captionsProperties, captionsTracks, media } = this;\n    const { label, languageCode } = captionsProperties[trackName];\n    // Enable reuse of existing text track.\n    const existingTrack = this.getExistingTrack(trackName);\n    if (!existingTrack) {\n      const textTrack = this.createTextTrack('captions', label, languageCode);\n      if (textTrack) {\n        // Set a special property on the track so we know it's managed by Hls.js\n        textTrack[trackName] = true;\n        captionsTracks[trackName] = textTrack;\n      }\n    } else {\n      captionsTracks[trackName] = existingTrack;\n      clearCurrentCues(captionsTracks[trackName]);\n      sendAddTrackEvent(captionsTracks[trackName], media as HTMLMediaElement);\n    }\n  }\n\n  private createNonNativeTrack(trackName: string) {\n    if (this.nonNativeCaptionsTracks[trackName]) {\n      return;\n    }\n    // Create a list of a single track for the provider to consume\n    const trackProperties: TrackProperties = this.captionsProperties[trackName];\n    if (!trackProperties) {\n      return;\n    }\n    const label = trackProperties.label as string;\n    const track = {\n      _id: trackName,\n      label,\n      kind: 'captions',\n      default: trackProperties.media ? !!trackProperties.media.default : false,\n      closedCaptions: trackProperties.media,\n    };\n    this.nonNativeCaptionsTracks[trackName] = track;\n    this.hls.trigger(Events.NON_NATIVE_TEXT_TRACKS_FOUND, { tracks: [track] });\n  }\n\n  private createTextTrack(\n    kind: TextTrackKind,\n    label: string,\n    lang?: string\n  ): TextTrack | undefined {\n    const media = this.media;\n    if (!media) {\n      return;\n    }\n    return media.addTextTrack(kind, label, lang);\n  }\n\n  private onMediaAttaching(\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) {\n    this.media = data.media;\n    this._cleanTracks();\n  }\n\n  private onMediaDetaching() {\n    const { captionsTracks } = this;\n    Object.keys(captionsTracks).forEach((trackName) => {\n      clearCurrentCues(captionsTracks[trackName]);\n      delete captionsTracks[trackName];\n    });\n    this.nonNativeCaptionsTracks = {};\n  }\n\n  private onManifestLoading() {\n    this.lastSn = -1; // Detect discontinuity in fragment parsing\n    this.lastPartIndex = -1;\n    this.prevCC = -1;\n    this.vttCCs = newVTTCCs(); // Detect discontinuity in subtitle manifests\n    this._cleanTracks();\n    this.tracks = [];\n    this.captionsTracks = {};\n    this.nonNativeCaptionsTracks = {};\n    this.textTracks = [];\n    this.unparsedVttFrags = this.unparsedVttFrags || [];\n    this.initPTS = [];\n    this.timescale = [];\n    if (this.cea608Parser1 && this.cea608Parser2) {\n      this.cea608Parser1.reset();\n      this.cea608Parser2.reset();\n    }\n  }\n\n  private _cleanTracks() {\n    // clear outdated subtitles\n    const { media } = this;\n    if (!media) {\n      return;\n    }\n    const textTracks = media.textTracks;\n    if (textTracks) {\n      for (let i = 0; i < textTracks.length; i++) {\n        clearCurrentCues(textTracks[i]);\n      }\n    }\n  }\n\n  private onSubtitleTracksUpdated(\n    event: Events.SUBTITLE_TRACKS_UPDATED,\n    data: SubtitleTracksUpdatedData\n  ) {\n    this.textTracks = [];\n    const tracks: Array<MediaPlaylist> = data.subtitleTracks || [];\n    const hasIMSC1 = tracks.some((track) => track.textCodec === IMSC1_CODEC);\n    if (this.config.enableWebVTT || (hasIMSC1 && this.config.enableIMSC1)) {\n      const sameTracks =\n        this.tracks && tracks && this.tracks.length === tracks.length;\n      this.tracks = tracks || [];\n\n      if (this.config.renderTextTracksNatively) {\n        const inUseTracks = this.media ? this.media.textTracks : [];\n\n        this.tracks.forEach((track, index) => {\n          let textTrack: TextTrack | undefined;\n          if (index < inUseTracks.length) {\n            let inUseTrack: TextTrack | null = null;\n\n            for (let i = 0; i < inUseTracks.length; i++) {\n              if (canReuseVttTextTrack(inUseTracks[i], track)) {\n                inUseTrack = inUseTracks[i];\n                break;\n              }\n            }\n\n            // Reuse tracks with the same label, but do not reuse 608/708 tracks\n            if (inUseTrack) {\n              textTrack = inUseTrack;\n            }\n          }\n          if (textTrack) {\n            clearCurrentCues(textTrack);\n          } else {\n            const textTrackKind =\n              this._captionsOrSubtitlesFromCharacteristics(track);\n            textTrack = this.createTextTrack(\n              textTrackKind,\n              track.name,\n              track.lang\n            );\n            if (textTrack) {\n              textTrack.mode = 'disabled';\n            }\n          }\n          if (textTrack) {\n            (textTrack as any).groupId = track.groupId;\n            this.textTracks.push(textTrack);\n          }\n        });\n      } else if (!sameTracks && this.tracks && this.tracks.length) {\n        // Create a list of tracks for the provider to consume\n        const tracksList = this.tracks.map((track) => {\n          return {\n            label: track.name,\n            kind: track.type.toLowerCase(),\n            default: track.default,\n            subtitleTrack: track,\n          };\n        });\n        this.hls.trigger(Events.NON_NATIVE_TEXT_TRACKS_FOUND, {\n          tracks: tracksList,\n        });\n      }\n    }\n  }\n\n  private _captionsOrSubtitlesFromCharacteristics(\n    track: MediaPlaylist\n  ): TextTrackKind {\n    if (track.attrs?.CHARACTERISTICS) {\n      const transcribesSpokenDialog = /transcribes-spoken-dialog/gi.test(\n        track.attrs.CHARACTERISTICS\n      );\n      const describesMusicAndSound = /describes-music-and-sound/gi.test(\n        track.attrs.CHARACTERISTICS\n      );\n\n      if (transcribesSpokenDialog && describesMusicAndSound) {\n        return 'captions';\n      }\n    }\n\n    return 'subtitles';\n  }\n\n  private onManifestLoaded(\n    event: Events.MANIFEST_LOADED,\n    data: ManifestLoadedData\n  ) {\n    if (this.config.enableCEA708Captions && data.captions) {\n      data.captions.forEach((captionsTrack) => {\n        const instreamIdMatch = /(?:CC|SERVICE)([1-4])/.exec(\n          captionsTrack.instreamId as string\n        );\n        if (!instreamIdMatch) {\n          return;\n        }\n        const trackName = `textTrack${instreamIdMatch[1]}`;\n        const trackProperties: TrackProperties =\n          this.captionsProperties[trackName];\n        if (!trackProperties) {\n          return;\n        }\n        trackProperties.label = captionsTrack.name;\n        if (captionsTrack.lang) {\n          // optional attribute\n          trackProperties.languageCode = captionsTrack.lang;\n        }\n        trackProperties.media = captionsTrack;\n      });\n    }\n  }\n\n  private closedCaptionsForLevel(frag: Fragment): string | undefined {\n    const level = this.hls.levels[frag.level];\n    return level?.attrs['CLOSED-CAPTIONS'];\n  }\n\n  private onFragLoading(event: Events.FRAG_LOADING, data: FragLoadingData) {\n    const { cea608Parser1, cea608Parser2, lastSn, lastPartIndex } = this;\n    if (!this.enabled || !(cea608Parser1 && cea608Parser2)) {\n      return;\n    }\n    // if this frag isn't contiguous, clear the parser so cues with bad start/end times aren't added to the textTrack\n    if (data.frag.type === PlaylistLevelType.MAIN) {\n      const sn = data.frag.sn;\n      const partIndex = data?.part?.index ?? -1;\n      if (\n        !(\n          sn === lastSn + 1 ||\n          (sn === lastSn && partIndex === lastPartIndex + 1)\n        )\n      ) {\n        cea608Parser1.reset();\n        cea608Parser2.reset();\n      }\n      this.lastSn = sn as number;\n      this.lastPartIndex = partIndex;\n    }\n  }\n\n  private onFragLoaded(\n    event: Events.FRAG_LOADED,\n    data: FragDecryptedData | FragLoadedData\n  ) {\n    const { frag, payload } = data;\n    const { initPTS, unparsedVttFrags } = this;\n    if (frag.type === PlaylistLevelType.SUBTITLE) {\n      // If fragment is subtitle type, parse as WebVTT.\n      if (payload.byteLength) {\n        // We need an initial synchronisation PTS. Store fragments as long as none has arrived.\n        if (!Number.isFinite(initPTS[frag.cc])) {\n          unparsedVttFrags.push(data);\n          if (initPTS.length) {\n            // finish unsuccessfully, otherwise the subtitle-stream-controller could be blocked from loading new frags.\n            this.hls.trigger(Events.SUBTITLE_FRAG_PROCESSED, {\n              success: false,\n              frag,\n              error: new Error('Missing initial subtitle PTS'),\n            });\n          }\n          return;\n        }\n\n        const decryptData = frag.decryptdata;\n        // fragment after decryption has a stats object\n        const decrypted = 'stats' in data;\n        // If the subtitles are not encrypted, parse VTTs now. Otherwise, we need to wait.\n        if (decryptData == null || !decryptData.encrypted || decrypted) {\n          const trackPlaylistMedia = this.tracks[frag.level];\n          const vttCCs = this.vttCCs;\n          if (!vttCCs[frag.cc]) {\n            vttCCs[frag.cc] = {\n              start: frag.start,\n              prevCC: this.prevCC,\n              new: true,\n            };\n            this.prevCC = frag.cc;\n          }\n          if (\n            trackPlaylistMedia &&\n            trackPlaylistMedia.textCodec === IMSC1_CODEC\n          ) {\n            this._parseIMSC1(frag, payload);\n          } else {\n            this._parseVTTs(frag, payload, vttCCs);\n          }\n        }\n      } else {\n        // In case there is no payload, finish unsuccessfully.\n        this.hls.trigger(Events.SUBTITLE_FRAG_PROCESSED, {\n          success: false,\n          frag,\n          error: new Error('Empty subtitle payload'),\n        });\n      }\n    }\n  }\n\n  private _parseIMSC1(frag: Fragment, payload: ArrayBuffer) {\n    const hls = this.hls;\n    parseIMSC1(\n      payload,\n      this.initPTS[frag.cc],\n      this.timescale[frag.cc],\n      (cues) => {\n        this._appendCues(cues, frag.level);\n        hls.trigger(Events.SUBTITLE_FRAG_PROCESSED, {\n          success: true,\n          frag: frag,\n        });\n      },\n      (error) => {\n        logger.log(`Failed to parse IMSC1: ${error}`);\n        hls.trigger(Events.SUBTITLE_FRAG_PROCESSED, {\n          success: false,\n          frag: frag,\n          error,\n        });\n      }\n    );\n  }\n\n  private _parseVTTs(frag: Fragment, payload: ArrayBuffer, vttCCs: any) {\n    const hls = this.hls;\n    // Parse the WebVTT file contents.\n    const payloadWebVTT = frag.initSegment?.data\n      ? appendUint8Array(frag.initSegment.data, new Uint8Array(payload))\n      : payload;\n    parseWebVTT(\n      payloadWebVTT,\n      this.initPTS[frag.cc],\n      this.timescale[frag.cc],\n      vttCCs,\n      frag.cc,\n      frag.start,\n      (cues) => {\n        this._appendCues(cues, frag.level);\n        hls.trigger(Events.SUBTITLE_FRAG_PROCESSED, {\n          success: true,\n          frag: frag,\n        });\n      },\n      (error) => {\n        this._fallbackToIMSC1(frag, payload);\n        // Something went wrong while parsing. Trigger event with success false.\n        logger.log(`Failed to parse VTT cue: ${error}`);\n        hls.trigger(Events.SUBTITLE_FRAG_PROCESSED, {\n          success: false,\n          frag: frag,\n          error,\n        });\n      }\n    );\n  }\n\n  private _fallbackToIMSC1(frag: Fragment, payload: ArrayBuffer) {\n    // If textCodec is unknown, try parsing as IMSC1. Set textCodec based on the result\n    const trackPlaylistMedia = this.tracks[frag.level];\n    if (!trackPlaylistMedia.textCodec) {\n      parseIMSC1(\n        payload,\n        this.initPTS[frag.cc],\n        this.timescale[frag.cc],\n        () => {\n          trackPlaylistMedia.textCodec = IMSC1_CODEC;\n          this._parseIMSC1(frag, payload);\n        },\n        () => {\n          trackPlaylistMedia.textCodec = 'wvtt';\n        }\n      );\n    }\n  }\n\n  private _appendCues(cues: VTTCue[], fragLevel: number) {\n    const hls = this.hls;\n    if (this.config.renderTextTracksNatively) {\n      const textTrack = this.textTracks[fragLevel];\n      // WebVTTParser.parse is an async method and if the currently selected text track mode is set to \"disabled\"\n      // before parsing is done then don't try to access currentTrack.cues.getCueById as cues will be null\n      // and trying to access getCueById method of cues will throw an exception\n      // Because we check if the mode is disabled, we can force check `cues` below. They can't be null.\n      if (!textTrack || textTrack.mode === 'disabled') {\n        return;\n      }\n      cues.forEach((cue) => addCueToTrack(textTrack, cue));\n    } else {\n      const currentTrack = this.tracks[fragLevel];\n      if (!currentTrack) {\n        return;\n      }\n      const track = currentTrack.default ? 'default' : 'subtitles' + fragLevel;\n      hls.trigger(Events.CUES_PARSED, { type: 'subtitles', cues, track });\n    }\n  }\n\n  private onFragDecrypted(\n    event: Events.FRAG_DECRYPTED,\n    data: FragDecryptedData\n  ) {\n    const { frag } = data;\n    if (frag.type === PlaylistLevelType.SUBTITLE) {\n      if (!Number.isFinite(this.initPTS[frag.cc])) {\n        this.unparsedVttFrags.push(data as unknown as FragLoadedData);\n        return;\n      }\n      this.onFragLoaded(Events.FRAG_LOADED, data as unknown as FragLoadedData);\n    }\n  }\n\n  private onSubtitleTracksCleared() {\n    this.tracks = [];\n    this.captionsTracks = {};\n  }\n\n  private onFragParsingUserdata(\n    event: Events.FRAG_PARSING_USERDATA,\n    data: FragParsingUserdataData\n  ) {\n    const { cea608Parser1, cea608Parser2 } = this;\n    if (!this.enabled || !(cea608Parser1 && cea608Parser2)) {\n      return;\n    }\n\n    const { frag, samples } = data;\n    if (\n      frag.type === PlaylistLevelType.MAIN &&\n      this.closedCaptionsForLevel(frag) === 'NONE'\n    ) {\n      return;\n    }\n    // If the event contains captions (found in the bytes property), push all bytes into the parser immediately\n    // It will create the proper timestamps based on the PTS value\n    for (let i = 0; i < samples.length; i++) {\n      const ccBytes = samples[i].bytes;\n      if (ccBytes) {\n        const ccdatas = this.extractCea608Data(ccBytes);\n        cea608Parser1.addData(samples[i].pts, ccdatas[0]);\n        cea608Parser2.addData(samples[i].pts, ccdatas[1]);\n      }\n    }\n  }\n\n  onBufferFlushing(\n    event: Events.BUFFER_FLUSHING,\n    { startOffset, endOffset, endOffsetSubtitles, type }: BufferFlushingData\n  ) {\n    const { media } = this;\n    if (!media || media.currentTime < endOffset) {\n      return;\n    }\n    // Clear 608 caption cues from the captions TextTracks when the video back buffer is flushed\n    // Forward cues are never removed because we can loose streamed 608 content from recent fragments\n    if (!type || type === 'video') {\n      const { captionsTracks } = this;\n      Object.keys(captionsTracks).forEach((trackName) =>\n        removeCuesInRange(captionsTracks[trackName], startOffset, endOffset)\n      );\n    }\n    if (this.config.renderTextTracksNatively) {\n      // Clear VTT/IMSC1 subtitle cues from the subtitle TextTracks when the back buffer is flushed\n      if (startOffset === 0 && endOffsetSubtitles !== undefined) {\n        const { textTracks } = this;\n        Object.keys(textTracks).forEach((trackName) =>\n          removeCuesInRange(\n            textTracks[trackName],\n            startOffset,\n            endOffsetSubtitles\n          )\n        );\n      }\n    }\n  }\n\n  private extractCea608Data(byteArray: Uint8Array): number[][] {\n    const actualCCBytes: number[][] = [[], []];\n    const count = byteArray[0] & 0x1f;\n    let position = 2;\n\n    for (let j = 0; j < count; j++) {\n      const tmpByte = byteArray[position++];\n      const ccbyte1 = 0x7f & byteArray[position++];\n      const ccbyte2 = 0x7f & byteArray[position++];\n      if (ccbyte1 === 0 && ccbyte2 === 0) {\n        continue;\n      }\n      const ccValid = (0x04 & tmpByte) !== 0; // Support all four channels\n      if (ccValid) {\n        const ccType = 0x03 & tmpByte;\n        if (\n          0x00 /* CEA608 field1*/ === ccType ||\n          0x01 /* CEA608 field2*/ === ccType\n        ) {\n          // Exclude CEA708 CC data.\n          actualCCBytes[ccType].push(ccbyte1);\n          actualCCBytes[ccType].push(ccbyte2);\n        }\n      }\n    }\n    return actualCCBytes;\n  }\n}\n\nfunction canReuseVttTextTrack(inUseTrack, manifestTrack): boolean {\n  return (\n    inUseTrack &&\n    inUseTrack.label === manifestTrack.name &&\n    !(inUseTrack.textTrack1 || inUseTrack.textTrack2)\n  );\n}\n\nfunction intersection(x1: number, x2: number, y1: number, y2: number): number {\n  return Math.min(x2, y2) - Math.max(x1, y1);\n}\n\nfunction newVTTCCs(): VTTCCs {\n  return {\n    ccOffset: 0,\n    presentationOffset: 0,\n    0: {\n      start: 0,\n      prevCC: -1,\n      new: true,\n    },\n  };\n}\n", "export default class AESCrypto {\n  private subtle: SubtleCrypto;\n  private aesIV: Uint8Array;\n\n  constructor(subtle: SubtleCrypto, iv: Uint8Array) {\n    this.subtle = subtle;\n    this.aesIV = iv;\n  }\n\n  decrypt(data: ArrayBuffer, key: CryptoKey) {\n    return this.subtle.decrypt({ name: 'AES-CBC', iv: this.aesIV }, key, data);\n  }\n}\n", "import { sliceUint8 } from '../utils/typed-array';\n\n// PKCS7\nexport function removePadding(array: Uint8Array): Uint8Array {\n  const outputBytes = array.byteLength;\n  const paddingBytes =\n    outputBytes && new DataView(array.buffer).getUint8(outputBytes - 1);\n  if (paddingBytes) {\n    return sliceUint8(array, 0, outputBytes - paddingBytes);\n  }\n  return array;\n}\n\nexport default class AESDecryptor {\n  private rcon: Array<number> = [\n    0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36,\n  ];\n  private subMix: Array<Uint32Array> = [\n    new Uint32Array(256),\n    new Uint32Array(256),\n    new Uint32Array(256),\n    new Uint32Array(256),\n  ];\n  private invSubMix: Array<Uint32Array> = [\n    new Uint32Array(256),\n    new Uint32Array(256),\n    new Uint32Array(256),\n    new Uint32Array(256),\n  ];\n  private sBox: Uint32Array = new Uint32Array(256);\n  private invSBox: Uint32Array = new Uint32Array(256);\n  private key: Uint32Array = new Uint32Array(0);\n\n  private ksRows: number = 0;\n  private keySize: number = 0;\n  private keySchedule!: Uint32Array;\n  private invKeySchedule!: Uint32Array;\n\n  constructor() {\n    this.initTable();\n  }\n\n  // Using view.getUint32() also swaps the byte order.\n  uint8ArrayToUint32Array_(arrayBuffer) {\n    const view = new DataView(arrayBuffer);\n    const newArray = new Uint32Array(4);\n    for (let i = 0; i < 4; i++) {\n      newArray[i] = view.getUint32(i * 4);\n    }\n\n    return newArray;\n  }\n\n  initTable() {\n    const sBox = this.sBox;\n    const invSBox = this.invSBox;\n    const subMix = this.subMix;\n    const subMix0 = subMix[0];\n    const subMix1 = subMix[1];\n    const subMix2 = subMix[2];\n    const subMix3 = subMix[3];\n    const invSubMix = this.invSubMix;\n    const invSubMix0 = invSubMix[0];\n    const invSubMix1 = invSubMix[1];\n    const invSubMix2 = invSubMix[2];\n    const invSubMix3 = invSubMix[3];\n\n    const d = new Uint32Array(256);\n    let x = 0;\n    let xi = 0;\n    let i = 0;\n    for (i = 0; i < 256; i++) {\n      if (i < 128) {\n        d[i] = i << 1;\n      } else {\n        d[i] = (i << 1) ^ 0x11b;\n      }\n    }\n\n    for (i = 0; i < 256; i++) {\n      let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n      sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n      sBox[x] = sx;\n      invSBox[sx] = x;\n\n      // Compute multiplication\n      const x2 = d[x];\n      const x4 = d[x2];\n      const x8 = d[x4];\n\n      // Compute sub/invSub bytes, mix columns tables\n      let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n      subMix0[x] = (t << 24) | (t >>> 8);\n      subMix1[x] = (t << 16) | (t >>> 16);\n      subMix2[x] = (t << 8) | (t >>> 24);\n      subMix3[x] = t;\n\n      // Compute inv sub bytes, inv mix columns tables\n      t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n      invSubMix0[sx] = (t << 24) | (t >>> 8);\n      invSubMix1[sx] = (t << 16) | (t >>> 16);\n      invSubMix2[sx] = (t << 8) | (t >>> 24);\n      invSubMix3[sx] = t;\n\n      // Compute next counter\n      if (!x) {\n        x = xi = 1;\n      } else {\n        x = x2 ^ d[d[d[x8 ^ x2]]];\n        xi ^= d[d[xi]];\n      }\n    }\n  }\n\n  expandKey(keyBuffer: ArrayBuffer) {\n    // convert keyBuffer to Uint32Array\n    const key = this.uint8ArrayToUint32Array_(keyBuffer);\n    let sameKey = true;\n    let offset = 0;\n\n    while (offset < key.length && sameKey) {\n      sameKey = key[offset] === this.key[offset];\n      offset++;\n    }\n\n    if (sameKey) {\n      return;\n    }\n\n    this.key = key;\n    const keySize = (this.keySize = key.length);\n\n    if (keySize !== 4 && keySize !== 6 && keySize !== 8) {\n      throw new Error('Invalid aes key size=' + keySize);\n    }\n\n    const ksRows = (this.ksRows = (keySize + 6 + 1) * 4);\n    let ksRow;\n    let invKsRow;\n\n    const keySchedule = (this.keySchedule = new Uint32Array(ksRows));\n    const invKeySchedule = (this.invKeySchedule = new Uint32Array(ksRows));\n    const sbox = this.sBox;\n    const rcon = this.rcon;\n\n    const invSubMix = this.invSubMix;\n    const invSubMix0 = invSubMix[0];\n    const invSubMix1 = invSubMix[1];\n    const invSubMix2 = invSubMix[2];\n    const invSubMix3 = invSubMix[3];\n\n    let prev;\n    let t;\n\n    for (ksRow = 0; ksRow < ksRows; ksRow++) {\n      if (ksRow < keySize) {\n        prev = keySchedule[ksRow] = key[ksRow];\n        continue;\n      }\n      t = prev;\n\n      if (ksRow % keySize === 0) {\n        // Rot word\n        t = (t << 8) | (t >>> 24);\n\n        // Sub word\n        t =\n          (sbox[t >>> 24] << 24) |\n          (sbox[(t >>> 16) & 0xff] << 16) |\n          (sbox[(t >>> 8) & 0xff] << 8) |\n          sbox[t & 0xff];\n\n        // Mix Rcon\n        t ^= rcon[(ksRow / keySize) | 0] << 24;\n      } else if (keySize > 6 && ksRow % keySize === 4) {\n        // Sub word\n        t =\n          (sbox[t >>> 24] << 24) |\n          (sbox[(t >>> 16) & 0xff] << 16) |\n          (sbox[(t >>> 8) & 0xff] << 8) |\n          sbox[t & 0xff];\n      }\n\n      keySchedule[ksRow] = prev = (keySchedule[ksRow - keySize] ^ t) >>> 0;\n    }\n\n    for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n      ksRow = ksRows - invKsRow;\n      if (invKsRow & 3) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] =\n          invSubMix0[sbox[t >>> 24]] ^\n          invSubMix1[sbox[(t >>> 16) & 0xff]] ^\n          invSubMix2[sbox[(t >>> 8) & 0xff]] ^\n          invSubMix3[sbox[t & 0xff]];\n      }\n\n      invKeySchedule[invKsRow] = invKeySchedule[invKsRow] >>> 0;\n    }\n  }\n\n  // Adding this as a method greatly improves performance.\n  networkToHostOrderSwap(word) {\n    return (\n      (word << 24) |\n      ((word & 0xff00) << 8) |\n      ((word & 0xff0000) >> 8) |\n      (word >>> 24)\n    );\n  }\n\n  decrypt(inputArrayBuffer: ArrayBuffer, offset: number, aesIV: ArrayBuffer) {\n    const nRounds = this.keySize + 6;\n    const invKeySchedule = this.invKeySchedule;\n    const invSBOX = this.invSBox;\n\n    const invSubMix = this.invSubMix;\n    const invSubMix0 = invSubMix[0];\n    const invSubMix1 = invSubMix[1];\n    const invSubMix2 = invSubMix[2];\n    const invSubMix3 = invSubMix[3];\n\n    const initVector = this.uint8ArrayToUint32Array_(aesIV);\n    let initVector0 = initVector[0];\n    let initVector1 = initVector[1];\n    let initVector2 = initVector[2];\n    let initVector3 = initVector[3];\n\n    const inputInt32 = new Int32Array(inputArrayBuffer);\n    const outputInt32 = new Int32Array(inputInt32.length);\n\n    let t0, t1, t2, t3;\n    let s0, s1, s2, s3;\n    let inputWords0, inputWords1, inputWords2, inputWords3;\n\n    let ksRow, i;\n    const swapWord = this.networkToHostOrderSwap;\n\n    while (offset < inputInt32.length) {\n      inputWords0 = swapWord(inputInt32[offset]);\n      inputWords1 = swapWord(inputInt32[offset + 1]);\n      inputWords2 = swapWord(inputInt32[offset + 2]);\n      inputWords3 = swapWord(inputInt32[offset + 3]);\n\n      s0 = inputWords0 ^ invKeySchedule[0];\n      s1 = inputWords3 ^ invKeySchedule[1];\n      s2 = inputWords2 ^ invKeySchedule[2];\n      s3 = inputWords1 ^ invKeySchedule[3];\n\n      ksRow = 4;\n\n      // Iterate through the rounds of decryption\n      for (i = 1; i < nRounds; i++) {\n        t0 =\n          invSubMix0[s0 >>> 24] ^\n          invSubMix1[(s1 >> 16) & 0xff] ^\n          invSubMix2[(s2 >> 8) & 0xff] ^\n          invSubMix3[s3 & 0xff] ^\n          invKeySchedule[ksRow];\n        t1 =\n          invSubMix0[s1 >>> 24] ^\n          invSubMix1[(s2 >> 16) & 0xff] ^\n          invSubMix2[(s3 >> 8) & 0xff] ^\n          invSubMix3[s0 & 0xff] ^\n          invKeySchedule[ksRow + 1];\n        t2 =\n          invSubMix0[s2 >>> 24] ^\n          invSubMix1[(s3 >> 16) & 0xff] ^\n          invSubMix2[(s0 >> 8) & 0xff] ^\n          invSubMix3[s1 & 0xff] ^\n          invKeySchedule[ksRow + 2];\n        t3 =\n          invSubMix0[s3 >>> 24] ^\n          invSubMix1[(s0 >> 16) & 0xff] ^\n          invSubMix2[(s1 >> 8) & 0xff] ^\n          invSubMix3[s2 & 0xff] ^\n          invKeySchedule[ksRow + 3];\n        // Update state\n        s0 = t0;\n        s1 = t1;\n        s2 = t2;\n        s3 = t3;\n\n        ksRow = ksRow + 4;\n      }\n\n      // Shift rows, sub bytes, add round key\n      t0 =\n        (invSBOX[s0 >>> 24] << 24) ^\n        (invSBOX[(s1 >> 16) & 0xff] << 16) ^\n        (invSBOX[(s2 >> 8) & 0xff] << 8) ^\n        invSBOX[s3 & 0xff] ^\n        invKeySchedule[ksRow];\n      t1 =\n        (invSBOX[s1 >>> 24] << 24) ^\n        (invSBOX[(s2 >> 16) & 0xff] << 16) ^\n        (invSBOX[(s3 >> 8) & 0xff] << 8) ^\n        invSBOX[s0 & 0xff] ^\n        invKeySchedule[ksRow + 1];\n      t2 =\n        (invSBOX[s2 >>> 24] << 24) ^\n        (invSBOX[(s3 >> 16) & 0xff] << 16) ^\n        (invSBOX[(s0 >> 8) & 0xff] << 8) ^\n        invSBOX[s1 & 0xff] ^\n        invKeySchedule[ksRow + 2];\n      t3 =\n        (invSBOX[s3 >>> 24] << 24) ^\n        (invSBOX[(s0 >> 16) & 0xff] << 16) ^\n        (invSBOX[(s1 >> 8) & 0xff] << 8) ^\n        invSBOX[s2 & 0xff] ^\n        invKeySchedule[ksRow + 3];\n\n      // Write\n      outputInt32[offset] = swapWord(t0 ^ initVector0);\n      outputInt32[offset + 1] = swapWord(t3 ^ initVector1);\n      outputInt32[offset + 2] = swapWord(t2 ^ initVector2);\n      outputInt32[offset + 3] = swapWord(t1 ^ initVector3);\n\n      // reset initVector to last 4 unsigned int\n      initVector0 = inputWords0;\n      initVector1 = inputWords1;\n      initVector2 = inputWords2;\n      initVector3 = inputWords3;\n\n      offset = offset + 4;\n    }\n\n    return outputInt32.buffer;\n  }\n}\n", "import AESCrypto from './aes-crypto';\nimport FastAESKey from './fast-aes-key';\nimport AESDecryptor, { removePadding } from './aes-decryptor';\nimport { logger } from '../utils/logger';\nimport { appendUint8Array } from '../utils/mp4-tools';\nimport { sliceUint8 } from '../utils/typed-array';\nimport type { HlsConfig } from '../config';\n\nconst CHUNK_SIZE = 16; // 16 bytes, 128 bits\n\nexport default class Decrypter {\n  private logEnabled: boolean = true;\n  private removePKCS7Padding: boolean;\n  private subtle: SubtleCrypto | null = null;\n  private softwareDecrypter: AESDecryptor | null = null;\n  private key: ArrayBuffer | null = null;\n  private fastAesKey: FastAESKey | null = null;\n  private remainderData: Uint8Array | null = null;\n  private currentIV: ArrayBuffer | null = null;\n  private currentResult: ArrayBuffer | null = null;\n  private useSoftware: boolean;\n\n  constructor(config: HlsConfig, { removePKCS7Padding = true } = {}) {\n    this.useSoftware = config.enableSoftwareAES;\n    this.removePKCS7Padding = removePKCS7Padding;\n    // built in decryptor expects PKCS7 padding\n    if (removePKCS7Padding) {\n      try {\n        const browserCrypto = self.crypto;\n        if (browserCrypto) {\n          this.subtle =\n            browserCrypto.subtle ||\n            ((browserCrypto as any).webkitSubtle as SubtleCrypto);\n        }\n      } catch (e) {\n        /* no-op */\n      }\n    }\n    if (this.subtle === null) {\n      this.useSoftware = true;\n    }\n  }\n\n  destroy() {\n    this.subtle = null;\n    this.softwareDecrypter = null;\n    this.key = null;\n    this.fastAesKey = null;\n    this.remainderData = null;\n    this.currentIV = null;\n    this.currentResult = null;\n  }\n\n  public isSync() {\n    return this.useSoftware;\n  }\n\n  public flush(): Uint8Array | null {\n    const { currentResult, remainderData } = this;\n    if (!currentResult || remainderData) {\n      this.reset();\n      return null;\n    }\n    const data = new Uint8Array(currentResult);\n    this.reset();\n    if (this.removePKCS7Padding) {\n      return removePadding(data);\n    }\n    return data;\n  }\n\n  public reset() {\n    this.currentResult = null;\n    this.currentIV = null;\n    this.remainderData = null;\n    if (this.softwareDecrypter) {\n      this.softwareDecrypter = null;\n    }\n  }\n\n  public decrypt(\n    data: Uint8Array | ArrayBuffer,\n    key: ArrayBuffer,\n    iv: ArrayBuffer\n  ): Promise<ArrayBuffer> {\n    if (this.useSoftware) {\n      return new Promise((resolve, reject) => {\n        this.softwareDecrypt(new Uint8Array(data), key, iv);\n        const decryptResult = this.flush();\n        if (decryptResult) {\n          resolve(decryptResult.buffer);\n        } else {\n          reject(new Error('[softwareDecrypt] Failed to decrypt data'));\n        }\n      });\n    }\n    return this.webCryptoDecrypt(new Uint8Array(data), key, iv);\n  }\n\n  // Software decryption is progressive. Progressive decryption may not return a result on each call. Any cached\n  // data is handled in the flush() call\n  public softwareDecrypt(\n    data: Uint8Array,\n    key: ArrayBuffer,\n    iv: ArrayBuffer\n  ): ArrayBuffer | null {\n    const { currentIV, currentResult, remainderData } = this;\n    this.logOnce('JS AES decrypt');\n    // The output is staggered during progressive parsing - the current result is cached, and emitted on the next call\n    // This is done in order to strip PKCS7 padding, which is found at the end of each segment. We only know we've reached\n    // the end on flush(), but by that time we have already received all bytes for the segment.\n    // Progressive decryption does not work with WebCrypto\n\n    if (remainderData) {\n      data = appendUint8Array(remainderData, data);\n      this.remainderData = null;\n    }\n\n    // Byte length must be a multiple of 16 (AES-128 = 128 bit blocks = 16 bytes)\n    const currentChunk = this.getValidChunk(data);\n    if (!currentChunk.length) {\n      return null;\n    }\n\n    if (currentIV) {\n      iv = currentIV;\n    }\n\n    let softwareDecrypter = this.softwareDecrypter;\n    if (!softwareDecrypter) {\n      softwareDecrypter = this.softwareDecrypter = new AESDecryptor();\n    }\n    softwareDecrypter.expandKey(key);\n\n    const result = currentResult;\n\n    this.currentResult = softwareDecrypter.decrypt(currentChunk.buffer, 0, iv);\n    this.currentIV = sliceUint8(currentChunk, -16).buffer;\n\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  public webCryptoDecrypt(\n    data: Uint8Array,\n    key: ArrayBuffer,\n    iv: ArrayBuffer\n  ): Promise<ArrayBuffer> {\n    const subtle = this.subtle;\n    if (this.key !== key || !this.fastAesKey) {\n      this.key = key;\n      this.fastAesKey = new FastAESKey(subtle, key);\n    }\n    return this.fastAesKey\n      .expandKey()\n      .then((aesKey) => {\n        // decrypt using web crypto\n        if (!subtle) {\n          return Promise.reject(new Error('web crypto not initialized'));\n        }\n        this.logOnce('WebCrypto AES decrypt');\n        const crypto = new AESCrypto(subtle, new Uint8Array(iv));\n        return crypto.decrypt(data.buffer, aesKey);\n      })\n      .catch((err) => {\n        logger.warn(\n          `[decrypter]: WebCrypto Error, disable WebCrypto API, ${err.name}: ${err.message}`\n        );\n\n        return this.onWebCryptoError(data, key, iv);\n      });\n  }\n\n  private onWebCryptoError(data, key, iv): ArrayBuffer | never {\n    this.useSoftware = true;\n    this.logEnabled = true;\n    this.softwareDecrypt(data, key, iv);\n    const decryptResult = this.flush();\n    if (decryptResult) {\n      return decryptResult.buffer;\n    }\n    throw new Error('WebCrypto and softwareDecrypt: failed to decrypt data');\n  }\n\n  private getValidChunk(data: Uint8Array): Uint8Array {\n    let currentChunk = data;\n    const splitPoint = data.length - (data.length % CHUNK_SIZE);\n    if (splitPoint !== data.length) {\n      currentChunk = sliceUint8(data, 0, splitPoint);\n      this.remainderData = sliceUint8(data, splitPoint);\n    }\n    return currentChunk;\n  }\n\n  private logOnce(msg: string) {\n    if (!this.logEnabled) {\n      return;\n    }\n    logger.log(`[decrypter]: ${msg}`);\n    this.logEnabled = false;\n  }\n}\n", "export default class FastAESKey {\n  private subtle: any;\n  private key: ArrayBuffer;\n\n  constructor(subtle, key) {\n    this.subtle = subtle;\n    this.key = key;\n  }\n\n  expandKey() {\n    return this.subtle.importKey('raw', this.key, { name: 'AES-CBC' }, false, [\n      'encrypt',\n      'decrypt',\n    ]);\n  }\n}\n", "/**\n * AAC demuxer\n */\nimport BaseAudioDemuxer from './base-audio-demuxer';\nimport * as ADTS from './adts';\nimport { logger } from '../utils/logger';\nimport * as ID3 from '../demux/id3';\nimport type { HlsEventEmitter } from '../events';\nimport type { HlsConfig } from '../config';\n\nclass AACDemuxer extends BaseAudioDemuxer {\n  private readonly observer: HlsEventEmitter;\n  private readonly config: HlsConfig;\n\n  constructor(observer, config) {\n    super();\n    this.observer = observer;\n    this.config = config;\n  }\n\n  resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  ) {\n    super.resetInitSegment(initSegment, audioCodec, videoCodec, trackDuration);\n    this._audioTrack = {\n      container: 'audio/adts',\n      type: 'audio',\n      id: 2,\n      pid: -1,\n      sequenceNumber: 0,\n      segmentCodec: 'aac',\n      samples: [],\n      manifestCodec: audioCodec,\n      duration: trackDuration,\n      inputTimeScale: 90000,\n      dropped: 0,\n    };\n  }\n\n  // Source for probe info - https://wiki.multimedia.cx/index.php?title=ADTS\n  static probe(data): boolean {\n    if (!data) {\n      return false;\n    }\n\n    // Check for the ADTS sync word\n    // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1\n    // Layer bits (position 14 and 15) in header should be always 0 for ADTS\n    // More info https://wiki.multimedia.cx/index.php?title=ADTS\n    const id3Data = ID3.getID3Data(data, 0) || [];\n    let offset = id3Data.length;\n\n    for (let length = data.length; offset < length; offset++) {\n      if (ADTS.probe(data, offset)) {\n        logger.log('ADTS sync word found !');\n        return true;\n      }\n    }\n    return false;\n  }\n\n  canParse(data, offset) {\n    return ADTS.canParse(data, offset);\n  }\n\n  appendFrame(track, data, offset) {\n    ADTS.initTrackConfig(\n      track,\n      this.observer,\n      data,\n      offset,\n      track.manifestCodec\n    );\n    const frame = ADTS.appendFrame(\n      track,\n      data,\n      offset,\n      this.basePTS as number,\n      this.frameIndex\n    );\n    if (frame && frame.missing === 0) {\n      return frame;\n    }\n  }\n}\n\nexport default AACDemuxer;\n", "/**\n * ADTS parser helper\n * @link https://wiki.multimedia.cx/index.php?title=ADTS\n */\nimport { logger } from '../utils/logger';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport type { HlsEventEmitter } from '../events';\nimport { Events } from '../events';\nimport type {\n  DemuxedAudioTrack,\n  AudioFrame,\n  AudioSample,\n} from '../types/demuxer';\n\ntype AudioConfig = {\n  config: number[];\n  samplerate: number;\n  channelCount: number;\n  codec: string;\n  manifestCodec: string;\n};\n\ntype FrameHeader = {\n  headerLength: number;\n  frameLength: number;\n};\n\nexport function getAudioConfig(\n  observer,\n  data: Uint8Array,\n  offset: number,\n  audioCodec: string\n): AudioConfig | void {\n  let adtsObjectType: number;\n  let adtsExtensionSamplingIndex: number;\n  let adtsChannelConfig: number;\n  let config: number[];\n  const userAgent = navigator.userAgent.toLowerCase();\n  const manifestCodec = audioCodec;\n  const adtsSamplingRates = [\n    96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025,\n    8000, 7350,\n  ];\n  // byte 2\n  adtsObjectType = ((data[offset + 2] & 0xc0) >>> 6) + 1;\n  const adtsSamplingIndex = (data[offset + 2] & 0x3c) >>> 2;\n  if (adtsSamplingIndex > adtsSamplingRates.length - 1) {\n    observer.trigger(Events.ERROR, {\n      type: ErrorTypes.MEDIA_ERROR,\n      details: ErrorDetails.FRAG_PARSING_ERROR,\n      fatal: true,\n      reason: `invalid ADTS sampling index:${adtsSamplingIndex}`,\n    });\n    return;\n  }\n  adtsChannelConfig = (data[offset + 2] & 0x01) << 2;\n  // byte 3\n  adtsChannelConfig |= (data[offset + 3] & 0xc0) >>> 6;\n  logger.log(\n    `manifest codec:${audioCodec}, ADTS type:${adtsObjectType}, samplingIndex:${adtsSamplingIndex}`\n  );\n  // firefox: freq less than 24kHz = AAC SBR (HE-AAC)\n  if (/firefox/i.test(userAgent)) {\n    if (adtsSamplingIndex >= 6) {\n      adtsObjectType = 5;\n      config = new Array(4);\n      // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n      // there is a factor 2 between frame sample rate and output sample rate\n      // multiply frequency by 2 (see table below, equivalent to substract 3)\n      adtsExtensionSamplingIndex = adtsSamplingIndex - 3;\n    } else {\n      adtsObjectType = 2;\n      config = new Array(2);\n      adtsExtensionSamplingIndex = adtsSamplingIndex;\n    }\n    // Android : always use AAC\n  } else if (userAgent.indexOf('android') !== -1) {\n    adtsObjectType = 2;\n    config = new Array(2);\n    adtsExtensionSamplingIndex = adtsSamplingIndex;\n  } else {\n    /*  for other browsers (Chrome/Vivaldi/Opera ...)\n        always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)\n    */\n    adtsObjectType = 5;\n    config = new Array(4);\n    // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\n    if (\n      (audioCodec &&\n        (audioCodec.indexOf('mp4a.40.29') !== -1 ||\n          audioCodec.indexOf('mp4a.40.5') !== -1)) ||\n      (!audioCodec && adtsSamplingIndex >= 6)\n    ) {\n      // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n      // there is a factor 2 between frame sample rate and output sample rate\n      // multiply frequency by 2 (see table below, equivalent to substract 3)\n      adtsExtensionSamplingIndex = adtsSamplingIndex - 3;\n    } else {\n      // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)\n      // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\n      if (\n        (audioCodec &&\n          audioCodec.indexOf('mp4a.40.2') !== -1 &&\n          ((adtsSamplingIndex >= 6 && adtsChannelConfig === 1) ||\n            /vivaldi/i.test(userAgent))) ||\n        (!audioCodec && adtsChannelConfig === 1)\n      ) {\n        adtsObjectType = 2;\n        config = new Array(2);\n      }\n      adtsExtensionSamplingIndex = adtsSamplingIndex;\n    }\n  }\n  /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config\n      ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()\n    Audio Profile / Audio Object Type\n    0: Null\n    1: AAC Main\n    2: AAC LC (Low Complexity)\n    3: AAC SSR (Scalable Sample Rate)\n    4: AAC LTP (Long Term Prediction)\n    5: SBR (Spectral Band Replication)\n    6: AAC Scalable\n   sampling freq\n    0: 96000 Hz\n    1: 88200 Hz\n    2: 64000 Hz\n    3: 48000 Hz\n    4: 44100 Hz\n    5: 32000 Hz\n    6: 24000 Hz\n    7: 22050 Hz\n    8: 16000 Hz\n    9: 12000 Hz\n    10: 11025 Hz\n    11: 8000 Hz\n    12: 7350 Hz\n    13: Reserved\n    14: Reserved\n    15: frequency is written explictly\n    Channel Configurations\n    These are the channel configurations:\n    0: Defined in AOT Specifc Config\n    1: 1 channel: front-center\n    2: 2 channels: front-left, front-right\n  */\n  // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\n  config[0] = adtsObjectType << 3;\n  // samplingFrequencyIndex\n  config[0] |= (adtsSamplingIndex & 0x0e) >> 1;\n  config[1] |= (adtsSamplingIndex & 0x01) << 7;\n  // channelConfiguration\n  config[1] |= adtsChannelConfig << 3;\n  if (adtsObjectType === 5) {\n    // adtsExtensionSamplingIndex\n    config[1] |= (adtsExtensionSamplingIndex & 0x0e) >> 1;\n    config[2] = (adtsExtensionSamplingIndex & 0x01) << 7;\n    // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???\n    //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\n    config[2] |= 2 << 2;\n    config[3] = 0;\n  }\n  return {\n    config,\n    samplerate: adtsSamplingRates[adtsSamplingIndex],\n    channelCount: adtsChannelConfig,\n    codec: 'mp4a.40.' + adtsObjectType,\n    manifestCodec,\n  };\n}\n\nexport function isHeaderPattern(data: Uint8Array, offset: number): boolean {\n  return data[offset] === 0xff && (data[offset + 1] & 0xf6) === 0xf0;\n}\n\nexport function getHeaderLength(data: Uint8Array, offset: number): number {\n  return data[offset + 1] & 0x01 ? 7 : 9;\n}\n\nexport function getFullFrameLength(data: Uint8Array, offset: number): number {\n  return (\n    ((data[offset + 3] & 0x03) << 11) |\n    (data[offset + 4] << 3) |\n    ((data[offset + 5] & 0xe0) >>> 5)\n  );\n}\n\nexport function canGetFrameLength(data: Uint8Array, offset: number): boolean {\n  return offset + 5 < data.length;\n}\n\nexport function isHeader(data: Uint8Array, offset: number): boolean {\n  // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1\n  // Layer bits (position 14 and 15) in header should be always 0 for ADTS\n  // More info https://wiki.multimedia.cx/index.php?title=ADTS\n  return offset + 1 < data.length && isHeaderPattern(data, offset);\n}\n\nexport function canParse(data: Uint8Array, offset: number): boolean {\n  return (\n    canGetFrameLength(data, offset) &&\n    isHeaderPattern(data, offset) &&\n    getFullFrameLength(data, offset) <= data.length - offset\n  );\n}\n\nexport function probe(data: Uint8Array, offset: number): boolean {\n  // same as isHeader but we also check that ADTS frame follows last ADTS frame\n  // or end of data is reached\n  if (isHeader(data, offset)) {\n    // ADTS header Length\n    const headerLength = getHeaderLength(data, offset);\n    if (offset + headerLength >= data.length) {\n      return false;\n    }\n    // ADTS frame Length\n    const frameLength = getFullFrameLength(data, offset);\n    if (frameLength <= headerLength) {\n      return false;\n    }\n\n    const newOffset = offset + frameLength;\n    return newOffset === data.length || isHeader(data, newOffset);\n  }\n  return false;\n}\n\nexport function initTrackConfig(\n  track: DemuxedAudioTrack,\n  observer: HlsEventEmitter,\n  data: Uint8Array,\n  offset: number,\n  audioCodec: string\n) {\n  if (!track.samplerate) {\n    const config = getAudioConfig(observer, data, offset, audioCodec);\n    if (!config) {\n      return;\n    }\n    track.config = config.config;\n    track.samplerate = config.samplerate;\n    track.channelCount = config.channelCount;\n    track.codec = config.codec;\n    track.manifestCodec = config.manifestCodec;\n    logger.log(\n      `parsed codec:${track.codec}, rate:${config.samplerate}, channels:${config.channelCount}`\n    );\n  }\n}\n\nexport function getFrameDuration(samplerate: number): number {\n  return (1024 * 90000) / samplerate;\n}\n\nexport function parseFrameHeader(\n  data: Uint8Array,\n  offset: number\n): FrameHeader | void {\n  // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n  const headerLength = getHeaderLength(data, offset);\n  if (offset + headerLength <= data.length) {\n    // retrieve frame size\n    const frameLength = getFullFrameLength(data, offset) - headerLength;\n    if (frameLength > 0) {\n      // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}`);\n      return { headerLength, frameLength };\n    }\n  }\n}\n\nexport function appendFrame(\n  track: DemuxedAudioTrack,\n  data: Uint8Array,\n  offset: number,\n  pts: number,\n  frameIndex: number\n): AudioFrame {\n  const frameDuration = getFrameDuration(track.samplerate as number);\n  const stamp = pts + frameIndex * frameDuration;\n  const header = parseFrameHeader(data, offset);\n  let unit: Uint8Array;\n  if (header) {\n    const { frameLength, headerLength } = header;\n    const length = headerLength + frameLength;\n    const missing = Math.max(0, offset + length - data.length);\n    // logger.log(`AAC frame ${frameIndex}, pts:${stamp} length@offset/total: ${frameLength}@${offset+headerLength}/${data.byteLength} missing: ${missing}`);\n    if (missing) {\n      unit = new Uint8Array(length - headerLength);\n      unit.set(data.subarray(offset + headerLength, data.length), 0);\n    } else {\n      unit = data.subarray(offset + headerLength, offset + length);\n    }\n\n    const sample: AudioSample = {\n      unit,\n      pts: stamp,\n    };\n    if (!missing) {\n      track.samples.push(sample as AudioSample);\n    }\n\n    return { sample, length, missing };\n  }\n  // overflow incomplete header\n  const length = data.length - offset;\n  unit = new Uint8Array(length);\n  unit.set(data.subarray(offset, data.length), 0);\n  const sample: AudioSample = {\n    unit,\n    pts: stamp,\n  };\n  return { sample, length, missing: -1 };\n}\n", "import * as ID3 from '../demux/id3';\nimport {\n  DemuxerResult,\n  Demuxer,\n  DemuxedAudioTrack,\n  AudioFrame,\n  DemuxedMetadataTrack,\n  DemuxedVideoTrack,\n  DemuxedUserdataTrack,\n  KeyData,\n  MetadataSchema,\n} from '../types/demuxer';\nimport { dummyTrack } from './dummy-demuxed-track';\nimport { appendUint8Array } from '../utils/mp4-tools';\nimport { sliceUint8 } from '../utils/typed-array';\n\nclass BaseAudioDemuxer implements Demuxer {\n  protected _audioTrack!: DemuxedAudioTrack;\n  protected _id3Track!: DemuxedMetadataTrack;\n  protected frameIndex: number = 0;\n  protected cachedData: Uint8Array | null = null;\n  protected basePTS: number | null = null;\n  protected initPTS: number | null = null;\n  protected lastPTS: number | null = null;\n\n  resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  ) {\n    this._id3Track = {\n      type: 'id3',\n      id: 3,\n      pid: -1,\n      inputTimeScale: 90000,\n      sequenceNumber: 0,\n      samples: [],\n      dropped: 0,\n    };\n  }\n\n  resetTimeStamp(deaultTimestamp) {\n    this.initPTS = deaultTimestamp;\n    this.resetContiguity();\n  }\n\n  resetContiguity(): void {\n    this.basePTS = null;\n    this.lastPTS = null;\n    this.frameIndex = 0;\n  }\n\n  canParse(data: Uint8Array, offset: number): boolean {\n    return false;\n  }\n\n  appendFrame(\n    track: DemuxedAudioTrack,\n    data: Uint8Array,\n    offset: number\n  ): AudioFrame | void {}\n\n  // feed incoming data to the front of the parsing pipeline\n  demux(data: Uint8Array, timeOffset: number): DemuxerResult {\n    if (this.cachedData) {\n      data = appendUint8Array(this.cachedData, data);\n      this.cachedData = null;\n    }\n\n    let id3Data: Uint8Array | undefined = ID3.getID3Data(data, 0);\n    let offset = id3Data ? id3Data.length : 0;\n    let lastDataIndex;\n    const track = this._audioTrack;\n    const id3Track = this._id3Track;\n    const timestamp = id3Data ? ID3.getTimeStamp(id3Data) : undefined;\n    const length = data.length;\n\n    if (\n      this.basePTS === null ||\n      (this.frameIndex === 0 && Number.isFinite(timestamp))\n    ) {\n      this.basePTS = initPTSFn(timestamp, timeOffset, this.initPTS);\n      this.lastPTS = this.basePTS;\n    }\n\n    if (this.lastPTS === null) {\n      this.lastPTS = this.basePTS;\n    }\n\n    // more expressive than alternative: id3Data?.length\n    if (id3Data && id3Data.length > 0) {\n      id3Track.samples.push({\n        pts: this.lastPTS,\n        dts: this.lastPTS,\n        data: id3Data,\n        type: MetadataSchema.audioId3,\n        duration: Number.POSITIVE_INFINITY,\n      });\n    }\n\n    while (offset < length) {\n      if (this.canParse(data, offset)) {\n        const frame = this.appendFrame(track, data, offset);\n        if (frame) {\n          this.frameIndex++;\n          this.lastPTS = frame.sample.pts;\n          offset += frame.length;\n          lastDataIndex = offset;\n        } else {\n          offset = length;\n        }\n      } else if (ID3.canParse(data, offset)) {\n        // after a ID3.canParse, a call to ID3.getID3Data *should* always returns some data\n        id3Data = ID3.getID3Data(data, offset)!;\n        id3Track.samples.push({\n          pts: this.lastPTS,\n          dts: this.lastPTS,\n          data: id3Data,\n          type: MetadataSchema.audioId3,\n          duration: Number.POSITIVE_INFINITY,\n        });\n        offset += id3Data.length;\n        lastDataIndex = offset;\n      } else {\n        offset++;\n      }\n      if (offset === length && lastDataIndex !== length) {\n        const partialData = sliceUint8(data, lastDataIndex);\n        if (this.cachedData) {\n          this.cachedData = appendUint8Array(this.cachedData, partialData);\n        } else {\n          this.cachedData = partialData;\n        }\n      }\n    }\n\n    return {\n      audioTrack: track,\n      videoTrack: dummyTrack() as DemuxedVideoTrack,\n      id3Track,\n      textTrack: dummyTrack() as DemuxedUserdataTrack,\n    };\n  }\n\n  demuxSampleAes(\n    data: Uint8Array,\n    keyData: KeyData,\n    timeOffset: number\n  ): Promise<DemuxerResult> {\n    return Promise.reject(\n      new Error(`[${this}] This demuxer does not support Sample-AES decryption`)\n    );\n  }\n\n  flush(timeOffset: number): DemuxerResult {\n    // Parse cache in case of remaining frames.\n    const cachedData = this.cachedData;\n    if (cachedData) {\n      this.cachedData = null;\n      this.demux(cachedData, 0);\n    }\n\n    return {\n      audioTrack: this._audioTrack,\n      videoTrack: dummyTrack() as DemuxedVideoTrack,\n      id3Track: this._id3Track,\n      textTrack: dummyTrack() as DemuxedUserdataTrack,\n    };\n  }\n\n  destroy() {}\n}\n\n/**\n * Initialize PTS\n * <p>\n *    use timestamp unless it is undefined, NaN or Infinity\n * </p>\n */\nexport const initPTSFn = (\n  timestamp: number | undefined,\n  timeOffset: number,\n  initPTS: number | null\n): number => {\n  if (Number.isFinite(timestamp as number)) {\n    return timestamp! * 90;\n  }\n  return timeOffset * 90000 + (initPTS || 0);\n};\nexport default BaseAudioDemuxer;\n", "export default class ChunkCache {\n  private chunks: Array<Uint8Array> = [];\n  public dataLength: number = 0;\n\n  push(chunk: Uint8Array) {\n    this.chunks.push(chunk);\n    this.dataLength += chunk.length;\n  }\n\n  flush(): Uint8Array {\n    const { chunks, dataLength } = this;\n    let result;\n    if (!chunks.length) {\n      return new Uint8Array(0);\n    } else if (chunks.length === 1) {\n      result = chunks[0];\n    } else {\n      result = concatUint8Arrays(chunks, dataLength);\n    }\n    this.reset();\n    return result;\n  }\n\n  reset() {\n    this.chunks.length = 0;\n    this.dataLength = 0;\n  }\n}\n\nfunction concatUint8Arrays(\n  chunks: Array<Uint8Array>,\n  dataLength: number\n): Uint8Array {\n  const result = new Uint8Array(dataLength);\n  let offset = 0;\n  for (let i = 0; i < chunks.length; i++) {\n    const chunk = chunks[i];\n    result.set(chunk, offset);\n    offset += chunk.length;\n  }\n  return result;\n}\n", "import type { DemuxedTrack } from '../types/demuxer';\n\nexport function dummyTrack(type = '', inputTimeScale = 90000): DemuxedTrack {\n  return {\n    type,\n    id: -1,\n    pid: -1,\n    inputTimeScale,\n    sequenceNumber: -1,\n    samples: [],\n    dropped: 0,\n  };\n}\n", "/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.\n */\n\nimport { logger } from '../utils/logger';\n\nclass ExpGolomb {\n  private data: Uint8Array;\n  public bytesAvailable: number;\n  private word: number;\n  private bitsAvailable: number;\n\n  constructor(data: Uint8Array) {\n    this.data = data;\n    // the number of bytes left to examine in this.data\n    this.bytesAvailable = data.byteLength;\n    // the current word being examined\n    this.word = 0; // :uint\n    // the number of bits left to examine in the current word\n    this.bitsAvailable = 0; // :uint\n  }\n\n  // ():void\n  loadWord(): void {\n    const data = this.data;\n    const bytesAvailable = this.bytesAvailable;\n    const position = data.byteLength - bytesAvailable;\n    const workingBytes = new Uint8Array(4);\n    const availableBytes = Math.min(4, bytesAvailable);\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(data.subarray(position, position + availableBytes));\n    this.word = new DataView(workingBytes.buffer).getUint32(0);\n    // track the amount of this.data that has been processed\n    this.bitsAvailable = availableBytes * 8;\n    this.bytesAvailable -= availableBytes;\n  }\n\n  // (count:int):void\n  skipBits(count: number): void {\n    let skipBytes; // :int\n    count = Math.min(count, this.bytesAvailable * 8 + this.bitsAvailable);\n    if (this.bitsAvailable > count) {\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    } else {\n      count -= this.bitsAvailable;\n      skipBytes = count >> 3;\n      count -= skipBytes << 3;\n      this.bytesAvailable -= skipBytes;\n      this.loadWord();\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    }\n  }\n\n  // (size:int):uint\n  readBits(size: number): number {\n    let bits = Math.min(this.bitsAvailable, size); // :uint\n    const valu = this.word >>> (32 - bits); // :uint\n    if (size > 32) {\n      logger.error('Cannot read more than 32 bits at a time');\n    }\n\n    this.bitsAvailable -= bits;\n    if (this.bitsAvailable > 0) {\n      this.word <<= bits;\n    } else if (this.bytesAvailable > 0) {\n      this.loadWord();\n    } else {\n      throw new Error('no bits available');\n    }\n\n    bits = size - bits;\n    if (bits > 0 && this.bitsAvailable) {\n      return (valu << bits) | this.readBits(bits);\n    } else {\n      return valu;\n    }\n  }\n\n  // ():uint\n  skipLZ(): number {\n    let leadingZeroCount; // :uint\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this.bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this.word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        this.word <<= leadingZeroCount;\n        this.bitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n    // we exhausted word and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLZ();\n  }\n\n  // ():void\n  skipUEG(): void {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():void\n  skipEG(): void {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():uint\n  readUEG(): number {\n    const clz = this.skipLZ(); // :uint\n    return this.readBits(clz + 1) - 1;\n  }\n\n  // ():int\n  readEG(): number {\n    const valu = this.readUEG(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    } else {\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }\n  }\n\n  // Some convenience functions\n  // :Boolean\n  readBoolean(): boolean {\n    return this.readBits(1) === 1;\n  }\n\n  // ():int\n  readUByte(): number {\n    return this.readBits(8);\n  }\n\n  // ():int\n  readUShort(): number {\n    return this.readBits(16);\n  }\n\n  // ():int\n  readUInt(): number {\n    return this.readBits(32);\n  }\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count the number of entries in this scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList(count: number): void {\n    let lastScale = 8;\n    let nextScale = 8;\n    let deltaScale;\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale;\n    }\n  }\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSPS(): {\n    width: number;\n    height: number;\n    pixelRatio: [number, number];\n  } {\n    let frameCropLeftOffset = 0;\n    let frameCropRightOffset = 0;\n    let frameCropTopOffset = 0;\n    let frameCropBottomOffset = 0;\n    let numRefFramesInPicOrderCntCycle;\n    let scalingListCount;\n    let i;\n    const readUByte = this.readUByte.bind(this);\n    const readBits = this.readBits.bind(this);\n    const readUEG = this.readUEG.bind(this);\n    const readBoolean = this.readBoolean.bind(this);\n    const skipBits = this.skipBits.bind(this);\n    const skipEG = this.skipEG.bind(this);\n    const skipUEG = this.skipUEG.bind(this);\n    const skipScalingList = this.skipScalingList.bind(this);\n\n    readUByte();\n    const profileIdc = readUByte(); // profile_idc\n    readBits(5); // profileCompat constraint_set[0-4]_flag, u(5)\n    skipBits(3); // reserved_zero_3bits u(3),\n    readUByte(); // level_idc u(8)\n    skipUEG(); // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128\n    ) {\n      const chromaFormatIdc = readUEG();\n      if (chromaFormatIdc === 3) {\n        skipBits(1);\n      } // separate_colour_plane_flag\n\n      skipUEG(); // bit_depth_luma_minus8\n      skipUEG(); // bit_depth_chroma_minus8\n      skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (readBoolean()) {\n        // seq_scaling_matrix_present_flag\n        scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (readBoolean()) {\n            // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16);\n            } else {\n              skipScalingList(64);\n            }\n          }\n        }\n      }\n    }\n    skipUEG(); // log2_max_frame_num_minus4\n    const picOrderCntType = readUEG();\n    if (picOrderCntType === 0) {\n      readUEG(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      skipBits(1); // delta_pic_order_always_zero_flag\n      skipEG(); // offset_for_non_ref_pic\n      skipEG(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = readUEG();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        skipEG();\n      } // offset_for_ref_frame[ i ]\n    }\n    skipUEG(); // max_num_ref_frames\n    skipBits(1); // gaps_in_frame_num_value_allowed_flag\n    const picWidthInMbsMinus1 = readUEG();\n    const picHeightInMapUnitsMinus1 = readUEG();\n    const frameMbsOnlyFlag = readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      skipBits(1);\n    } // mb_adaptive_frame_field_flag\n\n    skipBits(1); // direct_8x8_inference_flag\n    if (readBoolean()) {\n      // frame_cropping_flag\n      frameCropLeftOffset = readUEG();\n      frameCropRightOffset = readUEG();\n      frameCropTopOffset = readUEG();\n      frameCropBottomOffset = readUEG();\n    }\n    let pixelRatio: [number, number] = [1, 1];\n    if (readBoolean()) {\n      // vui_parameters_present_flag\n      if (readBoolean()) {\n        // aspect_ratio_info_present_flag\n        const aspectRatioIdc = readUByte();\n        switch (aspectRatioIdc) {\n          case 1:\n            pixelRatio = [1, 1];\n            break;\n          case 2:\n            pixelRatio = [12, 11];\n            break;\n          case 3:\n            pixelRatio = [10, 11];\n            break;\n          case 4:\n            pixelRatio = [16, 11];\n            break;\n          case 5:\n            pixelRatio = [40, 33];\n            break;\n          case 6:\n            pixelRatio = [24, 11];\n            break;\n          case 7:\n            pixelRatio = [20, 11];\n            break;\n          case 8:\n            pixelRatio = [32, 11];\n            break;\n          case 9:\n            pixelRatio = [80, 33];\n            break;\n          case 10:\n            pixelRatio = [18, 11];\n            break;\n          case 11:\n            pixelRatio = [15, 11];\n            break;\n          case 12:\n            pixelRatio = [64, 33];\n            break;\n          case 13:\n            pixelRatio = [160, 99];\n            break;\n          case 14:\n            pixelRatio = [4, 3];\n            break;\n          case 15:\n            pixelRatio = [3, 2];\n            break;\n          case 16:\n            pixelRatio = [2, 1];\n            break;\n          case 255: {\n            pixelRatio = [\n              (readUByte() << 8) | readUByte(),\n              (readUByte() << 8) | readUByte(),\n            ];\n            break;\n          }\n        }\n      }\n    }\n    return {\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          frameCropLeftOffset * 2 -\n          frameCropRightOffset * 2\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      pixelRatio: pixelRatio,\n    };\n  }\n\n  readSliceType() {\n    // skip NALu type\n    this.readUByte();\n    // discard first_mb_in_slice\n    this.readUEG();\n    // return slice_type\n    return this.readUEG();\n  }\n}\n\nexport default ExpGolomb;\n", "type RawFrame = { type: string; size: number; data: Uint8Array };\n\n// breaking up those two types in order to clarify what is happening in the decoding path.\ntype DecodedFrame<T> = { key: string; data: T; info?: any };\nexport type Frame = DecodedFrame<ArrayBuffer | string>;\n\n/**\n * Returns true if an ID3 header can be found at offset in data\n * @param {Uint8Array} data - The data to search in\n * @param {number} offset - The offset at which to start searching\n * @return {boolean} - True if an ID3 header is found\n */\nexport const isHeader = (data: Uint8Array, offset: number): boolean => {\n  /*\n   * http://id3.org/id3v2.3.0\n   * [0]     = 'I'\n   * [1]     = 'D'\n   * [2]     = '3'\n   * [3,4]   = {Version}\n   * [5]     = {Flags}\n   * [6-9]   = {ID3 Size}\n   *\n   * An ID3v2 tag can be detected with the following pattern:\n   *  $49 44 33 yy yy xx zz zz zz zz\n   * Where yy is less than $FF, xx is the 'flags' byte and zz is less than $80\n   */\n  if (offset + 10 <= data.length) {\n    // look for 'ID3' identifier\n    if (\n      data[offset] === 0x49 &&\n      data[offset + 1] === 0x44 &&\n      data[offset + 2] === 0x33\n    ) {\n      // check version is within range\n      if (data[offset + 3] < 0xff && data[offset + 4] < 0xff) {\n        // check size is within range\n        if (\n          data[offset + 6] < 0x80 &&\n          data[offset + 7] < 0x80 &&\n          data[offset + 8] < 0x80 &&\n          data[offset + 9] < 0x80\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * Returns true if an ID3 footer can be found at offset in data\n * @param {Uint8Array} data - The data to search in\n * @param {number} offset - The offset at which to start searching\n * @return {boolean} - True if an ID3 footer is found\n */\nexport const isFooter = (data: Uint8Array, offset: number): boolean => {\n  /*\n   * The footer is a copy of the header, but with a different identifier\n   */\n  if (offset + 10 <= data.length) {\n    // look for '3DI' identifier\n    if (\n      data[offset] === 0x33 &&\n      data[offset + 1] === 0x44 &&\n      data[offset + 2] === 0x49\n    ) {\n      // check version is within range\n      if (data[offset + 3] < 0xff && data[offset + 4] < 0xff) {\n        // check size is within range\n        if (\n          data[offset + 6] < 0x80 &&\n          data[offset + 7] < 0x80 &&\n          data[offset + 8] < 0x80 &&\n          data[offset + 9] < 0x80\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * Returns any adjacent ID3 tags found in data starting at offset, as one block of data\n * @param {Uint8Array} data - The data to search in\n * @param {number} offset - The offset at which to start searching\n * @return {Uint8Array | undefined} - The block of data containing any ID3 tags found\n * or *undefined* if no header is found at the starting offset\n */\nexport const getID3Data = (\n  data: Uint8Array,\n  offset: number\n): Uint8Array | undefined => {\n  const front = offset;\n  let length = 0;\n\n  while (isHeader(data, offset)) {\n    // ID3 header is 10 bytes\n    length += 10;\n\n    const size = readSize(data, offset + 6);\n    length += size;\n\n    if (isFooter(data, offset + 10)) {\n      // ID3 footer is 10 bytes\n      length += 10;\n    }\n\n    offset += length;\n  }\n\n  if (length > 0) {\n    return data.subarray(front, front + length);\n  }\n\n  return undefined;\n};\n\nconst readSize = (data: Uint8Array, offset: number): number => {\n  let size = 0;\n  size = (data[offset] & 0x7f) << 21;\n  size |= (data[offset + 1] & 0x7f) << 14;\n  size |= (data[offset + 2] & 0x7f) << 7;\n  size |= data[offset + 3] & 0x7f;\n  return size;\n};\n\nexport const canParse = (data: Uint8Array, offset: number): boolean => {\n  return (\n    isHeader(data, offset) &&\n    readSize(data, offset + 6) + 10 <= data.length - offset\n  );\n};\n\n/**\n * Searches for the Elementary Stream timestamp found in the ID3 data chunk\n * @param {Uint8Array} data - Block of data containing one or more ID3 tags\n * @return {number | undefined} - The timestamp\n */\nexport const getTimeStamp = (data: Uint8Array): number | undefined => {\n  const frames: Frame[] = getID3Frames(data);\n\n  for (let i = 0; i < frames.length; i++) {\n    const frame = frames[i];\n\n    if (isTimeStampFrame(frame)) {\n      return readTimeStamp(frame as DecodedFrame<ArrayBuffer>);\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Returns true if the ID3 frame is an Elementary Stream timestamp frame\n * @param {ID3 frame} frame\n */\nexport const isTimeStampFrame = (frame: Frame): boolean => {\n  return (\n    frame &&\n    frame.key === 'PRIV' &&\n    frame.info === 'com.apple.streaming.transportStreamTimestamp'\n  );\n};\n\nconst getFrameData = (data: Uint8Array): RawFrame => {\n  /*\n  Frame ID       $xx xx xx xx (four characters)\n  Size           $xx xx xx xx\n  Flags          $xx xx\n  */\n  const type: string = String.fromCharCode(data[0], data[1], data[2], data[3]);\n  const size: number = readSize(data, 4);\n\n  // skip frame id, size, and flags\n  const offset = 10;\n\n  return { type, size, data: data.subarray(offset, offset + size) };\n};\n\n/**\n * Returns an array of ID3 frames found in all the ID3 tags in the id3Data\n * @param {Uint8Array} id3Data - The ID3 data containing one or more ID3 tags\n * @return {ID3.Frame[]} - Array of ID3 frame objects\n */\nexport const getID3Frames = (id3Data: Uint8Array): Frame[] => {\n  let offset = 0;\n  const frames: Frame[] = [];\n\n  while (isHeader(id3Data, offset)) {\n    const size = readSize(id3Data, offset + 6);\n    // skip past ID3 header\n    offset += 10;\n    const end = offset + size;\n    // loop through frames in the ID3 tag\n    while (offset + 8 < end) {\n      const frameData: RawFrame = getFrameData(id3Data.subarray(offset));\n      const frame: Frame | undefined = decodeFrame(frameData);\n      if (frame) {\n        frames.push(frame);\n      }\n\n      // skip frame header and frame data\n      offset += frameData.size + 10;\n    }\n\n    if (isFooter(id3Data, offset)) {\n      offset += 10;\n    }\n  }\n\n  return frames;\n};\n\nexport const decodeFrame = (frame: RawFrame): Frame | undefined => {\n  if (frame.type === 'PRIV') {\n    return decodePrivFrame(frame);\n  } else if (frame.type[0] === 'W') {\n    return decodeURLFrame(frame);\n  }\n\n  return decodeTextFrame(frame);\n};\n\nconst decodePrivFrame = (\n  frame: RawFrame\n): DecodedFrame<ArrayBuffer> | undefined => {\n  /*\n  Format: <text string>\\0<binary data>\n  */\n  if (frame.size < 2) {\n    return undefined;\n  }\n\n  const owner = utf8ArrayToStr(frame.data, true);\n  const privateData = new Uint8Array(frame.data.subarray(owner.length + 1));\n\n  return { key: frame.type, info: owner, data: privateData.buffer };\n};\n\nconst decodeTextFrame = (frame: RawFrame): DecodedFrame<string> | undefined => {\n  if (frame.size < 2) {\n    return undefined;\n  }\n\n  if (frame.type === 'TXXX') {\n    /*\n    Format:\n    [0]   = {Text Encoding}\n    [1-?] = {Description}\\0{Value}\n    */\n    let index = 1;\n    const description = utf8ArrayToStr(frame.data.subarray(index), true);\n\n    index += description.length + 1;\n    const value = utf8ArrayToStr(frame.data.subarray(index));\n\n    return { key: frame.type, info: description, data: value };\n  }\n  /*\n  Format:\n  [0]   = {Text Encoding}\n  [1-?] = {Value}\n  */\n  const text = utf8ArrayToStr(frame.data.subarray(1));\n  return { key: frame.type, data: text };\n};\n\nconst decodeURLFrame = (frame: RawFrame): DecodedFrame<string> | undefined => {\n  if (frame.type === 'WXXX') {\n    /*\n    Format:\n    [0]   = {Text Encoding}\n    [1-?] = {Description}\\0{URL}\n    */\n    if (frame.size < 2) {\n      return undefined;\n    }\n\n    let index = 1;\n    const description: string = utf8ArrayToStr(\n      frame.data.subarray(index),\n      true\n    );\n\n    index += description.length + 1;\n    const value: string = utf8ArrayToStr(frame.data.subarray(index));\n\n    return { key: frame.type, info: description, data: value };\n  }\n  /*\n  Format:\n  [0-?] = {URL}\n  */\n  const url: string = utf8ArrayToStr(frame.data);\n  return { key: frame.type, data: url };\n};\n\nconst readTimeStamp = (\n  timeStampFrame: DecodedFrame<ArrayBuffer>\n): number | undefined => {\n  if (timeStampFrame.data.byteLength === 8) {\n    const data = new Uint8Array(timeStampFrame.data);\n    // timestamp is 33 bit expressed as a big-endian eight-octet number,\n    // with the upper 31 bits set to zero.\n    const pts33Bit = data[3] & 0x1;\n    let timestamp =\n      (data[4] << 23) + (data[5] << 15) + (data[6] << 7) + data[7];\n    timestamp /= 45;\n\n    if (pts33Bit) {\n      timestamp += 47721858.84;\n    } // 2^32 / 90\n\n    return Math.round(timestamp);\n  }\n\n  return undefined;\n};\n\n// http://stackoverflow.com/questions/8936984/uint8array-to-string-in-javascript/22373197\n// http://www.onicos.com/staff/iz/amuse/javascript/expert/utf.txt\n/* utf.js - UTF-8 <=> UTF-16 convertion\n *\n * Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n * Version: 1.0\n * LastModified: Dec 25 1999\n * This library is free.  You can redistribute it and/or modify it.\n */\nexport const utf8ArrayToStr = (\n  array: Uint8Array,\n  exitOnNull: boolean = false\n): string => {\n  const decoder = getTextDecoder();\n  if (decoder) {\n    const decoded = decoder.decode(array);\n\n    if (exitOnNull) {\n      // grab up to the first null\n      const idx = decoded.indexOf('\\0');\n      return idx !== -1 ? decoded.substring(0, idx) : decoded;\n    }\n\n    // remove any null characters\n    return decoded.replace(/\\0/g, '');\n  }\n\n  const len = array.length;\n  let c;\n  let char2;\n  let char3;\n  let out = '';\n  let i = 0;\n  while (i < len) {\n    c = array[i++];\n    if (c === 0x00 && exitOnNull) {\n      return out;\n    } else if (c === 0x00 || c === 0x03) {\n      // If the character is 3 (END_OF_TEXT) or 0 (NULL) then skip it\n      continue;\n    }\n    switch (c >> 4) {\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n        // 0xxxxxxx\n        out += String.fromCharCode(c);\n        break;\n      case 12:\n      case 13:\n        // 110x xxxx   10xx xxxx\n        char2 = array[i++];\n        out += String.fromCharCode(((c & 0x1f) << 6) | (char2 & 0x3f));\n        break;\n      case 14:\n        // 1110 xxxx  10xx xxxx  10xx xxxx\n        char2 = array[i++];\n        char3 = array[i++];\n        out += String.fromCharCode(\n          ((c & 0x0f) << 12) | ((char2 & 0x3f) << 6) | ((char3 & 0x3f) << 0)\n        );\n        break;\n      default:\n    }\n  }\n  return out;\n};\n\nexport const testables = {\n  decodeTextFrame: decodeTextFrame,\n};\n\nlet decoder: TextDecoder;\n\nfunction getTextDecoder() {\n  if (!decoder && typeof self.TextDecoder !== 'undefined') {\n    decoder = new self.TextDecoder('utf-8');\n  }\n\n  return decoder;\n}\n", "/**\n * MP3 demuxer\n */\nimport BaseAudioDemuxer from './base-audio-demuxer';\nimport * as ID3 from '../demux/id3';\nimport { logger } from '../utils/logger';\nimport * as MpegAudio from './mpegaudio';\n\nclass MP3Demuxer extends BaseAudioDemuxer {\n  resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  ) {\n    super.resetInitSegment(initSegment, audioCodec, videoCodec, trackDuration);\n    this._audioTrack = {\n      container: 'audio/mpeg',\n      type: 'audio',\n      id: 2,\n      pid: -1,\n      sequenceNumber: 0,\n      segmentCodec: 'mp3',\n      samples: [],\n      manifestCodec: audioCodec,\n      duration: trackDuration,\n      inputTimeScale: 90000,\n      dropped: 0,\n    };\n  }\n\n  static probe(data): boolean {\n    if (!data) {\n      return false;\n    }\n\n    // check if data contains ID3 timestamp and MPEG sync word\n    // Look for MPEG header | 1111 1111 | 111X XYZX | where X can be either 0 or 1 and Y or Z should be 1\n    // Layer bits (position 14 and 15) in header should be always different from 0 (Layer I or Layer II or Layer III)\n    // More info http://www.mp3-tech.org/programmer/frame_header.html\n    const id3Data = ID3.getID3Data(data, 0) || [];\n    let offset = id3Data.length;\n\n    for (let length = data.length; offset < length; offset++) {\n      if (MpegAudio.probe(data, offset)) {\n        logger.log('MPEG Audio sync word found !');\n        return true;\n      }\n    }\n    return false;\n  }\n\n  canParse(data, offset) {\n    return MpegAudio.canParse(data, offset);\n  }\n\n  appendFrame(track, data, offset) {\n    if (this.basePTS === null) {\n      return;\n    }\n    return MpegAudio.appendFrame(\n      track,\n      data,\n      offset,\n      this.basePTS,\n      this.frameIndex\n    );\n  }\n}\n\nexport default MP3Demuxer;\n", "/**\n * MP4 demuxer\n */\nimport {\n  Demuxer,\n  DemuxerResult,\n  PassthroughTrack,\n  DemuxedAudioTrack,\n  DemuxedUserdataTrack,\n  DemuxedMetadataTrack,\n  KeyData,\n  MetadataSchema,\n} from '../types/demuxer';\nimport {\n  findBox,\n  segmentValidRange,\n  appendUint8Array,\n  parseEmsg,\n  parseSamples,\n  parseInitSegment,\n  RemuxerTrackIdConfig,\n} from '../utils/mp4-tools';\nimport { dummyTrack } from './dummy-demuxed-track';\nimport type { HlsEventEmitter } from '../events';\nimport type { HlsConfig } from '../config';\n\nconst emsgSchemePattern = /\\/emsg[-/]ID3/i;\n\nclass MP4Demuxer implements Demuxer {\n  private remainderData: Uint8Array | null = null;\n  private timeOffset: number = 0;\n  private config: HlsConfig;\n  private videoTrack?: PassthroughTrack;\n  private audioTrack?: DemuxedAudioTrack;\n  private id3Track?: DemuxedMetadataTrack;\n  private txtTrack?: DemuxedUserdataTrack;\n\n  constructor(observer: HlsEventEmitter, config: HlsConfig) {\n    this.config = config;\n  }\n\n  public resetTimeStamp() {}\n\n  public resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  ) {\n    const videoTrack = (this.videoTrack = dummyTrack(\n      'video',\n      1\n    ) as PassthroughTrack);\n    const audioTrack = (this.audioTrack = dummyTrack(\n      'audio',\n      1\n    ) as DemuxedAudioTrack);\n    const captionTrack = (this.txtTrack = dummyTrack(\n      'text',\n      1\n    ) as DemuxedUserdataTrack);\n\n    this.id3Track = dummyTrack('id3', 1) as DemuxedMetadataTrack;\n    this.timeOffset = 0;\n\n    if (!initSegment || !initSegment.byteLength) {\n      return;\n    }\n    const initData = parseInitSegment(initSegment);\n\n    if (initData.video) {\n      const { id, timescale, codec } = initData.video;\n      videoTrack.id = id;\n      videoTrack.timescale = captionTrack.timescale = timescale;\n      videoTrack.codec = codec;\n    }\n\n    if (initData.audio) {\n      const { id, timescale, codec } = initData.audio;\n      audioTrack.id = id;\n      audioTrack.timescale = timescale;\n      audioTrack.codec = codec;\n    }\n\n    captionTrack.id = RemuxerTrackIdConfig.text;\n    videoTrack.sampleDuration = 0;\n    videoTrack.duration = audioTrack.duration = trackDuration;\n  }\n\n  public resetContiguity(): void {}\n\n  static probe(data: Uint8Array) {\n    // ensure we find a moof box in the first 16 kB\n    data = data.length > 16384 ? data.subarray(0, 16384) : data;\n    return findBox(data, ['moof']).length > 0;\n  }\n\n  public demux(data: Uint8Array, timeOffset: number): DemuxerResult {\n    this.timeOffset = timeOffset;\n    // Load all data into the avc track. The CMAF remuxer will look for the data in the samples object; the rest of the fields do not matter\n    let videoSamples = data;\n    const videoTrack = this.videoTrack as PassthroughTrack;\n    const textTrack = this.txtTrack as DemuxedUserdataTrack;\n    if (this.config.progressive) {\n      // Split the bytestream into two ranges: one encompassing all data up until the start of the last moof, and everything else.\n      // This is done to guarantee that we're sending valid data to MSE - when demuxing progressively, we have no guarantee\n      // that the fetch loader gives us flush moof+mdat pairs. If we push jagged data to MSE, it will throw an exception.\n      if (this.remainderData) {\n        videoSamples = appendUint8Array(this.remainderData, data);\n      }\n      const segmentedData = segmentValidRange(videoSamples);\n      this.remainderData = segmentedData.remainder;\n      videoTrack.samples = segmentedData.valid || new Uint8Array();\n    } else {\n      videoTrack.samples = videoSamples;\n    }\n\n    const id3Track = this.extractID3Track(videoTrack, timeOffset);\n    textTrack.samples = parseSamples(timeOffset, videoTrack);\n\n    return {\n      videoTrack,\n      audioTrack: this.audioTrack as DemuxedAudioTrack,\n      id3Track,\n      textTrack: this.txtTrack as DemuxedUserdataTrack,\n    };\n  }\n\n  public flush() {\n    const timeOffset = this.timeOffset;\n    const videoTrack = this.videoTrack as PassthroughTrack;\n    const textTrack = this.txtTrack as DemuxedUserdataTrack;\n    videoTrack.samples = this.remainderData || new Uint8Array();\n    this.remainderData = null;\n\n    const id3Track = this.extractID3Track(videoTrack, this.timeOffset);\n    textTrack.samples = parseSamples(timeOffset, videoTrack);\n\n    return {\n      videoTrack,\n      audioTrack: dummyTrack() as DemuxedAudioTrack,\n      id3Track,\n      textTrack: dummyTrack() as DemuxedUserdataTrack,\n    };\n  }\n\n  private extractID3Track(\n    videoTrack: PassthroughTrack,\n    timeOffset: number\n  ): DemuxedMetadataTrack {\n    const id3Track = this.id3Track as DemuxedMetadataTrack;\n    if (videoTrack.samples.length) {\n      const emsgs = findBox(videoTrack.samples, ['emsg']);\n      if (emsgs) {\n        emsgs.forEach((data: Uint8Array) => {\n          const emsgInfo = parseEmsg(data);\n          if (emsgSchemePattern.test(emsgInfo.schemeIdUri)) {\n            const pts = Number.isFinite(emsgInfo.presentationTime)\n              ? emsgInfo.presentationTime! / emsgInfo.timeScale\n              : timeOffset +\n                emsgInfo.presentationTimeDelta! / emsgInfo.timeScale;\n            let duration =\n              emsgInfo.eventDuration === 0xffffffff\n                ? Number.POSITIVE_INFINITY\n                : emsgInfo.eventDuration / emsgInfo.timeScale;\n            // Safari takes anything <= 0.001 seconds and maps it to Infinity\n            if (duration <= 0.001) {\n              duration = Number.POSITIVE_INFINITY;\n            }\n            const payload = emsgInfo.payload;\n            id3Track.samples.push({\n              data: payload,\n              len: payload.byteLength,\n              dts: pts,\n              pts: pts,\n              type: MetadataSchema.emsg,\n              duration: duration,\n            });\n          }\n        });\n      }\n    }\n    return id3Track;\n  }\n\n  demuxSampleAes(\n    data: Uint8Array,\n    keyData: KeyData,\n    timeOffset: number\n  ): Promise<DemuxerResult> {\n    return Promise.reject(\n      new Error('The MP4 demuxer does not support SAMPLE-AES decryption')\n    );\n  }\n\n  destroy() {}\n}\n\nexport default MP4Demuxer;\n", "/**\n *  MPEG parser helper\n */\nimport { DemuxedAudioTrack } from '../types/demuxer';\n\nlet chromeVersion: number | null = null;\n\nconst BitratesMap = [\n  32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56,\n  64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80,\n  96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144,\n  160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144,\n  160,\n];\n\nconst SamplingRateMap = [\n  44100, 48000, 32000, 22050, 24000, 16000, 11025, 12000, 8000,\n];\n\nconst SamplesCoefficients = [\n  // MPEG 2.5\n  [\n    0, // Reserved\n    72, // Layer3\n    144, // Layer2\n    12, // Layer1\n  ],\n  // Reserved\n  [\n    0, // Reserved\n    0, // Layer3\n    0, // Layer2\n    0, // Layer1\n  ],\n  // MPEG 2\n  [\n    0, // Reserved\n    72, // Layer3\n    144, // Layer2\n    12, // Layer1\n  ],\n  // MPEG 1\n  [\n    0, // Reserved\n    144, // Layer3\n    144, // Layer2\n    12, // Layer1\n  ],\n];\n\nconst BytesInSlot = [\n  0, // Reserved\n  1, // Layer3\n  1, // Layer2\n  4, // Layer1\n];\n\nexport function appendFrame(\n  track: DemuxedAudioTrack,\n  data: Uint8Array,\n  offset: number,\n  pts: number,\n  frameIndex: number\n) {\n  // Using http://www.datavoyage.com/mpgscript/mpeghdr.htm as a reference\n  if (offset + 24 > data.length) {\n    return;\n  }\n\n  const header = parseHeader(data, offset);\n  if (header && offset + header.frameLength <= data.length) {\n    const frameDuration = (header.samplesPerFrame * 90000) / header.sampleRate;\n    const stamp = pts + frameIndex * frameDuration;\n    const sample = {\n      unit: data.subarray(offset, offset + header.frameLength),\n      pts: stamp,\n      dts: stamp,\n    };\n\n    track.config = [];\n    track.channelCount = header.channelCount;\n    track.samplerate = header.sampleRate;\n    track.samples.push(sample);\n\n    return { sample, length: header.frameLength, missing: 0 };\n  }\n}\n\nexport function parseHeader(data: Uint8Array, offset: number) {\n  const mpegVersion = (data[offset + 1] >> 3) & 3;\n  const mpegLayer = (data[offset + 1] >> 1) & 3;\n  const bitRateIndex = (data[offset + 2] >> 4) & 15;\n  const sampleRateIndex = (data[offset + 2] >> 2) & 3;\n  if (\n    mpegVersion !== 1 &&\n    bitRateIndex !== 0 &&\n    bitRateIndex !== 15 &&\n    sampleRateIndex !== 3\n  ) {\n    const paddingBit = (data[offset + 2] >> 1) & 1;\n    const channelMode = data[offset + 3] >> 6;\n    const columnInBitrates =\n      mpegVersion === 3 ? 3 - mpegLayer : mpegLayer === 3 ? 3 : 4;\n    const bitRate =\n      BitratesMap[columnInBitrates * 14 + bitRateIndex - 1] * 1000;\n    const columnInSampleRates =\n      mpegVersion === 3 ? 0 : mpegVersion === 2 ? 1 : 2;\n    const sampleRate =\n      SamplingRateMap[columnInSampleRates * 3 + sampleRateIndex];\n    const channelCount = channelMode === 3 ? 1 : 2; // If bits of channel mode are `11` then it is a single channel (Mono)\n    const sampleCoefficient = SamplesCoefficients[mpegVersion][mpegLayer];\n    const bytesInSlot = BytesInSlot[mpegLayer];\n    const samplesPerFrame = sampleCoefficient * 8 * bytesInSlot;\n    const frameLength =\n      Math.floor((sampleCoefficient * bitRate) / sampleRate + paddingBit) *\n      bytesInSlot;\n\n    if (chromeVersion === null) {\n      const userAgent = navigator.userAgent || '';\n      const result = userAgent.match(/Chrome\\/(\\d+)/i);\n      chromeVersion = result ? parseInt(result[1]) : 0;\n    }\n    const needChromeFix = !!chromeVersion && chromeVersion <= 87;\n\n    if (\n      needChromeFix &&\n      mpegLayer === 2 &&\n      bitRate >= 224000 &&\n      channelMode === 0\n    ) {\n      // Work around bug in Chromium by setting channelMode to dual-channel (01) instead of stereo (00)\n      data[offset + 3] = data[offset + 3] | 0x80;\n    }\n\n    return { sampleRate, channelCount, frameLength, samplesPerFrame };\n  }\n}\n\nexport function isHeaderPattern(data: Uint8Array, offset: number): boolean {\n  return (\n    data[offset] === 0xff &&\n    (data[offset + 1] & 0xe0) === 0xe0 &&\n    (data[offset + 1] & 0x06) !== 0x00\n  );\n}\n\nexport function isHeader(data: Uint8Array, offset: number): boolean {\n  // Look for MPEG header | 1111 1111 | 111X XYZX | where X can be either 0 or 1 and Y or Z should be 1\n  // Layer bits (position 14 and 15) in header should be always different from 0 (Layer I or Layer II or Layer III)\n  // More info http://www.mp3-tech.org/programmer/frame_header.html\n  return offset + 1 < data.length && isHeaderPattern(data, offset);\n}\n\nexport function canParse(data: Uint8Array, offset: number): boolean {\n  const headerSize = 4;\n\n  return isHeaderPattern(data, offset) && headerSize <= data.length - offset;\n}\n\nexport function probe(data: Uint8Array, offset: number): boolean {\n  // same as isHeader but we also check that MPEG frame follows last MPEG frame\n  // or end of data is reached\n  if (offset + 1 < data.length && isHeaderPattern(data, offset)) {\n    // MPEG header Length\n    const headerLength = 4;\n    // MPEG frame Length\n    const header = parseHeader(data, offset);\n    let frameLength = headerLength;\n    if (header?.frameLength) {\n      frameLength = header.frameLength;\n    }\n\n    const newOffset = offset + frameLength;\n    return newOffset === data.length || isHeader(data, newOffset);\n  }\n  return false;\n}\n", "/**\n * SAMPLE-AES decrypter\n */\n\nimport { HlsConfig } from '../config';\nimport Decrypter from '../crypt/decrypter';\nimport { HlsEventEmitter } from '../events';\nimport type {\n  AudioSample,\n  AvcSample,\n  AvcSampleUnit,\n  DemuxedVideoTrack,\n  KeyData,\n} from '../types/demuxer';\nimport { discardEPB } from '../utils/mp4-tools';\n\nclass SampleAesDecrypter {\n  private keyData: KeyData;\n  private decrypter: Decrypter;\n\n  constructor(observer: HlsEventEmitter, config: HlsConfig, keyData: KeyData) {\n    this.keyData = keyData;\n    this.decrypter = new Decrypter(config, {\n      removePKCS7Padding: false,\n    });\n  }\n\n  decryptBuffer(encryptedData: Uint8Array | ArrayBuffer): Promise<ArrayBuffer> {\n    return this.decrypter.decrypt(\n      encryptedData,\n      this.keyData.key.buffer,\n      this.keyData.iv.buffer\n    );\n  }\n\n  // AAC - encrypt all full 16 bytes blocks starting from offset 16\n  private decryptAacSample(\n    samples: AudioSample[],\n    sampleIndex: number,\n    callback: () => void\n  ) {\n    const curUnit = samples[sampleIndex].unit;\n    if (curUnit.length <= 16) {\n      // No encrypted portion in this sample (first 16 bytes is not\n      // encrypted, see https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/HLS_Sample_Encryption/Encryption/Encryption.html),\n      return;\n    }\n    const encryptedData = curUnit.subarray(\n      16,\n      curUnit.length - (curUnit.length % 16)\n    );\n    const encryptedBuffer = encryptedData.buffer.slice(\n      encryptedData.byteOffset,\n      encryptedData.byteOffset + encryptedData.length\n    );\n\n    this.decryptBuffer(encryptedBuffer).then((decryptedBuffer: ArrayBuffer) => {\n      const decryptedData = new Uint8Array(decryptedBuffer);\n      curUnit.set(decryptedData, 16);\n\n      if (!this.decrypter.isSync()) {\n        this.decryptAacSamples(samples, sampleIndex + 1, callback);\n      }\n    });\n  }\n\n  decryptAacSamples(\n    samples: AudioSample[],\n    sampleIndex: number,\n    callback: () => void\n  ) {\n    for (; ; sampleIndex++) {\n      if (sampleIndex >= samples.length) {\n        callback();\n        return;\n      }\n\n      if (samples[sampleIndex].unit.length < 32) {\n        continue;\n      }\n\n      this.decryptAacSample(samples, sampleIndex, callback);\n\n      if (!this.decrypter.isSync()) {\n        return;\n      }\n    }\n  }\n\n  // AVC - encrypt one 16 bytes block out of ten, starting from offset 32\n  getAvcEncryptedData(decodedData: Uint8Array) {\n    const encryptedDataLen =\n      Math.floor((decodedData.length - 48) / 160) * 16 + 16;\n    const encryptedData = new Int8Array(encryptedDataLen);\n    let outputPos = 0;\n    for (\n      let inputPos = 32;\n      inputPos < decodedData.length - 16;\n      inputPos += 160, outputPos += 16\n    ) {\n      encryptedData.set(\n        decodedData.subarray(inputPos, inputPos + 16),\n        outputPos\n      );\n    }\n\n    return encryptedData;\n  }\n\n  getAvcDecryptedUnit(\n    decodedData: Uint8Array,\n    decryptedData: ArrayLike<number> | ArrayBuffer | SharedArrayBuffer\n  ) {\n    const uint8DecryptedData = new Uint8Array(decryptedData);\n    let inputPos = 0;\n    for (\n      let outputPos = 32;\n      outputPos < decodedData.length - 16;\n      outputPos += 160, inputPos += 16\n    ) {\n      decodedData.set(\n        uint8DecryptedData.subarray(inputPos, inputPos + 16),\n        outputPos\n      );\n    }\n\n    return decodedData;\n  }\n\n  decryptAvcSample(\n    samples: AvcSample[],\n    sampleIndex: number,\n    unitIndex: number,\n    callback: () => void,\n    curUnit: AvcSampleUnit\n  ) {\n    const decodedData = discardEPB(curUnit.data);\n    const encryptedData = this.getAvcEncryptedData(decodedData);\n\n    this.decryptBuffer(encryptedData.buffer).then(\n      (decryptedBuffer: ArrayBuffer) => {\n        curUnit.data = this.getAvcDecryptedUnit(decodedData, decryptedBuffer);\n\n        if (!this.decrypter.isSync()) {\n          this.decryptAvcSamples(samples, sampleIndex, unitIndex + 1, callback);\n        }\n      }\n    );\n  }\n\n  decryptAvcSamples(\n    samples: DemuxedVideoTrack['samples'],\n    sampleIndex: number,\n    unitIndex: number,\n    callback: () => void\n  ) {\n    if (samples instanceof Uint8Array) {\n      throw new Error('Cannot decrypt samples of type Uint8Array');\n    }\n\n    for (; ; sampleIndex++, unitIndex = 0) {\n      if (sampleIndex >= samples.length) {\n        callback();\n        return;\n      }\n\n      const curUnits = samples[sampleIndex].units;\n      for (; ; unitIndex++) {\n        if (unitIndex >= curUnits.length) {\n          break;\n        }\n\n        const curUnit = curUnits[unitIndex];\n        if (\n          curUnit.data.length <= 48 ||\n          (curUnit.type !== 1 && curUnit.type !== 5)\n        ) {\n          continue;\n        }\n\n        this.decryptAvcSample(\n          samples,\n          sampleIndex,\n          unitIndex,\n          callback,\n          curUnit\n        );\n\n        if (!this.decrypter.isSync()) {\n          return;\n        }\n      }\n    }\n  }\n}\n\nexport default SampleAesDecrypter;\n", "import work from './webworkify-webpack';\nimport { Events } from '../events';\nimport Transmuxer, {\n  TransmuxConfig,\n  TransmuxState,\n  isPromise,\n} from '../demux/transmuxer';\nimport { logger } from '../utils/logger';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport { getMediaSource } from '../utils/mediasource-helper';\nimport { EventEmitter } from 'eventemitter3';\nimport { Fragment, Part } from '../loader/fragment';\nimport type { ChunkMetadata, TransmuxerResult } from '../types/transmuxer';\nimport type Hls from '../hls';\nimport type { HlsEventEmitter } from '../events';\nimport type { PlaylistLevelType } from '../types/loader';\nimport type { TypeSupported } from './tsdemuxer';\n\nconst MediaSource = getMediaSource() || { isTypeSupported: () => false };\n\nexport default class TransmuxerInterface {\n  private hls: Hls;\n  private id: PlaylistLevelType;\n  private observer: HlsEventEmitter;\n  private frag: Fragment | null = null;\n  private part: Part | null = null;\n  private useWorker: boolean;\n  private worker: any;\n  private onwmsg?: Function;\n  private transmuxer: Transmuxer | null = null;\n  private onTransmuxComplete: (transmuxResult: TransmuxerResult) => void;\n  private onFlush: (chunkMeta: ChunkMetadata) => void;\n\n  constructor(\n    hls: Hls,\n    id: PlaylistLevelType,\n    onTransmuxComplete: (transmuxResult: TransmuxerResult) => void,\n    onFlush: (chunkMeta: ChunkMetadata) => void\n  ) {\n    const config = hls.config;\n    this.hls = hls;\n    this.id = id;\n    this.useWorker = !!config.enableWorker;\n    this.onTransmuxComplete = onTransmuxComplete;\n    this.onFlush = onFlush;\n\n    const forwardMessage = (ev, data) => {\n      data = data || {};\n      data.frag = this.frag;\n      data.id = this.id;\n      this.hls.trigger(ev, data);\n    };\n\n    // forward events to main thread\n    this.observer = new EventEmitter() as HlsEventEmitter;\n    this.observer.on(Events.FRAG_DECRYPTED, forwardMessage);\n    this.observer.on(Events.ERROR, forwardMessage);\n\n    const typeSupported: TypeSupported = {\n      mp4: MediaSource.isTypeSupported('video/mp4'),\n      mpeg: MediaSource.isTypeSupported('audio/mpeg'),\n      mp3: MediaSource.isTypeSupported('audio/mp4; codecs=\"mp3\"'),\n    };\n    // navigator.vendor is not always available in Web Worker\n    // refer to https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/navigator\n    const vendor = navigator.vendor;\n    if (this.useWorker && typeof Worker !== 'undefined') {\n      logger.log('demuxing in webworker');\n      let worker;\n      try {\n        worker = this.worker = work(\n          require.resolve('../demux/transmuxer-worker.ts')\n        );\n        this.onwmsg = this.onWorkerMessage.bind(this);\n        worker.addEventListener('message', this.onwmsg);\n        worker.onerror = (event) => {\n          this.useWorker = false;\n          logger.warn('Exception in webworker, fallback to inline');\n          this.hls.trigger(Events.ERROR, {\n            type: ErrorTypes.OTHER_ERROR,\n            details: ErrorDetails.INTERNAL_EXCEPTION,\n            fatal: false,\n            event: 'demuxerWorker',\n            error: new Error(\n              `${event.message}  (${event.filename}:${event.lineno})`\n            ),\n          });\n        };\n        worker.postMessage({\n          cmd: 'init',\n          typeSupported: typeSupported,\n          vendor: vendor,\n          id: id,\n          config: JSON.stringify(config),\n        });\n      } catch (err) {\n        logger.warn('Error in worker:', err);\n        logger.error(\n          'Error while initializing DemuxerWorker, fallback to inline'\n        );\n        if (worker) {\n          // revoke the Object URL that was used to create transmuxer worker, so as not to leak it\n          self.URL.revokeObjectURL(worker.objectURL);\n        }\n        this.transmuxer = new Transmuxer(\n          this.observer,\n          typeSupported,\n          config,\n          vendor,\n          id\n        );\n        this.worker = null;\n      }\n    } else {\n      this.transmuxer = new Transmuxer(\n        this.observer,\n        typeSupported,\n        config,\n        vendor,\n        id\n      );\n    }\n  }\n\n  destroy(): void {\n    const w = this.worker;\n    if (w) {\n      w.removeEventListener('message', this.onwmsg);\n      w.terminate();\n      this.worker = null;\n      this.onwmsg = undefined;\n    } else {\n      const transmuxer = this.transmuxer;\n      if (transmuxer) {\n        transmuxer.destroy();\n        this.transmuxer = null;\n      }\n    }\n    const observer = this.observer;\n    if (observer) {\n      observer.removeAllListeners();\n    }\n    this.frag = null;\n    // @ts-ignore\n    this.observer = null;\n    // @ts-ignore\n    this.hls = null;\n  }\n\n  push(\n    data: ArrayBuffer,\n    initSegmentData: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    frag: Fragment,\n    part: Part | null,\n    duration: number,\n    accurateTimeOffset: boolean,\n    chunkMeta: ChunkMetadata,\n    defaultInitPTS?: number\n  ): void {\n    chunkMeta.transmuxing.start = self.performance.now();\n    const { transmuxer, worker } = this;\n    const timeOffset = part ? part.start : frag.start;\n    // TODO: push \"clear-lead\" decrypt data for unencrypted fragments in streams with encrypted ones\n    const decryptdata = frag.decryptdata;\n    const lastFrag = this.frag;\n\n    const discontinuity = !(lastFrag && frag.cc === lastFrag.cc);\n    const trackSwitch = !(lastFrag && chunkMeta.level === lastFrag.level);\n    const snDiff = lastFrag ? chunkMeta.sn - (lastFrag.sn as number) : -1;\n    const partDiff = this.part ? chunkMeta.part - this.part.index : -1;\n    const progressive =\n      snDiff === 0 &&\n      chunkMeta.id > 1 &&\n      chunkMeta.id === lastFrag?.stats.chunkCount;\n    const contiguous =\n      !trackSwitch &&\n      (snDiff === 1 ||\n        (snDiff === 0 && (partDiff === 1 || (progressive && partDiff <= 0))));\n    const now = self.performance.now();\n\n    if (trackSwitch || snDiff || frag.stats.parsing.start === 0) {\n      frag.stats.parsing.start = now;\n    }\n    if (part && (partDiff || !contiguous)) {\n      part.stats.parsing.start = now;\n    }\n    const initSegmentChange = !(\n      lastFrag && frag.initSegment?.url === lastFrag.initSegment?.url\n    );\n    const state = new TransmuxState(\n      discontinuity,\n      contiguous,\n      accurateTimeOffset,\n      trackSwitch,\n      timeOffset,\n      initSegmentChange\n    );\n    if (!contiguous || discontinuity || initSegmentChange) {\n      logger.log(`[transmuxer-interface, ${frag.type}]: Starting new transmux session for sn: ${chunkMeta.sn} p: ${chunkMeta.part} level: ${chunkMeta.level} id: ${chunkMeta.id}\n        discontinuity: ${discontinuity}\n        trackSwitch: ${trackSwitch}\n        contiguous: ${contiguous}\n        accurateTimeOffset: ${accurateTimeOffset}\n        timeOffset: ${timeOffset}\n        initSegmentChange: ${initSegmentChange}`);\n      const config = new TransmuxConfig(\n        audioCodec,\n        videoCodec,\n        initSegmentData,\n        duration,\n        defaultInitPTS\n      );\n      this.configureTransmuxer(config);\n    }\n\n    this.frag = frag;\n    this.part = part;\n\n    // Frags with sn of 'initSegment' are not transmuxed\n    if (worker) {\n      // post fragment payload as transferable objects for ArrayBuffer (no copy)\n      worker.postMessage(\n        {\n          cmd: 'demux',\n          data,\n          decryptdata,\n          chunkMeta,\n          state,\n        },\n        data instanceof ArrayBuffer ? [data] : []\n      );\n    } else if (transmuxer) {\n      const transmuxResult = transmuxer.push(\n        data,\n        decryptdata,\n        chunkMeta,\n        state\n      );\n      if (isPromise(transmuxResult)) {\n        transmuxer.async = true;\n        transmuxResult\n          .then((data) => {\n            this.handleTransmuxComplete(data);\n          })\n          .catch((error) => {\n            this.transmuxerError(\n              error,\n              chunkMeta,\n              'transmuxer-interface push error'\n            );\n          });\n      } else {\n        transmuxer.async = false;\n        this.handleTransmuxComplete(transmuxResult as TransmuxerResult);\n      }\n    }\n  }\n\n  flush(chunkMeta: ChunkMetadata) {\n    chunkMeta.transmuxing.start = self.performance.now();\n    const { transmuxer, worker } = this;\n    if (worker) {\n      1;\n      worker.postMessage({\n        cmd: 'flush',\n        chunkMeta,\n      });\n    } else if (transmuxer) {\n      let transmuxResult = transmuxer.flush(chunkMeta);\n      const asyncFlush = isPromise(transmuxResult);\n      if (asyncFlush || transmuxer.async) {\n        if (!isPromise(transmuxResult)) {\n          transmuxResult = Promise.resolve(transmuxResult);\n        }\n        transmuxResult\n          .then((data) => {\n            this.handleFlushResult(data, chunkMeta);\n          })\n          .catch((error) => {\n            this.transmuxerError(\n              error,\n              chunkMeta,\n              'transmuxer-interface flush error'\n            );\n          });\n      } else {\n        this.handleFlushResult(\n          transmuxResult as Array<TransmuxerResult>,\n          chunkMeta\n        );\n      }\n    }\n  }\n\n  private transmuxerError(\n    error: Error,\n    chunkMeta: ChunkMetadata,\n    reason: string\n  ) {\n    if (!this.hls) {\n      return;\n    }\n    this.hls.trigger(Events.ERROR, {\n      type: ErrorTypes.MEDIA_ERROR,\n      details: ErrorDetails.FRAG_PARSING_ERROR,\n      chunkMeta,\n      fatal: false,\n      error,\n      err: error,\n      reason,\n    });\n  }\n\n  private handleFlushResult(\n    results: Array<TransmuxerResult>,\n    chunkMeta: ChunkMetadata\n  ) {\n    results.forEach((result) => {\n      this.handleTransmuxComplete(result);\n    });\n    this.onFlush(chunkMeta);\n  }\n\n  private onWorkerMessage(ev: any): void {\n    const data = ev.data;\n    const hls = this.hls;\n    switch (data.event) {\n      case 'init': {\n        // revoke the Object URL that was used to create transmuxer worker, so as not to leak it\n        self.URL.revokeObjectURL(this.worker.objectURL);\n        break;\n      }\n\n      case 'transmuxComplete': {\n        this.handleTransmuxComplete(data.data);\n        break;\n      }\n\n      case 'flush': {\n        this.onFlush(data.data);\n        break;\n      }\n\n      // pass logs from the worker thread to the main logger\n      case 'workerLog':\n        if (logger[data.data.logType]) {\n          logger[data.data.logType](data.data.message);\n        }\n        break;\n\n      default: {\n        data.data = data.data || {};\n        data.data.frag = this.frag;\n        data.data.id = this.id;\n        hls.trigger(data.event, data.data);\n        break;\n      }\n    }\n  }\n\n  private configureTransmuxer(config: TransmuxConfig) {\n    const { worker, transmuxer } = this;\n    if (worker) {\n      worker.postMessage({\n        cmd: 'configure',\n        config,\n      });\n    } else if (transmuxer) {\n      transmuxer.configure(config);\n    }\n  }\n\n  private handleTransmuxComplete(result: TransmuxerResult) {\n    result.chunkMeta.transmuxing.end = self.performance.now();\n    this.onTransmuxComplete(result);\n  }\n}\n", "import Transmuxer, { isPromise } from '../demux/transmuxer';\nimport { Events } from '../events';\nimport { ILogFunction, enableLogs, logger } from '../utils/logger';\nimport { EventEmitter } from 'eventemitter3';\nimport type { RemuxedTrack, RemuxerResult } from '../types/remuxer';\nimport type { TransmuxerResult, ChunkMetadata } from '../types/transmuxer';\nimport { ErrorDetails, ErrorTypes } from '../errors';\n\nexport default function TransmuxerWorker(self) {\n  const observer = new EventEmitter();\n  const forwardMessage = (ev, data) => {\n    self.postMessage({ event: ev, data: data });\n  };\n\n  // forward events to main thread\n  observer.on(Events.FRAG_DECRYPTED, forwardMessage);\n  observer.on(Events.ERROR, forwardMessage);\n\n  // forward logger events to main thread\n  const forwardWorkerLogs = () => {\n    for (const logFn in logger) {\n      const func: ILogFunction = (message?) => {\n        forwardMessage('workerLog', {\n          logType: logFn,\n          message,\n        });\n      };\n\n      logger[logFn] = func;\n    }\n  };\n\n  self.addEventListener('message', (ev) => {\n    const data = ev.data;\n    switch (data.cmd) {\n      case 'init': {\n        const config = JSON.parse(data.config);\n        self.transmuxer = new Transmuxer(\n          observer,\n          data.typeSupported,\n          config,\n          data.vendor,\n          data.id\n        );\n        enableLogs(config.debug, data.id);\n        forwardWorkerLogs();\n        forwardMessage('init', null);\n        break;\n      }\n      case 'configure': {\n        self.transmuxer.configure(data.config);\n        break;\n      }\n      case 'demux': {\n        const transmuxResult: TransmuxerResult | Promise<TransmuxerResult> =\n          self.transmuxer.push(\n            data.data,\n            data.decryptdata,\n            data.chunkMeta,\n            data.state\n          );\n        if (isPromise(transmuxResult)) {\n          self.transmuxer.async = true;\n          transmuxResult\n            .then((data) => {\n              emitTransmuxComplete(self, data);\n            })\n            .catch((error) => {\n              forwardMessage(Events.ERROR, {\n                type: ErrorTypes.MEDIA_ERROR,\n                details: ErrorDetails.FRAG_PARSING_ERROR,\n                chunkMeta: data.chunkMeta,\n                fatal: false,\n                error,\n                err: error,\n                reason: `transmuxer-worker push error`,\n              });\n            });\n        } else {\n          self.transmuxer.async = false;\n          emitTransmuxComplete(self, transmuxResult);\n        }\n        break;\n      }\n      case 'flush': {\n        const id = data.chunkMeta;\n        let transmuxResult = self.transmuxer.flush(id);\n        const asyncFlush = isPromise(transmuxResult);\n        if (asyncFlush || self.transmuxer.async) {\n          if (!isPromise(transmuxResult)) {\n            transmuxResult = Promise.resolve(transmuxResult);\n          }\n          transmuxResult\n            .then((results: Array<TransmuxerResult>) => {\n              handleFlushResult(self, results as Array<TransmuxerResult>, id);\n            })\n            .catch((error) => {\n              forwardMessage(Events.ERROR, {\n                type: ErrorTypes.MEDIA_ERROR,\n                details: ErrorDetails.FRAG_PARSING_ERROR,\n                chunkMeta: data.chunkMeta,\n                fatal: false,\n                error,\n                err: error,\n                reason: `transmuxer-worker flush error`,\n              });\n            });\n        } else {\n          handleFlushResult(\n            self,\n            transmuxResult as Array<TransmuxerResult>,\n            id\n          );\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  });\n}\n\nfunction emitTransmuxComplete(\n  self: any,\n  transmuxResult: TransmuxerResult\n): boolean {\n  if (isEmptyResult(transmuxResult.remuxResult)) {\n    return false;\n  }\n  const transferable: Array<ArrayBuffer> = [];\n  const { audio, video } = transmuxResult.remuxResult;\n  if (audio) {\n    addToTransferable(transferable, audio);\n  }\n  if (video) {\n    addToTransferable(transferable, video);\n  }\n  self.postMessage(\n    { event: 'transmuxComplete', data: transmuxResult },\n    transferable\n  );\n  return true;\n}\n\n// Converts data to a transferable object https://developers.google.com/web/updates/2011/12/Transferable-Objects-Lightning-Fast)\n// in order to minimize message passing overhead\nfunction addToTransferable(\n  transferable: Array<ArrayBuffer>,\n  track: RemuxedTrack\n) {\n  if (track.data1) {\n    transferable.push(track.data1.buffer);\n  }\n  if (track.data2) {\n    transferable.push(track.data2.buffer);\n  }\n}\n\nfunction handleFlushResult(\n  self: any,\n  results: Array<TransmuxerResult>,\n  chunkMeta: ChunkMetadata\n) {\n  const parsed = results.reduce(\n    (parsed, result) => emitTransmuxComplete(self, result) || parsed,\n    false\n  );\n  if (!parsed) {\n    // Emit at least one \"transmuxComplete\" message even if media is not found to update stream-controller state to PARSING\n    self.postMessage({ event: 'transmuxComplete', data: results[0] });\n  }\n  self.postMessage({ event: 'flush', data: chunkMeta });\n}\n\nfunction isEmptyResult(remuxResult: RemuxerResult) {\n  return (\n    !remuxResult.audio &&\n    !remuxResult.video &&\n    !remuxResult.text &&\n    !remuxResult.id3 &&\n    !remuxResult.initSegment\n  );\n}\n", "import type { HlsEventEmitter } from '../events';\nimport { Events } from '../events';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport Decrypter from '../crypt/decrypter';\nimport AACDemuxer from '../demux/aacdemuxer';\nimport MP4Demuxer from '../demux/mp4demuxer';\nimport TSDemuxer, { TypeSupported } from '../demux/tsdemuxer';\nimport MP3Demuxer from '../demux/mp3demuxer';\nimport MP4Remuxer from '../remux/mp4-remuxer';\nimport PassThroughRemuxer from '../remux/passthrough-remuxer';\nimport { logger } from '../utils/logger';\nimport type { Demuxer, DemuxerResult, KeyData } from '../types/demuxer';\nimport type { Remuxer } from '../types/remuxer';\nimport type { TransmuxerResult, ChunkMetadata } from '../types/transmuxer';\nimport type { HlsConfig } from '../config';\nimport type { DecryptData } from '../loader/level-key';\nimport type { PlaylistLevelType } from '../types/loader';\n\nlet now;\n// performance.now() not available on WebWorker, at least on Safari Desktop\ntry {\n  now = self.performance.now.bind(self.performance);\n} catch (err) {\n  logger.debug('Unable to use Performance API on this environment');\n  now = self.Date.now;\n}\n\ntype MuxConfig =\n  | { demux: typeof MP4Demuxer; remux: typeof PassThroughRemuxer }\n  | { demux: typeof TSDemuxer; remux: typeof MP4Remuxer }\n  | { demux: typeof AACDemuxer; remux: typeof MP4Remuxer }\n  | { demux: typeof MP3Demuxer; remux: typeof MP4Remuxer };\n\nconst muxConfig: MuxConfig[] = [\n  { demux: MP4Demuxer, remux: PassThroughRemuxer },\n  { demux: TSDemuxer, remux: MP4Remuxer },\n  { demux: AACDemuxer, remux: MP4Remuxer },\n  { demux: MP3Demuxer, remux: MP4Remuxer },\n];\n\nexport default class Transmuxer {\n  public async: boolean = false;\n  private observer: HlsEventEmitter;\n  private typeSupported: TypeSupported;\n  private config: HlsConfig;\n  private vendor: string;\n  private id: PlaylistLevelType;\n  private demuxer?: Demuxer;\n  private remuxer?: Remuxer;\n  private decrypter?: Decrypter;\n  private probe!: Function;\n  private decryptionPromise: Promise<TransmuxerResult> | null = null;\n  private transmuxConfig!: TransmuxConfig;\n  private currentTransmuxState!: TransmuxState;\n\n  constructor(\n    observer: HlsEventEmitter,\n    typeSupported: TypeSupported,\n    config: HlsConfig,\n    vendor: string,\n    id: PlaylistLevelType\n  ) {\n    this.observer = observer;\n    this.typeSupported = typeSupported;\n    this.config = config;\n    this.vendor = vendor;\n    this.id = id;\n  }\n\n  configure(transmuxConfig: TransmuxConfig) {\n    this.transmuxConfig = transmuxConfig;\n    if (this.decrypter) {\n      this.decrypter.reset();\n    }\n  }\n\n  push(\n    data: ArrayBuffer,\n    decryptdata: DecryptData | null,\n    chunkMeta: ChunkMetadata,\n    state?: TransmuxState\n  ): TransmuxerResult | Promise<TransmuxerResult> {\n    const stats = chunkMeta.transmuxing;\n    stats.executeStart = now();\n\n    let uintData: Uint8Array = new Uint8Array(data);\n    const { currentTransmuxState, transmuxConfig } = this;\n    if (state) {\n      this.currentTransmuxState = state;\n    }\n\n    const {\n      contiguous,\n      discontinuity,\n      trackSwitch,\n      accurateTimeOffset,\n      timeOffset,\n      initSegmentChange,\n    } = state || currentTransmuxState;\n    const {\n      audioCodec,\n      videoCodec,\n      defaultInitPts,\n      duration,\n      initSegmentData,\n    } = transmuxConfig;\n\n    const keyData = getEncryptionType(uintData, decryptdata);\n    if (keyData && keyData.method === 'AES-128') {\n      const decrypter = this.getDecrypter();\n      // Software decryption is synchronous; webCrypto is not\n      if (decrypter.isSync()) {\n        // Software decryption is progressive. Progressive decryption may not return a result on each call. Any cached\n        // data is handled in the flush() call\n        let decryptedData = decrypter.softwareDecrypt(\n          uintData,\n          keyData.key.buffer,\n          keyData.iv.buffer\n        );\n        // For Low-Latency HLS Parts, decrypt in place, since part parsing is expected on push progress\n        const loadingParts = chunkMeta.part > -1;\n        if (loadingParts) {\n          decryptedData = decrypter.flush();\n        }\n        if (!decryptedData) {\n          stats.executeEnd = now();\n          return emptyResult(chunkMeta);\n        }\n        uintData = new Uint8Array(decryptedData);\n      } else {\n        this.decryptionPromise = decrypter\n          .webCryptoDecrypt(uintData, keyData.key.buffer, keyData.iv.buffer)\n          .then((decryptedData): TransmuxerResult => {\n            // Calling push here is important; if flush() is called while this is still resolving, this ensures that\n            // the decrypted data has been transmuxed\n            const result = this.push(\n              decryptedData,\n              null,\n              chunkMeta\n            ) as TransmuxerResult;\n            this.decryptionPromise = null;\n            return result;\n          });\n        return this.decryptionPromise!;\n      }\n    }\n\n    const resetMuxers = this.needsProbing(discontinuity, trackSwitch);\n    if (resetMuxers) {\n      this.configureTransmuxer(uintData);\n    }\n\n    if (discontinuity || trackSwitch || initSegmentChange || resetMuxers) {\n      this.resetInitSegment(\n        initSegmentData,\n        audioCodec,\n        videoCodec,\n        duration,\n        decryptdata\n      );\n    }\n\n    if (discontinuity || initSegmentChange || resetMuxers) {\n      this.resetInitialTimestamp(defaultInitPts);\n    }\n\n    if (!contiguous) {\n      this.resetContiguity();\n    }\n\n    const result = this.transmux(\n      uintData,\n      keyData,\n      timeOffset,\n      accurateTimeOffset,\n      chunkMeta\n    );\n    const currentState = this.currentTransmuxState;\n\n    currentState.contiguous = true;\n    currentState.discontinuity = false;\n    currentState.trackSwitch = false;\n\n    stats.executeEnd = now();\n    return result;\n  }\n\n  // Due to data caching, flush calls can produce more than one TransmuxerResult (hence the Array type)\n  flush(\n    chunkMeta: ChunkMetadata\n  ): TransmuxerResult[] | Promise<TransmuxerResult[]> {\n    const stats = chunkMeta.transmuxing;\n    stats.executeStart = now();\n\n    const { decrypter, currentTransmuxState, decryptionPromise } = this;\n\n    if (decryptionPromise) {\n      // Upon resolution, the decryption promise calls push() and returns its TransmuxerResult up the stack. Therefore\n      // only flushing is required for async decryption\n      return decryptionPromise.then(() => {\n        return this.flush(chunkMeta);\n      });\n    }\n\n    const transmuxResults: TransmuxerResult[] = [];\n    const { timeOffset } = currentTransmuxState;\n    if (decrypter) {\n      // The decrypter may have data cached, which needs to be demuxed. In this case we'll have two TransmuxResults\n      // This happens in the case that we receive only 1 push call for a segment (either for non-progressive downloads,\n      // or for progressive downloads with small segments)\n      const decryptedData = decrypter.flush();\n      if (decryptedData) {\n        // Push always returns a TransmuxerResult if decryptdata is null\n        transmuxResults.push(\n          this.push(decryptedData, null, chunkMeta) as TransmuxerResult\n        );\n      }\n    }\n\n    const { demuxer, remuxer } = this;\n    if (!demuxer || !remuxer) {\n      // If probing failed, then Hls.js has been given content its not able to handle\n      this.observer.emit(Events.ERROR, Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.FRAG_PARSING_ERROR,\n        fatal: true,\n        reason: 'no demux matching with content found',\n      });\n      stats.executeEnd = now();\n      return [emptyResult(chunkMeta)];\n    }\n\n    const demuxResultOrPromise = demuxer.flush(timeOffset);\n    if (isPromise(demuxResultOrPromise)) {\n      // Decrypt final SAMPLE-AES samples\n      return demuxResultOrPromise.then((demuxResult) => {\n        this.flushRemux(transmuxResults, demuxResult, chunkMeta);\n        return transmuxResults;\n      });\n    }\n\n    this.flushRemux(transmuxResults, demuxResultOrPromise, chunkMeta);\n    return transmuxResults;\n  }\n\n  private flushRemux(\n    transmuxResults: TransmuxerResult[],\n    demuxResult: DemuxerResult,\n    chunkMeta: ChunkMetadata\n  ) {\n    const { audioTrack, videoTrack, id3Track, textTrack } = demuxResult;\n    const { accurateTimeOffset, timeOffset } = this.currentTransmuxState;\n    logger.log(\n      `[transmuxer.ts]: Flushed fragment ${chunkMeta.sn}${\n        chunkMeta.part > -1 ? ' p: ' + chunkMeta.part : ''\n      } of level ${chunkMeta.level}`\n    );\n    const remuxResult = this.remuxer!.remux(\n      audioTrack,\n      videoTrack,\n      id3Track,\n      textTrack,\n      timeOffset,\n      accurateTimeOffset,\n      true,\n      this.id\n    );\n    transmuxResults.push({\n      remuxResult,\n      chunkMeta,\n    });\n\n    chunkMeta.transmuxing.executeEnd = now();\n  }\n\n  resetInitialTimestamp(defaultInitPts: number | undefined) {\n    const { demuxer, remuxer } = this;\n    if (!demuxer || !remuxer) {\n      return;\n    }\n    demuxer.resetTimeStamp(defaultInitPts);\n    remuxer.resetTimeStamp(defaultInitPts);\n  }\n\n  resetContiguity() {\n    const { demuxer, remuxer } = this;\n    if (!demuxer || !remuxer) {\n      return;\n    }\n    demuxer.resetContiguity();\n    remuxer.resetNextTimestamp();\n  }\n\n  resetInitSegment(\n    initSegmentData: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number,\n    decryptdata: DecryptData | null\n  ) {\n    const { demuxer, remuxer } = this;\n    if (!demuxer || !remuxer) {\n      return;\n    }\n    demuxer.resetInitSegment(\n      initSegmentData,\n      audioCodec,\n      videoCodec,\n      trackDuration\n    );\n    remuxer.resetInitSegment(\n      initSegmentData,\n      audioCodec,\n      videoCodec,\n      decryptdata\n    );\n  }\n\n  destroy(): void {\n    if (this.demuxer) {\n      this.demuxer.destroy();\n      this.demuxer = undefined;\n    }\n    if (this.remuxer) {\n      this.remuxer.destroy();\n      this.remuxer = undefined;\n    }\n  }\n\n  private transmux(\n    data: Uint8Array,\n    keyData: KeyData | null,\n    timeOffset: number,\n    accurateTimeOffset: boolean,\n    chunkMeta: ChunkMetadata\n  ): TransmuxerResult | Promise<TransmuxerResult> {\n    let result: TransmuxerResult | Promise<TransmuxerResult>;\n    if (keyData && keyData.method === 'SAMPLE-AES') {\n      result = this.transmuxSampleAes(\n        data,\n        keyData,\n        timeOffset,\n        accurateTimeOffset,\n        chunkMeta\n      );\n    } else {\n      result = this.transmuxUnencrypted(\n        data,\n        timeOffset,\n        accurateTimeOffset,\n        chunkMeta\n      );\n    }\n    return result;\n  }\n\n  private transmuxUnencrypted(\n    data: Uint8Array,\n    timeOffset: number,\n    accurateTimeOffset: boolean,\n    chunkMeta: ChunkMetadata\n  ): TransmuxerResult {\n    const { audioTrack, videoTrack, id3Track, textTrack } = (\n      this.demuxer as Demuxer\n    ).demux(data, timeOffset, false, !this.config.progressive);\n    const remuxResult = this.remuxer!.remux(\n      audioTrack,\n      videoTrack,\n      id3Track,\n      textTrack,\n      timeOffset,\n      accurateTimeOffset,\n      false,\n      this.id\n    );\n    return {\n      remuxResult,\n      chunkMeta,\n    };\n  }\n\n  private transmuxSampleAes(\n    data: Uint8Array,\n    decryptData: KeyData,\n    timeOffset: number,\n    accurateTimeOffset: boolean,\n    chunkMeta: ChunkMetadata\n  ): Promise<TransmuxerResult> {\n    return (this.demuxer as Demuxer)\n      .demuxSampleAes(data, decryptData, timeOffset)\n      .then((demuxResult) => {\n        const remuxResult = this.remuxer!.remux(\n          demuxResult.audioTrack,\n          demuxResult.videoTrack,\n          demuxResult.id3Track,\n          demuxResult.textTrack,\n          timeOffset,\n          accurateTimeOffset,\n          false,\n          this.id\n        );\n        return {\n          remuxResult,\n          chunkMeta,\n        };\n      });\n  }\n\n  private configureTransmuxer(data: Uint8Array) {\n    const { config, observer, typeSupported, vendor } = this;\n    // probe for content type\n    let mux;\n    for (let i = 0, len = muxConfig.length; i < len; i++) {\n      if (muxConfig[i].demux.probe(data)) {\n        mux = muxConfig[i];\n        break;\n      }\n    }\n    if (!mux) {\n      // If probing previous configs fail, use mp4 passthrough\n      logger.warn(\n        'Failed to find demuxer by probing frag, treating as mp4 passthrough'\n      );\n      mux = { demux: MP4Demuxer, remux: PassThroughRemuxer };\n    }\n    // so let's check that current remuxer and demuxer are still valid\n    const demuxer = this.demuxer;\n    const remuxer = this.remuxer;\n    const Remuxer: MuxConfig['remux'] = mux.remux;\n    const Demuxer: MuxConfig['demux'] = mux.demux;\n    if (!remuxer || !(remuxer instanceof Remuxer)) {\n      this.remuxer = new Remuxer(observer, config, typeSupported, vendor);\n    }\n    if (!demuxer || !(demuxer instanceof Demuxer)) {\n      this.demuxer = new Demuxer(observer, config, typeSupported);\n      this.probe = Demuxer.probe;\n    }\n  }\n\n  private needsProbing(discontinuity: boolean, trackSwitch: boolean): boolean {\n    // in case of continuity change, or track switch\n    // we might switch from content type (AAC container to TS container, or TS to fmp4 for example)\n    return !this.demuxer || !this.remuxer || discontinuity || trackSwitch;\n  }\n\n  private getDecrypter(): Decrypter {\n    let decrypter = this.decrypter;\n    if (!decrypter) {\n      decrypter = this.decrypter = new Decrypter(this.config);\n    }\n    return decrypter;\n  }\n}\n\nfunction getEncryptionType(\n  data: Uint8Array,\n  decryptData: DecryptData | null\n): KeyData | null {\n  let encryptionType: KeyData | null = null;\n  if (\n    data.byteLength > 0 &&\n    decryptData != null &&\n    decryptData.key != null &&\n    decryptData.iv !== null &&\n    decryptData.method != null\n  ) {\n    encryptionType = decryptData as KeyData;\n  }\n  return encryptionType;\n}\n\nconst emptyResult = (chunkMeta): TransmuxerResult => ({\n  remuxResult: {},\n  chunkMeta,\n});\n\nexport function isPromise<T>(p: Promise<T> | any): p is Promise<T> {\n  return 'then' in p && p.then instanceof Function;\n}\n\nexport class TransmuxConfig {\n  public audioCodec?: string;\n  public videoCodec?: string;\n  public initSegmentData?: Uint8Array;\n  public duration: number;\n  public defaultInitPts?: number;\n\n  constructor(\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    initSegmentData: Uint8Array | undefined,\n    duration: number,\n    defaultInitPts?: number\n  ) {\n    this.audioCodec = audioCodec;\n    this.videoCodec = videoCodec;\n    this.initSegmentData = initSegmentData;\n    this.duration = duration;\n    this.defaultInitPts = defaultInitPts;\n  }\n}\n\nexport class TransmuxState {\n  public discontinuity: boolean;\n  public contiguous: boolean;\n  public accurateTimeOffset: boolean;\n  public trackSwitch: boolean;\n  public timeOffset: number;\n  public initSegmentChange: boolean;\n\n  constructor(\n    discontinuity: boolean,\n    contiguous: boolean,\n    accurateTimeOffset: boolean,\n    trackSwitch: boolean,\n    timeOffset: number,\n    initSegmentChange: boolean\n  ) {\n    this.discontinuity = discontinuity;\n    this.contiguous = contiguous;\n    this.accurateTimeOffset = accurateTimeOffset;\n    this.trackSwitch = trackSwitch;\n    this.timeOffset = timeOffset;\n    this.initSegmentChange = initSegmentChange;\n  }\n}\n", "/**\n * highly optimized TS demuxer:\n * parse PAT, PMT\n * extract PES packet from audio and video PIDs\n * extract AVC/H264 NAL units and AAC/ADTS samples from PES packet\n * trigger the remuxer upon parsing completion\n * it also tries to workaround as best as it can audio codec switch (HE-AAC to AAC and vice versa), without having to restart the MediaSource.\n * it also controls the remuxing process :\n * upon discontinuity or level switch detection, it will also notifies the remuxer so that it can reset its state.\n */\n\nimport * as ADTS from './adts';\nimport * as MpegAudio from './mpegaudio';\nimport ExpGolomb from './exp-golomb';\nimport SampleAesDecrypter from './sample-aes';\nimport { Events } from '../events';\nimport {\n  appendUint8Array,\n  parseSEIMessageFromNALu,\n  RemuxerTrackIdConfig,\n} from '../utils/mp4-tools';\nimport { logger } from '../utils/logger';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport type { HlsConfig } from '../config';\nimport type { HlsEventEmitter } from '../events';\nimport {\n  DemuxedAvcTrack,\n  DemuxedAudioTrack,\n  DemuxedTrack,\n  Demuxer,\n  DemuxerResult,\n  AvcSample,\n  DemuxedMetadataTrack,\n  DemuxedUserdataTrack,\n  ElementaryStreamData,\n  KeyData,\n  MetadataSchema,\n} from '../types/demuxer';\nimport { AudioFrame } from '../types/demuxer';\n\ntype ParsedTimestamp = {\n  pts?: number;\n  dts?: number;\n};\n\ntype PES = ParsedTimestamp & {\n  data: Uint8Array;\n  len: number;\n};\n\ntype ParsedAvcSample = ParsedTimestamp & Omit<AvcSample, 'pts' | 'dts'>;\n\nexport interface TypeSupported {\n  mpeg: boolean;\n  mp3: boolean;\n  mp4: boolean;\n}\n\nconst PACKET_LENGTH = 188;\n\nclass TSDemuxer implements Demuxer {\n  private readonly observer: HlsEventEmitter;\n  private readonly config: HlsConfig;\n  private typeSupported: TypeSupported;\n\n  private sampleAes: SampleAesDecrypter | null = null;\n  private pmtParsed: boolean = false;\n  private audioCodec?: string;\n  private videoCodec?: string;\n  private _duration: number = 0;\n  private _pmtId: number = -1;\n\n  private _avcTrack?: DemuxedAvcTrack;\n  private _audioTrack?: DemuxedAudioTrack;\n  private _id3Track?: DemuxedMetadataTrack;\n  private _txtTrack?: DemuxedUserdataTrack;\n  private aacOverFlow: AudioFrame | null = null;\n  private avcSample: ParsedAvcSample | null = null;\n  private remainderData: Uint8Array | null = null;\n\n  constructor(\n    observer: HlsEventEmitter,\n    config: HlsConfig,\n    typeSupported: TypeSupported\n  ) {\n    this.observer = observer;\n    this.config = config;\n    this.typeSupported = typeSupported;\n  }\n\n  static probe(data: Uint8Array) {\n    const syncOffset = TSDemuxer.syncOffset(data);\n    if (syncOffset > 0) {\n      logger.warn(\n        `MPEG2-TS detected but first sync word found @ offset ${syncOffset}`\n      );\n    }\n    return syncOffset !== -1;\n  }\n\n  static syncOffset(data: Uint8Array): number {\n    const length = data.length;\n    const scanwindow =\n      Math.min(PACKET_LENGTH * 5, data.length - PACKET_LENGTH) + 1;\n    let i = 0;\n    while (i < scanwindow) {\n      // a TS init segment should contain at least 2 TS packets: PAT and PMT, each starting with 0x47\n      let foundPat = false;\n      for (let j = i; j < length; j += PACKET_LENGTH) {\n        if (data[j] === 0x47) {\n          if (!foundPat && parsePID(data, j) === 0) {\n            foundPat = true;\n          }\n          if (foundPat && j + PACKET_LENGTH > scanwindow) {\n            return i;\n          }\n        } else {\n          break;\n        }\n      }\n      i++;\n    }\n    return -1;\n  }\n\n  /**\n   * Creates a track model internal to demuxer used to drive remuxing input\n   *\n   * @param type 'audio' | 'video' | 'id3' | 'text'\n   * @param duration\n   * @return TSDemuxer's internal track model\n   */\n  static createTrack(\n    type: 'audio' | 'video' | 'id3' | 'text',\n    duration?: number\n  ): DemuxedTrack {\n    return {\n      container:\n        type === 'video' || type === 'audio' ? 'video/mp2t' : undefined,\n      type,\n      id: RemuxerTrackIdConfig[type],\n      pid: -1,\n      inputTimeScale: 90000,\n      sequenceNumber: 0,\n      samples: [],\n      dropped: 0,\n      duration: type === 'audio' ? duration : undefined,\n    };\n  }\n\n  /**\n   * Initializes a new init segment on the demuxer/remuxer interface. Needed for discontinuities/track-switches (or at stream start)\n   * Resets all internal track instances of the demuxer.\n   */\n  public resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string,\n    videoCodec: string,\n    trackDuration: number\n  ) {\n    this.pmtParsed = false;\n    this._pmtId = -1;\n\n    this._avcTrack = TSDemuxer.createTrack('video') as DemuxedAvcTrack;\n    this._audioTrack = TSDemuxer.createTrack(\n      'audio',\n      trackDuration\n    ) as DemuxedAudioTrack;\n    this._id3Track = TSDemuxer.createTrack('id3') as DemuxedMetadataTrack;\n    this._txtTrack = TSDemuxer.createTrack('text') as DemuxedUserdataTrack;\n    this._audioTrack.segmentCodec = 'aac';\n\n    // flush any partial content\n    this.aacOverFlow = null;\n    this.avcSample = null;\n    this.remainderData = null;\n    this.audioCodec = audioCodec;\n    this.videoCodec = videoCodec;\n    this._duration = trackDuration;\n  }\n\n  public resetTimeStamp() {}\n\n  public resetContiguity(): void {\n    const { _audioTrack, _avcTrack, _id3Track } = this;\n    if (_audioTrack) {\n      _audioTrack.pesData = null;\n    }\n    if (_avcTrack) {\n      _avcTrack.pesData = null;\n    }\n    if (_id3Track) {\n      _id3Track.pesData = null;\n    }\n    this.aacOverFlow = null;\n    this.avcSample = null;\n    this.remainderData = null;\n  }\n\n  public demux(\n    data: Uint8Array,\n    timeOffset: number,\n    isSampleAes = false,\n    flush = false\n  ): DemuxerResult {\n    if (!isSampleAes) {\n      this.sampleAes = null;\n    }\n\n    let pes: PES | null;\n\n    const videoTrack = this._avcTrack as DemuxedAvcTrack;\n    const audioTrack = this._audioTrack as DemuxedAudioTrack;\n    const id3Track = this._id3Track as DemuxedMetadataTrack;\n    const textTrack = this._txtTrack as DemuxedUserdataTrack;\n\n    let avcId = videoTrack.pid;\n    let avcData = videoTrack.pesData;\n    let audioId = audioTrack.pid;\n    let id3Id = id3Track.pid;\n    let audioData = audioTrack.pesData;\n    let id3Data = id3Track.pesData;\n    let unknownPID: number | null = null;\n    let pmtParsed = this.pmtParsed;\n    let pmtId = this._pmtId;\n\n    let len = data.length;\n    if (this.remainderData) {\n      data = appendUint8Array(this.remainderData, data);\n      len = data.length;\n      this.remainderData = null;\n    }\n\n    if (len < PACKET_LENGTH && !flush) {\n      this.remainderData = data;\n      return {\n        audioTrack,\n        videoTrack,\n        id3Track,\n        textTrack,\n      };\n    }\n\n    const syncOffset = Math.max(0, TSDemuxer.syncOffset(data));\n    len -= (len - syncOffset) % PACKET_LENGTH;\n    if (len < data.byteLength && !flush) {\n      this.remainderData = new Uint8Array(\n        data.buffer,\n        len,\n        data.buffer.byteLength - len\n      );\n    }\n\n    // loop through TS packets\n    let tsPacketErrors = 0;\n    for (let start = syncOffset; start < len; start += PACKET_LENGTH) {\n      if (data[start] === 0x47) {\n        const stt = !!(data[start + 1] & 0x40);\n        const pid = parsePID(data, start);\n        const atf = (data[start + 3] & 0x30) >> 4;\n\n        // if an adaption field is present, its length is specified by the fifth byte of the TS packet header.\n        let offset: number;\n        if (atf > 1) {\n          offset = start + 5 + data[start + 4];\n          // continue if there is only adaptation field\n          if (offset === start + PACKET_LENGTH) {\n            continue;\n          }\n        } else {\n          offset = start + 4;\n        }\n        switch (pid) {\n          case avcId:\n            if (stt) {\n              if (avcData && (pes = parsePES(avcData))) {\n                this.parseAVCPES(videoTrack, textTrack, pes, false);\n              }\n\n              avcData = { data: [], size: 0 };\n            }\n            if (avcData) {\n              avcData.data.push(data.subarray(offset, start + PACKET_LENGTH));\n              avcData.size += start + PACKET_LENGTH - offset;\n            }\n            break;\n          case audioId:\n            if (stt) {\n              if (audioData && (pes = parsePES(audioData))) {\n                switch (audioTrack.segmentCodec) {\n                  case 'aac':\n                    this.parseAACPES(audioTrack, pes);\n                    break;\n                  case 'mp3':\n                    this.parseMPEGPES(audioTrack, pes);\n                    break;\n                }\n              }\n              audioData = { data: [], size: 0 };\n            }\n            if (audioData) {\n              audioData.data.push(data.subarray(offset, start + PACKET_LENGTH));\n              audioData.size += start + PACKET_LENGTH - offset;\n            }\n            break;\n          case id3Id:\n            if (stt) {\n              if (id3Data && (pes = parsePES(id3Data))) {\n                this.parseID3PES(id3Track, pes);\n              }\n\n              id3Data = { data: [], size: 0 };\n            }\n            if (id3Data) {\n              id3Data.data.push(data.subarray(offset, start + PACKET_LENGTH));\n              id3Data.size += start + PACKET_LENGTH - offset;\n            }\n            break;\n          case 0:\n            if (stt) {\n              offset += data[offset] + 1;\n            }\n\n            pmtId = this._pmtId = parsePAT(data, offset);\n            // logger.log('PMT PID:'  + this._pmtId);\n            break;\n          case pmtId: {\n            if (stt) {\n              offset += data[offset] + 1;\n            }\n\n            const parsedPIDs = parsePMT(\n              data,\n              offset,\n              this.typeSupported,\n              isSampleAes\n            );\n\n            // only update track id if track PID found while parsing PMT\n            // this is to avoid resetting the PID to -1 in case\n            // track PID transiently disappears from the stream\n            // this could happen in case of transient missing audio samples for example\n            // NOTE this is only the PID of the track as found in TS,\n            // but we are not using this for MP4 track IDs.\n            avcId = parsedPIDs.avc;\n            if (avcId > 0) {\n              videoTrack.pid = avcId;\n            }\n\n            audioId = parsedPIDs.audio;\n            if (audioId > 0) {\n              audioTrack.pid = audioId;\n              audioTrack.segmentCodec = parsedPIDs.segmentCodec;\n            }\n            id3Id = parsedPIDs.id3;\n            if (id3Id > 0) {\n              id3Track.pid = id3Id;\n            }\n\n            if (unknownPID !== null && !pmtParsed) {\n              logger.warn(\n                `MPEG-TS PMT found at ${start} after unknown PID '${unknownPID}'. Backtracking to sync byte @${syncOffset} to parse all TS packets.`\n              );\n              unknownPID = null;\n              // we set it to -188, the += 188 in the for loop will reset start to 0\n              start = syncOffset - 188;\n            }\n            pmtParsed = this.pmtParsed = true;\n            break;\n          }\n          case 0x11:\n          case 0x1fff:\n            break;\n          default:\n            unknownPID = pid;\n            break;\n        }\n      } else {\n        tsPacketErrors++;\n      }\n    }\n\n    if (tsPacketErrors > 0) {\n      this.observer.emit(Events.ERROR, Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.FRAG_PARSING_ERROR,\n        fatal: false,\n        reason: `Found ${tsPacketErrors} TS packet/s that do not start with 0x47`,\n      });\n    }\n\n    videoTrack.pesData = avcData;\n    audioTrack.pesData = audioData;\n    id3Track.pesData = id3Data;\n\n    const demuxResult: DemuxerResult = {\n      audioTrack,\n      videoTrack,\n      id3Track,\n      textTrack,\n    };\n\n    if (flush) {\n      this.extractRemainingSamples(demuxResult);\n    }\n\n    return demuxResult;\n  }\n\n  public flush(): DemuxerResult | Promise<DemuxerResult> {\n    const { remainderData } = this;\n    this.remainderData = null;\n    let result: DemuxerResult;\n    if (remainderData) {\n      result = this.demux(remainderData, -1, false, true);\n    } else {\n      result = {\n        videoTrack: this._avcTrack as DemuxedAvcTrack,\n        audioTrack: this._audioTrack as DemuxedAudioTrack,\n        id3Track: this._id3Track as DemuxedMetadataTrack,\n        textTrack: this._txtTrack as DemuxedUserdataTrack,\n      };\n    }\n    this.extractRemainingSamples(result);\n    if (this.sampleAes) {\n      return this.decrypt(result, this.sampleAes);\n    }\n    return result;\n  }\n\n  private extractRemainingSamples(demuxResult: DemuxerResult) {\n    const { audioTrack, videoTrack, id3Track, textTrack } = demuxResult;\n    const avcData = videoTrack.pesData;\n    const audioData = audioTrack.pesData;\n    const id3Data = id3Track.pesData;\n    // try to parse last PES packets\n    let pes: PES | null;\n    if (avcData && (pes = parsePES(avcData))) {\n      this.parseAVCPES(\n        videoTrack as DemuxedAvcTrack,\n        textTrack as DemuxedUserdataTrack,\n        pes,\n        true\n      );\n      videoTrack.pesData = null;\n    } else {\n      // either avcData null or PES truncated, keep it for next frag parsing\n      videoTrack.pesData = avcData;\n    }\n\n    if (audioData && (pes = parsePES(audioData))) {\n      switch (audioTrack.segmentCodec) {\n        case 'aac':\n          this.parseAACPES(audioTrack, pes);\n          break;\n        case 'mp3':\n          this.parseMPEGPES(audioTrack, pes);\n          break;\n      }\n      audioTrack.pesData = null;\n    } else {\n      if (audioData?.size) {\n        logger.log(\n          'last AAC PES packet truncated,might overlap between fragments'\n        );\n      }\n\n      // either audioData null or PES truncated, keep it for next frag parsing\n      audioTrack.pesData = audioData;\n    }\n\n    if (id3Data && (pes = parsePES(id3Data))) {\n      this.parseID3PES(id3Track, pes);\n      id3Track.pesData = null;\n    } else {\n      // either id3Data null or PES truncated, keep it for next frag parsing\n      id3Track.pesData = id3Data;\n    }\n  }\n\n  public demuxSampleAes(\n    data: Uint8Array,\n    keyData: KeyData,\n    timeOffset: number\n  ): Promise<DemuxerResult> {\n    const demuxResult = this.demux(\n      data,\n      timeOffset,\n      true,\n      !this.config.progressive\n    );\n    const sampleAes = (this.sampleAes = new SampleAesDecrypter(\n      this.observer,\n      this.config,\n      keyData\n    ));\n    return this.decrypt(demuxResult, sampleAes);\n  }\n\n  private decrypt(\n    demuxResult: DemuxerResult,\n    sampleAes: SampleAesDecrypter\n  ): Promise<DemuxerResult> {\n    return new Promise((resolve) => {\n      const { audioTrack, videoTrack } = demuxResult;\n      if (audioTrack.samples && audioTrack.segmentCodec === 'aac') {\n        sampleAes.decryptAacSamples(audioTrack.samples, 0, () => {\n          if (videoTrack.samples) {\n            sampleAes.decryptAvcSamples(videoTrack.samples, 0, 0, () => {\n              resolve(demuxResult);\n            });\n          } else {\n            resolve(demuxResult);\n          }\n        });\n      } else if (videoTrack.samples) {\n        sampleAes.decryptAvcSamples(videoTrack.samples, 0, 0, () => {\n          resolve(demuxResult);\n        });\n      }\n    });\n  }\n\n  public destroy() {\n    this._duration = 0;\n  }\n\n  private parseAVCPES(\n    track: DemuxedAvcTrack,\n    textTrack: DemuxedUserdataTrack,\n    pes: PES,\n    last: boolean\n  ) {\n    const units = this.parseAVCNALu(track, pes.data);\n    const debug = false;\n    let avcSample = this.avcSample;\n    let push: boolean;\n    let spsfound = false;\n    // free pes.data to save up some memory\n    (pes as any).data = null;\n\n    // if new NAL units found and last sample still there, let's push ...\n    // this helps parsing streams with missing AUD (only do this if AUD never found)\n    if (avcSample && units.length && !track.audFound) {\n      pushAccessUnit(avcSample, track);\n      avcSample = this.avcSample = createAVCSample(false, pes.pts, pes.dts, '');\n    }\n\n    units.forEach((unit) => {\n      switch (unit.type) {\n        // NDR\n        case 1: {\n          push = true;\n          if (!avcSample) {\n            avcSample = this.avcSample = createAVCSample(\n              true,\n              pes.pts,\n              pes.dts,\n              ''\n            );\n          }\n\n          if (debug) {\n            avcSample.debug += 'NDR ';\n          }\n\n          avcSample.frame = true;\n          const data = unit.data;\n          // only check slice type to detect KF in case SPS found in same packet (any keyframe is preceded by SPS ...)\n          if (spsfound && data.length > 4) {\n            // retrieve slice type by parsing beginning of NAL unit (follow H264 spec, slice_header definition) to detect keyframe embedded in NDR\n            const sliceType = new ExpGolomb(data).readSliceType();\n            // 2 : I slice, 4 : SI slice, 7 : I slice, 9: SI slice\n            // SI slice : A slice that is coded using intra prediction only and using quantisation of the prediction samples.\n            // An SI slice can be coded such that its decoded samples can be constructed identically to an SP slice.\n            // I slice: A slice that is not an SI slice that is decoded using intra prediction only.\n            // if (sliceType === 2 || sliceType === 7) {\n            if (\n              sliceType === 2 ||\n              sliceType === 4 ||\n              sliceType === 7 ||\n              sliceType === 9\n            ) {\n              avcSample.key = true;\n            }\n          }\n          break;\n          // IDR\n        }\n        case 5:\n          push = true;\n          // handle PES not starting with AUD\n          if (!avcSample) {\n            avcSample = this.avcSample = createAVCSample(\n              true,\n              pes.pts,\n              pes.dts,\n              ''\n            );\n          }\n\n          if (debug) {\n            avcSample.debug += 'IDR ';\n          }\n\n          avcSample.key = true;\n          avcSample.frame = true;\n          break;\n        // SEI\n        case 6: {\n          push = true;\n          if (debug && avcSample) {\n            avcSample.debug += 'SEI ';\n          }\n          parseSEIMessageFromNALu(\n            unit.data,\n            1,\n            pes.pts as number,\n            textTrack.samples\n          );\n          break;\n          // SPS\n        }\n        case 7:\n          push = true;\n          spsfound = true;\n          if (debug && avcSample) {\n            avcSample.debug += 'SPS ';\n          }\n\n          if (!track.sps) {\n            const expGolombDecoder = new ExpGolomb(unit.data);\n            const config = expGolombDecoder.readSPS();\n            track.width = config.width;\n            track.height = config.height;\n            track.pixelRatio = config.pixelRatio;\n            // TODO: `track.sps` is defined as a `number[]`, but we're setting it to a `Uint8Array[]`.\n            track.sps = [unit.data] as any;\n            track.duration = this._duration;\n            const codecarray = unit.data.subarray(1, 4);\n            let codecstring = 'avc1.';\n            for (let i = 0; i < 3; i++) {\n              let h = codecarray[i].toString(16);\n              if (h.length < 2) {\n                h = '0' + h;\n              }\n\n              codecstring += h;\n            }\n            track.codec = codecstring;\n          }\n          break;\n        // PPS\n        case 8:\n          push = true;\n          if (debug && avcSample) {\n            avcSample.debug += 'PPS ';\n          }\n\n          if (!track.pps) {\n            // TODO: `track.pss` is defined as a `number[]`, but we're setting it to a `Uint8Array[]`.\n            track.pps = [unit.data] as any;\n          }\n\n          break;\n        // AUD\n        case 9:\n          push = false;\n          track.audFound = true;\n          if (avcSample) {\n            pushAccessUnit(avcSample, track);\n          }\n\n          avcSample = this.avcSample = createAVCSample(\n            false,\n            pes.pts,\n            pes.dts,\n            debug ? 'AUD ' : ''\n          );\n          break;\n        // Filler Data\n        case 12:\n          push = true;\n          break;\n        default:\n          push = false;\n          if (avcSample) {\n            avcSample.debug += 'unknown NAL ' + unit.type + ' ';\n          }\n\n          break;\n      }\n      if (avcSample && push) {\n        const units = avcSample.units;\n        units.push(unit);\n      }\n    });\n    // if last PES packet, push samples\n    if (last && avcSample) {\n      pushAccessUnit(avcSample, track);\n      this.avcSample = null;\n    }\n  }\n\n  private getLastNalUnit(samples: AvcSample[]) {\n    let avcSample = this.avcSample;\n    let lastUnit;\n    // try to fallback to previous sample if current one is empty\n    if (!avcSample || avcSample.units.length === 0) {\n      avcSample = samples[samples.length - 1];\n    }\n    if (avcSample?.units) {\n      const units = avcSample.units;\n      lastUnit = units[units.length - 1];\n    }\n    return lastUnit;\n  }\n\n  private parseAVCNALu(\n    track: DemuxedAvcTrack,\n    array: Uint8Array\n  ): Array<{\n    data: Uint8Array;\n    type: number;\n    state?: number;\n  }> {\n    const len = array.byteLength;\n    let state = track.naluState || 0;\n    const lastState = state;\n    const units = [] as Array<{\n      data: Uint8Array;\n      type: number;\n      state?: number;\n    }>;\n    let i = 0;\n    let value;\n    let overflow;\n    let unitType;\n    let lastUnitStart = -1;\n    let lastUnitType: number = 0;\n    // logger.log('PES:' + Hex.hexDump(array));\n\n    if (state === -1) {\n      // special use case where we found 3 or 4-byte start codes exactly at the end of previous PES packet\n      lastUnitStart = 0;\n      // NALu type is value read from offset 0\n      lastUnitType = array[0] & 0x1f;\n      state = 0;\n      i = 1;\n    }\n\n    while (i < len) {\n      value = array[i++];\n      // optimization. state 0 and 1 are the predominant case. let's handle them outside of the switch/case\n      if (!state) {\n        state = value ? 0 : 1;\n        continue;\n      }\n      if (state === 1) {\n        state = value ? 0 : 2;\n        continue;\n      }\n      // here we have state either equal to 2 or 3\n      if (!value) {\n        state = 3;\n      } else if (value === 1) {\n        if (lastUnitStart >= 0) {\n          const unit = {\n            data: array.subarray(lastUnitStart, i - state - 1),\n            type: lastUnitType,\n          };\n          // logger.log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);\n          units.push(unit);\n        } else {\n          // lastUnitStart is undefined => this is the first start code found in this PES packet\n          // first check if start code delimiter is overlapping between 2 PES packets,\n          // ie it started in last packet (lastState not zero)\n          // and ended at the beginning of this PES packet (i <= 4 - lastState)\n          const lastUnit = this.getLastNalUnit(track.samples);\n          if (lastUnit) {\n            if (lastState && i <= 4 - lastState) {\n              // start delimiter overlapping between PES packets\n              // strip start delimiter bytes from the end of last NAL unit\n              // check if lastUnit had a state different from zero\n              if (lastUnit.state) {\n                // strip last bytes\n                lastUnit.data = lastUnit.data.subarray(\n                  0,\n                  lastUnit.data.byteLength - lastState\n                );\n              }\n            }\n            // If NAL units are not starting right at the beginning of the PES packet, push preceding data into previous NAL unit.\n            overflow = i - state - 1;\n            if (overflow > 0) {\n              // logger.log('first NALU found with overflow:' + overflow);\n              const tmp = new Uint8Array(lastUnit.data.byteLength + overflow);\n              tmp.set(lastUnit.data, 0);\n              tmp.set(array.subarray(0, overflow), lastUnit.data.byteLength);\n              lastUnit.data = tmp;\n              lastUnit.state = 0;\n            }\n          }\n        }\n        // check if we can read unit type\n        if (i < len) {\n          unitType = array[i] & 0x1f;\n          // logger.log('find NALU @ offset:' + i + ',type:' + unitType);\n          lastUnitStart = i;\n          lastUnitType = unitType;\n          state = 0;\n        } else {\n          // not enough byte to read unit type. let's read it on next PES parsing\n          state = -1;\n        }\n      } else {\n        state = 0;\n      }\n    }\n    if (lastUnitStart >= 0 && state >= 0) {\n      const unit = {\n        data: array.subarray(lastUnitStart, len),\n        type: lastUnitType,\n        state: state,\n      };\n      units.push(unit);\n      // logger.log('pushing NALU, type/size/state:' + unit.type + '/' + unit.data.byteLength + '/' + state);\n    }\n    // no NALu found\n    if (units.length === 0) {\n      // append pes.data to previous NAL unit\n      const lastUnit = this.getLastNalUnit(track.samples);\n      if (lastUnit) {\n        const tmp = new Uint8Array(lastUnit.data.byteLength + array.byteLength);\n        tmp.set(lastUnit.data, 0);\n        tmp.set(array, lastUnit.data.byteLength);\n        lastUnit.data = tmp;\n      }\n    }\n    track.naluState = state;\n    return units;\n  }\n\n  private parseAACPES(track: DemuxedAudioTrack, pes: PES) {\n    let startOffset = 0;\n    const aacOverFlow = this.aacOverFlow;\n    let data = pes.data;\n    if (aacOverFlow) {\n      this.aacOverFlow = null;\n      const frameMissingBytes = aacOverFlow.missing;\n      const sampleLength = aacOverFlow.sample.unit.byteLength;\n      // logger.log(`AAC: append overflowing ${sampleLength} bytes to beginning of new PES`);\n      if (frameMissingBytes === -1) {\n        const tmp = new Uint8Array(sampleLength + data.byteLength);\n        tmp.set(aacOverFlow.sample.unit, 0);\n        tmp.set(data, sampleLength);\n        data = tmp;\n      } else {\n        const frameOverflowBytes = sampleLength - frameMissingBytes;\n        aacOverFlow.sample.unit.set(\n          data.subarray(0, frameMissingBytes),\n          frameOverflowBytes\n        );\n        track.samples.push(aacOverFlow.sample);\n        startOffset = aacOverFlow.missing;\n      }\n    }\n    // look for ADTS header (0xFFFx)\n    let offset: number;\n    let len: number;\n    for (offset = startOffset, len = data.length; offset < len - 1; offset++) {\n      if (ADTS.isHeader(data, offset)) {\n        break;\n      }\n    }\n    // if ADTS header does not start straight from the beginning of the PES payload, raise an error\n    if (offset !== startOffset) {\n      let reason;\n      let fatal;\n      if (offset < len - 1) {\n        reason = `AAC PES did not start with ADTS header,offset:${offset}`;\n        fatal = false;\n      } else {\n        reason = 'no ADTS header found in AAC PES';\n        fatal = true;\n      }\n      logger.warn(`parsing error:${reason}`);\n      this.observer.emit(Events.ERROR, Events.ERROR, {\n        type: ErrorTypes.MEDIA_ERROR,\n        details: ErrorDetails.FRAG_PARSING_ERROR,\n        fatal,\n        reason,\n      });\n      if (fatal) {\n        return;\n      }\n    }\n\n    ADTS.initTrackConfig(\n      track,\n      this.observer,\n      data,\n      offset,\n      this.audioCodec as string\n    );\n\n    let pts: number;\n    if (pes.pts !== undefined) {\n      pts = pes.pts;\n    } else if (aacOverFlow) {\n      // if last AAC frame is overflowing, we should ensure timestamps are contiguous:\n      // first sample PTS should be equal to last sample PTS + frameDuration\n      const frameDuration = ADTS.getFrameDuration(track.samplerate as number);\n      pts = aacOverFlow.sample.pts + frameDuration;\n    } else {\n      logger.warn('[tsdemuxer]: AAC PES unknown PTS');\n      return;\n    }\n\n    // scan for aac samples\n    let frameIndex = 0;\n    let frame;\n    while (offset < len) {\n      frame = ADTS.appendFrame(track, data, offset, pts, frameIndex);\n      offset += frame.length;\n      if (!frame.missing) {\n        frameIndex++;\n        for (; offset < len - 1; offset++) {\n          if (ADTS.isHeader(data, offset)) {\n            break;\n          }\n        }\n      } else {\n        this.aacOverFlow = frame;\n        break;\n      }\n    }\n  }\n\n  private parseMPEGPES(track: DemuxedAudioTrack, pes: PES) {\n    const data = pes.data;\n    const length = data.length;\n    let frameIndex = 0;\n    let offset = 0;\n    const pts = pes.pts;\n    if (pts === undefined) {\n      logger.warn('[tsdemuxer]: MPEG PES unknown PTS');\n      return;\n    }\n\n    while (offset < length) {\n      if (MpegAudio.isHeader(data, offset)) {\n        const frame = MpegAudio.appendFrame(\n          track,\n          data,\n          offset,\n          pts,\n          frameIndex\n        );\n        if (frame) {\n          offset += frame.length;\n          frameIndex++;\n        } else {\n          // logger.log('Unable to parse Mpeg audio frame');\n          break;\n        }\n      } else {\n        // nothing found, keep looking\n        offset++;\n      }\n    }\n  }\n\n  private parseID3PES(id3Track: DemuxedMetadataTrack, pes: PES) {\n    if (pes.pts === undefined) {\n      logger.warn('[tsdemuxer]: ID3 PES unknown PTS');\n      return;\n    }\n    const id3Sample = Object.assign({}, pes as Required<PES>, {\n      type: this._avcTrack ? MetadataSchema.emsg : MetadataSchema.audioId3,\n      duration: Number.POSITIVE_INFINITY,\n    });\n    id3Track.samples.push(id3Sample);\n  }\n}\n\nfunction createAVCSample(\n  key: boolean,\n  pts: number | undefined,\n  dts: number | undefined,\n  debug: string\n): ParsedAvcSample {\n  return {\n    key,\n    frame: false,\n    pts,\n    dts,\n    units: [],\n    debug,\n    length: 0,\n  };\n}\n\nfunction parsePID(data: Uint8Array, offset: number): number {\n  // pid is a 13-bit field starting at the last bit of TS[1]\n  return ((data[offset + 1] & 0x1f) << 8) + data[offset + 2];\n}\n\nfunction parsePAT(data: Uint8Array, offset: number): number {\n  // skip the PSI header and parse the first PMT entry\n  return ((data[offset + 10] & 0x1f) << 8) | data[offset + 11];\n}\n\nfunction parsePMT(\n  data: Uint8Array,\n  offset: number,\n  typeSupported: TypeSupported,\n  isSampleAes: boolean\n) {\n  const result = { audio: -1, avc: -1, id3: -1, segmentCodec: 'aac' };\n  const sectionLength = ((data[offset + 1] & 0x0f) << 8) | data[offset + 2];\n  const tableEnd = offset + 3 + sectionLength - 4;\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  const programInfoLength =\n    ((data[offset + 10] & 0x0f) << 8) | data[offset + 11];\n  // advance the offset to the first entry in the mapping table\n  offset += 12 + programInfoLength;\n  while (offset < tableEnd) {\n    const pid = parsePID(data, offset);\n    switch (data[offset]) {\n      case 0xcf: // SAMPLE-AES AAC\n        if (!isSampleAes) {\n          logger.log(\n            'ADTS AAC with AES-128-CBC frame encryption found in unencrypted stream'\n          );\n          break;\n        }\n      /* falls through */\n      case 0x0f: // ISO/IEC 13818-7 ADTS AAC (MPEG-2 lower bit-rate audio)\n        // logger.log('AAC PID:'  + pid);\n        if (result.audio === -1) {\n          result.audio = pid;\n        }\n\n        break;\n\n      // Packetized metadata (ID3)\n      case 0x15:\n        // logger.log('ID3 PID:'  + pid);\n        if (result.id3 === -1) {\n          result.id3 = pid;\n        }\n\n        break;\n\n      case 0xdb: // SAMPLE-AES AVC\n        if (!isSampleAes) {\n          logger.log(\n            'H.264 with AES-128-CBC slice encryption found in unencrypted stream'\n          );\n          break;\n        }\n      /* falls through */\n      case 0x1b: // ITU-T Rec. H.264 and ISO/IEC 14496-10 (lower bit-rate video)\n        // logger.log('AVC PID:'  + pid);\n        if (result.avc === -1) {\n          result.avc = pid;\n        }\n\n        break;\n\n      // ISO/IEC 11172-3 (MPEG-1 audio)\n      // or ISO/IEC 13818-3 (MPEG-2 halved sample rate audio)\n      case 0x03:\n      case 0x04:\n        // logger.log('MPEG PID:'  + pid);\n        if (typeSupported.mpeg !== true && typeSupported.mp3 !== true) {\n          logger.log('MPEG audio found, not supported in this browser');\n        } else if (result.audio === -1) {\n          result.audio = pid;\n          result.segmentCodec = 'mp3';\n        }\n        break;\n\n      case 0x24:\n        logger.warn('Unsupported HEVC stream type found');\n        break;\n\n      default:\n        // logger.log('unknown stream type:' + data[offset]);\n        break;\n    }\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5;\n  }\n  return result;\n}\n\nfunction parsePES(stream: ElementaryStreamData): PES | null {\n  let i = 0;\n  let frag: Uint8Array;\n  let pesLen: number;\n  let pesHdrLen: number;\n  let pesPts: number | undefined;\n  let pesDts: number | undefined;\n  const data = stream.data;\n  // safety check\n  if (!stream || stream.size === 0) {\n    return null;\n  }\n\n  // we might need up to 19 bytes to read PES header\n  // if first chunk of data is less than 19 bytes, let's merge it with following ones until we get 19 bytes\n  // usually only one merge is needed (and this is rare ...)\n  while (data[0].length < 19 && data.length > 1) {\n    const newData = new Uint8Array(data[0].length + data[1].length);\n    newData.set(data[0]);\n    newData.set(data[1], data[0].length);\n    data[0] = newData;\n    data.splice(1, 1);\n  }\n  // retrieve PTS/DTS from first fragment\n  frag = data[0];\n  const pesPrefix = (frag[0] << 16) + (frag[1] << 8) + frag[2];\n  if (pesPrefix === 1) {\n    pesLen = (frag[4] << 8) + frag[5];\n    // if PES parsed length is not zero and greater than total received length, stop parsing. PES might be truncated\n    // minus 6 : PES header size\n    if (pesLen && pesLen > stream.size - 6) {\n      return null;\n    }\n\n    const pesFlags = frag[7];\n    if (pesFlags & 0xc0) {\n      /* PES header described here : http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          as PTS / DTS is 33 bit we cannot use bitwise operator in JS,\n          as Bitwise operators treat their operands as a sequence of 32 bits */\n      pesPts =\n        (frag[9] & 0x0e) * 536870912 + // 1 << 29\n        (frag[10] & 0xff) * 4194304 + // 1 << 22\n        (frag[11] & 0xfe) * 16384 + // 1 << 14\n        (frag[12] & 0xff) * 128 + // 1 << 7\n        (frag[13] & 0xfe) / 2;\n\n      if (pesFlags & 0x40) {\n        pesDts =\n          (frag[14] & 0x0e) * 536870912 + // 1 << 29\n          (frag[15] & 0xff) * 4194304 + // 1 << 22\n          (frag[16] & 0xfe) * 16384 + // 1 << 14\n          (frag[17] & 0xff) * 128 + // 1 << 7\n          (frag[18] & 0xfe) / 2;\n\n        if (pesPts - pesDts > 60 * 90000) {\n          logger.warn(\n            `${Math.round(\n              (pesPts - pesDts) / 90000\n            )}s delta between PTS and DTS, align them`\n          );\n          pesPts = pesDts;\n        }\n      } else {\n        pesDts = pesPts;\n      }\n    }\n    pesHdrLen = frag[8];\n    // 9 bytes : 6 bytes for PES header + 3 bytes for PES extension\n    let payloadStartOffset = pesHdrLen + 9;\n    if (stream.size <= payloadStartOffset) {\n      return null;\n    }\n    stream.size -= payloadStartOffset;\n    // reassemble PES packet\n    const pesData = new Uint8Array(stream.size);\n    for (let j = 0, dataLen = data.length; j < dataLen; j++) {\n      frag = data[j];\n      let len = frag.byteLength;\n      if (payloadStartOffset) {\n        if (payloadStartOffset > len) {\n          // trim full frag if PES header bigger than frag\n          payloadStartOffset -= len;\n          continue;\n        } else {\n          // trim partial frag if PES header smaller than frag\n          frag = frag.subarray(payloadStartOffset);\n          len -= payloadStartOffset;\n          payloadStartOffset = 0;\n        }\n      }\n      pesData.set(frag, i);\n      i += len;\n    }\n    if (pesLen) {\n      // payload size : remove PES header + PES extension\n      pesLen -= pesHdrLen + 3;\n    }\n    return { data: pesData, pts: pesPts, dts: pesDts, len: pesLen };\n  }\n  return null;\n}\n\nfunction pushAccessUnit(avcSample: ParsedAvcSample, avcTrack: DemuxedAvcTrack) {\n  if (avcSample.units.length && avcSample.frame) {\n    // if sample does not have PTS/DTS, patch with last sample PTS/DTS\n    if (avcSample.pts === undefined) {\n      const samples = avcTrack.samples;\n      const nbSamples = samples.length;\n      if (nbSamples) {\n        const lastSample = samples[nbSamples - 1];\n        avcSample.pts = lastSample.pts;\n        avcSample.dts = lastSample.dts;\n      } else {\n        // dropping samples, no timestamp found\n        avcTrack.dropped++;\n        return;\n      }\n    }\n    avcTrack.samples.push(avcSample as AvcSample);\n  }\n  if (avcSample.debug.length) {\n    logger.log(avcSample.pts + '/' + avcSample.dts + ':' + avcSample.debug);\n  }\n}\n\nexport default TSDemuxer;\n", "/*\n * Fork of webworkify-webpack with support for Webpack 5\n * https://github.com/wupeng-engineer/webworkify-webpack/blob/db0de7/index.js\n*/\n\nconst webpackBootstrapFunc = function () {// webpackBootstrap\n  /******/ \tvar __webpack_modules__ = ENTRY_MODULE\n  /************************************************************************/\n  /******/  // The module cache\n  /******/  var __webpack_module_cache__ = {};\n  /******/  \n  /******/  // The require function\n  /******/  var __webpack_require__ = function __webpack_require__(moduleId) {\n  /******/    // Check if module is in cache\n  /******/    var cachedModule = __webpack_module_cache__[moduleId];\n  /******/    if (cachedModule !== undefined) {\n  /******/      return cachedModule.exports;\n  /******/    }\n  /******/    // Create a new module (and put it into the cache)\n  /******/    var module = __webpack_module_cache__[moduleId] = {\n  /******/      // no module.id needed\n  /******/      // no module.loaded needed\n  /******/      exports: {}\n  /******/    };\n  /******/  \n  /******/    // Execute the module function\n  /******/    __webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n  /******/  \n  /******/    // Return the exports of the module\n  /******/    return module.exports;\n  /******/  }\n  /******/  \n  /******/  // expose the modules object (__webpack_modules__)\n  /******/  __webpack_require__.m = __webpack_modules__;\n  /******/  \n  /************************************************************************/\n  /******/  /* webpack/runtime/compat get default export */\n  /******/  (() => {\n  /******/    // getDefaultExport function for compatibility with non-harmony modules\n  /******/    __webpack_require__.n = (module) => {\n  /******/      var getter = module && module.__esModule ?\n  /******/        () => (module['default']) :\n  /******/        () => (module);\n  /******/      __webpack_require__.d(getter, { a: getter });\n  /******/      return getter;\n  /******/    };\n  /******/  })();\n  /******/  \n  /******/  /* webpack/runtime/define property getters */\n  /******/  (() => {\n  /******/    // define getter functions for harmony exports\n  /******/    __webpack_require__.d = (exports, definition) => {\n  /******/      for(var key in definition) {\n  /******/        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n  /******/          Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n  /******/        }\n  /******/      }\n  /******/    };\n  /******/  })();\n  /******/  \n  /******/  /* webpack/runtime/hasOwnProperty shorthand */\n  /******/  (() => {\n  /******/    __webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n  /******/  })();\n  /******/  \n  /******/  /* webpack/runtime/make namespace object */\n  /******/  (() => {\n  /******/    // define __esModule on exports\n  /******/    __webpack_require__.r = (exports) => {\n  /******/      if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n  /******/        Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n  /******/      }\n  /******/      Object.defineProperty(exports, '__esModule', { value: true });\n  /******/    };\n  /******/  })();\n  /******/  \n  /************************************************************************/\n  /******/  \n  /******/  // module factories are used so entry inlining is disabled\n  /******/  // startup\n  /******/  // Load entry module and return exports\n  /******/ \tvar result = __webpack_require__(ENTRY_MODULE)\n  /******/  return result.default || result\n}\n\nvar webpackBootstrapFuncArr = webpackBootstrapFunc.toString().split('ENTRY_MODULE');\nvar moduleNameReqExp = '[\\\\.|\\\\-|\\\\+|\\\\w|\\/|@]+';\nvar dependencyRegExp = '\\\\(\\\\s*(\\/\\\\*.*?\\\\*\\/)?\\\\s*.*?(' + moduleNameReqExp + ').*?\\\\)';\n\nfunction quoteRegExp(str) {\n  return (str + '').replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\nfunction isNumeric(n) {\n  return !isNaN(1 * n);\n}\n\nfunction getModuleDependencies(sources, module, queueName) {\n  var retval = {};\n  retval[queueName] = [];\n  var fnString = module.toString().replace(/^\"[^\"]+\"/,'function');;\n  var wrapperSignature = fnString.match(/^function\\s?\\w*\\(\\w+,\\s*\\w+,\\s*(\\w+)\\)/) || fnString.match(/^\\(\\w+,\\s*\\w+,\\s*(\\w+)\\)\\s?\\=\\s?\\>/);\n  if (!wrapperSignature) return retval;\n  var webpackRequireName = wrapperSignature[1];\n  var re = new RegExp('(\\\\\\\\n|\\\\W)' + quoteRegExp(webpackRequireName) + dependencyRegExp, 'g');\n  var match;\n  while ((match = re.exec(fnString))) {\n    if (match[3] === 'dll-reference') continue;\n    retval[queueName].push(match[3]);\n  }\n  re = new RegExp('\\\\(' + quoteRegExp(webpackRequireName) + '\\\\(\"(dll-reference\\\\s(' + moduleNameReqExp + '))\"\\\\)\\\\)' + dependencyRegExp, 'g');\n  while ((match = re.exec(fnString))) {\n    if (!sources[match[2]]) {\n      retval[queueName].push(match[1]);\n      sources[match[2]] = __webpack_require__(match[1]).m;\n    }\n    retval[match[2]] = retval[match[2]] || [];\n    retval[match[2]].push(match[4]);\n  }\n  var keys = Object.keys(retval);\n  for (var i = 0; i < keys.length; i++) {\n    for (var j = 0; j < retval[keys[i]].length; j++) {\n      if (isNumeric(retval[keys[i]][j])) {\n        retval[keys[i]][j] = 1 * retval[keys[i]][j];\n      }\n    }\n  }\n  return retval;\n}\n\nfunction hasValuesInQueues(queues) {\n  var keys = Object.keys(queues);\n  return keys.reduce((hasValues, key) => hasValues || queues[key].length > 0, false);\n}\n\nfunction getRequiredModules(sources, moduleId) {\n  var modulesQueue = {\n    main: [moduleId]\n  };\n  var requiredModules = {\n    main: []\n  };\n  var seenModules = {\n    main: {}\n  };\n  while (hasValuesInQueues(modulesQueue)) {\n    var queues = Object.keys(modulesQueue);\n    for (var i = 0; i < queues.length; i++) {\n      var queueName = queues[i];\n      var queue = modulesQueue[queueName];\n      var moduleToCheck = queue.pop();\n      seenModules[queueName] = seenModules[queueName] || {};\n      if (seenModules[queueName][moduleToCheck] || !sources[queueName][moduleToCheck]) continue;\n      seenModules[queueName][moduleToCheck] = true;\n      requiredModules[queueName] = requiredModules[queueName] || [];\n      requiredModules[queueName].push(moduleToCheck);\n      var newModules = getModuleDependencies(sources, sources[queueName][moduleToCheck], queueName);\n      var newModulesKeys = Object.keys(newModules);\n      for (var j = 0; j < newModulesKeys.length; j++) {\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]] || [];\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]].concat(newModules[newModulesKeys[j]]);\n      }\n    }\n  }\n  return requiredModules;\n}\n\nfunction getWebpackString(requiredModules, sources, entryModule, key) {\n  const moduleString = requiredModules[key].map((id) => `\"${id}\": ${sources[key][id].toString().replace(/^\"[^\"]+\"/,'function')}`).join(\",\");\n  return `${webpackBootstrapFuncArr[0]}{${moduleString}}${webpackBootstrapFuncArr[1]}\"${entryModule}\"${webpackBootstrapFuncArr[2]}`;\n}\n\nexport default function (moduleId, options) {\n  options = options || {};\n  var sources = {\n    main: __webpack_modules__\n  };\n  var requiredModules = options.all ? { main: Object.keys(sources.main) } : getRequiredModules(sources, moduleId);\n  var src = '';\n  Object.keys(requiredModules).filter((m) => m !== 'main').forEach((module) => {\n    var entryModule = 0;\n    while (requiredModules[module][entryModule]) {\n      entryModule++;\n    }\n    requiredModules[module].push(entryModule);\n    sources[module][entryModule] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })';\n    src = src + `var ${module} = (${getWebpackString(requiredModules, sources, entryModule, modules)})();\\n`;\n  });\n  src = src + `new ((${getWebpackString(requiredModules, sources, moduleId, 'main')})())(self);`;\n  var blob = new window.Blob([src], {\n    type: 'text/javascript'\n  });\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n  var workerUrl = URL.createObjectURL(blob);\n  var worker = new window.Worker(workerUrl);\n  worker.objectURL = workerUrl;\n  return worker;\n}\n", "export enum ErrorTypes {\n  // Identifier for a network error (loading error / timeout ...)\n  NETWORK_ERROR = 'networkError',\n  // Identifier for a media Error (video/parsing/mediasource error)\n  MEDIA_ERROR = 'mediaError',\n  // EME (encrypted media extensions) errors\n  KEY_SYSTEM_ERROR = 'keySystemError',\n  // Identifier for a mux Error (demuxing/remuxing)\n  MUX_ERROR = 'muxError',\n  // Identifier for all other errors\n  OTHER_ERROR = 'otherError',\n}\n\n/**\n * @enum {ErrorDetails}\n * @typedef {string} ErrorDetail\n */\nexport enum ErrorDetails {\n  KEY_SYSTEM_NO_KEYS = 'keySystemNoKeys',\n  KEY_SYSTEM_NO_ACCESS = 'keySystemNoAccess',\n  KEY_SYSTEM_NO_SESSION = 'keySystemNoSession',\n  KEY_SYSTEM_NO_CONFIGURED_LICENSE = 'keySystemNoConfiguredLicense',\n  KEY_SYSTEM_LICENSE_REQUEST_FAILED = 'keySystemLicenseRequestFailed',\n  KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED = 'keySystemServerCertificateRequestFailed',\n  KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED = 'keySystemServerCertificateUpdateFailed',\n  KEY_SYSTEM_SESSION_UPDATE_FAILED = 'keySystemSessionUpdateFailed',\n  KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED = 'keySystemStatusOutputRestricted',\n  KEY_SYSTEM_STATUS_INTERNAL_ERROR = 'keySystemStatusInternalError',\n  // Identifier for a manifest load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_ERROR = 'manifestLoadError',\n  // Identifier for a manifest load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_TIMEOUT = 'manifestLoadTimeOut',\n  // Identifier for a manifest parsing error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_PARSING_ERROR = 'manifestParsingError',\n  // Identifier for a manifest with only incompatible codecs error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_INCOMPATIBLE_CODECS_ERROR = 'manifestIncompatibleCodecsError',\n  // Identifier for a level which contains no fragments - data: { url: faulty URL, reason: \"no fragments found in level\", level: index of the bad level }\n  LEVEL_EMPTY_ERROR = 'levelEmptyError',\n  // Identifier for a level load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_ERROR = 'levelLoadError',\n  // Identifier for a level load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_TIMEOUT = 'levelLoadTimeOut',\n  // Identifier for a level switch error - data: { level : faulty level Id, event : error description}\n  LEVEL_SWITCH_ERROR = 'levelSwitchError',\n  // Identifier for an audio track load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_ERROR = 'audioTrackLoadError',\n  // Identifier for an audio track load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_TIMEOUT = 'audioTrackLoadTimeOut',\n  // Identifier for a subtitle track load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  SUBTITLE_LOAD_ERROR = 'subtitleTrackLoadError',\n  // Identifier for a subtitle track load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  SUBTITLE_TRACK_LOAD_TIMEOUT = 'subtitleTrackLoadTimeOut',\n  // Identifier for fragment load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  FRAG_LOAD_ERROR = 'fragLoadError',\n  // Identifier for fragment load timeout error - data: { frag : fragment object}\n  FRAG_LOAD_TIMEOUT = 'fragLoadTimeOut',\n  // Identifier for a fragment decryption error event - data: {id : demuxer Id,frag: fragment object, reason : parsing error description }\n  FRAG_DECRYPT_ERROR = 'fragDecryptError',\n  // Identifier for a fragment parsing error event - data: { id : demuxer Id, reason : parsing error description }\n  // will be renamed DEMUX_PARSING_ERROR and switched to MUX_ERROR in the next major release\n  FRAG_PARSING_ERROR = 'fragParsingError',\n  // Identifier for a remux alloc error event - data: { id : demuxer Id, frag : fragment object, bytes : nb of bytes on which allocation failed , reason : error text }\n  REMUX_ALLOC_ERROR = 'remuxAllocError',\n  // Identifier for decrypt key load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  KEY_LOAD_ERROR = 'keyLoadError',\n  // Identifier for decrypt key load timeout error - data: { frag : fragment object}\n  KEY_LOAD_TIMEOUT = 'keyLoadTimeOut',\n  // Triggered when an exception occurs while adding a sourceBuffer to MediaSource - data : { error : exception , mimeType : mimeType }\n  BUFFER_ADD_CODEC_ERROR = 'bufferAddCodecError',\n  // Triggered when source buffer(s) could not be created using level (manifest CODECS attribute), parsed media, or best guess codec(s) - data: { reason : error reason }\n  BUFFER_INCOMPATIBLE_CODECS_ERROR = 'bufferIncompatibleCodecsError',\n  // Identifier for a buffer append error - data: append error description\n  BUFFER_APPEND_ERROR = 'bufferAppendError',\n  // Identifier for a buffer appending error event - data: appending error description\n  BUFFER_APPENDING_ERROR = 'bufferAppendingError',\n  // Identifier for a buffer stalled error event\n  BUFFER_STALLED_ERROR = 'bufferStalledError',\n  // Identifier for a buffer full event\n  BUFFER_FULL_ERROR = 'bufferFullError',\n  // Identifier for a buffer seek over hole event\n  BUFFER_SEEK_OVER_HOLE = 'bufferSeekOverHole',\n  // Identifier for a buffer nudge on stall (playback is stuck although currentTime is in a buffered area)\n  BUFFER_NUDGE_ON_STALL = 'bufferNudgeOnStall',\n  // Identifier for an internal exception happening inside hls.js while handling an event\n  INTERNAL_EXCEPTION = 'internalException',\n  // Identifier for an internal call to abort a loader\n  INTERNAL_ABORTED = 'aborted',\n  // Uncategorized error\n  UNKNOWN = 'unknown',\n}\n", "import {\n  ManifestLoadedData,\n  ManifestLoadingData,\n  MediaAttachedData,\n  MediaAttachingData,\n  LevelLoadingData,\n  LevelLoadedData,\n  ManifestParsedData,\n  LevelUpdatedData,\n  LevelsUpdatedData,\n  FragParsingUserdataData,\n  FragDecryptedData,\n  FragLoadedData,\n  InitPTSFoundData,\n  CuesParsedData,\n  SubtitleFragProcessedData,\n  NonNativeTextTracksData,\n  FragLoadingData,\n  AudioTrackLoadedData,\n  SubtitleTrackLoadedData,\n  ErrorData,\n  AudioTrackSwitchingData,\n  AudioTrackSwitchedData,\n  KeyLoadedData,\n  KeyLoadingData,\n  SubtitleTrackSwitchData,\n  SubtitleTracksUpdatedData,\n  LevelSwitchedData,\n  FragChangedData,\n  BufferAppendingData,\n  BufferCodecsData,\n  FragParsingMetadataData,\n  FragParsingInitSegmentData,\n  FragBufferedData,\n  BufferFlushingData,\n  BufferEOSData,\n  LevelSwitchingData,\n  FPSDropLevelCappingData,\n  FPSDropData,\n  BufferCreatedData,\n  BufferAppendedData,\n  LevelPTSUpdatedData,\n  FragParsedData,\n  AudioTracksUpdatedData,\n  FragLoadEmergencyAbortedData,\n  BackBufferData,\n  LiveBackBufferData,\n  TrackLoadingData,\n  BufferFlushedData,\n} from './types/events';\n\n/**\n * @readonly\n * @enum {string}\n */\nexport enum Events {\n  // Fired before MediaSource is attaching to media element\n  MEDIA_ATTACHING = 'hlsMediaAttaching',\n  // Fired when MediaSource has been successfully attached to media element\n  MEDIA_ATTACHED = 'hlsMediaAttached',\n  // Fired before detaching MediaSource from media element\n  MEDIA_DETACHING = 'hlsMediaDetaching',\n  // Fired when MediaSource has been detached from media element\n  MEDIA_DETACHED = 'hlsMediaDetached',\n  // Fired when the buffer is going to be reset\n  BUFFER_RESET = 'hlsBufferReset',\n  // Fired when we know about the codecs that we need buffers for to push into - data: {tracks : { container, codec, levelCodec, initSegment, metadata }}\n  BUFFER_CODECS = 'hlsBufferCodecs',\n  // fired when sourcebuffers have been created - data: { tracks : tracks }\n  BUFFER_CREATED = 'hlsBufferCreated',\n  // fired when we append a segment to the buffer - data: { segment: segment object }\n  BUFFER_APPENDING = 'hlsBufferAppending',\n  // fired when we are done with appending a media segment to the buffer - data : { parent : segment parent that triggered BUFFER_APPENDING, pending : nb of segments waiting for appending for this segment parent}\n  BUFFER_APPENDED = 'hlsBufferAppended',\n  // fired when the stream is finished and we want to notify the media buffer that there will be no more data - data: { }\n  BUFFER_EOS = 'hlsBufferEos',\n  // fired when the media buffer should be flushed - data { startOffset, endOffset }\n  BUFFER_FLUSHING = 'hlsBufferFlushing',\n  // fired when the media buffer has been flushed - data: { }\n  BUFFER_FLUSHED = 'hlsBufferFlushed',\n  // fired to signal that a manifest loading starts - data: { url : manifestURL}\n  MANIFEST_LOADING = 'hlsManifestLoading',\n  // fired after manifest has been loaded - data: { levels : [available quality levels], audioTracks : [ available audio tracks ], url : manifestURL, stats : LoaderStats }\n  MANIFEST_LOADED = 'hlsManifestLoaded',\n  // fired after manifest has been parsed - data: { levels : [available quality levels], firstLevel : index of first quality level appearing in Manifest}\n  MANIFEST_PARSED = 'hlsManifestParsed',\n  // fired when a level switch is requested - data: { level : id of new level }\n  LEVEL_SWITCHING = 'hlsLevelSwitching',\n  // fired when a level switch is effective - data: { level : id of new level }\n  LEVEL_SWITCHED = 'hlsLevelSwitched',\n  // fired when a level playlist loading starts - data: { url : level URL, level : id of level being loaded}\n  LEVEL_LOADING = 'hlsLevelLoading',\n  // fired when a level playlist loading finishes - data: { details : levelDetails object, level : id of loaded level, stats : LoaderStats }\n  LEVEL_LOADED = 'hlsLevelLoaded',\n  // fired when a level's details have been updated based on previous details, after it has been loaded - data: { details : levelDetails object, level : id of updated level }\n  LEVEL_UPDATED = 'hlsLevelUpdated',\n  // fired when a level's PTS information has been updated after parsing a fragment - data: { details : levelDetails object, level : id of updated level, drift: PTS drift observed when parsing last fragment }\n  LEVEL_PTS_UPDATED = 'hlsLevelPtsUpdated',\n  // fired to notify that levels have changed after removing a level - data: { levels : [available quality levels] }\n  LEVELS_UPDATED = 'hlsLevelsUpdated',\n  // fired to notify that audio track lists has been updated - data: { audioTracks : audioTracks }\n  AUDIO_TRACKS_UPDATED = 'hlsAudioTracksUpdated',\n  // fired when an audio track switching is requested - data: { id : audio track id }\n  AUDIO_TRACK_SWITCHING = 'hlsAudioTrackSwitching',\n  // fired when an audio track switch actually occurs - data: { id : audio track id }\n  AUDIO_TRACK_SWITCHED = 'hlsAudioTrackSwitched',\n  // fired when an audio track loading starts - data: { url : audio track URL, id : audio track id }\n  AUDIO_TRACK_LOADING = 'hlsAudioTrackLoading',\n  // fired when an audio track loading finishes - data: { details : levelDetails object, id : audio track id, stats : LoaderStats }\n  AUDIO_TRACK_LOADED = 'hlsAudioTrackLoaded',\n  // fired to notify that subtitle track lists has been updated - data: { subtitleTracks : subtitleTracks }\n  SUBTITLE_TRACKS_UPDATED = 'hlsSubtitleTracksUpdated',\n  // fired to notify that subtitle tracks were cleared as a result of stopping the media\n  SUBTITLE_TRACKS_CLEARED = 'hlsSubtitleTracksCleared',\n  // fired when an subtitle track switch occurs - data: { id : subtitle track id }\n  SUBTITLE_TRACK_SWITCH = 'hlsSubtitleTrackSwitch',\n  // fired when a subtitle track loading starts - data: { url : subtitle track URL, id : subtitle track id }\n  SUBTITLE_TRACK_LOADING = 'hlsSubtitleTrackLoading',\n  // fired when a subtitle track loading finishes - data: { details : levelDetails object, id : subtitle track id, stats : LoaderStats }\n  SUBTITLE_TRACK_LOADED = 'hlsSubtitleTrackLoaded',\n  // fired when a subtitle fragment has been processed - data: { success : boolean, frag : the processed frag }\n  SUBTITLE_FRAG_PROCESSED = 'hlsSubtitleFragProcessed',\n  // fired when a set of VTTCues to be managed externally has been parsed - data: { type: string, track: string, cues: [ VTTCue ] }\n  CUES_PARSED = 'hlsCuesParsed',\n  // fired when a text track to be managed externally is found - data: { tracks: [ { label: string, kind: string, default: boolean } ] }\n  NON_NATIVE_TEXT_TRACKS_FOUND = 'hlsNonNativeTextTracksFound',\n  // fired when the first timestamp is found - data: { id : demuxer id, initPTS: initPTS, timescale: timescale, frag : fragment object }\n  INIT_PTS_FOUND = 'hlsInitPtsFound',\n  // fired when a fragment loading starts - data: { frag : fragment object }\n  FRAG_LOADING = 'hlsFragLoading',\n  // fired when a fragment loading is progressing - data: { frag : fragment object, { trequest, tfirst, loaded } }\n  // FRAG_LOAD_PROGRESS = 'hlsFragLoadProgress',\n  // Identifier for fragment load aborting for emergency switch down - data: { frag : fragment object }\n  FRAG_LOAD_EMERGENCY_ABORTED = 'hlsFragLoadEmergencyAborted',\n  // fired when a fragment loading is completed - data: { frag : fragment object, payload : fragment payload, stats : LoaderStats }\n  FRAG_LOADED = 'hlsFragLoaded',\n  // fired when a fragment has finished decrypting - data: { id : demuxer id, frag: fragment object, payload : fragment payload, stats : { tstart, tdecrypt } }\n  FRAG_DECRYPTED = 'hlsFragDecrypted',\n  // fired when Init Segment has been extracted from fragment - data: { id : demuxer id, frag: fragment object, moov : moov MP4 box, codecs : codecs found while parsing fragment }\n  FRAG_PARSING_INIT_SEGMENT = 'hlsFragParsingInitSegment',\n  // fired when parsing sei text is completed - data: { id : demuxer id, frag: fragment object, samples : [ sei samples pes ] }\n  FRAG_PARSING_USERDATA = 'hlsFragParsingUserdata',\n  // fired when parsing id3 is completed - data: { id : demuxer id, frag: fragment object, samples : [ id3 samples pes ] }\n  FRAG_PARSING_METADATA = 'hlsFragParsingMetadata',\n  // fired when data have been extracted from fragment - data: { id : demuxer id, frag: fragment object, data1 : moof MP4 box or TS fragments, data2 : mdat MP4 box or null}\n  // FRAG_PARSING_DATA = 'hlsFragParsingData',\n  // fired when fragment parsing is completed - data: { id : demuxer id, frag: fragment object }\n  FRAG_PARSED = 'hlsFragParsed',\n  // fired when fragment remuxed MP4 boxes have all been appended into SourceBuffer - data: { id : demuxer id, frag : fragment object, stats : LoaderStats }\n  FRAG_BUFFERED = 'hlsFragBuffered',\n  // fired when fragment matching with current media position is changing - data : { id : demuxer id, frag : fragment object }\n  FRAG_CHANGED = 'hlsFragChanged',\n  // Identifier for a FPS drop event - data: { currentDropped, currentDecoded, totalDroppedFrames }\n  FPS_DROP = 'hlsFpsDrop',\n  // triggered when FPS drop triggers auto level capping - data: { level, droppedLevel }\n  FPS_DROP_LEVEL_CAPPING = 'hlsFpsDropLevelCapping',\n  // Identifier for an error event - data: { type : error type, details : error details, fatal : if true, hls.js cannot/will not try to recover, if false, hls.js will try to recover,other error specific data }\n  ERROR = 'hlsError',\n  // fired when hls.js instance starts destroying. Different from MEDIA_DETACHED as one could want to detach and reattach a media to the instance of hls.js to handle mid-rolls for example - data: { }\n  DESTROYING = 'hlsDestroying',\n  // fired when a decrypt key loading starts - data: { frag : fragment object }\n  KEY_LOADING = 'hlsKeyLoading',\n  // fired when a decrypt key loading is completed - data: { frag : fragment object, keyInfo : KeyLoaderInfo }\n  KEY_LOADED = 'hlsKeyLoaded',\n  // deprecated; please use BACK_BUFFER_REACHED - data : { bufferEnd: number }\n  LIVE_BACK_BUFFER_REACHED = 'hlsLiveBackBufferReached',\n  // fired when the back buffer is reached as defined by the backBufferLength config option - data : { bufferEnd: number }\n  BACK_BUFFER_REACHED = 'hlsBackBufferReached',\n}\n\nexport interface HlsListeners {\n  [Events.MEDIA_ATTACHING]: (\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) => void;\n  [Events.MEDIA_ATTACHED]: (\n    event: Events.MEDIA_ATTACHED,\n    data: MediaAttachedData\n  ) => void;\n  [Events.MEDIA_DETACHING]: (event: Events.MEDIA_DETACHING) => void;\n  [Events.MEDIA_DETACHED]: (event: Events.MEDIA_DETACHED) => void;\n  [Events.BUFFER_RESET]: (event: Events.BUFFER_RESET) => void;\n  [Events.BUFFER_CODECS]: (\n    event: Events.BUFFER_CODECS,\n    data: BufferCodecsData\n  ) => void;\n  [Events.BUFFER_CREATED]: (\n    event: Events.BUFFER_CREATED,\n    data: BufferCreatedData\n  ) => void;\n  [Events.BUFFER_APPENDING]: (\n    event: Events.BUFFER_APPENDING,\n    data: BufferAppendingData\n  ) => void;\n  [Events.BUFFER_APPENDED]: (\n    event: Events.BUFFER_APPENDED,\n    data: BufferAppendedData\n  ) => void;\n  [Events.BUFFER_EOS]: (event: Events.BUFFER_EOS, data: BufferEOSData) => void;\n  [Events.BUFFER_FLUSHING]: (\n    event: Events.BUFFER_FLUSHING,\n    data: BufferFlushingData\n  ) => void;\n  [Events.BUFFER_FLUSHED]: (\n    event: Events.BUFFER_FLUSHED,\n    data: BufferFlushedData\n  ) => void;\n  [Events.MANIFEST_LOADING]: (\n    event: Events.MANIFEST_LOADING,\n    data: ManifestLoadingData\n  ) => void;\n  [Events.MANIFEST_LOADED]: (\n    event: Events.MANIFEST_LOADED,\n    data: ManifestLoadedData\n  ) => void;\n  [Events.MANIFEST_PARSED]: (\n    event: Events.MANIFEST_PARSED,\n    data: ManifestParsedData\n  ) => void;\n  [Events.LEVEL_SWITCHING]: (\n    event: Events.LEVEL_SWITCHING,\n    data: LevelSwitchingData\n  ) => void;\n  [Events.LEVEL_SWITCHED]: (\n    event: Events.LEVEL_SWITCHED,\n    data: LevelSwitchedData\n  ) => void;\n  [Events.LEVEL_LOADING]: (\n    event: Events.LEVEL_LOADING,\n    data: LevelLoadingData\n  ) => void;\n  [Events.LEVEL_LOADED]: (\n    event: Events.LEVEL_LOADED,\n    data: LevelLoadedData\n  ) => void;\n  [Events.LEVEL_UPDATED]: (\n    event: Events.LEVEL_UPDATED,\n    data: LevelUpdatedData\n  ) => void;\n  [Events.LEVEL_PTS_UPDATED]: (\n    event: Events.LEVEL_PTS_UPDATED,\n    data: LevelPTSUpdatedData\n  ) => void;\n  [Events.LEVELS_UPDATED]: (\n    event: Events.LEVELS_UPDATED,\n    data: LevelsUpdatedData\n  ) => void;\n  [Events.AUDIO_TRACKS_UPDATED]: (\n    event: Events.AUDIO_TRACKS_UPDATED,\n    data: AudioTracksUpdatedData\n  ) => void;\n  [Events.AUDIO_TRACK_SWITCHING]: (\n    event: Events.AUDIO_TRACK_SWITCHING,\n    data: AudioTrackSwitchingData\n  ) => void;\n  [Events.AUDIO_TRACK_SWITCHED]: (\n    event: Events.AUDIO_TRACK_SWITCHED,\n    data: AudioTrackSwitchedData\n  ) => void;\n  [Events.AUDIO_TRACK_LOADING]: (\n    event: Events.AUDIO_TRACK_LOADING,\n    data: TrackLoadingData\n  ) => void;\n  [Events.AUDIO_TRACK_LOADED]: (\n    event: Events.AUDIO_TRACK_LOADED,\n    data: AudioTrackLoadedData\n  ) => void;\n  [Events.SUBTITLE_TRACKS_UPDATED]: (\n    event: Events.SUBTITLE_TRACKS_UPDATED,\n    data: SubtitleTracksUpdatedData\n  ) => void;\n  [Events.SUBTITLE_TRACKS_CLEARED]: (\n    event: Events.SUBTITLE_TRACKS_CLEARED\n  ) => void;\n  [Events.SUBTITLE_TRACK_SWITCH]: (\n    event: Events.SUBTITLE_TRACK_SWITCH,\n    data: SubtitleTrackSwitchData\n  ) => void;\n  [Events.SUBTITLE_TRACK_LOADING]: (\n    event: Events.SUBTITLE_TRACK_LOADING,\n    data: TrackLoadingData\n  ) => void;\n  [Events.SUBTITLE_TRACK_LOADED]: (\n    event: Events.SUBTITLE_TRACK_LOADED,\n    data: SubtitleTrackLoadedData\n  ) => void;\n  [Events.SUBTITLE_FRAG_PROCESSED]: (\n    event: Events.SUBTITLE_FRAG_PROCESSED,\n    data: SubtitleFragProcessedData\n  ) => void;\n  [Events.CUES_PARSED]: (\n    event: Events.CUES_PARSED,\n    data: CuesParsedData\n  ) => void;\n  [Events.NON_NATIVE_TEXT_TRACKS_FOUND]: (\n    event: Events.NON_NATIVE_TEXT_TRACKS_FOUND,\n    data: NonNativeTextTracksData\n  ) => void;\n  [Events.INIT_PTS_FOUND]: (\n    event: Events.INIT_PTS_FOUND,\n    data: InitPTSFoundData\n  ) => void;\n  [Events.FRAG_LOADING]: (\n    event: Events.FRAG_LOADING,\n    data: FragLoadingData\n  ) => void;\n  // [Events.FRAG_LOAD_PROGRESS]: TodoEventType\n  [Events.FRAG_LOAD_EMERGENCY_ABORTED]: (\n    event: Events.FRAG_LOAD_EMERGENCY_ABORTED,\n    data: FragLoadEmergencyAbortedData\n  ) => void;\n  [Events.FRAG_LOADED]: (\n    event: Events.FRAG_LOADED,\n    data: FragLoadedData\n  ) => void;\n  [Events.FRAG_DECRYPTED]: (\n    event: Events.FRAG_DECRYPTED,\n    data: FragDecryptedData\n  ) => void;\n  [Events.FRAG_PARSING_INIT_SEGMENT]: (\n    event: Events.FRAG_PARSING_INIT_SEGMENT,\n    data: FragParsingInitSegmentData\n  ) => void;\n  [Events.FRAG_PARSING_USERDATA]: (\n    event: Events.FRAG_PARSING_USERDATA,\n    data: FragParsingUserdataData\n  ) => void;\n  [Events.FRAG_PARSING_METADATA]: (\n    event: Events.FRAG_PARSING_METADATA,\n    data: FragParsingMetadataData\n  ) => void;\n  // [Events.FRAG_PARSING_DATA]: TodoEventType\n  [Events.FRAG_PARSED]: (\n    event: Events.FRAG_PARSED,\n    data: FragParsedData\n  ) => void;\n  [Events.FRAG_BUFFERED]: (\n    event: Events.FRAG_BUFFERED,\n    data: FragBufferedData\n  ) => void;\n  [Events.FRAG_CHANGED]: (\n    event: Events.FRAG_CHANGED,\n    data: FragChangedData\n  ) => void;\n  [Events.FPS_DROP]: (event: Events.FPS_DROP, data: FPSDropData) => void;\n  [Events.FPS_DROP_LEVEL_CAPPING]: (\n    event: Events.FPS_DROP_LEVEL_CAPPING,\n    data: FPSDropLevelCappingData\n  ) => void;\n  [Events.ERROR]: (event: Events.ERROR, data: ErrorData) => void;\n  [Events.DESTROYING]: (event: Events.DESTROYING) => void;\n  [Events.KEY_LOADING]: (\n    event: Events.KEY_LOADING,\n    data: KeyLoadingData\n  ) => void;\n  [Events.KEY_LOADED]: (event: Events.KEY_LOADED, data: KeyLoadedData) => void;\n  [Events.LIVE_BACK_BUFFER_REACHED]: (\n    event: Events.LIVE_BACK_BUFFER_REACHED,\n    data: LiveBackBufferData\n  ) => void;\n  [Events.BACK_BUFFER_REACHED]: (\n    event: Events.BACK_BUFFER_REACHED,\n    data: BackBufferData\n  ) => void;\n}\nexport interface HlsEventEmitter {\n  on<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener: HlsListeners[E],\n    context?: Context\n  ): void;\n  once<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener: HlsListeners[E],\n    context?: Context\n  ): void;\n\n  removeAllListeners<E extends keyof HlsListeners>(event?: E): void;\n  off<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener?: HlsListeners[E],\n    context?: Context,\n    once?: boolean\n  ): void;\n\n  listeners<E extends keyof HlsListeners>(event: E): HlsListeners[E][];\n  emit<E extends keyof HlsListeners>(\n    event: E,\n    name: E,\n    eventObject: Parameters<HlsListeners[E]>[1]\n  ): boolean;\n  listenerCount<E extends keyof HlsListeners>(event: E): number;\n}\n", "import * as URLToolkit from 'url-toolkit';\nimport PlaylistLoader from './loader/playlist-loader';\nimport ID3TrackController from './controller/id3-track-controller';\nimport LatencyController from './controller/latency-controller';\nimport LevelController from './controller/level-controller';\nimport { FragmentTracker } from './controller/fragment-tracker';\nimport KeyLoader from './loader/key-loader';\nimport StreamController from './controller/stream-controller';\nimport { isSupported } from './is-supported';\nimport { logger, enableLogs } from './utils/logger';\nimport { enableStreamingMode, hlsDefaultConfig, mergeConfig } from './config';\nimport { EventEmitter } from 'eventemitter3';\nimport { Events } from './events';\nimport { ErrorTypes, ErrorDetails } from './errors';\nimport type { HlsEventEmitter, HlsListeners } from './events';\nimport type AudioTrackController from './controller/audio-track-controller';\nimport type AbrController from './controller/abr-controller';\nimport type BufferController from './controller/buffer-controller';\nimport type CapLevelController from './controller/cap-level-controller';\nimport type CMCDController from './controller/cmcd-controller';\nimport type EMEController from './controller/eme-controller';\nimport type SubtitleTrackController from './controller/subtitle-track-controller';\nimport type { ComponentAPI, NetworkComponentAPI } from './types/component-api';\nimport type { MediaPlaylist } from './types/media-playlist';\nimport type { HlsConfig } from './config';\nimport { HdcpLevel, HdcpLevels, Level } from './types/level';\nimport type { Fragment } from './loader/fragment';\nimport { BufferInfo } from './utils/buffer-helper';\n\n/**\n * @module Hls\n * @class\n * @constructor\n */\nexport default class Hls implements HlsEventEmitter {\n  private static defaultConfig?: HlsConfig;\n\n  public readonly config: HlsConfig;\n  public readonly userConfig: Partial<HlsConfig>;\n\n  private coreComponents: ComponentAPI[];\n  private networkControllers: NetworkComponentAPI[];\n\n  private _emitter: HlsEventEmitter = new EventEmitter();\n  private _autoLevelCapping: number;\n  private _maxHdcpLevel: HdcpLevel = null;\n  private abrController: AbrController;\n  private bufferController: BufferController;\n  private capLevelController: CapLevelController;\n  private latencyController: LatencyController;\n  private levelController: LevelController;\n  private streamController: StreamController;\n  private audioTrackController: AudioTrackController;\n  private subtitleTrackController: SubtitleTrackController;\n  private emeController: EMEController;\n  private cmcdController: CMCDController;\n\n  private _media: HTMLMediaElement | null = null;\n  private url: string | null = null;\n\n  static get version(): string {\n    return __VERSION__;\n  }\n\n  static isSupported(): boolean {\n    return isSupported();\n  }\n\n  static get Events() {\n    return Events;\n  }\n\n  static get ErrorTypes() {\n    return ErrorTypes;\n  }\n\n  static get ErrorDetails() {\n    return ErrorDetails;\n  }\n\n  static get DefaultConfig(): HlsConfig {\n    if (!Hls.defaultConfig) {\n      return hlsDefaultConfig;\n    }\n\n    return Hls.defaultConfig;\n  }\n\n  /**\n   * @type {HlsConfig}\n   */\n  static set DefaultConfig(defaultConfig: HlsConfig) {\n    Hls.defaultConfig = defaultConfig;\n  }\n\n  /**\n   * Creates an instance of an HLS client that can attach to exactly one `HTMLMediaElement`.\n   *\n   * @constructs Hls\n   * @param {HlsConfig} config\n   */\n  constructor(userConfig: Partial<HlsConfig> = {}) {\n    const config = (this.config = mergeConfig(Hls.DefaultConfig, userConfig));\n    this.userConfig = userConfig;\n    enableLogs(config.debug, 'Hls instance');\n\n    this._autoLevelCapping = -1;\n\n    if (config.progressive) {\n      enableStreamingMode(config);\n    }\n\n    // core controllers and network loaders\n    const {\n      abrController: ConfigAbrController,\n      bufferController: ConfigBufferController,\n      capLevelController: ConfigCapLevelController,\n      fpsController: ConfigFpsController,\n    } = config;\n    const abrController = (this.abrController = new ConfigAbrController(this));\n    const bufferController = (this.bufferController =\n      new ConfigBufferController(this));\n    const capLevelController = (this.capLevelController =\n      new ConfigCapLevelController(this));\n\n    const fpsController = new ConfigFpsController(this);\n    const playListLoader = new PlaylistLoader(this);\n    const id3TrackController = new ID3TrackController(this);\n\n    // network controllers\n    const levelController = (this.levelController = new LevelController(this));\n    // FragmentTracker must be defined before StreamController because the order of event handling is important\n    const fragmentTracker = new FragmentTracker(this);\n    const keyLoader = new KeyLoader(this.config);\n    const streamController = (this.streamController = new StreamController(\n      this,\n      fragmentTracker,\n      keyLoader\n    ));\n\n    // Cap level controller uses streamController to flush the buffer\n    capLevelController.setStreamController(streamController);\n    // fpsController uses streamController to switch when frames are being dropped\n    fpsController.setStreamController(streamController);\n\n    const networkControllers: NetworkComponentAPI[] = [\n      playListLoader,\n      levelController,\n      streamController,\n    ];\n\n    this.networkControllers = networkControllers;\n    const coreComponents: ComponentAPI[] = [\n      abrController,\n      bufferController,\n      capLevelController,\n      fpsController,\n      id3TrackController,\n      fragmentTracker,\n    ];\n\n    this.audioTrackController = this.createController(\n      config.audioTrackController,\n      networkControllers\n    );\n    const AudioStreamControllerClass = config.audioStreamController;\n    if (AudioStreamControllerClass) {\n      networkControllers.push(\n        new AudioStreamControllerClass(this, fragmentTracker, keyLoader)\n      );\n    }\n    // subtitleTrackController must be defined before subtitleStreamController because the order of event handling is important\n    this.subtitleTrackController = this.createController(\n      config.subtitleTrackController,\n      networkControllers\n    );\n    const SubtitleStreamControllerClass = config.subtitleStreamController;\n    if (SubtitleStreamControllerClass) {\n      networkControllers.push(\n        new SubtitleStreamControllerClass(this, fragmentTracker, keyLoader)\n      );\n    }\n    this.createController(config.timelineController, coreComponents);\n    keyLoader.emeController = this.emeController = this.createController(\n      config.emeController,\n      coreComponents\n    );\n    this.cmcdController = this.createController(\n      config.cmcdController,\n      coreComponents\n    );\n    this.latencyController = this.createController(\n      LatencyController,\n      coreComponents\n    );\n\n    this.coreComponents = coreComponents;\n  }\n\n  createController(ControllerClass, components) {\n    if (ControllerClass) {\n      const controllerInstance = new ControllerClass(this);\n      if (components) {\n        components.push(controllerInstance);\n      }\n      return controllerInstance;\n    }\n    return null;\n  }\n\n  // Delegate the EventEmitter through the public API of Hls.js\n  on<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener: HlsListeners[E],\n    context: Context = this as any\n  ) {\n    this._emitter.on(event, listener, context);\n  }\n\n  once<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener: HlsListeners[E],\n    context: Context = this as any\n  ) {\n    this._emitter.once(event, listener, context);\n  }\n\n  removeAllListeners<E extends keyof HlsListeners>(event?: E | undefined) {\n    this._emitter.removeAllListeners(event);\n  }\n\n  off<E extends keyof HlsListeners, Context = undefined>(\n    event: E,\n    listener?: HlsListeners[E] | undefined,\n    context: Context = this as any,\n    once?: boolean | undefined\n  ) {\n    this._emitter.off(event, listener, context, once);\n  }\n\n  listeners<E extends keyof HlsListeners>(event: E): HlsListeners[E][] {\n    return this._emitter.listeners(event);\n  }\n\n  emit<E extends keyof HlsListeners>(\n    event: E,\n    name: E,\n    eventObject: Parameters<HlsListeners[E]>[1]\n  ): boolean {\n    return this._emitter.emit(event, name, eventObject);\n  }\n\n  trigger<E extends keyof HlsListeners>(\n    event: E,\n    eventObject: Parameters<HlsListeners[E]>[1]\n  ): boolean {\n    if (this.config.debug) {\n      return this.emit(event, event, eventObject);\n    } else {\n      try {\n        return this.emit(event, event, eventObject);\n      } catch (e) {\n        logger.error(\n          'An internal error happened while handling event ' +\n            event +\n            '. Error message: \"' +\n            e.message +\n            '\". Here is a stacktrace:',\n          e\n        );\n        this.trigger(Events.ERROR, {\n          type: ErrorTypes.OTHER_ERROR,\n          details: ErrorDetails.INTERNAL_EXCEPTION,\n          fatal: false,\n          event: event,\n          error: e,\n        });\n      }\n    }\n    return false;\n  }\n\n  listenerCount<E extends keyof HlsListeners>(event: E): number {\n    return this._emitter.listenerCount(event);\n  }\n\n  /**\n   * Dispose of the instance\n   */\n  destroy() {\n    logger.log('destroy');\n    this.trigger(Events.DESTROYING, undefined);\n    this.detachMedia();\n    this.removeAllListeners();\n    this._autoLevelCapping = -1;\n    this.url = null;\n\n    this.networkControllers.forEach((component) => component.destroy());\n    this.networkControllers.length = 0;\n\n    this.coreComponents.forEach((component) => component.destroy());\n    this.coreComponents.length = 0;\n  }\n\n  /**\n   * Attaches Hls.js to a media element\n   * @param {HTMLMediaElement} media\n   */\n  attachMedia(media: HTMLMediaElement) {\n    logger.log('attachMedia');\n    this._media = media;\n    this.trigger(Events.MEDIA_ATTACHING, { media: media });\n  }\n\n  /**\n   * Detach Hls.js from the media\n   */\n  detachMedia() {\n    logger.log('detachMedia');\n    this.trigger(Events.MEDIA_DETACHING, undefined);\n    this._media = null;\n  }\n\n  /**\n   * Set the source URL. Can be relative or absolute.\n   * @param {string} url\n   */\n  loadSource(url: string) {\n    this.stopLoad();\n    const media = this.media;\n    const loadedSource = this.url;\n    const loadingSource = (this.url = URLToolkit.buildAbsoluteURL(\n      self.location.href,\n      url,\n      {\n        alwaysNormalize: true,\n      }\n    ));\n    logger.log(`loadSource:${loadingSource}`);\n    if (\n      media &&\n      loadedSource &&\n      loadedSource !== loadingSource &&\n      this.bufferController.hasSourceTypes()\n    ) {\n      this.detachMedia();\n      this.attachMedia(media);\n    }\n    // when attaching to a source URL, trigger a playlist load\n    this.trigger(Events.MANIFEST_LOADING, { url: url });\n  }\n\n  /**\n   * Start loading data from the stream source.\n   * Depending on default config, client starts loading automatically when a source is set.\n   *\n   * @param {number} startPosition Set the start position to stream from\n   * @default -1 None (from earliest point)\n   */\n  startLoad(startPosition: number = -1) {\n    logger.log(`startLoad(${startPosition})`);\n    this.networkControllers.forEach((controller) => {\n      controller.startLoad(startPosition);\n    });\n  }\n\n  /**\n   * Stop loading of any stream data.\n   */\n  stopLoad() {\n    logger.log('stopLoad');\n    this.networkControllers.forEach((controller) => {\n      controller.stopLoad();\n    });\n  }\n\n  /**\n   * Swap through possible audio codecs in the stream (for example to switch from stereo to 5.1)\n   */\n  swapAudioCodec() {\n    logger.log('swapAudioCodec');\n    this.streamController.swapAudioCodec();\n  }\n\n  /**\n   * When the media-element fails, this allows to detach and then re-attach it\n   * as one call (convenience method).\n   *\n   * Automatic recovery of media-errors by this process is configurable.\n   */\n  recoverMediaError() {\n    logger.log('recoverMediaError');\n    const media = this._media;\n    this.detachMedia();\n    if (media) {\n      this.attachMedia(media);\n    }\n  }\n\n  removeLevel(levelIndex, urlId = 0) {\n    this.levelController.removeLevel(levelIndex, urlId);\n  }\n\n  /**\n   * @type {Level[]}\n   */\n  get levels(): Array<Level> {\n    const levels = this.levelController.levels;\n    return levels ? levels : [];\n  }\n\n  /**\n   * Index of quality level currently played\n   * @type {number}\n   */\n  get currentLevel(): number {\n    return this.streamController.currentLevel;\n  }\n\n  /**\n   * Set quality level index immediately .\n   * This will flush the current buffer to replace the quality asap.\n   * That means playback will interrupt at least shortly to re-buffer and re-sync eventually.\n   * @type {number} -1 for automatic level selection\n   */\n  set currentLevel(newLevel: number) {\n    logger.log(`set currentLevel:${newLevel}`);\n    this.loadLevel = newLevel;\n    this.abrController.clearTimer();\n    this.streamController.immediateLevelSwitch();\n  }\n\n  /**\n   * Index of next quality level loaded as scheduled by stream controller.\n   * @type {number}\n   */\n  get nextLevel(): number {\n    return this.streamController.nextLevel;\n  }\n\n  /**\n   * Set quality level index for next loaded data.\n   * This will switch the video quality asap, without interrupting playback.\n   * May abort current loading of data, and flush parts of buffer (outside currently played fragment region).\n   * @type {number} -1 for automatic level selection\n   */\n  set nextLevel(newLevel: number) {\n    logger.log(`set nextLevel:${newLevel}`);\n    this.levelController.manualLevel = newLevel;\n    this.streamController.nextLevelSwitch();\n  }\n\n  /**\n   * Return the quality level of the currently or last (of none is loaded currently) segment\n   * @type {number}\n   */\n  get loadLevel(): number {\n    return this.levelController.level;\n  }\n\n  /**\n   * Set quality level index for next loaded data in a conservative way.\n   * This will switch the quality without flushing, but interrupt current loading.\n   * Thus the moment when the quality switch will appear in effect will only be after the already existing buffer.\n   * @type {number} newLevel -1 for automatic level selection\n   */\n  set loadLevel(newLevel: number) {\n    logger.log(`set loadLevel:${newLevel}`);\n    this.levelController.manualLevel = newLevel;\n  }\n\n  /**\n   * get next quality level loaded\n   * @type {number}\n   */\n  get nextLoadLevel(): number {\n    return this.levelController.nextLoadLevel;\n  }\n\n  /**\n   * Set quality level of next loaded segment in a fully \"non-destructive\" way.\n   * Same as `loadLevel` but will wait for next switch (until current loading is done).\n   * @type {number} level\n   */\n  set nextLoadLevel(level: number) {\n    this.levelController.nextLoadLevel = level;\n  }\n\n  /**\n   * Return \"first level\": like a default level, if not set,\n   * falls back to index of first level referenced in manifest\n   * @type {number}\n   */\n  get firstLevel(): number {\n    return Math.max(this.levelController.firstLevel, this.minAutoLevel);\n  }\n\n  /**\n   * Sets \"first-level\", see getter.\n   * @type {number}\n   */\n  set firstLevel(newLevel: number) {\n    logger.log(`set firstLevel:${newLevel}`);\n    this.levelController.firstLevel = newLevel;\n  }\n\n  /**\n   * Return start level (level of first fragment that will be played back)\n   * if not overrided by user, first level appearing in manifest will be used as start level\n   * if -1 : automatic start level selection, playback will start from level matching download bandwidth\n   * (determined from download of first segment)\n   * @type {number}\n   */\n  get startLevel(): number {\n    return this.levelController.startLevel;\n  }\n\n  /**\n   * set  start level (level of first fragment that will be played back)\n   * if not overrided by user, first level appearing in manifest will be used as start level\n   * if -1 : automatic start level selection, playback will start from level matching download bandwidth\n   * (determined from download of first segment)\n   * @type {number} newLevel\n   */\n  set startLevel(newLevel: number) {\n    logger.log(`set startLevel:${newLevel}`);\n    // if not in automatic start level detection, ensure startLevel is greater than minAutoLevel\n    if (newLevel !== -1) {\n      newLevel = Math.max(newLevel, this.minAutoLevel);\n    }\n\n    this.levelController.startLevel = newLevel;\n  }\n\n  /**\n   * Get the current setting for capLevelToPlayerSize\n   *\n   * @type {boolean}\n   */\n  get capLevelToPlayerSize(): boolean {\n    return this.config.capLevelToPlayerSize;\n  }\n\n  /**\n   * set  dynamically set capLevelToPlayerSize against (`CapLevelController`)\n   *\n   * @type {boolean}\n   */\n  set capLevelToPlayerSize(shouldStartCapping: boolean) {\n    const newCapLevelToPlayerSize = !!shouldStartCapping;\n\n    if (newCapLevelToPlayerSize !== this.config.capLevelToPlayerSize) {\n      if (newCapLevelToPlayerSize) {\n        this.capLevelController.startCapping(); // If capping occurs, nextLevelSwitch will happen based on size.\n      } else {\n        this.capLevelController.stopCapping();\n        this.autoLevelCapping = -1;\n        this.streamController.nextLevelSwitch(); // Now we're uncapped, get the next level asap.\n      }\n\n      this.config.capLevelToPlayerSize = newCapLevelToPlayerSize;\n    }\n  }\n\n  /**\n   * Capping/max level value that should be used by automatic level selection algorithm (`ABRController`)\n   * @type {number}\n   */\n  get autoLevelCapping(): number {\n    return this._autoLevelCapping;\n  }\n\n  /**\n   * get bandwidth estimate\n   * @type {number}\n   */\n  get bandwidthEstimate(): number {\n    const { bwEstimator } = this.abrController;\n    if (!bwEstimator) {\n      return NaN;\n    }\n    return bwEstimator.getEstimate();\n  }\n\n  /**\n   * Capping/max level value that should be used by automatic level selection algorithm (`ABRController`)\n   * @type {number}\n   */\n  set autoLevelCapping(newLevel: number) {\n    if (this._autoLevelCapping !== newLevel) {\n      logger.log(`set autoLevelCapping:${newLevel}`);\n      this._autoLevelCapping = newLevel;\n    }\n  }\n\n  get maxHdcpLevel(): HdcpLevel {\n    return this._maxHdcpLevel;\n  }\n\n  set maxHdcpLevel(value: HdcpLevel) {\n    if (HdcpLevels.indexOf(value) > -1) {\n      this._maxHdcpLevel = value;\n    }\n  }\n\n  /**\n   * True when automatic level selection enabled\n   * @type {boolean}\n   */\n  get autoLevelEnabled(): boolean {\n    return this.levelController.manualLevel === -1;\n  }\n\n  /**\n   * Level set manually (if any)\n   * @type {number}\n   */\n  get manualLevel(): number {\n    return this.levelController.manualLevel;\n  }\n\n  /**\n   * min level selectable in auto mode according to config.minAutoBitrate\n   * @type {number}\n   */\n  get minAutoLevel(): number {\n    const {\n      levels,\n      config: { minAutoBitrate },\n    } = this;\n    if (!levels) return 0;\n\n    const len = levels.length;\n    for (let i = 0; i < len; i++) {\n      if (levels[i].maxBitrate >= minAutoBitrate) {\n        return i;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * max level selectable in auto mode according to autoLevelCapping\n   * @type {number}\n   */\n  get maxAutoLevel(): number {\n    const { levels, autoLevelCapping, maxHdcpLevel } = this;\n\n    let maxAutoLevel;\n    if (autoLevelCapping === -1 && levels && levels.length) {\n      maxAutoLevel = levels.length - 1;\n    } else {\n      maxAutoLevel = autoLevelCapping;\n    }\n\n    if (maxHdcpLevel) {\n      for (let i = maxAutoLevel; i--; ) {\n        const hdcpLevel = levels[i].attrs['HDCP-LEVEL'];\n        if (hdcpLevel && hdcpLevel <= maxHdcpLevel) {\n          return i;\n        }\n      }\n    }\n\n    return maxAutoLevel;\n  }\n\n  /**\n   * next automatically selected quality level\n   * @type {number}\n   */\n  get nextAutoLevel(): number {\n    // ensure next auto level is between  min and max auto level\n    return Math.min(\n      Math.max(this.abrController.nextAutoLevel, this.minAutoLevel),\n      this.maxAutoLevel\n    );\n  }\n\n  /**\n   * this setter is used to force next auto level.\n   * this is useful to force a switch down in auto mode:\n   * in case of load error on level N, hls.js can set nextAutoLevel to N-1 for example)\n   * forced value is valid for one fragment. upon successful frag loading at forced level,\n   * this value will be resetted to -1 by ABR controller.\n   * @type {number}\n   */\n  set nextAutoLevel(nextLevel: number) {\n    this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, nextLevel);\n  }\n\n  /**\n   * get the datetime value relative to media.currentTime for the active level Program Date Time if present\n   * @type {Date}\n   */\n  public get playingDate(): Date | null {\n    return this.streamController.currentProgramDateTime;\n  }\n\n  public get mainForwardBufferInfo(): BufferInfo | null {\n    return this.streamController.getMainFwdBufferInfo();\n  }\n\n  /**\n   * @type {AudioTrack[]}\n   */\n  get audioTracks(): Array<MediaPlaylist> {\n    const audioTrackController = this.audioTrackController;\n    return audioTrackController ? audioTrackController.audioTracks : [];\n  }\n\n  /**\n   * index of the selected audio track (index in audio track lists)\n   * @type {number}\n   */\n  get audioTrack(): number {\n    const audioTrackController = this.audioTrackController;\n    return audioTrackController ? audioTrackController.audioTrack : -1;\n  }\n\n  /**\n   * selects an audio track, based on its index in audio track lists\n   * @type {number}\n   */\n  set audioTrack(audioTrackId: number) {\n    const audioTrackController = this.audioTrackController;\n    if (audioTrackController) {\n      audioTrackController.audioTrack = audioTrackId;\n    }\n  }\n\n  /**\n   * get alternate subtitle tracks list from playlist\n   * @type {MediaPlaylist[]}\n   */\n  get subtitleTracks(): Array<MediaPlaylist> {\n    const subtitleTrackController = this.subtitleTrackController;\n    return subtitleTrackController\n      ? subtitleTrackController.subtitleTracks\n      : [];\n  }\n\n  /**\n   * index of the selected subtitle track (index in subtitle track lists)\n   * @type {number}\n   */\n  get subtitleTrack(): number {\n    const subtitleTrackController = this.subtitleTrackController;\n    return subtitleTrackController ? subtitleTrackController.subtitleTrack : -1;\n  }\n\n  get media() {\n    return this._media;\n  }\n\n  /**\n   * select an subtitle track, based on its index in subtitle track lists\n   * @type {number}\n   */\n  set subtitleTrack(subtitleTrackId: number) {\n    const subtitleTrackController = this.subtitleTrackController;\n    if (subtitleTrackController) {\n      subtitleTrackController.subtitleTrack = subtitleTrackId;\n    }\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get subtitleDisplay(): boolean {\n    const subtitleTrackController = this.subtitleTrackController;\n    return subtitleTrackController\n      ? subtitleTrackController.subtitleDisplay\n      : false;\n  }\n\n  /**\n   * Enable/disable subtitle display rendering\n   * @type {boolean}\n   */\n  set subtitleDisplay(value: boolean) {\n    const subtitleTrackController = this.subtitleTrackController;\n    if (subtitleTrackController) {\n      subtitleTrackController.subtitleDisplay = value;\n    }\n  }\n\n  /**\n   * get mode for Low-Latency HLS loading\n   * @type {boolean}\n   */\n  get lowLatencyMode() {\n    return this.config.lowLatencyMode;\n  }\n\n  /**\n   * Enable/disable Low-Latency HLS part playlist and segment loading, and start live streams at playlist PART-HOLD-BACK rather than HOLD-BACK.\n   * @type {boolean}\n   */\n  set lowLatencyMode(mode: boolean) {\n    this.config.lowLatencyMode = mode;\n  }\n\n  /**\n   * position (in seconds) of live sync point (ie edge of live position minus safety delay defined by ```hls.config.liveSyncDuration```)\n   * @type {number}\n   */\n  get liveSyncPosition(): number | null {\n    return this.latencyController.liveSyncPosition;\n  }\n\n  /**\n   * estimated position (in seconds) of live edge (ie edge of live playlist plus time sync playlist advanced)\n   * returns 0 before first playlist is loaded\n   * @type {number}\n   */\n  get latency() {\n    return this.latencyController.latency;\n  }\n\n  /**\n   * maximum distance from the edge before the player seeks forward to ```hls.liveSyncPosition```\n   * configured using ```liveMaxLatencyDurationCount``` (multiple of target duration) or ```liveMaxLatencyDuration```\n   * returns 0 before first playlist is loaded\n   * @type {number}\n   */\n  get maxLatency(): number {\n    return this.latencyController.maxLatency;\n  }\n\n  /**\n   * target distance from the edge as calculated by the latency controller\n   * @type {number}\n   */\n  get targetLatency(): number | null {\n    return this.latencyController.targetLatency;\n  }\n\n  /**\n   * the rate at which the edge of the current live playlist is advancing or 1 if there is none\n   * @type {number}\n   */\n  get drift(): number | null {\n    return this.latencyController.drift;\n  }\n\n  /**\n   * set to true when startLoad is called before MANIFEST_PARSED event\n   * @type {boolean}\n   */\n  get forceStartLoad(): boolean {\n    return this.streamController.forceStartLoad;\n  }\n}\n\nexport type {\n  MediaPlaylist,\n  ErrorDetails,\n  ErrorTypes,\n  Events,\n  Level,\n  HlsListeners,\n  HlsEventEmitter,\n  HlsConfig,\n  Fragment,\n};\n\nexport type {\n  ABRControllerConfig,\n  BufferControllerConfig,\n  CapLevelControllerConfig,\n  CMCDControllerConfig,\n  EMEControllerConfig,\n  DRMSystemOptions,\n  FPSControllerConfig,\n  FragmentLoaderConfig,\n  FragmentLoaderConstructor,\n  LevelControllerConfig,\n  MP4RemuxerConfig,\n  PlaylistLoaderConfig,\n  PlaylistLoaderConstructor,\n  StreamControllerConfig,\n  LatencyControllerConfig,\n  MetadataControllerConfig,\n  TimelineControllerConfig,\n  TSDemuxerConfig,\n} from './config';\nexport type { CuesInterface } from './utils/cues';\nexport type {\n  MediaKeyFunc,\n  KeySystems,\n  KeySystemFormats,\n} from './utils/mediakeys-helper';\nexport type { DateRange } from './loader/date-range';\nexport type { LoadStats } from './loader/load-stats';\nexport type { LevelKey } from './loader/level-key';\nexport type { LevelDetails } from './loader/level-details';\nexport type { SourceBufferName } from './types/buffer';\nexport type {\n  MetadataSample,\n  MetadataSchema,\n  UserdataSample,\n} from './types/demuxer';\nexport type {\n  HdcpLevel,\n  HdcpLevels,\n  HlsSkip,\n  HlsUrlParameters,\n  LevelAttributes,\n  LevelParsed,\n} from './types/level';\nexport type {\n  PlaylistLevelType,\n  HlsChunkPerformanceTiming,\n  HlsPerformanceTiming,\n  PlaylistContextType,\n  PlaylistLoaderContext,\n  FragmentLoaderContext,\n  Loader,\n  LoaderStats,\n  LoaderContext,\n  LoaderResponse,\n  LoaderConfiguration,\n  LoaderCallbacks,\n  LoaderOnProgress,\n  LoaderOnAbort,\n  LoaderOnError,\n  LoaderOnSuccess,\n  LoaderOnTimeout,\n  HlsProgressivePerformanceTiming,\n} from './types/loader';\nexport type {\n  MediaPlaylistType,\n  MainPlaylistType,\n  AudioPlaylistType,\n  SubtitlePlaylistType,\n} from './types/media-playlist';\nexport type { Track, TrackSet } from './types/track';\nexport type { ChunkMetadata } from './types/transmuxer';\nexport type {\n  BaseSegment,\n  Part,\n  ElementaryStreams,\n  ElementaryStreamTypes,\n  ElementaryStreamInfo,\n} from './loader/fragment';\nexport type {\n  TrackLoadingData,\n  TrackLoadedData,\n  AudioTrackLoadedData,\n  AudioTracksUpdatedData,\n  AudioTrackSwitchedData,\n  AudioTrackSwitchingData,\n  BackBufferData,\n  BufferAppendedData,\n  BufferAppendingData,\n  BufferCodecsData,\n  BufferCreatedData,\n  BufferEOSData,\n  BufferFlushedData,\n  BufferFlushingData,\n  CuesParsedData,\n  ErrorData,\n  FPSDropData,\n  FPSDropLevelCappingData,\n  FragBufferedData,\n  FragChangedData,\n  FragDecryptedData,\n  FragLoadedData,\n  FragLoadEmergencyAbortedData,\n  FragLoadingData,\n  FragParsedData,\n  FragParsingInitSegmentData,\n  FragParsingMetadataData,\n  FragParsingUserdataData,\n  InitPTSFoundData,\n  KeyLoadedData,\n  KeyLoadingData,\n  LevelLoadedData,\n  LevelLoadingData,\n  LevelPTSUpdatedData,\n  LevelsUpdatedData,\n  LevelSwitchedData,\n  LevelSwitchingData,\n  LevelUpdatedData,\n  LiveBackBufferData,\n  ManifestLoadedData,\n  ManifestLoadingData,\n  ManifestParsedData,\n  MediaAttachedData,\n  MediaAttachingData,\n  NonNativeTextTrack,\n  NonNativeTextTracksData,\n  SubtitleFragProcessedData,\n  SubtitleTrackLoadedData,\n  SubtitleTracksUpdatedData,\n  SubtitleTrackSwitchData,\n} from './types/events';\nexport type { AttrList } from './utils/attr-list';\n", "import { getMediaSource } from './utils/mediasource-helper';\nimport type { ExtendedSourceBuffer } from './types/buffer';\n\nfunction getSourceBuffer(): typeof self.SourceBuffer {\n  return self.SourceBuffer || (self as any).WebKitSourceBuffer;\n}\n\nexport function isSupported(): boolean {\n  const mediaSource = getMediaSource();\n  if (!mediaSource) {\n    return false;\n  }\n  const sourceBuffer = getSourceBuffer();\n  const isTypeSupported =\n    mediaSource &&\n    typeof mediaSource.isTypeSupported === 'function' &&\n    mediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n\n  // if SourceBuffer is exposed ensure its API is valid\n  // safari and old version of Chrome doe not expose SourceBuffer globally so checking SourceBuffer.prototype is impossible\n  const sourceBufferValidAPI =\n    !sourceBuffer ||\n    (sourceBuffer.prototype &&\n      typeof sourceBuffer.prototype.appendBuffer === 'function' &&\n      typeof sourceBuffer.prototype.remove === 'function');\n  return !!isTypeSupported && !!sourceBufferValidAPI;\n}\n\nexport function changeTypeSupported(): boolean {\n  const sourceBuffer = getSourceBuffer();\n  return (\n    typeof (sourceBuffer?.prototype as ExtendedSourceBuffer)?.changeType ===\n    'function'\n  );\n}\n", "import { AttrList } from '../utils/attr-list';\nimport { logger } from '../utils/logger';\n\nexport enum DateRangeAttribute {\n  ID = 'ID',\n  CLASS = 'CLASS',\n  START_DATE = 'START-DATE',\n  DURATION = 'DURATION',\n  END_DATE = 'END-DATE',\n  END_ON_NEXT = 'END-ON-NEXT',\n  PLANNED_DURATION = 'PLANNED-DURATION',\n  SCTE35_OUT = 'SCTE35-OUT',\n  SCTE35_IN = 'SCTE35-IN',\n}\n\nexport class DateRange {\n  public attr: AttrList;\n  private _startDate: Date;\n  private _endDate?: Date;\n  private _badValueForSameId?: string;\n\n  constructor(dateRangeAttr: AttrList, dateRangeWithSameId?: DateRange) {\n    if (dateRangeWithSameId) {\n      const previousAttr = dateRangeWithSameId.attr;\n      for (const key in previousAttr) {\n        if (\n          Object.prototype.hasOwnProperty.call(dateRangeAttr, key) &&\n          dateRangeAttr[key] !== previousAttr[key]\n        ) {\n          logger.warn(\n            `DATERANGE tag attribute: \"${key}\" does not match for tags with ID: \"${dateRangeAttr.ID}\"`\n          );\n          this._badValueForSameId = key;\n          break;\n        }\n      }\n      // Merge DateRange tags with the same ID\n      dateRangeAttr = Object.assign(\n        new AttrList({}),\n        previousAttr,\n        dateRangeAttr\n      );\n    }\n    this.attr = dateRangeAttr;\n    this._startDate = new Date(dateRangeAttr[DateRangeAttribute.START_DATE]);\n    if (DateRangeAttribute.END_DATE in this.attr) {\n      const endDate = new Date(this.attr[DateRangeAttribute.END_DATE]);\n      if (Number.isFinite(endDate.getTime())) {\n        this._endDate = endDate;\n      }\n    }\n  }\n\n  get id(): string {\n    return this.attr.ID;\n  }\n\n  get class(): string {\n    return this.attr.CLASS;\n  }\n\n  get startDate(): Date {\n    return this._startDate;\n  }\n\n  get endDate(): Date | null {\n    if (this._endDate) {\n      return this._endDate;\n    }\n    const duration = this.duration;\n    if (duration !== null) {\n      return new Date(this._startDate.getTime() + duration * 1000);\n    }\n    return null;\n  }\n\n  get duration(): number | null {\n    if (DateRangeAttribute.DURATION in this.attr) {\n      const duration = this.attr.decimalFloatingPoint(\n        DateRangeAttribute.DURATION\n      );\n      if (Number.isFinite(duration)) {\n        return duration;\n      }\n    } else if (this._endDate) {\n      return (this._endDate.getTime() - this._startDate.getTime()) / 1000;\n    }\n    return null;\n  }\n\n  get plannedDuration(): number | null {\n    if (DateRangeAttribute.PLANNED_DURATION in this.attr) {\n      return this.attr.decimalFloatingPoint(\n        DateRangeAttribute.PLANNED_DURATION\n      );\n    }\n    return null;\n  }\n\n  get endOnNext(): boolean {\n    return this.attr.bool(DateRangeAttribute.END_ON_NEXT);\n  }\n\n  get isValid(): boolean {\n    return (\n      !!this.id &&\n      !this._badValueForSameId &&\n      Number.isFinite(this.startDate.getTime()) &&\n      (this.duration === null || this.duration >= 0) &&\n      (!this.endOnNext || !!this.class)\n    );\n  }\n}\n", "import { ErrorTypes, ErrorDetails } from '../errors';\nimport { Fragment } from './fragment';\nimport {\n  Loader,\n  LoaderConfiguration,\n  FragmentLoaderContext,\n} from '../types/loader';\nimport type { HlsConfig } from '../config';\nimport type { BaseSegment, Part } from './fragment';\nimport type { FragLoadedData, PartsLoadedData } from '../types/events';\n\nconst MIN_CHUNK_SIZE = Math.pow(2, 17); // 128kb\n\nexport default class FragmentLoader {\n  private readonly config: HlsConfig;\n  private loader: Loader<FragmentLoaderContext> | null = null;\n  private partLoadTimeout: number = -1;\n\n  constructor(config: HlsConfig) {\n    this.config = config;\n  }\n\n  destroy() {\n    if (this.loader) {\n      this.loader.destroy();\n      this.loader = null;\n    }\n  }\n\n  abort() {\n    if (this.loader) {\n      // Abort the loader for current fragment. Only one may load at any given time\n      this.loader.abort();\n    }\n  }\n\n  load(\n    frag: Fragment,\n    onProgress?: FragmentLoadProgressCallback\n  ): Promise<FragLoadedData> {\n    const url = frag.url;\n    if (!url) {\n      return Promise.reject(\n        new LoadError(\n          {\n            type: ErrorTypes.NETWORK_ERROR,\n            details: ErrorDetails.FRAG_LOAD_ERROR,\n            fatal: false,\n            frag,\n            networkDetails: null,\n          },\n          `Fragment does not have a ${url ? 'part list' : 'url'}`\n        )\n      );\n    }\n    this.abort();\n\n    const config = this.config;\n    const FragmentILoader = config.fLoader;\n    const DefaultILoader = config.loader;\n\n    return new Promise((resolve, reject) => {\n      if (this.loader) {\n        this.loader.destroy();\n      }\n      const loader =\n        (this.loader =\n        frag.loader =\n          FragmentILoader\n            ? new FragmentILoader(config)\n            : (new DefaultILoader(config) as Loader<FragmentLoaderContext>));\n      const loaderContext = createLoaderContext(frag);\n      const loaderConfig: LoaderConfiguration = {\n        timeout: config.fragLoadingTimeOut,\n        maxRetry: 0,\n        retryDelay: 0,\n        maxRetryDelay: config.fragLoadingMaxRetryTimeout,\n        highWaterMark: frag.sn === 'initSegment' ? Infinity : MIN_CHUNK_SIZE,\n      };\n      // Assign frag stats to the loader's stats reference\n      frag.stats = loader.stats;\n      loader.load(loaderContext, loaderConfig, {\n        onSuccess: (response, stats, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          let payload = response.data as ArrayBuffer;\n          if (context.resetIV && frag.decryptdata) {\n            frag.decryptdata.iv = new Uint8Array(payload.slice(0, 16));\n            payload = payload.slice(16);\n          }\n          resolve({\n            frag,\n            part: null,\n            payload,\n            networkDetails,\n          });\n        },\n        onError: (response, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.FRAG_LOAD_ERROR,\n              fatal: false,\n              frag,\n              response,\n              networkDetails,\n            })\n          );\n        },\n        onAbort: (stats, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.INTERNAL_ABORTED,\n              fatal: false,\n              frag,\n              networkDetails,\n            })\n          );\n        },\n        onTimeout: (response, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.FRAG_LOAD_TIMEOUT,\n              fatal: false,\n              frag,\n              networkDetails,\n            })\n          );\n        },\n        onProgress: (stats, context, data, networkDetails) => {\n          if (onProgress) {\n            onProgress({\n              frag,\n              part: null,\n              payload: data as ArrayBuffer,\n              networkDetails,\n            });\n          }\n        },\n      });\n    });\n  }\n\n  public loadPart(\n    frag: Fragment,\n    part: Part,\n    onProgress: FragmentLoadProgressCallback\n  ): Promise<FragLoadedData> {\n    this.abort();\n\n    const config = this.config;\n    const FragmentILoader = config.fLoader;\n    const DefaultILoader = config.loader;\n\n    return new Promise((resolve, reject) => {\n      if (this.loader) {\n        this.loader.destroy();\n      }\n      const loader =\n        (this.loader =\n        frag.loader =\n          FragmentILoader\n            ? new FragmentILoader(config)\n            : (new DefaultILoader(config) as Loader<FragmentLoaderContext>));\n      const loaderContext = createLoaderContext(frag, part);\n      const loaderConfig: LoaderConfiguration = {\n        timeout: config.fragLoadingTimeOut,\n        maxRetry: 0,\n        retryDelay: 0,\n        maxRetryDelay: config.fragLoadingMaxRetryTimeout,\n        highWaterMark: MIN_CHUNK_SIZE,\n      };\n      // Assign part stats to the loader's stats reference\n      part.stats = loader.stats;\n      loader.load(loaderContext, loaderConfig, {\n        onSuccess: (response, stats, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          this.updateStatsFromPart(frag, part);\n          const partLoadedData: FragLoadedData = {\n            frag,\n            part,\n            payload: response.data as ArrayBuffer,\n            networkDetails,\n          };\n          onProgress(partLoadedData);\n          resolve(partLoadedData);\n        },\n        onError: (response, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.FRAG_LOAD_ERROR,\n              fatal: false,\n              frag,\n              part,\n              response,\n              networkDetails,\n            })\n          );\n        },\n        onAbort: (stats, context, networkDetails) => {\n          frag.stats.aborted = part.stats.aborted;\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.INTERNAL_ABORTED,\n              fatal: false,\n              frag,\n              part,\n              networkDetails,\n            })\n          );\n        },\n        onTimeout: (response, context, networkDetails) => {\n          this.resetLoader(frag, loader);\n          reject(\n            new LoadError({\n              type: ErrorTypes.NETWORK_ERROR,\n              details: ErrorDetails.FRAG_LOAD_TIMEOUT,\n              fatal: false,\n              frag,\n              part,\n              networkDetails,\n            })\n          );\n        },\n      });\n    });\n  }\n\n  private updateStatsFromPart(frag: Fragment, part: Part) {\n    const fragStats = frag.stats;\n    const partStats = part.stats;\n    const partTotal = partStats.total;\n    fragStats.loaded += partStats.loaded;\n    if (partTotal) {\n      const estTotalParts = Math.round(frag.duration / part.duration);\n      const estLoadedParts = Math.min(\n        Math.round(fragStats.loaded / partTotal),\n        estTotalParts\n      );\n      const estRemainingParts = estTotalParts - estLoadedParts;\n      const estRemainingBytes =\n        estRemainingParts * Math.round(fragStats.loaded / estLoadedParts);\n      fragStats.total = fragStats.loaded + estRemainingBytes;\n    } else {\n      fragStats.total = Math.max(fragStats.loaded, fragStats.total);\n    }\n    const fragLoading = fragStats.loading;\n    const partLoading = partStats.loading;\n    if (fragLoading.start) {\n      // add to fragment loader latency\n      fragLoading.first += partLoading.first - partLoading.start;\n    } else {\n      fragLoading.start = partLoading.start;\n      fragLoading.first = partLoading.first;\n    }\n    fragLoading.end = partLoading.end;\n  }\n\n  private resetLoader(frag: Fragment, loader: Loader<FragmentLoaderContext>) {\n    frag.loader = null;\n    if (this.loader === loader) {\n      self.clearTimeout(this.partLoadTimeout);\n      this.loader = null;\n    }\n    loader.destroy();\n  }\n}\n\nfunction createLoaderContext(\n  frag: Fragment,\n  part: Part | null = null\n): FragmentLoaderContext {\n  const segment: BaseSegment = part || frag;\n  const loaderContext: FragmentLoaderContext = {\n    frag,\n    part,\n    responseType: 'arraybuffer',\n    url: segment.url,\n    headers: {},\n    rangeStart: 0,\n    rangeEnd: 0,\n  };\n  const start = segment.byteRangeStartOffset;\n  const end = segment.byteRangeEndOffset;\n  if (Number.isFinite(start) && Number.isFinite(end)) {\n    let byteRangeStart = start;\n    let byteRangeEnd = end;\n    if (frag.sn === 'initSegment' && frag.decryptdata?.method === 'AES-128') {\n      // MAP segment encrypted with method 'AES-128', when served with HTTP Range,\n      // has the unencrypted size specified in the range.\n      // Ref: https://tools.ietf.org/html/draft-pantos-hls-rfc8216bis-08#section-6.3.6\n      const fragmentLen = end - start;\n      if (fragmentLen % 16) {\n        byteRangeEnd = end + (16 - (fragmentLen % 16));\n      }\n      if (start !== 0) {\n        loaderContext.resetIV = true;\n        byteRangeStart = start - 16;\n      }\n    }\n    loaderContext.rangeStart = byteRangeStart;\n    loaderContext.rangeEnd = byteRangeEnd;\n  }\n  return loaderContext;\n}\n\nexport class LoadError extends Error {\n  public readonly data: FragLoadFailResult;\n  constructor(data: FragLoadFailResult, ...params) {\n    super(...params);\n    this.data = data;\n  }\n}\n\nexport interface FragLoadFailResult {\n  type: string;\n  details: string;\n  fatal: boolean;\n  frag: Fragment;\n  part?: Part;\n  response?: {\n    // error status code\n    code: number;\n    // error description\n    text: string;\n  };\n  networkDetails: any;\n}\n\nexport type FragmentLoadProgressCallback = (\n  result: FragLoadedData | PartsLoadedData\n) => void;\n", "import { buildAbsoluteURL } from 'url-toolkit';\nimport { LevelKey } from './level-key';\nimport { LoadStats } from './load-stats';\nimport { AttrList } from '../utils/attr-list';\nimport type {\n  FragmentLoaderContext,\n  KeyLoaderContext,\n  Loader,\n  PlaylistLevelType,\n} from '../types/loader';\nimport type { KeySystemFormats } from '../utils/mediakeys-helper';\n\nexport enum ElementaryStreamTypes {\n  AUDIO = 'audio',\n  VIDEO = 'video',\n  AUDIOVIDEO = 'audiovideo',\n}\n\nexport interface ElementaryStreamInfo {\n  startPTS: number;\n  endPTS: number;\n  startDTS: number;\n  endDTS: number;\n  partial?: boolean;\n}\n\nexport type ElementaryStreams = Record<\n  ElementaryStreamTypes,\n  ElementaryStreamInfo | null\n>;\n\nexport class BaseSegment {\n  private _byteRange: number[] | null = null;\n  private _url: string | null = null;\n\n  // baseurl is the URL to the playlist\n  public readonly baseurl: string;\n  // relurl is the portion of the URL that comes from inside the playlist.\n  public relurl?: string;\n  // Holds the types of data this fragment supports\n  public elementaryStreams: ElementaryStreams = {\n    [ElementaryStreamTypes.AUDIO]: null,\n    [ElementaryStreamTypes.VIDEO]: null,\n    [ElementaryStreamTypes.AUDIOVIDEO]: null,\n  };\n\n  constructor(baseurl: string) {\n    this.baseurl = baseurl;\n  }\n\n  // setByteRange converts a EXT-X-BYTERANGE attribute into a two element array\n  setByteRange(value: string, previous?: BaseSegment) {\n    const params = value.split('@', 2);\n    const byteRange: number[] = [];\n    if (params.length === 1) {\n      byteRange[0] = previous ? previous.byteRangeEndOffset : 0;\n    } else {\n      byteRange[0] = parseInt(params[1]);\n    }\n    byteRange[1] = parseInt(params[0]) + byteRange[0];\n    this._byteRange = byteRange;\n  }\n\n  get byteRange(): number[] {\n    if (!this._byteRange) {\n      return [];\n    }\n\n    return this._byteRange;\n  }\n\n  get byteRangeStartOffset(): number {\n    return this.byteRange[0];\n  }\n\n  get byteRangeEndOffset(): number {\n    return this.byteRange[1];\n  }\n\n  get url(): string {\n    if (!this._url && this.baseurl && this.relurl) {\n      this._url = buildAbsoluteURL(this.baseurl, this.relurl, {\n        alwaysNormalize: true,\n      });\n    }\n    return this._url || '';\n  }\n\n  set url(value: string) {\n    this._url = value;\n  }\n}\n\nexport class Fragment extends BaseSegment {\n  private _decryptdata: LevelKey | null = null;\n\n  public rawProgramDateTime: string | null = null;\n  public programDateTime: number | null = null;\n  public tagList: Array<string[]> = [];\n\n  // EXTINF has to be present for a m3u8 to be considered valid\n  public duration: number = 0;\n  // sn notates the sequence number for a segment, and if set to a string can be 'initSegment'\n  public sn: number | 'initSegment' = 0;\n  // levelkeys are the EXT-X-KEY tags that apply to this segment for decryption\n  // core difference from the private field _decryptdata is the lack of the initialized IV\n  // _decryptdata will set the IV for this segment based on the segment number in the fragment\n  public levelkeys?: { [key: string]: LevelKey };\n  // A string representing the fragment type\n  public readonly type: PlaylistLevelType;\n  // A reference to the loader. Set while the fragment is loading, and removed afterwards. Used to abort fragment loading\n  public loader: Loader<FragmentLoaderContext> | null = null;\n  // A reference to the key loader. Set while the key is loading, and removed afterwards. Used to abort key loading\n  public keyLoader: Loader<KeyLoaderContext> | null = null;\n  // The level/track index to which the fragment belongs\n  public level: number = -1;\n  // The continuity counter of the fragment\n  public cc: number = 0;\n  // The starting Presentation Time Stamp (PTS) of the fragment. Set after transmux complete.\n  public startPTS?: number;\n  // The ending Presentation Time Stamp (PTS) of the fragment. Set after transmux complete.\n  public endPTS?: number;\n  // The latest Presentation Time Stamp (PTS) appended to the buffer.\n  public appendedPTS?: number;\n  // The starting Decode Time Stamp (DTS) of the fragment. Set after transmux complete.\n  public startDTS!: number;\n  // The ending Decode Time Stamp (DTS) of the fragment. Set after transmux complete.\n  public endDTS!: number;\n  // The start time of the fragment, as listed in the manifest. Updated after transmux complete.\n  public start: number = 0;\n  // Set by `updateFragPTSDTS` in level-helper\n  public deltaPTS?: number;\n  // The maximum starting Presentation Time Stamp (audio/video PTS) of the fragment. Set after transmux complete.\n  public maxStartPTS?: number;\n  // The minimum ending Presentation Time Stamp (audio/video PTS) of the fragment. Set after transmux complete.\n  public minEndPTS?: number;\n  // Load/parse timing information\n  public stats: LoadStats = new LoadStats();\n  public urlId: number = 0;\n  public data?: Uint8Array;\n  // A flag indicating whether the segment was downloaded in order to test bitrate, and was not buffered\n  public bitrateTest: boolean = false;\n  // #EXTINF  segment title\n  public title: string | null = null;\n  // The Media Initialization Section for this segment\n  public initSegment: Fragment | null = null;\n  // Fragment is the last fragment in the media playlist\n  public endList?: boolean;\n\n  constructor(type: PlaylistLevelType, baseurl: string) {\n    super(baseurl);\n    this.type = type;\n  }\n\n  get decryptdata(): LevelKey | null {\n    const { levelkeys } = this;\n    if (!levelkeys && !this._decryptdata) {\n      return null;\n    }\n\n    if (!this._decryptdata && this.levelkeys && !this.levelkeys.NONE) {\n      const key = this.levelkeys.identity;\n      if (key) {\n        this._decryptdata = key.getDecryptData(this.sn);\n      } else {\n        const keyFormats = Object.keys(this.levelkeys);\n        if (keyFormats.length === 1) {\n          return (this._decryptdata = this.levelkeys[\n            keyFormats[0]\n          ].getDecryptData(this.sn));\n        } else {\n          // Multiple keys. key-loader to call Fragment.setKeyFormat based on selected key-system.\n        }\n      }\n    }\n\n    return this._decryptdata;\n  }\n\n  get end(): number {\n    return this.start + this.duration;\n  }\n\n  get endProgramDateTime() {\n    if (this.programDateTime === null) {\n      return null;\n    }\n\n    if (!Number.isFinite(this.programDateTime)) {\n      return null;\n    }\n\n    const duration = !Number.isFinite(this.duration) ? 0 : this.duration;\n\n    return this.programDateTime + duration * 1000;\n  }\n\n  get encrypted() {\n    // At the m3u8-parser level we need to add support for manifest signalled keyformats\n    // when we want the fragment to start reporting that it is encrypted.\n    // Currently, keyFormat will only be set for identity keys\n    if (this._decryptdata?.encrypted) {\n      return true;\n    } else if (this.levelkeys) {\n      const keyFormats = Object.keys(this.levelkeys);\n      const len = keyFormats.length;\n      if (len > 1 || (len === 1 && this.levelkeys[keyFormats[0]].encrypted)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  setKeyFormat(keyFormat: KeySystemFormats) {\n    if (this.levelkeys) {\n      const key = this.levelkeys[keyFormat];\n      if (key && !this._decryptdata) {\n        this._decryptdata = key.getDecryptData(this.sn);\n      }\n    }\n  }\n\n  abortRequests(): void {\n    this.loader?.abort();\n    this.keyLoader?.abort();\n  }\n\n  setElementaryStreamInfo(\n    type: ElementaryStreamTypes,\n    startPTS: number,\n    endPTS: number,\n    startDTS: number,\n    endDTS: number,\n    partial: boolean = false\n  ) {\n    const { elementaryStreams } = this;\n    const info = elementaryStreams[type];\n    if (!info) {\n      elementaryStreams[type] = {\n        startPTS,\n        endPTS,\n        startDTS,\n        endDTS,\n        partial,\n      };\n      return;\n    }\n\n    info.startPTS = Math.min(info.startPTS, startPTS);\n    info.endPTS = Math.max(info.endPTS, endPTS);\n    info.startDTS = Math.min(info.startDTS, startDTS);\n    info.endDTS = Math.max(info.endDTS, endDTS);\n  }\n\n  clearElementaryStreamInfo() {\n    const { elementaryStreams } = this;\n    elementaryStreams[ElementaryStreamTypes.AUDIO] = null;\n    elementaryStreams[ElementaryStreamTypes.VIDEO] = null;\n    elementaryStreams[ElementaryStreamTypes.AUDIOVIDEO] = null;\n  }\n}\n\nexport class Part extends BaseSegment {\n  public readonly fragOffset: number = 0;\n  public readonly duration: number = 0;\n  public readonly gap: boolean = false;\n  public readonly independent: boolean = false;\n  public readonly relurl: string;\n  public readonly fragment: Fragment;\n  public readonly index: number;\n  public stats: LoadStats = new LoadStats();\n\n  constructor(\n    partAttrs: AttrList,\n    frag: Fragment,\n    baseurl: string,\n    index: number,\n    previous?: Part\n  ) {\n    super(baseurl);\n    this.duration = partAttrs.decimalFloatingPoint('DURATION');\n    this.gap = partAttrs.bool('GAP');\n    this.independent = partAttrs.bool('INDEPENDENT');\n    this.relurl = partAttrs.enumeratedString('URI') as string;\n    this.fragment = frag;\n    this.index = index;\n    const byteRange = partAttrs.enumeratedString('BYTERANGE');\n    if (byteRange) {\n      this.setByteRange(byteRange, previous);\n    }\n    if (previous) {\n      this.fragOffset = previous.fragOffset + previous.duration;\n    }\n  }\n\n  get start(): number {\n    return this.fragment.start + this.fragOffset;\n  }\n\n  get end(): number {\n    return this.start + this.duration;\n  }\n\n  get loaded(): boolean {\n    const { elementaryStreams } = this;\n    return !!(\n      elementaryStreams.audio ||\n      elementaryStreams.video ||\n      elementaryStreams.audiovideo\n    );\n  }\n}\n", "import { ErrorTypes, ErrorDetails } from '../errors';\nimport {\n  LoaderStats,\n  LoaderResponse,\n  LoaderConfiguration,\n  LoaderCallbacks,\n  Loader,\n  KeyLoaderContext,\n} from '../types/loader';\nimport { LoadError } from './fragment-loader';\nimport type { HlsConfig } from '../hls';\nimport type { Fragment } from '../loader/fragment';\nimport type { ComponentAPI } from '../types/component-api';\nimport type { KeyLoadedData } from '../types/events';\nimport type { LevelKey } from './level-key';\nimport type EMEController from '../controller/eme-controller';\nimport type { MediaKeySessionContext } from '../controller/eme-controller';\nimport type { KeySystemFormats } from '../utils/mediakeys-helper';\n\nexport interface KeyLoaderInfo {\n  decryptdata: LevelKey;\n  keyLoadPromise: Promise<KeyLoadedData> | null;\n  loader: Loader<KeyLoaderContext> | null;\n  mediaKeySessionContext: MediaKeySessionContext | null;\n}\nexport default class KeyLoader implements ComponentAPI {\n  private readonly config: HlsConfig;\n  public keyUriToKeyInfo: { [keyuri: string]: KeyLoaderInfo } = {};\n  public emeController: EMEController | null = null;\n\n  constructor(config: HlsConfig) {\n    this.config = config;\n  }\n\n  abort() {\n    for (const uri in this.keyUriToKeyInfo) {\n      const loader = this.keyUriToKeyInfo[uri].loader;\n      if (loader) {\n        loader.abort();\n      }\n    }\n  }\n\n  detach() {\n    for (const uri in this.keyUriToKeyInfo) {\n      const keyInfo = this.keyUriToKeyInfo[uri];\n      // Remove cached EME keys on detach\n      if (\n        keyInfo.mediaKeySessionContext ||\n        keyInfo.decryptdata.isCommonEncryption\n      ) {\n        delete this.keyUriToKeyInfo[uri];\n      }\n    }\n  }\n\n  destroy() {\n    this.detach();\n    for (const uri in this.keyUriToKeyInfo) {\n      const loader = this.keyUriToKeyInfo[uri].loader;\n      if (loader) {\n        loader.destroy();\n      }\n    }\n    this.keyUriToKeyInfo = {};\n  }\n\n  createKeyLoadError(\n    frag: Fragment,\n    details: ErrorDetails = ErrorDetails.KEY_LOAD_ERROR,\n    networkDetails?: any,\n    message?: string\n  ): LoadError {\n    return new LoadError({\n      type: ErrorTypes.NETWORK_ERROR,\n      details,\n      fatal: false,\n      frag,\n      networkDetails,\n    });\n  }\n\n  loadClear(\n    loadingFrag: Fragment,\n    encryptedFragments: Fragment[]\n  ): void | Promise<void> {\n    if (this.emeController && this.config.emeEnabled) {\n      // access key-system with nearest key on start (loaidng frag is unencrypted)\n      const { sn, cc } = loadingFrag;\n      for (let i = 0; i < encryptedFragments.length; i++) {\n        const frag = encryptedFragments[i];\n        if (cc <= frag.cc && (sn === 'initSegment' || sn < frag.sn)) {\n          this.emeController\n            .selectKeySystemFormat(frag)\n            .then((keySystemFormat) => {\n              frag.setKeyFormat(keySystemFormat);\n            });\n          break;\n        }\n      }\n    }\n  }\n\n  load(frag: Fragment): Promise<KeyLoadedData> {\n    if (!frag.decryptdata && frag.encrypted && this.emeController) {\n      // Multiple keys, but none selected, resolve in eme-controller\n      return this.emeController\n        .selectKeySystemFormat(frag)\n        .then((keySystemFormat) => {\n          return this.loadInternal(frag, keySystemFormat);\n        });\n    }\n\n    return this.loadInternal(frag);\n  }\n\n  loadInternal(\n    frag: Fragment,\n    keySystemFormat?: KeySystemFormats\n  ): Promise<KeyLoadedData> {\n    if (keySystemFormat) {\n      frag.setKeyFormat(keySystemFormat);\n    }\n    const decryptdata = frag.decryptdata;\n    if (!decryptdata) {\n      const errorMessage = keySystemFormat\n        ? `Expected frag.decryptdata to be defined after setting format ${keySystemFormat}`\n        : 'Missing decryption data on fragment in onKeyLoading';\n      return Promise.reject(\n        this.createKeyLoadError(\n          frag,\n          ErrorDetails.KEY_LOAD_ERROR,\n          null,\n          errorMessage\n        )\n      );\n    }\n    const uri = decryptdata.uri;\n    if (!uri) {\n      return Promise.reject(\n        this.createKeyLoadError(\n          frag,\n          ErrorDetails.KEY_LOAD_ERROR,\n          null,\n          `Invalid key URI: \"${uri}\"`\n        )\n      );\n    }\n    let keyInfo = this.keyUriToKeyInfo[uri];\n\n    if (keyInfo?.decryptdata.key) {\n      decryptdata.key = keyInfo.decryptdata.key;\n      return Promise.resolve({ frag, keyInfo });\n    }\n    // Return key load promise as long as it does not have a mediakey session with an unusable key status\n    if (keyInfo?.keyLoadPromise) {\n      switch (keyInfo.mediaKeySessionContext?.keyStatus) {\n        case undefined:\n        case 'status-pending':\n        case 'usable':\n        case 'usable-in-future':\n          return keyInfo.keyLoadPromise.then((keyLoadedData) => {\n            // Return the correct fragment with updated decryptdata key and loaded keyInfo\n            decryptdata.key = keyLoadedData.keyInfo.decryptdata.key;\n            return { frag, keyInfo };\n          });\n      }\n      // If we have a key session and status and it is not pending or usable, continue\n      // This will go back to the eme-controller for expired keys to get a new keyLoadPromise\n    }\n\n    // Load the key or return the loading promise\n    keyInfo = this.keyUriToKeyInfo[uri] = {\n      decryptdata,\n      keyLoadPromise: null,\n      loader: null,\n      mediaKeySessionContext: null,\n    };\n\n    switch (decryptdata.method) {\n      case 'ISO-23001-7':\n      case 'SAMPLE-AES':\n      case 'SAMPLE-AES-CENC':\n      case 'SAMPLE-AES-CTR':\n        if (decryptdata.keyFormat === 'identity') {\n          // loadKeyHTTP handles http(s) and data URLs\n          return this.loadKeyHTTP(keyInfo, frag);\n        }\n        return this.loadKeyEME(keyInfo, frag);\n      case 'AES-128':\n        return this.loadKeyHTTP(keyInfo, frag);\n      default:\n        return Promise.reject(\n          this.createKeyLoadError(\n            frag,\n            ErrorDetails.KEY_LOAD_ERROR,\n            null,\n            `Key supplied with unsupported METHOD: \"${decryptdata.method}\"`\n          )\n        );\n    }\n  }\n\n  loadKeyEME(keyInfo: KeyLoaderInfo, frag: Fragment): Promise<KeyLoadedData> {\n    const keyLoadedData: KeyLoadedData = { frag, keyInfo };\n    if (this.emeController && this.config.emeEnabled) {\n      const keySessionContextPromise =\n        this.emeController.loadKey(keyLoadedData);\n      if (keySessionContextPromise) {\n        return (keyInfo.keyLoadPromise = keySessionContextPromise.then(\n          (keySessionContext) => {\n            keyInfo.mediaKeySessionContext = keySessionContext;\n            return keyLoadedData;\n          }\n        )).catch((error) => {\n          // Remove promise for license renewal or retry\n          keyInfo.keyLoadPromise = null;\n          throw error;\n        });\n      }\n    }\n    return Promise.resolve(keyLoadedData);\n  }\n\n  loadKeyHTTP(keyInfo: KeyLoaderInfo, frag: Fragment): Promise<KeyLoadedData> {\n    const config = this.config;\n    const Loader = config.loader;\n    const keyLoader = new Loader(config) as Loader<KeyLoaderContext>;\n    frag.keyLoader = keyInfo.loader = keyLoader;\n\n    return (keyInfo.keyLoadPromise = new Promise((resolve, reject) => {\n      const loaderContext: KeyLoaderContext = {\n        keyInfo,\n        frag,\n        responseType: 'arraybuffer',\n        url: keyInfo.decryptdata.uri,\n      };\n\n      // maxRetry is 0 so that instead of retrying the same key on the same variant multiple times,\n      // key-loader will trigger an error and rely on stream-controller to handle retry logic.\n      // this will also align retry logic with fragment-loader\n      const loaderConfig: LoaderConfiguration = {\n        timeout: config.fragLoadingTimeOut,\n        maxRetry: 0,\n        retryDelay: config.fragLoadingRetryDelay,\n        maxRetryDelay: config.fragLoadingMaxRetryTimeout,\n        highWaterMark: 0,\n      };\n\n      const loaderCallbacks: LoaderCallbacks<KeyLoaderContext> = {\n        onSuccess: (\n          response: LoaderResponse,\n          stats: LoaderStats,\n          context: KeyLoaderContext,\n          networkDetails: any\n        ) => {\n          const { frag, keyInfo, url: uri } = context;\n          if (!frag.decryptdata || keyInfo !== this.keyUriToKeyInfo[uri]) {\n            return reject(\n              this.createKeyLoadError(\n                frag,\n                ErrorDetails.KEY_LOAD_ERROR,\n                networkDetails,\n                'after key load, decryptdata unset or changed'\n              )\n            );\n          }\n\n          keyInfo.decryptdata.key = frag.decryptdata.key = new Uint8Array(\n            response.data as ArrayBuffer\n          );\n\n          // detach fragment key loader on load success\n          frag.keyLoader = null;\n          keyInfo.loader = null;\n          resolve({ frag, keyInfo });\n        },\n\n        onError: (\n          error: { code: number; text: string },\n          context: KeyLoaderContext,\n          networkDetails: any\n        ) => {\n          this.resetLoader(context);\n          reject(\n            this.createKeyLoadError(\n              frag,\n              ErrorDetails.KEY_LOAD_ERROR,\n              networkDetails\n            )\n          );\n        },\n\n        onTimeout: (\n          stats: LoaderStats,\n          context: KeyLoaderContext,\n          networkDetails: any\n        ) => {\n          this.resetLoader(context);\n          reject(\n            this.createKeyLoadError(\n              frag,\n              ErrorDetails.KEY_LOAD_TIMEOUT,\n              networkDetails\n            )\n          );\n        },\n\n        onAbort: (\n          stats: LoaderStats,\n          context: KeyLoaderContext,\n          networkDetails: any\n        ) => {\n          this.resetLoader(context);\n          reject(\n            this.createKeyLoadError(\n              frag,\n              ErrorDetails.INTERNAL_ABORTED,\n              networkDetails\n            )\n          );\n        },\n      };\n\n      keyLoader.load(loaderContext, loaderConfig, loaderCallbacks);\n    }));\n  }\n\n  private resetLoader(context: KeyLoaderContext) {\n    const { frag, keyInfo, url: uri } = context;\n    const loader = keyInfo.loader;\n    if (frag.keyLoader === loader) {\n      frag.keyLoader = null;\n      keyInfo.loader = null;\n    }\n    delete this.keyUriToKeyInfo[uri];\n    if (loader) {\n      loader.destroy();\n    }\n  }\n}\n", "import { Part } from './fragment';\nimport type { Fragment } from './fragment';\nimport type { AttrList } from '../utils/attr-list';\nimport type { DateRange } from './date-range';\n\nconst DEFAULT_TARGET_DURATION = 10;\n\nexport class LevelDetails {\n  public PTSKnown: boolean = false;\n  public alignedSliding: boolean = false;\n  public averagetargetduration?: number;\n  public endCC: number = 0;\n  public endSN: number = 0;\n  public fragments: Fragment[];\n  public fragmentHint?: Fragment;\n  public partList: Part[] | null = null;\n  public dateRanges: Record<string, DateRange>;\n  public live: boolean = true;\n  public ageHeader: number = 0;\n  public advancedDateTime?: number;\n  public updated: boolean = true;\n  public advanced: boolean = true;\n  public availabilityDelay?: number; // Manifest reload synchronization\n  public misses: number = 0;\n  public startCC: number = 0;\n  public startSN: number = 0;\n  public startTimeOffset: number | null = null;\n  public targetduration: number = 0;\n  public totalduration: number = 0;\n  public type: string | null = null;\n  public url: string;\n  public m3u8: string = '';\n  public version: number | null = null;\n  public canBlockReload: boolean = false;\n  public canSkipUntil: number = 0;\n  public canSkipDateRanges: boolean = false;\n  public skippedSegments: number = 0;\n  public recentlyRemovedDateranges?: string[];\n  public partHoldBack: number = 0;\n  public holdBack: number = 0;\n  public partTarget: number = 0;\n  public preloadHint?: AttrList;\n  public renditionReports?: AttrList[];\n  public tuneInGoal: number = 0;\n  public deltaUpdateFailed?: boolean;\n  public driftStartTime: number = 0;\n  public driftEndTime: number = 0;\n  public driftStart: number = 0;\n  public driftEnd: number = 0;\n  public encryptedFragments: Fragment[];\n\n  constructor(baseUrl) {\n    this.fragments = [];\n    this.encryptedFragments = [];\n    this.dateRanges = {};\n    this.url = baseUrl;\n  }\n\n  reloaded(previous: LevelDetails | undefined) {\n    if (!previous) {\n      this.advanced = true;\n      this.updated = true;\n      return;\n    }\n    const partSnDiff = this.lastPartSn - previous.lastPartSn;\n    const partIndexDiff = this.lastPartIndex - previous.lastPartIndex;\n    this.updated =\n      this.endSN !== previous.endSN || !!partIndexDiff || !!partSnDiff;\n    this.advanced =\n      this.endSN > previous.endSN ||\n      partSnDiff > 0 ||\n      (partSnDiff === 0 && partIndexDiff > 0);\n    if (this.updated || this.advanced) {\n      this.misses = Math.floor(previous.misses * 0.6);\n    } else {\n      this.misses = previous.misses + 1;\n    }\n    this.availabilityDelay = previous.availabilityDelay;\n  }\n\n  get hasProgramDateTime(): boolean {\n    if (this.fragments.length) {\n      return Number.isFinite(\n        this.fragments[this.fragments.length - 1].programDateTime as number\n      );\n    }\n    return false;\n  }\n\n  get levelTargetDuration(): number {\n    return (\n      this.averagetargetduration ||\n      this.targetduration ||\n      DEFAULT_TARGET_DURATION\n    );\n  }\n\n  get drift(): number {\n    const runTime = this.driftEndTime - this.driftStartTime;\n    if (runTime > 0) {\n      const runDuration = this.driftEnd - this.driftStart;\n      return (runDuration * 1000) / runTime;\n    }\n    return 1;\n  }\n\n  get edge(): number {\n    return this.partEnd || this.fragmentEnd;\n  }\n\n  get partEnd(): number {\n    if (this.partList?.length) {\n      return this.partList[this.partList.length - 1].end;\n    }\n    return this.fragmentEnd;\n  }\n\n  get fragmentEnd(): number {\n    if (this.fragments?.length) {\n      return this.fragments[this.fragments.length - 1].end;\n    }\n    return 0;\n  }\n\n  get age(): number {\n    if (this.advancedDateTime) {\n      return Math.max(Date.now() - this.advancedDateTime, 0) / 1000;\n    }\n    return 0;\n  }\n\n  get lastPartIndex(): number {\n    if (this.partList?.length) {\n      return this.partList[this.partList.length - 1].index;\n    }\n    return -1;\n  }\n\n  get lastPartSn(): number {\n    if (this.partList?.length) {\n      return this.partList[this.partList.length - 1].fragment.sn as number;\n    }\n    return this.endSN;\n  }\n}\n", "import {\n  changeEndianness,\n  convertDataUriToArrayBytes,\n} from '../utils/keysystem-util';\nimport { KeySystemFormats } from '../utils/mediakeys-helper';\nimport { mp4pssh } from '../utils/mp4-tools';\nimport { logger } from '../utils/logger';\nimport { base64Decode } from '../utils/numeric-encoding-utils';\n\nlet keyUriToKeyIdMap: { [uri: string]: Uint8Array } = {};\n\nexport interface DecryptData {\n  uri: string;\n  method: string;\n  keyFormat: string;\n  keyFormatVersions: number[];\n  iv: Uint8Array | null;\n  key: Uint8Array | null;\n  keyId: Uint8Array | null;\n  pssh: Uint8Array | null;\n  encrypted: boolean;\n  isCommonEncryption: boolean;\n}\n\nexport class LevelKey implements DecryptData {\n  public readonly uri: string;\n  public readonly method: string;\n  public readonly keyFormat: string;\n  public readonly keyFormatVersions: number[];\n  public readonly encrypted: boolean;\n  public readonly isCommonEncryption: boolean;\n  public iv: Uint8Array | null = null;\n  public key: Uint8Array | null = null;\n  public keyId: Uint8Array | null = null;\n  public pssh: Uint8Array | null = null;\n\n  static clearKeyUriToKeyIdMap() {\n    keyUriToKeyIdMap = {};\n  }\n\n  constructor(\n    method: string,\n    uri: string,\n    format: string,\n    formatversions: number[] = [1],\n    iv: Uint8Array | null = null\n  ) {\n    this.method = method;\n    this.uri = uri;\n    this.keyFormat = format;\n    this.keyFormatVersions = formatversions;\n    this.iv = iv;\n    this.encrypted = method ? method !== 'NONE' : false;\n    this.isCommonEncryption = this.encrypted && method !== 'AES-128';\n  }\n\n  public isSupported(): boolean {\n    // If it's Segment encryption or No encryption, just select that key system\n    if (this.method) {\n      if (this.method === 'AES-128' || this.method === 'NONE') {\n        return true;\n      }\n      switch (this.keyFormat) {\n        case 'identity':\n          // Maintain support for clear SAMPLE-AES with MPEG-3 TS\n          return this.method === 'SAMPLE-AES';\n        case KeySystemFormats.FAIRPLAY:\n        case KeySystemFormats.WIDEVINE:\n        case KeySystemFormats.PLAYREADY:\n        case KeySystemFormats.CLEARKEY:\n          return (\n            [\n              'ISO-23001-7',\n              'SAMPLE-AES',\n              'SAMPLE-AES-CENC',\n              'SAMPLE-AES-CTR',\n            ].indexOf(this.method) !== -1\n          );\n      }\n    }\n    return false;\n  }\n\n  public getDecryptData(sn: number | 'initSegment'): LevelKey | null {\n    if (!this.encrypted || !this.uri) {\n      return null;\n    }\n\n    if (this.method === 'AES-128' && this.uri && !this.iv) {\n      if (typeof sn !== 'number') {\n        // We are fetching decryption data for a initialization segment\n        // If the segment was encrypted with AES-128\n        // It must have an IV defined. We cannot substitute the Segment Number in.\n        if (this.method === 'AES-128' && !this.iv) {\n          logger.warn(\n            `missing IV for initialization segment with method=\"${this.method}\" - compliance issue`\n          );\n        }\n        // Explicitly set sn to resulting value from implicit conversions 'initSegment' values for IV generation.\n        sn = 0;\n      }\n      const iv = createInitializationVector(sn);\n      const decryptdata = new LevelKey(\n        this.method,\n        this.uri,\n        'identity',\n        this.keyFormatVersions,\n        iv\n      );\n      return decryptdata;\n    }\n\n    // Initialize keyId if possible\n    const keyBytes = convertDataUriToArrayBytes(this.uri);\n    if (keyBytes) {\n      switch (this.keyFormat) {\n        case KeySystemFormats.WIDEVINE:\n          this.pssh = keyBytes;\n          // In case of widevine keyID is embedded in PSSH box. Read Key ID.\n          if (keyBytes.length >= 22) {\n            this.keyId = keyBytes.subarray(\n              keyBytes.length - 22,\n              keyBytes.length - 6\n            );\n          }\n          break;\n        case KeySystemFormats.PLAYREADY: {\n          const PlayReadyKeySystemUUID = new Uint8Array([\n            0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6,\n            0x5b, 0xe0, 0x88, 0x5f, 0x95,\n          ]);\n\n          this.pssh = mp4pssh(PlayReadyKeySystemUUID, null, keyBytes);\n\n          const keyBytesUtf16 = new Uint16Array(\n            keyBytes.buffer,\n            keyBytes.byteOffset,\n            keyBytes.byteLength / 2\n          );\n          const keyByteStr = String.fromCharCode.apply(\n            null,\n            Array.from(keyBytesUtf16)\n          );\n\n          // Parse Playready WRMHeader XML\n          const xmlKeyBytes = keyByteStr.substring(\n            keyByteStr.indexOf('<'),\n            keyByteStr.length\n          );\n          const parser = new DOMParser();\n          const xmlDoc = parser.parseFromString(xmlKeyBytes, 'text/xml');\n          const keyData = xmlDoc.getElementsByTagName('KID')[0];\n          if (keyData) {\n            const keyId = keyData.childNodes[0]\n              ? keyData.childNodes[0].nodeValue\n              : keyData.getAttribute('VALUE');\n            if (keyId) {\n              const keyIdArray = base64Decode(keyId).subarray(0, 16);\n              // KID value in PRO is a base64-encoded little endian GUID interpretation of UUID\n              // KID value in ‘tenc’ is a big endian UUID GUID interpretation of UUID\n              changeEndianness(keyIdArray);\n              this.keyId = keyIdArray;\n            }\n          }\n          break;\n        }\n        default: {\n          let keydata = keyBytes.subarray(0, 16);\n          if (keydata.length !== 16) {\n            const padded = new Uint8Array(16);\n            padded.set(keydata, 16 - keydata.length);\n            keydata = padded;\n          }\n          this.keyId = keydata;\n          break;\n        }\n      }\n    }\n\n    // Default behavior: assign a new keyId for each uri\n    if (!this.keyId || this.keyId.byteLength !== 16) {\n      let keyId = keyUriToKeyIdMap[this.uri];\n      if (!keyId) {\n        const val =\n          Object.keys(keyUriToKeyIdMap).length % Number.MAX_SAFE_INTEGER;\n        keyId = new Uint8Array(16);\n        const dv = new DataView(keyId.buffer, 12, 4); // Just set the last 4 bytes\n        dv.setUint32(0, val);\n        keyUriToKeyIdMap[this.uri] = keyId;\n      }\n      this.keyId = keyId;\n    }\n\n    return this;\n  }\n}\n\nfunction createInitializationVector(segmentNumber: number): Uint8Array {\n  const uint8View = new Uint8Array(16);\n  for (let i = 12; i < 16; i++) {\n    uint8View[i] = (segmentNumber >> (8 * (15 - i))) & 0xff;\n  }\n  return uint8View;\n}\n", "import type {\n  HlsPerformanceTiming,\n  HlsProgressivePerformanceTiming,\n  LoaderStats,\n} from '../types/loader';\n\nexport class LoadStats implements LoaderStats {\n  aborted: boolean = false;\n  loaded: number = 0;\n  retry: number = 0;\n  total: number = 0;\n  chunkCount: number = 0;\n  bwEstimate: number = 0;\n  loading: HlsProgressivePerformanceTiming = { start: 0, first: 0, end: 0 };\n  parsing: HlsPerformanceTiming = { start: 0, end: 0 };\n  buffering: HlsProgressivePerformanceTiming = { start: 0, first: 0, end: 0 };\n}\n", "import { buildAbsoluteURL } from 'url-toolkit';\nimport { DateRange } from './date-range';\nimport { Fragment, Part } from './fragment';\nimport { LevelDetails } from './level-details';\nimport { LevelKey } from './level-key';\nimport { AttrList } from '../utils/attr-list';\nimport { logger } from '../utils/logger';\nimport type { CodecType } from '../utils/codecs';\nimport { isCodecType } from '../utils/codecs';\nimport type {\n  MediaPlaylist,\n  AudioGroup,\n  MediaPlaylistType,\n} from '../types/media-playlist';\nimport type { PlaylistLevelType } from '../types/loader';\nimport type { LevelAttributes, LevelParsed } from '../types/level';\n\ntype M3U8ParserFragments = Array<Fragment | null>;\n\ntype ParsedMultiVariantPlaylist = {\n  levels: LevelParsed[];\n  sessionData: Record<string, AttrList> | null;\n  sessionKeys: LevelKey[] | null;\n};\n\n// https://regex101.com is your friend\nconst MASTER_PLAYLIST_REGEX =\n  /#EXT-X-STREAM-INF:([^\\r\\n]*)(?:[\\r\\n](?:#[^\\r\\n]*)?)*([^\\r\\n]+)|#EXT-X-SESSION-DATA:([^\\r\\n]*)[\\r\\n]+|#EXT-X-SESSION-KEY:([^\\n\\r]*)[\\r\\n]+/g;\nconst MASTER_PLAYLIST_MEDIA_REGEX = /#EXT-X-MEDIA:(.*)/g;\n\nconst LEVEL_PLAYLIST_REGEX_FAST = new RegExp(\n  [\n    /#EXTINF:\\s*(\\d*(?:\\.\\d+)?)(?:,(.*)\\s+)?/.source, // duration (#EXTINF:<duration>,<title>), group 1 => duration, group 2 => title\n    /(?!#) *(\\S[\\S ]*)/.source, // segment URI, group 3 => the URI (note newline is not eaten)\n    /#EXT-X-BYTERANGE:*(.+)/.source, // next segment's byterange, group 4 => range spec (x@y)\n    /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, // next segment's program date/time group 5 => the datetime spec\n    /#.*/.source, // All other non-segment oriented tags will match with all groups empty\n  ].join('|'),\n  'g'\n);\n\nconst LEVEL_PLAYLIST_REGEX_SLOW = new RegExp(\n  [\n    /#(EXTM3U)/.source,\n    /#EXT-X-(DATERANGE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/\n      .source,\n    /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\\d+)/\n      .source,\n    /#EXT-X-(DISCONTINUITY|ENDLIST|GAP)/.source,\n    /(#)([^:]*):(.*)/.source,\n    /(#)(.*)(?:.*)\\r?\\n?/.source,\n  ].join('|')\n);\n\nexport default class M3U8Parser {\n  static findGroup(\n    groups: Array<AudioGroup>,\n    mediaGroupId: string\n  ): AudioGroup | undefined {\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      if (group.id === mediaGroupId) {\n        return group;\n      }\n    }\n  }\n\n  static convertAVC1ToAVCOTI(codec) {\n    // Convert avc1 codec string from RFC-4281 to RFC-6381 for MediaSource.isTypeSupported\n    const avcdata = codec.split('.');\n    if (avcdata.length > 2) {\n      let result = avcdata.shift() + '.';\n      result += parseInt(avcdata.shift()).toString(16);\n      result += ('000' + parseInt(avcdata.shift()).toString(16)).slice(-4);\n      return result;\n    }\n    return codec;\n  }\n\n  static resolve(url, baseUrl) {\n    return buildAbsoluteURL(baseUrl, url, { alwaysNormalize: true });\n  }\n\n  static parseMasterPlaylist(\n    string: string,\n    baseurl: string\n  ): ParsedMultiVariantPlaylist {\n    const levels: LevelParsed[] = [];\n    const levelsWithKnownCodecs: LevelParsed[] = [];\n    const sessionData: Record<string, AttrList> = {};\n    const sessionKeys: LevelKey[] = [];\n\n    let hasSessionData = false;\n    MASTER_PLAYLIST_REGEX.lastIndex = 0;\n\n    let result: RegExpExecArray | null;\n    while ((result = MASTER_PLAYLIST_REGEX.exec(string)) != null) {\n      if (result[1]) {\n        // '#EXT-X-STREAM-INF' is found, parse level tag  in group 1\n        const attrs = new AttrList(result[1]);\n        const level: LevelParsed = {\n          attrs,\n          bitrate:\n            attrs.decimalInteger('AVERAGE-BANDWIDTH') ||\n            attrs.decimalInteger('BANDWIDTH'),\n          name: attrs.NAME,\n          url: M3U8Parser.resolve(result[2], baseurl),\n        };\n\n        const resolution = attrs.decimalResolution('RESOLUTION');\n        if (resolution) {\n          level.width = resolution.width;\n          level.height = resolution.height;\n        }\n\n        setCodecs(\n          (attrs.CODECS || '').split(/[ ,]+/).filter((c) => c),\n          level\n        );\n\n        if (level.videoCodec && level.videoCodec.indexOf('avc1') !== -1) {\n          level.videoCodec = M3U8Parser.convertAVC1ToAVCOTI(level.videoCodec);\n        }\n\n        if (!level.unknownCodecs?.length) {\n          levelsWithKnownCodecs.push(level);\n        }\n\n        levels.push(level);\n      } else if (result[3]) {\n        // '#EXT-X-SESSION-DATA' is found, parse session data in group 3\n        const sessionAttrs = new AttrList(result[3]);\n        if (sessionAttrs['DATA-ID']) {\n          hasSessionData = true;\n          sessionData[sessionAttrs['DATA-ID']] = sessionAttrs;\n        }\n      } else if (result[4]) {\n        // '#EXT-X-SESSION-KEY' is found\n        const keyTag = result[4];\n        const sessionKey = parseKey(keyTag, baseurl);\n        if (sessionKey.encrypted && sessionKey.isSupported()) {\n          sessionKeys.push(sessionKey);\n        } else {\n          logger.warn(\n            `[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: \"${keyTag}\"`\n          );\n        }\n      }\n    }\n    // Filter out levels with unknown codecs if it does not remove all levels\n    const stripUnknownCodecLevels =\n      levelsWithKnownCodecs.length > 0 &&\n      levelsWithKnownCodecs.length < levels.length;\n\n    return {\n      levels: stripUnknownCodecLevels ? levelsWithKnownCodecs : levels,\n      sessionData: hasSessionData ? sessionData : null,\n      sessionKeys: sessionKeys.length ? sessionKeys : null,\n    };\n  }\n\n  static parseMasterPlaylistMedia(\n    string: string,\n    baseurl: string,\n    type: MediaPlaylistType,\n    groups: Array<AudioGroup> = []\n  ): Array<MediaPlaylist> {\n    let result: RegExpExecArray | null;\n    const medias: Array<MediaPlaylist> = [];\n    let id = 0;\n    MASTER_PLAYLIST_MEDIA_REGEX.lastIndex = 0;\n    while ((result = MASTER_PLAYLIST_MEDIA_REGEX.exec(string)) !== null) {\n      const attrs = new AttrList(result[1]) as LevelAttributes;\n      if (attrs.TYPE === type) {\n        const media: MediaPlaylist = {\n          attrs,\n          bitrate: 0,\n          id: id++,\n          groupId: attrs['GROUP-ID'],\n          instreamId: attrs['INSTREAM-ID'],\n          name: attrs.NAME || attrs.LANGUAGE || '',\n          type,\n          default: attrs.bool('DEFAULT'),\n          autoselect: attrs.bool('AUTOSELECT'),\n          forced: attrs.bool('FORCED'),\n          lang: attrs.LANGUAGE,\n          url: attrs.URI ? M3U8Parser.resolve(attrs.URI, baseurl) : '',\n        };\n\n        if (groups.length) {\n          // If there are audio or text groups signalled in the manifest, let's look for a matching codec string for this track\n          // If we don't find the track signalled, lets use the first audio groups codec we have\n          // Acting as a best guess\n          const groupCodec =\n            M3U8Parser.findGroup(groups, media.groupId as string) || groups[0];\n          assignCodec(media, groupCodec, 'audioCodec');\n          assignCodec(media, groupCodec, 'textCodec');\n        }\n\n        medias.push(media);\n      }\n    }\n    return medias;\n  }\n\n  static parseLevelPlaylist(\n    string: string,\n    baseurl: string,\n    id: number,\n    type: PlaylistLevelType,\n    levelUrlId: number\n  ): LevelDetails {\n    const level = new LevelDetails(baseurl);\n    const fragments: M3U8ParserFragments = level.fragments;\n    // The most recent init segment seen (applies to all subsequent segments)\n    let currentInitSegment: Fragment | null = null;\n    let currentSN = 0;\n    let currentPart = 0;\n    let totalduration = 0;\n    let discontinuityCounter = 0;\n    let prevFrag: Fragment | null = null;\n    let frag: Fragment = new Fragment(type, baseurl);\n    let result: RegExpExecArray | RegExpMatchArray | null;\n    let i: number;\n    let levelkeys: { [key: string]: LevelKey } | undefined;\n    let firstPdtIndex = -1;\n    let createNextFrag = false;\n\n    LEVEL_PLAYLIST_REGEX_FAST.lastIndex = 0;\n    level.m3u8 = string;\n\n    while ((result = LEVEL_PLAYLIST_REGEX_FAST.exec(string)) !== null) {\n      if (createNextFrag) {\n        createNextFrag = false;\n        frag = new Fragment(type, baseurl);\n        // setup the next fragment for part loading\n        frag.start = totalduration;\n        frag.sn = currentSN;\n        frag.cc = discontinuityCounter;\n        frag.level = id;\n        if (currentInitSegment) {\n          frag.initSegment = currentInitSegment;\n          frag.rawProgramDateTime = currentInitSegment.rawProgramDateTime;\n          currentInitSegment.rawProgramDateTime = null;\n        }\n      }\n\n      const duration = result[1];\n      if (duration) {\n        // INF\n        frag.duration = parseFloat(duration);\n        // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939\n        const title = (' ' + result[2]).slice(1);\n        frag.title = title || null;\n        frag.tagList.push(title ? ['INF', duration, title] : ['INF', duration]);\n      } else if (result[3]) {\n        // url\n        if (Number.isFinite(frag.duration)) {\n          frag.start = totalduration;\n          if (levelkeys) {\n            setFragLevelKeys(frag, levelkeys, level);\n          }\n          frag.sn = currentSN;\n          frag.level = id;\n          frag.cc = discontinuityCounter;\n          frag.urlId = levelUrlId;\n          fragments.push(frag);\n          // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939\n          frag.relurl = (' ' + result[3]).slice(1);\n          assignProgramDateTime(frag, prevFrag);\n          prevFrag = frag;\n          totalduration += frag.duration;\n          currentSN++;\n          currentPart = 0;\n          createNextFrag = true;\n        }\n      } else if (result[4]) {\n        // X-BYTERANGE\n        const data = (' ' + result[4]).slice(1);\n        if (prevFrag) {\n          frag.setByteRange(data, prevFrag);\n        } else {\n          frag.setByteRange(data);\n        }\n      } else if (result[5]) {\n        // PROGRAM-DATE-TIME\n        // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939\n        frag.rawProgramDateTime = (' ' + result[5]).slice(1);\n        frag.tagList.push(['PROGRAM-DATE-TIME', frag.rawProgramDateTime]);\n        if (firstPdtIndex === -1) {\n          firstPdtIndex = fragments.length;\n        }\n      } else {\n        result = result[0].match(LEVEL_PLAYLIST_REGEX_SLOW);\n        if (!result) {\n          logger.warn('No matches on slow regex match for level playlist!');\n          continue;\n        }\n        for (i = 1; i < result.length; i++) {\n          if (typeof result[i] !== 'undefined') {\n            break;\n          }\n        }\n\n        // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939\n        const tag = (' ' + result[i]).slice(1);\n        const value1 = (' ' + result[i + 1]).slice(1);\n        const value2 = result[i + 2] ? (' ' + result[i + 2]).slice(1) : '';\n\n        switch (tag) {\n          case 'PLAYLIST-TYPE':\n            level.type = value1.toUpperCase();\n            break;\n          case 'MEDIA-SEQUENCE':\n            currentSN = level.startSN = parseInt(value1);\n            break;\n          case 'SKIP': {\n            const skipAttrs = new AttrList(value1);\n            const skippedSegments =\n              skipAttrs.decimalInteger('SKIPPED-SEGMENTS');\n            if (Number.isFinite(skippedSegments)) {\n              level.skippedSegments = skippedSegments;\n              // This will result in fragments[] containing undefined values, which we will fill in with `mergeDetails`\n              for (let i = skippedSegments; i--; ) {\n                fragments.unshift(null);\n              }\n              currentSN += skippedSegments;\n            }\n            const recentlyRemovedDateranges = skipAttrs.enumeratedString(\n              'RECENTLY-REMOVED-DATERANGES'\n            );\n            if (recentlyRemovedDateranges) {\n              level.recentlyRemovedDateranges =\n                recentlyRemovedDateranges.split('\\t');\n            }\n            break;\n          }\n          case 'TARGETDURATION':\n            level.targetduration = parseFloat(value1);\n            break;\n          case 'VERSION':\n            level.version = parseInt(value1);\n            break;\n          case 'EXTM3U':\n            break;\n          case 'ENDLIST':\n            level.live = false;\n            break;\n          case '#':\n            if (value1 || value2) {\n              frag.tagList.push(value2 ? [value1, value2] : [value1]);\n            }\n            break;\n          case 'DISCONTINUITY':\n            discontinuityCounter++;\n            frag.tagList.push(['DIS']);\n            break;\n          case 'GAP':\n            frag.tagList.push([tag]);\n            break;\n          case 'BITRATE':\n            frag.tagList.push([tag, value1]);\n            break;\n          case 'DATERANGE': {\n            const dateRangeAttr = new AttrList(value1);\n            const dateRange = new DateRange(\n              dateRangeAttr,\n              level.dateRanges[dateRangeAttr.ID]\n            );\n            if (dateRange.isValid || level.skippedSegments) {\n              level.dateRanges[dateRange.id] = dateRange;\n            } else {\n              logger.warn(`Ignoring invalid DATERANGE tag: \"${value1}\"`);\n            }\n            // Add to fragment tag list for backwards compatibility (< v1.2.0)\n            frag.tagList.push(['EXT-X-DATERANGE', value1]);\n            break;\n          }\n          case 'DISCONTINUITY-SEQUENCE':\n            discontinuityCounter = parseInt(value1);\n            break;\n          case 'KEY': {\n            const levelKey = parseKey(value1, baseurl);\n            if (levelKey.isSupported()) {\n              if (levelKey.method === 'NONE') {\n                levelkeys = undefined;\n                break;\n              }\n              if (!levelkeys) {\n                levelkeys = {};\n              }\n              if (levelkeys[levelKey.keyFormat]) {\n                levelkeys = Object.assign({}, levelkeys);\n              }\n              levelkeys[levelKey.keyFormat] = levelKey;\n            } else {\n              logger.warn(`[Keys] Ignoring invalid EXT-X-KEY tag: \"${value1}\"`);\n            }\n            break;\n          }\n          case 'START': {\n            const startAttrs = new AttrList(value1);\n            const startTimeOffset =\n              startAttrs.decimalFloatingPoint('TIME-OFFSET');\n            // TIME-OFFSET can be 0\n            if (Number.isFinite(startTimeOffset)) {\n              level.startTimeOffset = startTimeOffset;\n            }\n            break;\n          }\n          case 'MAP': {\n            const mapAttrs = new AttrList(value1);\n            if (frag.duration) {\n              // Initial segment tag is after segment duration tag.\n              //   #EXTINF: 6.0\n              //   #EXT-X-MAP:URI=\"init.mp4\n              const init = new Fragment(type, baseurl);\n              setInitSegment(init, mapAttrs, id, levelkeys);\n              currentInitSegment = init;\n              frag.initSegment = currentInitSegment;\n              if (\n                currentInitSegment.rawProgramDateTime &&\n                !frag.rawProgramDateTime\n              ) {\n                frag.rawProgramDateTime = currentInitSegment.rawProgramDateTime;\n              }\n            } else {\n              // Initial segment tag is before segment duration tag\n              setInitSegment(frag, mapAttrs, id, levelkeys);\n              currentInitSegment = frag;\n              createNextFrag = true;\n            }\n            break;\n          }\n          case 'SERVER-CONTROL': {\n            const serverControlAttrs = new AttrList(value1);\n            level.canBlockReload = serverControlAttrs.bool('CAN-BLOCK-RELOAD');\n            level.canSkipUntil = serverControlAttrs.optionalFloat(\n              'CAN-SKIP-UNTIL',\n              0\n            );\n            level.canSkipDateRanges =\n              level.canSkipUntil > 0 &&\n              serverControlAttrs.bool('CAN-SKIP-DATERANGES');\n            level.partHoldBack = serverControlAttrs.optionalFloat(\n              'PART-HOLD-BACK',\n              0\n            );\n            level.holdBack = serverControlAttrs.optionalFloat('HOLD-BACK', 0);\n            break;\n          }\n          case 'PART-INF': {\n            const partInfAttrs = new AttrList(value1);\n            level.partTarget = partInfAttrs.decimalFloatingPoint('PART-TARGET');\n            break;\n          }\n          case 'PART': {\n            let partList = level.partList;\n            if (!partList) {\n              partList = level.partList = [];\n            }\n            const previousFragmentPart =\n              currentPart > 0 ? partList[partList.length - 1] : undefined;\n            const index = currentPart++;\n            const part = new Part(\n              new AttrList(value1),\n              frag,\n              baseurl,\n              index,\n              previousFragmentPart\n            );\n            partList.push(part);\n            frag.duration += part.duration;\n            break;\n          }\n          case 'PRELOAD-HINT': {\n            const preloadHintAttrs = new AttrList(value1);\n            level.preloadHint = preloadHintAttrs;\n            break;\n          }\n          case 'RENDITION-REPORT': {\n            const renditionReportAttrs = new AttrList(value1);\n            level.renditionReports = level.renditionReports || [];\n            level.renditionReports.push(renditionReportAttrs);\n            break;\n          }\n          default:\n            logger.warn(`line parsed but not handled: ${result}`);\n            break;\n        }\n      }\n    }\n    if (prevFrag && !prevFrag.relurl) {\n      fragments.pop();\n      totalduration -= prevFrag.duration;\n      if (level.partList) {\n        level.fragmentHint = prevFrag;\n      }\n    } else if (level.partList) {\n      assignProgramDateTime(frag, prevFrag);\n      frag.cc = discontinuityCounter;\n      level.fragmentHint = frag;\n      if (levelkeys) {\n        setFragLevelKeys(frag, levelkeys, level);\n      }\n    }\n    const fragmentLength = fragments.length;\n    const firstFragment = fragments[0];\n    const lastFragment = fragments[fragmentLength - 1];\n    totalduration += level.skippedSegments * level.targetduration;\n    if (totalduration > 0 && fragmentLength && lastFragment) {\n      level.averagetargetduration = totalduration / fragmentLength;\n      const lastSn = lastFragment.sn;\n      level.endSN = lastSn !== 'initSegment' ? lastSn : 0;\n      if (!level.live) {\n        lastFragment.endList = true;\n      }\n      if (firstFragment) {\n        level.startCC = firstFragment.cc;\n      }\n    } else {\n      level.endSN = 0;\n      level.startCC = 0;\n    }\n    if (level.fragmentHint) {\n      totalduration += level.fragmentHint.duration;\n    }\n    level.totalduration = totalduration;\n    level.endCC = discontinuityCounter;\n\n    /**\n     * Backfill any missing PDT values\n     * \"If the first EXT-X-PROGRAM-DATE-TIME tag in a Playlist appears after\n     * one or more Media Segment URIs, the client SHOULD extrapolate\n     * backward from that tag (using EXTINF durations and/or media\n     * timestamps) to associate dates with those segments.\"\n     * We have already extrapolated forward, but all fragments up to the first instance of PDT do not have their PDTs\n     * computed.\n     */\n    if (firstPdtIndex > 0) {\n      backfillProgramDateTimes(fragments, firstPdtIndex);\n    }\n\n    return level;\n  }\n}\n\nfunction parseKey(keyTag: string, baseurl: string): LevelKey {\n  // https://tools.ietf.org/html/rfc8216#section-4.3.2.4\n  const keyAttrs = new AttrList(keyTag);\n  const decryptmethod = keyAttrs.enumeratedString('METHOD') ?? '';\n  const decrypturi = keyAttrs.URI;\n  const decryptiv = keyAttrs.hexadecimalInteger('IV');\n  const decryptkeyformatversions =\n    keyAttrs.enumeratedString('KEYFORMATVERSIONS');\n  // From RFC: This attribute is OPTIONAL; its absence indicates an implicit value of \"identity\".\n  const decryptkeyformat = keyAttrs.enumeratedString('KEYFORMAT') ?? 'identity';\n\n  if (decrypturi && keyAttrs.IV && !decryptiv) {\n    logger.error(`Invalid IV: ${keyAttrs.IV}`);\n  }\n  // If decrypturi is a URI with a scheme, then baseurl will be ignored\n  // No uri is allowed when METHOD is NONE\n  const resolvedUri = decrypturi ? M3U8Parser.resolve(decrypturi, baseurl) : '';\n  const keyFormatVersions = (\n    decryptkeyformatversions ? decryptkeyformatversions : '1'\n  )\n    .split('/')\n    .map(Number)\n    .filter(Number.isFinite);\n\n  return new LevelKey(\n    decryptmethod,\n    resolvedUri,\n    decryptkeyformat,\n    keyFormatVersions,\n    decryptiv\n  );\n}\n\nfunction setCodecs(codecs: Array<string>, level: LevelParsed) {\n  ['video', 'audio', 'text'].forEach((type: CodecType) => {\n    const filtered = codecs.filter((codec) => isCodecType(codec, type));\n    if (filtered.length) {\n      const preferred = filtered.filter((codec) => {\n        return (\n          codec.lastIndexOf('avc1', 0) === 0 ||\n          codec.lastIndexOf('mp4a', 0) === 0\n        );\n      });\n      level[`${type}Codec`] = preferred.length > 0 ? preferred[0] : filtered[0];\n\n      // remove from list\n      codecs = codecs.filter((codec) => filtered.indexOf(codec) === -1);\n    }\n  });\n\n  level.unknownCodecs = codecs;\n}\n\nfunction assignCodec(media, groupItem, codecProperty) {\n  const codecValue = groupItem[codecProperty];\n  if (codecValue) {\n    media[codecProperty] = codecValue;\n  }\n}\n\nfunction backfillProgramDateTimes(\n  fragments: M3U8ParserFragments,\n  firstPdtIndex: number\n) {\n  let fragPrev = fragments[firstPdtIndex] as Fragment;\n  for (let i = firstPdtIndex; i--; ) {\n    const frag = fragments[i];\n    // Exit on delta-playlist skipped segments\n    if (!frag) {\n      return;\n    }\n    frag.programDateTime =\n      (fragPrev.programDateTime as number) - frag.duration * 1000;\n    fragPrev = frag;\n  }\n}\n\nfunction assignProgramDateTime(frag, prevFrag) {\n  if (frag.rawProgramDateTime) {\n    frag.programDateTime = Date.parse(frag.rawProgramDateTime);\n  } else if (prevFrag?.programDateTime) {\n    frag.programDateTime = prevFrag.endProgramDateTime;\n  }\n\n  if (!Number.isFinite(frag.programDateTime)) {\n    frag.programDateTime = null;\n    frag.rawProgramDateTime = null;\n  }\n}\n\nfunction setInitSegment(\n  frag: Fragment,\n  mapAttrs: AttrList,\n  id: number,\n  levelkeys: { [key: string]: LevelKey } | undefined\n) {\n  frag.relurl = mapAttrs.URI;\n  if (mapAttrs.BYTERANGE) {\n    frag.setByteRange(mapAttrs.BYTERANGE);\n  }\n  frag.level = id;\n  frag.sn = 'initSegment';\n  if (levelkeys) {\n    frag.levelkeys = levelkeys;\n  }\n  frag.initSegment = null;\n}\n\nfunction setFragLevelKeys(\n  frag: Fragment,\n  levelkeys: { [key: string]: LevelKey },\n  level: LevelDetails\n) {\n  frag.levelkeys = levelkeys;\n  const { encryptedFragments } = level;\n  if (\n    (!encryptedFragments.length ||\n      encryptedFragments[encryptedFragments.length - 1].levelkeys !==\n        levelkeys) &&\n    Object.keys(levelkeys).some(\n      (format) => levelkeys![format].isCommonEncryption\n    )\n  ) {\n    encryptedFragments.push(frag);\n  }\n}\n", "/**\n * PlaylistLoader - delegate for media manifest/playlist loading tasks. Takes care of parsing media to internal data-models.\n *\n * Once loaded, dispatches events with parsed data-models of manifest/levels/audio/subtitle tracks.\n *\n * Uses loader(s) set in config to do actual internal loading of resource tasks.\n *\n * @module\n *\n */\n\nimport { Events } from '../events';\nimport { ErrorDetails, ErrorTypes } from '../errors';\nimport { logger } from '../utils/logger';\nimport M3U8Parser from './m3u8-parser';\nimport type { LevelParsed } from '../types/level';\nimport type {\n  Loader,\n  LoaderConfiguration,\n  LoaderContext,\n  LoaderResponse,\n  LoaderStats,\n  PlaylistLoaderContext,\n} from '../types/loader';\nimport { PlaylistContextType, PlaylistLevelType } from '../types/loader';\nimport { LevelDetails } from './level-details';\nimport type Hls from '../hls';\nimport { AttrList } from '../utils/attr-list';\nimport type {\n  ErrorData,\n  LevelLoadingData,\n  ManifestLoadingData,\n  TrackLoadingData,\n} from '../types/events';\nimport { NetworkComponentAPI } from '../types/component-api';\n\nfunction mapContextToLevelType(\n  context: PlaylistLoaderContext\n): PlaylistLevelType {\n  const { type } = context;\n\n  switch (type) {\n    case PlaylistContextType.AUDIO_TRACK:\n      return PlaylistLevelType.AUDIO;\n    case PlaylistContextType.SUBTITLE_TRACK:\n      return PlaylistLevelType.SUBTITLE;\n    default:\n      return PlaylistLevelType.MAIN;\n  }\n}\n\nfunction getResponseUrl(\n  response: LoaderResponse,\n  context: PlaylistLoaderContext\n): string {\n  let url = response.url;\n  // responseURL not supported on some browsers (it is used to detect URL redirection)\n  // data-uri mode also not supported (but no need to detect redirection)\n  if (url === undefined || url.indexOf('data:') === 0) {\n    // fallback to initial URL\n    url = context.url;\n  }\n  return url;\n}\n\nclass PlaylistLoader implements NetworkComponentAPI {\n  private readonly hls: Hls;\n  private readonly loaders: {\n    [key: string]: Loader<LoaderContext>;\n  } = Object.create(null);\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this.registerListeners();\n  }\n\n  public startLoad(startPosition: number): void {}\n\n  public stopLoad(): void {\n    this.destroyInternalLoaders();\n  }\n\n  private registerListeners() {\n    const { hls } = this;\n    hls.on(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.on(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.on(Events.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this);\n    hls.on(Events.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this);\n  }\n\n  private unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.MANIFEST_LOADING, this.onManifestLoading, this);\n    hls.off(Events.LEVEL_LOADING, this.onLevelLoading, this);\n    hls.off(Events.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this);\n    hls.off(Events.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this);\n  }\n\n  /**\n   * Returns defaults or configured loader-type overloads (pLoader and loader config params)\n   */\n  private createInternalLoader(\n    context: PlaylistLoaderContext\n  ): Loader<LoaderContext> {\n    const config = this.hls.config;\n    const PLoader = config.pLoader;\n    const Loader = config.loader;\n    const InternalLoader = PLoader || Loader;\n\n    const loader = new InternalLoader(config) as Loader<PlaylistLoaderContext>;\n\n    context.loader = loader;\n    this.loaders[context.type] = loader;\n\n    return loader;\n  }\n\n  private getInternalLoader(\n    context: PlaylistLoaderContext\n  ): Loader<LoaderContext> {\n    return this.loaders[context.type];\n  }\n\n  private resetInternalLoader(contextType): void {\n    if (this.loaders[contextType]) {\n      delete this.loaders[contextType];\n    }\n  }\n\n  /**\n   * Call `destroy` on all internal loader instances mapped (one per context type)\n   */\n  private destroyInternalLoaders(): void {\n    for (const contextType in this.loaders) {\n      const loader = this.loaders[contextType];\n      if (loader) {\n        loader.destroy();\n      }\n\n      this.resetInternalLoader(contextType);\n    }\n  }\n\n  public destroy(): void {\n    this.unregisterListeners();\n    this.destroyInternalLoaders();\n  }\n\n  private onManifestLoading(\n    event: Events.MANIFEST_LOADING,\n    data: ManifestLoadingData\n  ) {\n    const { url } = data;\n    this.load({\n      id: null,\n      groupId: null,\n      level: 0,\n      responseType: 'text',\n      type: PlaylistContextType.MANIFEST,\n      url,\n      deliveryDirectives: null,\n    });\n  }\n\n  private onLevelLoading(event: Events.LEVEL_LOADING, data: LevelLoadingData) {\n    const { id, level, url, deliveryDirectives } = data;\n    this.load({\n      id,\n      groupId: null,\n      level,\n      responseType: 'text',\n      type: PlaylistContextType.LEVEL,\n      url,\n      deliveryDirectives,\n    });\n  }\n\n  private onAudioTrackLoading(\n    event: Events.AUDIO_TRACK_LOADING,\n    data: TrackLoadingData\n  ) {\n    const { id, groupId, url, deliveryDirectives } = data;\n    this.load({\n      id,\n      groupId,\n      level: null,\n      responseType: 'text',\n      type: PlaylistContextType.AUDIO_TRACK,\n      url,\n      deliveryDirectives,\n    });\n  }\n\n  private onSubtitleTrackLoading(\n    event: Events.SUBTITLE_TRACK_LOADING,\n    data: TrackLoadingData\n  ) {\n    const { id, groupId, url, deliveryDirectives } = data;\n    this.load({\n      id,\n      groupId,\n      level: null,\n      responseType: 'text',\n      type: PlaylistContextType.SUBTITLE_TRACK,\n      url,\n      deliveryDirectives,\n    });\n  }\n\n  private load(context: PlaylistLoaderContext): void {\n    const config = this.hls.config;\n\n    // logger.debug(`[playlist-loader]: Loading playlist of type ${context.type}, level: ${context.level}, id: ${context.id}`);\n\n    // Check if a loader for this context already exists\n    let loader = this.getInternalLoader(context);\n    if (loader) {\n      const loaderContext = loader.context;\n      if (loaderContext && loaderContext.url === context.url) {\n        // same URL can't overlap\n        logger.trace('[playlist-loader]: playlist request ongoing');\n        return;\n      }\n      logger.log(\n        `[playlist-loader]: aborting previous loader for type: ${context.type}`\n      );\n      loader.abort();\n    }\n\n    let maxRetry;\n    let timeout;\n    let retryDelay;\n    let maxRetryDelay;\n\n    // apply different configs for retries depending on\n    // context (manifest, level, audio/subs playlist)\n    switch (context.type) {\n      case PlaylistContextType.MANIFEST:\n        maxRetry = config.manifestLoadingMaxRetry;\n        timeout = config.manifestLoadingTimeOut;\n        retryDelay = config.manifestLoadingRetryDelay;\n        maxRetryDelay = config.manifestLoadingMaxRetryTimeout;\n        break;\n      case PlaylistContextType.LEVEL:\n      case PlaylistContextType.AUDIO_TRACK:\n      case PlaylistContextType.SUBTITLE_TRACK:\n        // Manage retries in Level/Track Controller\n        maxRetry = 0;\n        timeout = config.levelLoadingTimeOut;\n        break;\n      default:\n        maxRetry = config.levelLoadingMaxRetry;\n        timeout = config.levelLoadingTimeOut;\n        retryDelay = config.levelLoadingRetryDelay;\n        maxRetryDelay = config.levelLoadingMaxRetryTimeout;\n        break;\n    }\n\n    loader = this.createInternalLoader(context);\n\n    // Override level/track timeout for LL-HLS requests\n    // (the default of 10000ms is counter productive to blocking playlist reload requests)\n    if (context.deliveryDirectives?.part) {\n      let levelDetails: LevelDetails | undefined;\n      if (\n        context.type === PlaylistContextType.LEVEL &&\n        context.level !== null\n      ) {\n        levelDetails = this.hls.levels[context.level].details;\n      } else if (\n        context.type === PlaylistContextType.AUDIO_TRACK &&\n        context.id !== null\n      ) {\n        levelDetails = this.hls.audioTracks[context.id].details;\n      } else if (\n        context.type === PlaylistContextType.SUBTITLE_TRACK &&\n        context.id !== null\n      ) {\n        levelDetails = this.hls.subtitleTracks[context.id].details;\n      }\n      if (levelDetails) {\n        const partTarget = levelDetails.partTarget;\n        const targetDuration = levelDetails.targetduration;\n        if (partTarget && targetDuration) {\n          timeout = Math.min(\n            Math.max(partTarget * 3, targetDuration * 0.8) * 1000,\n            timeout\n          );\n        }\n      }\n    }\n\n    const loaderConfig: LoaderConfiguration = {\n      timeout,\n      maxRetry,\n      retryDelay,\n      maxRetryDelay,\n      highWaterMark: 0,\n    };\n\n    const loaderCallbacks = {\n      onSuccess: this.loadsuccess.bind(this),\n      onError: this.loaderror.bind(this),\n      onTimeout: this.loadtimeout.bind(this),\n    };\n\n    // logger.debug(`[playlist-loader]: Calling internal loader delegate for URL: ${context.url}`);\n\n    loader.load(context, loaderConfig, loaderCallbacks);\n  }\n\n  private loadsuccess(\n    response: LoaderResponse,\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any = null\n  ): void {\n    this.resetInternalLoader(context.type);\n\n    const string = response.data as string;\n\n    // Validate if it is an M3U8 at all\n    if (string.indexOf('#EXTM3U') !== 0) {\n      this.handleManifestParsingError(\n        response,\n        context,\n        'no EXTM3U delimiter',\n        networkDetails\n      );\n      return;\n    }\n\n    stats.parsing.start = performance.now();\n    // Check if chunk-list or master. handle empty chunk list case (first EXTINF not signaled, but TARGETDURATION present)\n    if (\n      string.indexOf('#EXTINF:') > 0 ||\n      string.indexOf('#EXT-X-TARGETDURATION:') > 0\n    ) {\n      this.handleTrackOrLevelPlaylist(response, stats, context, networkDetails);\n    } else {\n      this.handleMasterPlaylist(response, stats, context, networkDetails);\n    }\n  }\n\n  private loaderror(\n    response: LoaderResponse,\n    context: PlaylistLoaderContext,\n    networkDetails: any = null\n  ): void {\n    this.handleNetworkError(context, networkDetails, false, response);\n  }\n\n  private loadtimeout(\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any = null\n  ): void {\n    this.handleNetworkError(context, networkDetails, true);\n  }\n\n  private handleMasterPlaylist(\n    response: LoaderResponse,\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any\n  ): void {\n    const hls = this.hls;\n    const string = response.data as string;\n\n    const url = getResponseUrl(response, context);\n\n    const { levels, sessionData, sessionKeys } = M3U8Parser.parseMasterPlaylist(\n      string,\n      url\n    );\n    if (!levels.length) {\n      this.handleManifestParsingError(\n        response,\n        context,\n        'no level found in manifest',\n        networkDetails\n      );\n      return;\n    }\n\n    // multi level playlist, parse level info\n    const audioGroups = levels.map((level: LevelParsed) => ({\n      id: level.attrs.AUDIO,\n      audioCodec: level.audioCodec,\n    }));\n\n    const subtitleGroups = levels.map((level: LevelParsed) => ({\n      id: level.attrs.SUBTITLES,\n      textCodec: level.textCodec,\n    }));\n\n    const audioTracks = M3U8Parser.parseMasterPlaylistMedia(\n      string,\n      url,\n      'AUDIO',\n      audioGroups\n    );\n    const subtitles = M3U8Parser.parseMasterPlaylistMedia(\n      string,\n      url,\n      'SUBTITLES',\n      subtitleGroups\n    );\n    const captions = M3U8Parser.parseMasterPlaylistMedia(\n      string,\n      url,\n      'CLOSED-CAPTIONS'\n    );\n\n    if (audioTracks.length) {\n      // check if we have found an audio track embedded in main playlist (audio track without URI attribute)\n      const embeddedAudioFound: boolean = audioTracks.some(\n        (audioTrack) => !audioTrack.url\n      );\n\n      // if no embedded audio track defined, but audio codec signaled in quality level,\n      // we need to signal this main audio track this could happen with playlists with\n      // alt audio rendition in which quality levels (main)\n      // contains both audio+video. but with mixed audio track not signaled\n      if (\n        !embeddedAudioFound &&\n        levels[0].audioCodec &&\n        !levels[0].attrs.AUDIO\n      ) {\n        logger.log(\n          '[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one'\n        );\n        audioTracks.unshift({\n          type: 'main',\n          name: 'main',\n          default: false,\n          autoselect: false,\n          forced: false,\n          id: -1,\n          attrs: new AttrList({}),\n          bitrate: 0,\n          url: '',\n        });\n      }\n    }\n\n    hls.trigger(Events.MANIFEST_LOADED, {\n      levels,\n      audioTracks,\n      subtitles,\n      captions,\n      url,\n      stats,\n      networkDetails,\n      sessionData,\n      sessionKeys,\n    });\n  }\n\n  private handleTrackOrLevelPlaylist(\n    response: LoaderResponse,\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any\n  ): void {\n    const hls = this.hls;\n    const { id, level, type } = context;\n\n    const url = getResponseUrl(response, context);\n    const levelUrlId = Number.isFinite(id as number) ? id : 0;\n    const levelId = Number.isFinite(level as number) ? level : levelUrlId;\n    const levelType = mapContextToLevelType(context);\n    const levelDetails: LevelDetails = M3U8Parser.parseLevelPlaylist(\n      response.data as string,\n      url,\n      levelId!,\n      levelType,\n      levelUrlId!\n    );\n\n    if (!levelDetails.fragments.length) {\n      hls.trigger(Events.ERROR, {\n        type: ErrorTypes.NETWORK_ERROR,\n        details: ErrorDetails.LEVEL_EMPTY_ERROR,\n        fatal: false,\n        url: url,\n        reason: 'no fragments found in level',\n        level: typeof context.level === 'number' ? context.level : undefined,\n      });\n      return;\n    }\n\n    // We have done our first request (Manifest-type) and receive\n    // not a master playlist but a chunk-list (track/level)\n    // We fire the manifest-loaded event anyway with the parsed level-details\n    // by creating a single-level structure for it.\n    if (type === PlaylistContextType.MANIFEST) {\n      const singleLevel: LevelParsed = {\n        attrs: new AttrList({}),\n        bitrate: 0,\n        details: levelDetails,\n        name: '',\n        url,\n      };\n\n      hls.trigger(Events.MANIFEST_LOADED, {\n        levels: [singleLevel],\n        audioTracks: [],\n        url,\n        stats,\n        networkDetails,\n        sessionData: null,\n        sessionKeys: null,\n      });\n    }\n\n    // save parsing time\n    stats.parsing.end = performance.now();\n\n    // extend the context with the new levelDetails property\n    context.levelDetails = levelDetails;\n\n    this.handlePlaylistLoaded(response, stats, context, networkDetails);\n  }\n\n  private handleManifestParsingError(\n    response: LoaderResponse,\n    context: PlaylistLoaderContext,\n    reason: string,\n    networkDetails: any\n  ): void {\n    this.hls.trigger(Events.ERROR, {\n      type: ErrorTypes.NETWORK_ERROR,\n      details: ErrorDetails.MANIFEST_PARSING_ERROR,\n      fatal: context.type === PlaylistContextType.MANIFEST,\n      url: response.url,\n      reason,\n      response,\n      context,\n      networkDetails,\n    });\n  }\n\n  private handleNetworkError(\n    context: PlaylistLoaderContext,\n    networkDetails: any,\n    timeout = false,\n    response?: LoaderResponse\n  ): void {\n    logger.warn(\n      `[playlist-loader]: A network ${\n        timeout ? 'timeout' : 'error'\n      } occurred while loading ${context.type} level: ${context.level} id: ${\n        context.id\n      } group-id: \"${context.groupId}\"`\n    );\n    let details = ErrorDetails.UNKNOWN;\n    let fatal = false;\n\n    const loader = this.getInternalLoader(context);\n\n    switch (context.type) {\n      case PlaylistContextType.MANIFEST:\n        details = timeout\n          ? ErrorDetails.MANIFEST_LOAD_TIMEOUT\n          : ErrorDetails.MANIFEST_LOAD_ERROR;\n        fatal = true;\n        break;\n      case PlaylistContextType.LEVEL:\n        details = timeout\n          ? ErrorDetails.LEVEL_LOAD_TIMEOUT\n          : ErrorDetails.LEVEL_LOAD_ERROR;\n        fatal = false;\n        break;\n      case PlaylistContextType.AUDIO_TRACK:\n        details = timeout\n          ? ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT\n          : ErrorDetails.AUDIO_TRACK_LOAD_ERROR;\n        fatal = false;\n        break;\n      case PlaylistContextType.SUBTITLE_TRACK:\n        details = timeout\n          ? ErrorDetails.SUBTITLE_TRACK_LOAD_TIMEOUT\n          : ErrorDetails.SUBTITLE_LOAD_ERROR;\n        fatal = false;\n        break;\n    }\n\n    if (loader) {\n      this.resetInternalLoader(context.type);\n    }\n\n    const errorData: ErrorData = {\n      type: ErrorTypes.NETWORK_ERROR,\n      details,\n      fatal,\n      url: context.url,\n      loader,\n      context,\n      networkDetails,\n    };\n\n    if (response) {\n      errorData.response = response;\n    }\n\n    this.hls.trigger(Events.ERROR, errorData);\n  }\n\n  private handlePlaylistLoaded(\n    response: LoaderResponse,\n    stats: LoaderStats,\n    context: PlaylistLoaderContext,\n    networkDetails: any\n  ): void {\n    const {\n      type,\n      level,\n      id,\n      groupId,\n      loader,\n      levelDetails,\n      deliveryDirectives,\n    } = context;\n\n    if (!levelDetails?.targetduration) {\n      this.handleManifestParsingError(\n        response,\n        context,\n        'invalid target duration',\n        networkDetails\n      );\n      return;\n    }\n    if (!loader) {\n      return;\n    }\n\n    if (levelDetails.live) {\n      if (loader.getCacheAge) {\n        levelDetails.ageHeader = loader.getCacheAge() || 0;\n      }\n      if (!loader.getCacheAge || isNaN(levelDetails.ageHeader)) {\n        levelDetails.ageHeader = 0;\n      }\n    }\n\n    switch (type) {\n      case PlaylistContextType.MANIFEST:\n      case PlaylistContextType.LEVEL:\n        this.hls.trigger(Events.LEVEL_LOADED, {\n          details: levelDetails,\n          level: level || 0,\n          id: id || 0,\n          stats,\n          networkDetails,\n          deliveryDirectives,\n        });\n        break;\n      case PlaylistContextType.AUDIO_TRACK:\n        this.hls.trigger(Events.AUDIO_TRACK_LOADED, {\n          details: levelDetails,\n          id: id || 0,\n          groupId: groupId || '',\n          stats,\n          networkDetails,\n          deliveryDirectives,\n        });\n        break;\n      case PlaylistContextType.SUBTITLE_TRACK:\n        this.hls.trigger(Events.SUBTITLE_TRACK_LOADED, {\n          details: levelDetails,\n          id: id || 0,\n          groupId: groupId || '',\n          stats,\n          networkDetails,\n          deliveryDirectives,\n        });\n        break;\n    }\n  }\n}\n\nexport default PlaylistLoader;\n", "export const isFiniteNumber =\n  Number.isFinite ||\n  function (value) {\n    return typeof value === 'number' && isFinite(value);\n  };\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n", "/**\n *  AAC helper\n */\n\nclass AAC {\n  static getSilentFrame(\n    codec?: string,\n    channelCount?: number\n  ): Uint8Array | undefined {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80,\n          ]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e,\n          ]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38,\n          ]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38,\n          ]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0,\n          ]);\n        }\n\n        break;\n      // handle HE-AAC below (mp4a.40.5 / mp4a.40.29)\n      default:\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e,\n          ]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e,\n          ]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e,\n          ]);\n        }\n        break;\n    }\n    return undefined;\n  }\n}\n\nexport default AAC;\n", "/**\n * Generate MP4 Box\n */\n\ntype HdlrTypes = {\n  video: Uint8Array;\n  audio: Uint8Array;\n};\n\nconst UINT32_MAX = Math.pow(2, 32) - 1;\n\nclass MP4 {\n  public static types: Record<string, number[]>;\n  private static HDLR_TYPES: HdlrTypes;\n  private static STTS: Uint8Array;\n  private static STSC: Uint8Array;\n  private static STCO: Uint8Array;\n  private static STSZ: Uint8Array;\n  private static VMHD: Uint8Array;\n  private static SMHD: Uint8Array;\n  private static STSD: Uint8Array;\n  private static FTYP: Uint8Array;\n  private static DINF: Uint8Array;\n\n  static init() {\n    MP4.types = {\n      avc1: [], // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      '.mp3': [],\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: [],\n      smhd: [],\n    };\n\n    let i: string;\n    for (i in MP4.types) {\n      if (MP4.types.hasOwnProperty(i)) {\n        MP4.types[i] = [\n          i.charCodeAt(0),\n          i.charCodeAt(1),\n          i.charCodeAt(2),\n          i.charCodeAt(3),\n        ];\n      }\n    }\n\n    const videoHdlr = new Uint8Array([\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00, // pre_defined\n      0x76,\n      0x69,\n      0x64,\n      0x65, // handler_type: 'vide'\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x56,\n      0x69,\n      0x64,\n      0x65,\n      0x6f,\n      0x48,\n      0x61,\n      0x6e,\n      0x64,\n      0x6c,\n      0x65,\n      0x72,\n      0x00, // name: 'VideoHandler'\n    ]);\n\n    const audioHdlr = new Uint8Array([\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00, // pre_defined\n      0x73,\n      0x6f,\n      0x75,\n      0x6e, // handler_type: 'soun'\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x53,\n      0x6f,\n      0x75,\n      0x6e,\n      0x64,\n      0x48,\n      0x61,\n      0x6e,\n      0x64,\n      0x6c,\n      0x65,\n      0x72,\n      0x00, // name: 'SoundHandler'\n    ]);\n\n    MP4.HDLR_TYPES = {\n      video: videoHdlr,\n      audio: audioHdlr,\n    };\n\n    const dref = new Uint8Array([\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x01, // entry_count\n      0x00,\n      0x00,\n      0x00,\n      0x0c, // entry_size\n      0x75,\n      0x72,\n      0x6c,\n      0x20, // 'url' type\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x01, // entry_flags\n    ]);\n\n    const stco = new Uint8Array([\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00, // entry_count\n    ]);\n\n    MP4.STTS = MP4.STSC = MP4.STCO = stco;\n\n    MP4.STSZ = new Uint8Array([\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00, // sample_size\n      0x00,\n      0x00,\n      0x00,\n      0x00, // sample_count\n    ]);\n    MP4.VMHD = new Uint8Array([\n      0x00, // version\n      0x00,\n      0x00,\n      0x01, // flags\n      0x00,\n      0x00, // graphicsmode\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00, // opcolor\n    ]);\n    MP4.SMHD = new Uint8Array([\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00, // balance\n      0x00,\n      0x00, // reserved\n    ]);\n\n    MP4.STSD = new Uint8Array([\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x01,\n    ]); // entry_count\n\n    const majorBrand = new Uint8Array([105, 115, 111, 109]); // isom\n    const avc1Brand = new Uint8Array([97, 118, 99, 49]); // avc1\n    const minorVersion = new Uint8Array([0, 0, 0, 1]);\n\n    MP4.FTYP = MP4.box(\n      MP4.types.ftyp,\n      majorBrand,\n      minorVersion,\n      majorBrand,\n      avc1Brand\n    );\n    MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\n  }\n\n  static box(type, ...payload: Uint8Array[]) {\n    let size = 8;\n    let i = payload.length;\n    const len = i;\n    // calculate the total size we need to allocate\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n\n    const result = new Uint8Array(size);\n    result[0] = (size >> 24) & 0xff;\n    result[1] = (size >> 16) & 0xff;\n    result[2] = (size >> 8) & 0xff;\n    result[3] = size & 0xff;\n    result.set(type, 4);\n    // copy the payload into the result\n    for (i = 0, size = 8; i < len; i++) {\n      // copy payload[i] array @ offset size\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  }\n\n  static hdlr(type) {\n    return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\n  }\n\n  static mdat(data) {\n    return MP4.box(MP4.types.mdat, data);\n  }\n\n  static mdhd(timescale, duration) {\n    duration *= timescale;\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));\n    return MP4.box(\n      MP4.types.mdhd,\n      new Uint8Array([\n        0x01, // version 1\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x02, // creation_time\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x03, // modification_time\n        (timescale >> 24) & 0xff,\n        (timescale >> 16) & 0xff,\n        (timescale >> 8) & 0xff,\n        timescale & 0xff, // timescale\n        upperWordDuration >> 24,\n        (upperWordDuration >> 16) & 0xff,\n        (upperWordDuration >> 8) & 0xff,\n        upperWordDuration & 0xff,\n        lowerWordDuration >> 24,\n        (lowerWordDuration >> 16) & 0xff,\n        (lowerWordDuration >> 8) & 0xff,\n        lowerWordDuration & 0xff,\n        0x55,\n        0xc4, // 'und' language (undetermined)\n        0x00,\n        0x00,\n      ])\n    );\n  }\n\n  static mdia(track) {\n    return MP4.box(\n      MP4.types.mdia,\n      MP4.mdhd(track.timescale, track.duration),\n      MP4.hdlr(track.type),\n      MP4.minf(track)\n    );\n  }\n\n  static mfhd(sequenceNumber) {\n    return MP4.box(\n      MP4.types.mfhd,\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00,\n        0x00, // flags\n        sequenceNumber >> 24,\n        (sequenceNumber >> 16) & 0xff,\n        (sequenceNumber >> 8) & 0xff,\n        sequenceNumber & 0xff, // sequence_number\n      ])\n    );\n  }\n\n  static minf(track) {\n    if (track.type === 'audio') {\n      return MP4.box(\n        MP4.types.minf,\n        MP4.box(MP4.types.smhd, MP4.SMHD),\n        MP4.DINF,\n        MP4.stbl(track)\n      );\n    } else {\n      return MP4.box(\n        MP4.types.minf,\n        MP4.box(MP4.types.vmhd, MP4.VMHD),\n        MP4.DINF,\n        MP4.stbl(track)\n      );\n    }\n  }\n\n  static moof(sn, baseMediaDecodeTime, track) {\n    return MP4.box(\n      MP4.types.moof,\n      MP4.mfhd(sn),\n      MP4.traf(track, baseMediaDecodeTime)\n    );\n  }\n\n  /**\n   * @param tracks... (optional) {array} the tracks associated with this movie\n   */\n  static moov(tracks) {\n    let i = tracks.length;\n    const boxes: Uint8Array[] = [];\n\n    while (i--) {\n      boxes[i] = MP4.trak(tracks[i]);\n    }\n\n    return MP4.box.apply(\n      null,\n      [MP4.types.moov, MP4.mvhd(tracks[0].timescale, tracks[0].duration)]\n        .concat(boxes)\n        .concat(MP4.mvex(tracks))\n    );\n  }\n\n  static mvex(tracks) {\n    let i = tracks.length;\n    const boxes: Uint8Array[] = [];\n\n    while (i--) {\n      boxes[i] = MP4.trex(tracks[i]);\n    }\n\n    return MP4.box.apply(null, [MP4.types.mvex, ...boxes]);\n  }\n\n  static mvhd(timescale, duration) {\n    duration *= timescale;\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));\n    const bytes = new Uint8Array([\n      0x01, // version 1\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x02, // creation_time\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x03, // modification_time\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      upperWordDuration >> 24,\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      lowerWordDuration >> 24,\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x00,\n      0x01,\n      0x00,\n      0x00, // 1.0 rate\n      0x01,\n      0x00, // 1.0 volume\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x01,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x01,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x40,\n      0x00,\n      0x00,\n      0x00, // transformation: unity matrix\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00, // pre_defined\n      0xff,\n      0xff,\n      0xff,\n      0xff, // next_track_ID\n    ]);\n    return MP4.box(MP4.types.mvhd, bytes);\n  }\n\n  static sdtp(track) {\n    const samples = track.samples || [];\n    const bytes = new Uint8Array(4 + samples.length);\n    let i;\n    let flags;\n    // leave the full box header (4 bytes) all zero\n    // write the sample table\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] =\n        (flags.dependsOn << 4) |\n        (flags.isDependedOn << 2) |\n        flags.hasRedundancy;\n    }\n\n    return MP4.box(MP4.types.sdtp, bytes);\n  }\n\n  static stbl(track) {\n    return MP4.box(\n      MP4.types.stbl,\n      MP4.stsd(track),\n      MP4.box(MP4.types.stts, MP4.STTS),\n      MP4.box(MP4.types.stsc, MP4.STSC),\n      MP4.box(MP4.types.stsz, MP4.STSZ),\n      MP4.box(MP4.types.stco, MP4.STCO)\n    );\n  }\n\n  static avc1(track) {\n    let sps: number[] = [];\n    let pps: number[] = [];\n    let i;\n    let data;\n    let len;\n    // assemble the SPSs\n\n    for (i = 0; i < track.sps.length; i++) {\n      data = track.sps[i];\n      len = data.byteLength;\n      sps.push((len >>> 8) & 0xff);\n      sps.push(len & 0xff);\n\n      // SPS\n      sps = sps.concat(Array.prototype.slice.call(data));\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < track.pps.length; i++) {\n      data = track.pps[i];\n      len = data.byteLength;\n      pps.push((len >>> 8) & 0xff);\n      pps.push(len & 0xff);\n\n      pps = pps.concat(Array.prototype.slice.call(data));\n    }\n\n    const avcc = MP4.box(\n      MP4.types.avcC,\n      new Uint8Array(\n        [\n          0x01, // version\n          sps[3], // profile\n          sps[4], // profile compat\n          sps[5], // level\n          0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n          0xe0 | track.sps.length, // 3bit reserved (111) + numOfSequenceParameterSets\n        ]\n          .concat(sps)\n          .concat([\n            track.pps.length, // numOfPictureParameterSets\n          ])\n          .concat(pps)\n      )\n    ); // \"PPS\"\n    const width = track.width;\n    const height = track.height;\n    const hSpacing = track.pixelRatio[0];\n    const vSpacing = track.pixelRatio[1];\n\n    return MP4.box(\n      MP4.types.avc1,\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01, // data_reference_index\n        0x00,\n        0x00, // pre_defined\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // pre_defined\n        (width >> 8) & 0xff,\n        width & 0xff, // width\n        (height >> 8) & 0xff,\n        height & 0xff, // height\n        0x00,\n        0x48,\n        0x00,\n        0x00, // horizresolution\n        0x00,\n        0x48,\n        0x00,\n        0x00, // vertresolution\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01, // frame_count\n        0x12,\n        0x64,\n        0x61,\n        0x69,\n        0x6c, // dailymotion/hls.js\n        0x79,\n        0x6d,\n        0x6f,\n        0x74,\n        0x69,\n        0x6f,\n        0x6e,\n        0x2f,\n        0x68,\n        0x6c,\n        0x73,\n        0x2e,\n        0x6a,\n        0x73,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // compressorname\n        0x00,\n        0x18, // depth = 24\n        0x11,\n        0x11,\n      ]), // pre_defined = -1\n      avcc,\n      MP4.box(\n        MP4.types.btrt,\n        new Uint8Array([\n          0x00,\n          0x1c,\n          0x9c,\n          0x80, // bufferSizeDB\n          0x00,\n          0x2d,\n          0xc6,\n          0xc0, // maxBitrate\n          0x00,\n          0x2d,\n          0xc6,\n          0xc0,\n        ])\n      ), // avgBitrate\n      MP4.box(\n        MP4.types.pasp,\n        new Uint8Array([\n          hSpacing >> 24, // hSpacing\n          (hSpacing >> 16) & 0xff,\n          (hSpacing >> 8) & 0xff,\n          hSpacing & 0xff,\n          vSpacing >> 24, // vSpacing\n          (vSpacing >> 16) & 0xff,\n          (vSpacing >> 8) & 0xff,\n          vSpacing & 0xff,\n        ])\n      )\n    );\n  }\n\n  static esds(track) {\n    const configlen = track.config.length;\n    return new Uint8Array(\n      [\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n\n        0x03, // descriptor_type\n        0x17 + configlen, // length\n        0x00,\n        0x01, // es_id\n        0x00, // stream_priority\n\n        0x04, // descriptor_type\n        0x0f + configlen, // length\n        0x40, // codec : mpeg4_audio\n        0x15, // stream_type\n        0x00,\n        0x00,\n        0x00, // buffer_size\n        0x00,\n        0x00,\n        0x00,\n        0x00, // maxBitrate\n        0x00,\n        0x00,\n        0x00,\n        0x00, // avgBitrate\n\n        0x05, // descriptor_type\n      ]\n        .concat([configlen])\n        .concat(track.config)\n        .concat([0x06, 0x01, 0x02])\n    ); // GASpecificConfig)); // length + audio config descriptor\n  }\n\n  static mp4a(track) {\n    const samplerate = track.samplerate;\n    return MP4.box(\n      MP4.types.mp4a,\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01, // data_reference_index\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        track.channelCount, // channelcount\n        0x00,\n        0x10, // sampleSize:16bits\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved2\n        (samplerate >> 8) & 0xff,\n        samplerate & 0xff, //\n        0x00,\n        0x00,\n      ]),\n      MP4.box(MP4.types.esds, MP4.esds(track))\n    );\n  }\n\n  static mp3(track) {\n    const samplerate = track.samplerate;\n    return MP4.box(\n      MP4.types['.mp3'],\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01, // data_reference_index\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        track.channelCount, // channelcount\n        0x00,\n        0x10, // sampleSize:16bits\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved2\n        (samplerate >> 8) & 0xff,\n        samplerate & 0xff, //\n        0x00,\n        0x00,\n      ])\n    );\n  }\n\n  static stsd(track) {\n    if (track.type === 'audio') {\n      if (track.segmentCodec === 'mp3' && track.codec === 'mp3') {\n        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp3(track));\n      }\n\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));\n    } else {\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));\n    }\n  }\n\n  static tkhd(track) {\n    const id = track.id;\n    const duration = track.duration * track.timescale;\n    const width = track.width;\n    const height = track.height;\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));\n    return MP4.box(\n      MP4.types.tkhd,\n      new Uint8Array([\n        0x01, // version 1\n        0x00,\n        0x00,\n        0x07, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x02, // creation_time\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x03, // modification_time\n        (id >> 24) & 0xff,\n        (id >> 16) & 0xff,\n        (id >> 8) & 0xff,\n        id & 0xff, // track_ID\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        upperWordDuration >> 24,\n        (upperWordDuration >> 16) & 0xff,\n        (upperWordDuration >> 8) & 0xff,\n        upperWordDuration & 0xff,\n        lowerWordDuration >> 24,\n        (lowerWordDuration >> 16) & 0xff,\n        (lowerWordDuration >> 8) & 0xff,\n        lowerWordDuration & 0xff,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00, // layer\n        0x00,\n        0x00, // alternate_group\n        0x00,\n        0x00, // non-audio track volume\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x40,\n        0x00,\n        0x00,\n        0x00, // transformation: unity matrix\n        (width >> 8) & 0xff,\n        width & 0xff,\n        0x00,\n        0x00, // width\n        (height >> 8) & 0xff,\n        height & 0xff,\n        0x00,\n        0x00, // height\n      ])\n    );\n  }\n\n  static traf(track, baseMediaDecodeTime) {\n    const sampleDependencyTable = MP4.sdtp(track);\n    const id = track.id;\n    const upperWordBaseMediaDecodeTime = Math.floor(\n      baseMediaDecodeTime / (UINT32_MAX + 1)\n    );\n    const lowerWordBaseMediaDecodeTime = Math.floor(\n      baseMediaDecodeTime % (UINT32_MAX + 1)\n    );\n    return MP4.box(\n      MP4.types.traf,\n      MP4.box(\n        MP4.types.tfhd,\n        new Uint8Array([\n          0x00, // version 0\n          0x00,\n          0x00,\n          0x00, // flags\n          id >> 24,\n          (id >> 16) & 0xff,\n          (id >> 8) & 0xff,\n          id & 0xff, // track_ID\n        ])\n      ),\n      MP4.box(\n        MP4.types.tfdt,\n        new Uint8Array([\n          0x01, // version 1\n          0x00,\n          0x00,\n          0x00, // flags\n          upperWordBaseMediaDecodeTime >> 24,\n          (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n          (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n          upperWordBaseMediaDecodeTime & 0xff,\n          lowerWordBaseMediaDecodeTime >> 24,\n          (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n          (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n          lowerWordBaseMediaDecodeTime & 0xff,\n        ])\n      ),\n      MP4.trun(\n        track,\n        sampleDependencyTable.length +\n          16 + // tfhd\n          20 + // tfdt\n          8 + // traf header\n          16 + // mfhd\n          8 + // moof header\n          8\n      ), // mdat header\n      sampleDependencyTable\n    );\n  }\n\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n  static trak(track) {\n    track.duration = track.duration || 0xffffffff;\n    return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));\n  }\n\n  static trex(track) {\n    const id = track.id;\n    return MP4.box(\n      MP4.types.trex,\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        id >> 24,\n        (id >> 16) & 0xff,\n        (id >> 8) & 0xff,\n        id & 0xff, // track_ID\n        0x00,\n        0x00,\n        0x00,\n        0x01, // default_sample_description_index\n        0x00,\n        0x00,\n        0x00,\n        0x00, // default_sample_duration\n        0x00,\n        0x00,\n        0x00,\n        0x00, // default_sample_size\n        0x00,\n        0x01,\n        0x00,\n        0x01, // default_sample_flags\n      ])\n    );\n  }\n\n  static trun(track, offset) {\n    const samples = track.samples || [];\n    const len = samples.length;\n    const arraylen = 12 + 16 * len;\n    const array = new Uint8Array(arraylen);\n    let i;\n    let sample;\n    let duration;\n    let size;\n    let flags;\n    let cts;\n    offset += 8 + arraylen;\n    array.set(\n      [\n        track.type === 'video' ? 0x01 : 0x00, // version 1 for video with signed-int sample_composition_time_offset\n        0x00,\n        0x0f,\n        0x01, // flags\n        (len >>> 24) & 0xff,\n        (len >>> 16) & 0xff,\n        (len >>> 8) & 0xff,\n        len & 0xff, // sample_count\n        (offset >>> 24) & 0xff,\n        (offset >>> 16) & 0xff,\n        (offset >>> 8) & 0xff,\n        offset & 0xff, // data_offset\n      ],\n      0\n    );\n    for (i = 0; i < len; i++) {\n      sample = samples[i];\n      duration = sample.duration;\n      size = sample.size;\n      flags = sample.flags;\n      cts = sample.cts;\n      array.set(\n        [\n          (duration >>> 24) & 0xff,\n          (duration >>> 16) & 0xff,\n          (duration >>> 8) & 0xff,\n          duration & 0xff, // sample_duration\n          (size >>> 24) & 0xff,\n          (size >>> 16) & 0xff,\n          (size >>> 8) & 0xff,\n          size & 0xff, // sample_size\n          (flags.isLeading << 2) | flags.dependsOn,\n          (flags.isDependedOn << 6) |\n            (flags.hasRedundancy << 4) |\n            (flags.paddingValue << 1) |\n            flags.isNonSync,\n          flags.degradPrio & (0xf0 << 8),\n          flags.degradPrio & 0x0f, // sample_flags\n          (cts >>> 24) & 0xff,\n          (cts >>> 16) & 0xff,\n          (cts >>> 8) & 0xff,\n          cts & 0xff, // sample_composition_time_offset\n        ],\n        12 + 16 * i\n      );\n    }\n    return MP4.box(MP4.types.trun, array);\n  }\n\n  static initSegment(tracks) {\n    if (!MP4.types) {\n      MP4.init();\n    }\n\n    const movie = MP4.moov(tracks);\n    const result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);\n    result.set(MP4.FTYP);\n    result.set(movie, MP4.FTYP.byteLength);\n    return result;\n  }\n}\n\nexport default MP4;\n", "import AAC from './aac-helper';\nimport MP4 from './mp4-generator';\nimport type { HlsEventEmitter } from '../events';\nimport { Events } from '../events';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport { logger } from '../utils/logger';\nimport {\n  InitSegmentData,\n  Remuxer,\n  RemuxerResult,\n  RemuxedMetadata,\n  RemuxedTrack,\n  RemuxedUserdata,\n} from '../types/remuxer';\nimport { PlaylistLevelType } from '../types/loader';\nimport { toMsFromMpegTsClock } from '../utils/timescale-conversion';\nimport type {\n  AudioSample,\n  AvcSample,\n  DemuxedAudioTrack,\n  DemuxedAvcTrack,\n  DemuxedMetadataTrack,\n  DemuxedUserdataTrack,\n} from '../types/demuxer';\nimport type { TrackSet } from '../types/track';\nimport type { SourceBufferName } from '../types/buffer';\nimport type { Fragment } from '../loader/fragment';\nimport type { HlsConfig } from '../config';\n\nconst MAX_SILENT_FRAME_DURATION = 10 * 1000; // 10 seconds\nconst AAC_SAMPLES_PER_FRAME = 1024;\nconst MPEG_AUDIO_SAMPLE_PER_FRAME = 1152;\n\nlet chromeVersion: number | null = null;\nlet safariWebkitVersion: number | null = null;\n\nexport default class MP4Remuxer implements Remuxer {\n  private observer: HlsEventEmitter;\n  private config: HlsConfig;\n  private typeSupported: any;\n  private ISGenerated: boolean = false;\n  private _initPTS!: number;\n  private _initDTS!: number;\n  private nextAvcDts: number | null = null;\n  private nextAudioPts: number | null = null;\n  private videoSampleDuration: number | null = null;\n  private isAudioContiguous: boolean = false;\n  private isVideoContiguous: boolean = false;\n\n  constructor(\n    observer: HlsEventEmitter,\n    config: HlsConfig,\n    typeSupported,\n    vendor = ''\n  ) {\n    this.observer = observer;\n    this.config = config;\n    this.typeSupported = typeSupported;\n    this.ISGenerated = false;\n\n    if (chromeVersion === null) {\n      const userAgent = navigator.userAgent || '';\n      const result = userAgent.match(/Chrome\\/(\\d+)/i);\n      chromeVersion = result ? parseInt(result[1]) : 0;\n    }\n    if (safariWebkitVersion === null) {\n      const result = navigator.userAgent.match(/Safari\\/(\\d+)/i);\n      safariWebkitVersion = result ? parseInt(result[1]) : 0;\n    }\n  }\n\n  destroy() {}\n\n  resetTimeStamp(defaultTimeStamp) {\n    logger.log('[mp4-remuxer]: initPTS & initDTS reset');\n    this._initPTS = this._initDTS = defaultTimeStamp;\n  }\n\n  resetNextTimestamp() {\n    logger.log('[mp4-remuxer]: reset next timestamp');\n    this.isVideoContiguous = false;\n    this.isAudioContiguous = false;\n  }\n\n  resetInitSegment() {\n    logger.log('[mp4-remuxer]: ISGenerated flag reset');\n    this.ISGenerated = false;\n  }\n\n  getVideoStartPts(videoSamples) {\n    let rolloverDetected = false;\n    const startPTS = videoSamples.reduce((minPTS, sample) => {\n      const delta = sample.pts - minPTS;\n      if (delta < -4294967296) {\n        // 2^32, see PTSNormalize for reasoning, but we're hitting a rollover here, and we don't want that to impact the timeOffset calculation\n        rolloverDetected = true;\n        return normalizePts(minPTS, sample.pts);\n      } else if (delta > 0) {\n        return minPTS;\n      } else {\n        return sample.pts;\n      }\n    }, videoSamples[0].pts);\n    if (rolloverDetected) {\n      logger.debug('PTS rollover detected');\n    }\n    return startPTS;\n  }\n\n  remux(\n    audioTrack: DemuxedAudioTrack,\n    videoTrack: DemuxedAvcTrack,\n    id3Track: DemuxedMetadataTrack,\n    textTrack: DemuxedUserdataTrack,\n    timeOffset: number,\n    accurateTimeOffset: boolean,\n    flush: boolean,\n    playlistType: PlaylistLevelType\n  ): RemuxerResult {\n    let video: RemuxedTrack | undefined;\n    let audio: RemuxedTrack | undefined;\n    let initSegment: InitSegmentData | undefined;\n    let text: RemuxedUserdata | undefined;\n    let id3: RemuxedMetadata | undefined;\n    let independent: boolean | undefined;\n    let audioTimeOffset = timeOffset;\n    let videoTimeOffset = timeOffset;\n\n    // If we're remuxing audio and video progressively, wait until we've received enough samples for each track before proceeding.\n    // This is done to synchronize the audio and video streams. We know if the current segment will have samples if the \"pid\"\n    // parameter is greater than -1. The pid is set when the PMT is parsed, which contains the tracks list.\n    // However, if the initSegment has already been generated, or we've reached the end of a segment (flush),\n    // then we can remux one track without waiting for the other.\n    const hasAudio = audioTrack.pid > -1;\n    const hasVideo = videoTrack.pid > -1;\n    const length = videoTrack.samples.length;\n    const enoughAudioSamples = audioTrack.samples.length > 0;\n    const enoughVideoSamples = (flush && length > 0) || length > 1;\n    const canRemuxAvc =\n      ((!hasAudio || enoughAudioSamples) &&\n        (!hasVideo || enoughVideoSamples)) ||\n      this.ISGenerated ||\n      flush;\n\n    if (canRemuxAvc) {\n      if (!this.ISGenerated) {\n        initSegment = this.generateIS(audioTrack, videoTrack, timeOffset);\n      }\n\n      const isVideoContiguous = this.isVideoContiguous;\n      let firstKeyFrameIndex = -1;\n      let firstKeyFramePTS;\n\n      if (enoughVideoSamples) {\n        firstKeyFrameIndex = findKeyframeIndex(videoTrack.samples);\n        if (!isVideoContiguous && this.config.forceKeyFrameOnDiscontinuity) {\n          independent = true;\n          if (firstKeyFrameIndex > 0) {\n            logger.warn(\n              `[mp4-remuxer]: Dropped ${firstKeyFrameIndex} out of ${length} video samples due to a missing keyframe`\n            );\n            const startPTS = this.getVideoStartPts(videoTrack.samples);\n            videoTrack.samples = videoTrack.samples.slice(firstKeyFrameIndex);\n            videoTrack.dropped += firstKeyFrameIndex;\n            videoTimeOffset +=\n              (videoTrack.samples[0].pts - startPTS) /\n              videoTrack.inputTimeScale;\n            firstKeyFramePTS = videoTimeOffset;\n          } else if (firstKeyFrameIndex === -1) {\n            logger.warn(\n              `[mp4-remuxer]: No keyframe found out of ${length} video samples`\n            );\n            independent = false;\n          }\n        }\n      }\n\n      if (this.ISGenerated) {\n        if (enoughAudioSamples && enoughVideoSamples) {\n          // timeOffset is expected to be the offset of the first timestamp of this fragment (first DTS)\n          // if first audio DTS is not aligned with first video DTS then we need to take that into account\n          // when providing timeOffset to remuxAudio / remuxVideo. if we don't do that, there might be a permanent / small\n          // drift between audio and video streams\n          const startPTS = this.getVideoStartPts(videoTrack.samples);\n          const tsDelta =\n            normalizePts(audioTrack.samples[0].pts, startPTS) - startPTS;\n          const audiovideoTimestampDelta = tsDelta / videoTrack.inputTimeScale;\n          audioTimeOffset += Math.max(0, audiovideoTimestampDelta);\n          videoTimeOffset += Math.max(0, -audiovideoTimestampDelta);\n        }\n\n        // Purposefully remuxing audio before video, so that remuxVideo can use nextAudioPts, which is calculated in remuxAudio.\n        if (enoughAudioSamples) {\n          // if initSegment was generated without audio samples, regenerate it again\n          if (!audioTrack.samplerate) {\n            logger.warn(\n              '[mp4-remuxer]: regenerate InitSegment as audio detected'\n            );\n            initSegment = this.generateIS(audioTrack, videoTrack, timeOffset);\n          }\n          audio = this.remuxAudio(\n            audioTrack,\n            audioTimeOffset,\n            this.isAudioContiguous,\n            accurateTimeOffset,\n            hasVideo ||\n              enoughVideoSamples ||\n              playlistType === PlaylistLevelType.AUDIO\n              ? videoTimeOffset\n              : undefined\n          );\n          if (enoughVideoSamples) {\n            const audioTrackLength = audio ? audio.endPTS - audio.startPTS : 0;\n            // if initSegment was generated without video samples, regenerate it again\n            if (!videoTrack.inputTimeScale) {\n              logger.warn(\n                '[mp4-remuxer]: regenerate InitSegment as video detected'\n              );\n              initSegment = this.generateIS(audioTrack, videoTrack, timeOffset);\n            }\n            video = this.remuxVideo(\n              videoTrack,\n              videoTimeOffset,\n              isVideoContiguous,\n              audioTrackLength\n            );\n          }\n        } else if (enoughVideoSamples) {\n          video = this.remuxVideo(\n            videoTrack,\n            videoTimeOffset,\n            isVideoContiguous,\n            0\n          );\n        }\n        if (video) {\n          video.firstKeyFrame = firstKeyFrameIndex;\n          video.independent = firstKeyFrameIndex !== -1;\n          video.firstKeyFramePTS = firstKeyFramePTS;\n        }\n      }\n    }\n\n    // Allow ID3 and text to remux, even if more audio/video samples are required\n    if (this.ISGenerated) {\n      if (id3Track.samples.length) {\n        id3 = flushTextTrackMetadataCueSamples(\n          id3Track,\n          timeOffset,\n          this._initPTS,\n          this._initDTS\n        );\n      }\n\n      if (textTrack.samples.length) {\n        text = flushTextTrackUserdataCueSamples(\n          textTrack,\n          timeOffset,\n          this._initPTS\n        );\n      }\n    }\n\n    return {\n      audio,\n      video,\n      initSegment,\n      independent,\n      text,\n      id3,\n    };\n  }\n\n  generateIS(\n    audioTrack: DemuxedAudioTrack,\n    videoTrack: DemuxedAvcTrack,\n    timeOffset\n  ): InitSegmentData | undefined {\n    const audioSamples = audioTrack.samples;\n    const videoSamples = videoTrack.samples;\n    const typeSupported = this.typeSupported;\n    const tracks: TrackSet = {};\n    const computePTSDTS = !Number.isFinite(this._initPTS);\n    let container = 'audio/mp4';\n    let initPTS: number | undefined;\n    let initDTS: number | undefined;\n    let timescale: number | undefined;\n\n    if (computePTSDTS) {\n      initPTS = initDTS = Infinity;\n    }\n\n    if (audioTrack.config && audioSamples.length) {\n      // let's use audio sampling rate as MP4 time scale.\n      // rationale is that there is a integer nb of audio frames per audio sample (1024 for AAC)\n      // using audio sampling rate here helps having an integer MP4 frame duration\n      // this avoids potential rounding issue and AV sync issue\n      audioTrack.timescale = audioTrack.samplerate;\n      switch (audioTrack.segmentCodec) {\n        case 'mp3':\n          if (typeSupported.mpeg) {\n            // Chrome and Safari\n            container = 'audio/mpeg';\n            audioTrack.codec = '';\n          } else if (typeSupported.mp3) {\n            // Firefox\n            audioTrack.codec = 'mp3';\n          }\n          break;\n      }\n      tracks.audio = {\n        id: 'audio',\n        container: container,\n        codec: audioTrack.codec,\n        initSegment:\n          audioTrack.segmentCodec === 'mp3' && typeSupported.mpeg\n            ? new Uint8Array(0)\n            : MP4.initSegment([audioTrack]),\n        metadata: {\n          channelCount: audioTrack.channelCount,\n        },\n      };\n      if (computePTSDTS) {\n        timescale = audioTrack.inputTimeScale;\n        // remember first PTS of this demuxing context. for audio, PTS = DTS\n        initPTS = initDTS =\n          audioSamples[0].pts - Math.round(timescale * timeOffset);\n      }\n    }\n\n    if (videoTrack.sps && videoTrack.pps && videoSamples.length) {\n      // let's use input time scale as MP4 video timescale\n      // we use input time scale straight away to avoid rounding issues on frame duration / cts computation\n      videoTrack.timescale = videoTrack.inputTimeScale;\n      tracks.video = {\n        id: 'main',\n        container: 'video/mp4',\n        codec: videoTrack.codec,\n        initSegment: MP4.initSegment([videoTrack]),\n        metadata: {\n          width: videoTrack.width,\n          height: videoTrack.height,\n        },\n      };\n      if (computePTSDTS) {\n        timescale = videoTrack.inputTimeScale;\n        const startPTS = this.getVideoStartPts(videoSamples);\n        const startOffset = Math.round(timescale * timeOffset);\n        initDTS = Math.min(\n          initDTS as number,\n          normalizePts(videoSamples[0].dts, startPTS) - startOffset\n        );\n        initPTS = Math.min(initPTS as number, startPTS - startOffset);\n      }\n    }\n\n    if (Object.keys(tracks).length) {\n      this.ISGenerated = true;\n      if (computePTSDTS) {\n        this._initPTS = initPTS as number;\n        this._initDTS = initDTS as number;\n      }\n\n      return {\n        tracks,\n        initPTS,\n        timescale,\n      };\n    }\n  }\n\n  remuxVideo(\n    track: DemuxedAvcTrack,\n    timeOffset: number,\n    contiguous: boolean,\n    audioTrackLength: number\n  ): RemuxedTrack | undefined {\n    const timeScale: number = track.inputTimeScale;\n    const inputSamples: Array<AvcSample> = track.samples;\n    const outputSamples: Array<Mp4Sample> = [];\n    const nbSamples: number = inputSamples.length;\n    const initPTS: number = this._initPTS;\n    let nextAvcDts = this.nextAvcDts;\n    let offset = 8;\n    let mp4SampleDuration = this.videoSampleDuration;\n    let firstDTS;\n    let lastDTS;\n    let minPTS: number = Number.POSITIVE_INFINITY;\n    let maxPTS: number = Number.NEGATIVE_INFINITY;\n    let sortSamples = false;\n\n    // if parsed fragment is contiguous with last one, let's use last DTS value as reference\n    if (!contiguous || nextAvcDts === null) {\n      const pts = timeOffset * timeScale;\n      const cts =\n        inputSamples[0].pts -\n        normalizePts(inputSamples[0].dts, inputSamples[0].pts);\n      // if not contiguous, let's use target timeOffset\n      nextAvcDts = pts - cts;\n    }\n\n    // PTS is coded on 33bits, and can loop from -2^32 to 2^32\n    // PTSNormalize will make PTS/DTS value monotonic, we use last known DTS value as reference value\n    for (let i = 0; i < nbSamples; i++) {\n      const sample = inputSamples[i];\n      sample.pts = normalizePts(sample.pts - initPTS, nextAvcDts);\n      sample.dts = normalizePts(sample.dts - initPTS, nextAvcDts);\n      if (sample.dts < inputSamples[i > 0 ? i - 1 : i].dts) {\n        sortSamples = true;\n      }\n    }\n\n    // sort video samples by DTS then PTS then demux id order\n    if (sortSamples) {\n      inputSamples.sort(function (a, b) {\n        const deltadts = a.dts - b.dts;\n        const deltapts = a.pts - b.pts;\n        return deltadts || deltapts;\n      });\n    }\n\n    // Get first/last DTS\n    firstDTS = inputSamples[0].dts;\n    lastDTS = inputSamples[inputSamples.length - 1].dts;\n\n    // Sample duration (as expected by trun MP4 boxes), should be the delta between sample DTS\n    // set this constant duration as being the avg delta between consecutive DTS.\n    const inputDuration = lastDTS - firstDTS;\n    const averageSampleDuration = inputDuration\n      ? Math.round(inputDuration / (nbSamples - 1))\n      : mp4SampleDuration || track.inputTimeScale / 30;\n\n    // if fragment are contiguous, detect hole/overlapping between fragments\n    if (contiguous) {\n      // check timestamp continuity across consecutive fragments (this is to remove inter-fragment gap/hole)\n      const delta = firstDTS - nextAvcDts;\n      const foundHole = delta > averageSampleDuration;\n      const foundOverlap = delta < -1;\n      if (foundHole || foundOverlap) {\n        if (foundHole) {\n          logger.warn(\n            `AVC: ${toMsFromMpegTsClock(\n              delta,\n              true\n            )} ms (${delta}dts) hole between fragments detected, filling it`\n          );\n        } else {\n          logger.warn(\n            `AVC: ${toMsFromMpegTsClock(\n              -delta,\n              true\n            )} ms (${delta}dts) overlapping between fragments detected`\n          );\n        }\n        if (!foundOverlap || nextAvcDts > inputSamples[0].pts) {\n          firstDTS = nextAvcDts;\n          const firstPTS = inputSamples[0].pts - delta;\n          inputSamples[0].dts = firstDTS;\n          inputSamples[0].pts = firstPTS;\n          logger.log(\n            `Video: First PTS/DTS adjusted: ${toMsFromMpegTsClock(\n              firstPTS,\n              true\n            )}/${toMsFromMpegTsClock(\n              firstDTS,\n              true\n            )}, delta: ${toMsFromMpegTsClock(delta, true)} ms`\n          );\n        }\n      }\n    }\n\n    firstDTS = Math.max(0, firstDTS);\n\n    let nbNalu = 0;\n    let naluLen = 0;\n    for (let i = 0; i < nbSamples; i++) {\n      // compute total/avc sample length and nb of NAL units\n      const sample = inputSamples[i];\n      const units = sample.units;\n      const nbUnits = units.length;\n      let sampleLen = 0;\n      for (let j = 0; j < nbUnits; j++) {\n        sampleLen += units[j].data.length;\n      }\n\n      naluLen += sampleLen;\n      nbNalu += nbUnits;\n      sample.length = sampleLen;\n\n      // ensure sample monotonic DTS\n      sample.dts = Math.max(sample.dts, firstDTS);\n\n      minPTS = Math.min(sample.pts, minPTS);\n      maxPTS = Math.max(sample.pts, maxPTS);\n    }\n    lastDTS = inputSamples[nbSamples - 1].dts;\n\n    /* concatenate the video data and construct the mdat in place\n      (need 8 more bytes to fill length and mpdat type) */\n    const mdatSize = naluLen + 4 * nbNalu + 8;\n    let mdat;\n    try {\n      mdat = new Uint8Array(mdatSize);\n    } catch (err) {\n      this.observer.emit(Events.ERROR, Events.ERROR, {\n        type: ErrorTypes.MUX_ERROR,\n        details: ErrorDetails.REMUX_ALLOC_ERROR,\n        fatal: false,\n        bytes: mdatSize,\n        reason: `fail allocating video mdat ${mdatSize}`,\n      });\n      return;\n    }\n    const view = new DataView(mdat.buffer);\n    view.setUint32(0, mdatSize);\n    mdat.set(MP4.types.mdat, 4);\n\n    let stretchedLastFrame = false;\n    let minDtsDelta = Number.POSITIVE_INFINITY;\n    let minPtsDelta = Number.POSITIVE_INFINITY;\n    let maxDtsDelta = Number.NEGATIVE_INFINITY;\n    let maxPtsDelta = Number.NEGATIVE_INFINITY;\n    for (let i = 0; i < nbSamples; i++) {\n      const avcSample = inputSamples[i];\n      const avcSampleUnits = avcSample.units;\n      let mp4SampleLength = 0;\n      // convert NALU bitstream to MP4 format (prepend NALU with size field)\n      for (let j = 0, nbUnits = avcSampleUnits.length; j < nbUnits; j++) {\n        const unit = avcSampleUnits[j];\n        const unitData = unit.data;\n        const unitDataLen = unit.data.byteLength;\n        view.setUint32(offset, unitDataLen);\n        offset += 4;\n        mdat.set(unitData, offset);\n        offset += unitDataLen;\n        mp4SampleLength += 4 + unitDataLen;\n      }\n\n      // expected sample duration is the Decoding Timestamp diff of consecutive samples\n      let ptsDelta;\n      if (i < nbSamples - 1) {\n        mp4SampleDuration = inputSamples[i + 1].dts - avcSample.dts;\n        ptsDelta = inputSamples[i + 1].pts - avcSample.pts;\n      } else {\n        const config = this.config;\n        const lastFrameDuration =\n          i > 0\n            ? avcSample.dts - inputSamples[i - 1].dts\n            : averageSampleDuration;\n        ptsDelta =\n          i > 0\n            ? avcSample.pts - inputSamples[i - 1].pts\n            : averageSampleDuration;\n        if (config.stretchShortVideoTrack && this.nextAudioPts !== null) {\n          // In some cases, a segment's audio track duration may exceed the video track duration.\n          // Since we've already remuxed audio, and we know how long the audio track is, we look to\n          // see if the delta to the next segment is longer than maxBufferHole.\n          // If so, playback would potentially get stuck, so we artificially inflate\n          // the duration of the last frame to minimize any potential gap between segments.\n          const gapTolerance = Math.floor(config.maxBufferHole * timeScale);\n          const deltaToFrameEnd =\n            (audioTrackLength\n              ? minPTS + audioTrackLength * timeScale\n              : this.nextAudioPts) - avcSample.pts;\n          if (deltaToFrameEnd > gapTolerance) {\n            // We subtract lastFrameDuration from deltaToFrameEnd to try to prevent any video\n            // frame overlap. maxBufferHole should be >> lastFrameDuration anyway.\n            mp4SampleDuration = deltaToFrameEnd - lastFrameDuration;\n            if (mp4SampleDuration < 0) {\n              mp4SampleDuration = lastFrameDuration;\n            } else {\n              stretchedLastFrame = true;\n            }\n            logger.log(\n              `[mp4-remuxer]: It is approximately ${\n                deltaToFrameEnd / 90\n              } ms to the next segment; using duration ${\n                mp4SampleDuration / 90\n              } ms for the last video frame.`\n            );\n          } else {\n            mp4SampleDuration = lastFrameDuration;\n          }\n        } else {\n          mp4SampleDuration = lastFrameDuration;\n        }\n      }\n      const compositionTimeOffset = Math.round(avcSample.pts - avcSample.dts);\n      minDtsDelta = Math.min(minDtsDelta, mp4SampleDuration);\n      maxDtsDelta = Math.max(maxDtsDelta, mp4SampleDuration);\n      minPtsDelta = Math.min(minPtsDelta, ptsDelta);\n      maxPtsDelta = Math.max(maxPtsDelta, ptsDelta);\n\n      outputSamples.push(\n        new Mp4Sample(\n          avcSample.key,\n          mp4SampleDuration,\n          mp4SampleLength,\n          compositionTimeOffset\n        )\n      );\n    }\n\n    if (outputSamples.length) {\n      if (chromeVersion) {\n        if (chromeVersion < 70) {\n          // Chrome workaround, mark first sample as being a Random Access Point (keyframe) to avoid sourcebuffer append issue\n          // https://code.google.com/p/chromium/issues/detail?id=229412\n          const flags = outputSamples[0].flags;\n          flags.dependsOn = 2;\n          flags.isNonSync = 0;\n        }\n      } else if (safariWebkitVersion) {\n        // Fix for \"CNN special report, with CC\" in test-streams (Safari browser only)\n        // Ignore DTS when frame durations are irregular. Safari MSE does not handle this leading to gaps.\n        if (\n          maxPtsDelta - minPtsDelta < maxDtsDelta - minDtsDelta &&\n          averageSampleDuration / maxDtsDelta < 0.025 &&\n          outputSamples[0].cts === 0\n        ) {\n          logger.warn(\n            'Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration.'\n          );\n          let dts = firstDTS;\n          for (let i = 0, len = outputSamples.length; i < len; i++) {\n            const nextDts = dts + outputSamples[i].duration;\n            const pts = dts + outputSamples[i].cts;\n            if (i < len - 1) {\n              const nextPts = nextDts + outputSamples[i + 1].cts;\n              outputSamples[i].duration = nextPts - pts;\n            } else {\n              outputSamples[i].duration = i\n                ? outputSamples[i - 1].duration\n                : averageSampleDuration;\n            }\n            outputSamples[i].cts = 0;\n            dts = nextDts;\n          }\n        }\n      }\n    }\n\n    console.assert(\n      mp4SampleDuration !== null,\n      'mp4SampleDuration must be computed'\n    );\n    // next AVC sample DTS should be equal to last sample DTS + last sample duration (in PES timescale)\n    mp4SampleDuration =\n      stretchedLastFrame || !mp4SampleDuration\n        ? averageSampleDuration\n        : mp4SampleDuration;\n    this.nextAvcDts = nextAvcDts = lastDTS + mp4SampleDuration;\n    this.videoSampleDuration = mp4SampleDuration;\n    this.isVideoContiguous = true;\n    const moof = MP4.moof(\n      track.sequenceNumber++,\n      firstDTS,\n      Object.assign({}, track, {\n        samples: outputSamples,\n      })\n    );\n    const type: SourceBufferName = 'video';\n    const data = {\n      data1: moof,\n      data2: mdat,\n      startPTS: minPTS / timeScale,\n      endPTS: (maxPTS + mp4SampleDuration) / timeScale,\n      startDTS: firstDTS / timeScale,\n      endDTS: (nextAvcDts as number) / timeScale,\n      type,\n      hasAudio: false,\n      hasVideo: true,\n      nb: outputSamples.length,\n      dropped: track.dropped,\n    };\n\n    track.samples = [];\n    track.dropped = 0;\n\n    console.assert(mdat.length, 'MDAT length must not be zero');\n\n    return data;\n  }\n\n  remuxAudio(\n    track: DemuxedAudioTrack,\n    timeOffset: number,\n    contiguous: boolean,\n    accurateTimeOffset: boolean,\n    videoTimeOffset?: number\n  ): RemuxedTrack | undefined {\n    const inputTimeScale: number = track.inputTimeScale;\n    const mp4timeScale: number = track.samplerate\n      ? track.samplerate\n      : inputTimeScale;\n    const scaleFactor: number = inputTimeScale / mp4timeScale;\n    const mp4SampleDuration: number =\n      track.segmentCodec === 'aac'\n        ? AAC_SAMPLES_PER_FRAME\n        : MPEG_AUDIO_SAMPLE_PER_FRAME;\n    const inputSampleDuration: number = mp4SampleDuration * scaleFactor;\n    const initPTS: number = this._initPTS;\n    const rawMPEG: boolean =\n      track.segmentCodec === 'mp3' && this.typeSupported.mpeg;\n    const outputSamples: Array<Mp4Sample> = [];\n    const alignedWithVideo = videoTimeOffset !== undefined;\n\n    let inputSamples: Array<AudioSample> = track.samples;\n    let offset: number = rawMPEG ? 0 : 8;\n    let nextAudioPts: number = this.nextAudioPts || -1;\n\n    // window.audioSamples ? window.audioSamples.push(inputSamples.map(s => s.pts)) : (window.audioSamples = [inputSamples.map(s => s.pts)]);\n\n    // for audio samples, also consider consecutive fragments as being contiguous (even if a level switch occurs),\n    // for sake of clarity:\n    // consecutive fragments are frags with\n    //  - less than 100ms gaps between new time offset (if accurate) and next expected PTS OR\n    //  - less than 20 audio frames distance\n    // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n    // this helps ensuring audio continuity\n    // and this also avoids audio glitches/cut when switching quality, or reporting wrong duration on first audio frame\n    const timeOffsetMpegTS = timeOffset * inputTimeScale;\n    this.isAudioContiguous = contiguous =\n      contiguous ||\n      ((inputSamples.length &&\n        nextAudioPts > 0 &&\n        ((accurateTimeOffset &&\n          Math.abs(timeOffsetMpegTS - nextAudioPts) < 9000) ||\n          Math.abs(\n            normalizePts(inputSamples[0].pts - initPTS, timeOffsetMpegTS) -\n              nextAudioPts\n          ) <\n            20 * inputSampleDuration)) as boolean);\n\n    // compute normalized PTS\n    inputSamples.forEach(function (sample) {\n      sample.pts = normalizePts(sample.pts - initPTS, timeOffsetMpegTS);\n    });\n\n    if (!contiguous || nextAudioPts < 0) {\n      // filter out sample with negative PTS that are not playable anyway\n      // if we don't remove these negative samples, they will shift all audio samples forward.\n      // leading to audio overlap between current / next fragment\n      inputSamples = inputSamples.filter((sample) => sample.pts >= 0);\n\n      // in case all samples have negative PTS, and have been filtered out, return now\n      if (!inputSamples.length) {\n        return;\n      }\n\n      if (videoTimeOffset === 0) {\n        // Set the start to 0 to match video so that start gaps larger than inputSampleDuration are filled with silence\n        nextAudioPts = 0;\n      } else if (accurateTimeOffset && !alignedWithVideo) {\n        // When not seeking, not live, and LevelDetails.PTSKnown, use fragment start as predicted next audio PTS\n        nextAudioPts = Math.max(0, timeOffsetMpegTS);\n      } else {\n        // if frags are not contiguous and if we cant trust time offset, let's use first sample PTS as next audio PTS\n        nextAudioPts = inputSamples[0].pts;\n      }\n    }\n\n    // If the audio track is missing samples, the frames seem to get \"left-shifted\" within the\n    // resulting mp4 segment, causing sync issues and leaving gaps at the end of the audio segment.\n    // In an effort to prevent this from happening, we inject frames here where there are gaps.\n    // When possible, we inject a silent frame; when that's not possible, we duplicate the last\n    // frame.\n\n    if (track.segmentCodec === 'aac') {\n      const maxAudioFramesDrift = this.config.maxAudioFramesDrift;\n      for (let i = 0, nextPts = nextAudioPts; i < inputSamples.length; i++) {\n        // First, let's see how far off this frame is from where we expect it to be\n        const sample = inputSamples[i];\n        const pts = sample.pts;\n        const delta = pts - nextPts;\n        const duration = Math.abs((1000 * delta) / inputTimeScale);\n\n        // When remuxing with video, if we're overlapping by more than a duration, drop this sample to stay in sync\n        if (\n          delta <= -maxAudioFramesDrift * inputSampleDuration &&\n          alignedWithVideo\n        ) {\n          if (i === 0) {\n            logger.warn(\n              `Audio frame @ ${(pts / inputTimeScale).toFixed(\n                3\n              )}s overlaps nextAudioPts by ${Math.round(\n                (1000 * delta) / inputTimeScale\n              )} ms.`\n            );\n            this.nextAudioPts = nextAudioPts = nextPts = pts;\n          }\n        } // eslint-disable-line brace-style\n\n        // Insert missing frames if:\n        // 1: We're more than maxAudioFramesDrift frame away\n        // 2: Not more than MAX_SILENT_FRAME_DURATION away\n        // 3: currentTime (aka nextPtsNorm) is not 0\n        // 4: remuxing with video (videoTimeOffset !== undefined)\n        else if (\n          delta >= maxAudioFramesDrift * inputSampleDuration &&\n          duration < MAX_SILENT_FRAME_DURATION &&\n          alignedWithVideo\n        ) {\n          let missing = Math.round(delta / inputSampleDuration);\n          // Adjust nextPts so that silent samples are aligned with media pts. This will prevent media samples from\n          // later being shifted if nextPts is based on timeOffset and delta is not a multiple of inputSampleDuration.\n          nextPts = pts - missing * inputSampleDuration;\n          if (nextPts < 0) {\n            missing--;\n            nextPts += inputSampleDuration;\n          }\n          if (i === 0) {\n            this.nextAudioPts = nextAudioPts = nextPts;\n          }\n          logger.warn(\n            `[mp4-remuxer]: Injecting ${missing} audio frame @ ${(\n              nextPts / inputTimeScale\n            ).toFixed(3)}s due to ${Math.round(\n              (1000 * delta) / inputTimeScale\n            )} ms gap.`\n          );\n          for (let j = 0; j < missing; j++) {\n            const newStamp = Math.max(nextPts as number, 0);\n            let fillFrame = AAC.getSilentFrame(\n              track.manifestCodec || track.codec,\n              track.channelCount\n            );\n            if (!fillFrame) {\n              logger.log(\n                '[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead.'\n              );\n              fillFrame = sample.unit.subarray();\n            }\n            inputSamples.splice(i, 0, {\n              unit: fillFrame,\n              pts: newStamp,\n            });\n            nextPts += inputSampleDuration;\n            i++;\n          }\n        }\n        sample.pts = nextPts;\n        nextPts += inputSampleDuration;\n      }\n    }\n    let firstPTS: number | null = null;\n    let lastPTS: number | null = null;\n    let mdat: any;\n    let mdatSize: number = 0;\n    let sampleLength: number = inputSamples.length;\n    while (sampleLength--) {\n      mdatSize += inputSamples[sampleLength].unit.byteLength;\n    }\n    for (let j = 0, nbSamples = inputSamples.length; j < nbSamples; j++) {\n      const audioSample = inputSamples[j];\n      const unit = audioSample.unit;\n      let pts = audioSample.pts;\n      if (lastPTS !== null) {\n        // If we have more than one sample, set the duration of the sample to the \"real\" duration; the PTS diff with\n        // the previous sample\n        const prevSample = outputSamples[j - 1];\n        prevSample.duration = Math.round((pts - lastPTS) / scaleFactor);\n      } else {\n        if (contiguous && track.segmentCodec === 'aac') {\n          // set PTS/DTS to expected PTS/DTS\n          pts = nextAudioPts;\n        }\n        // remember first PTS of our audioSamples\n        firstPTS = pts;\n        if (mdatSize > 0) {\n          /* concatenate the audio data and construct the mdat in place\n            (need 8 more bytes to fill length and mdat type) */\n          mdatSize += offset;\n          try {\n            mdat = new Uint8Array(mdatSize);\n          } catch (err) {\n            this.observer.emit(Events.ERROR, Events.ERROR, {\n              type: ErrorTypes.MUX_ERROR,\n              details: ErrorDetails.REMUX_ALLOC_ERROR,\n              fatal: false,\n              bytes: mdatSize,\n              reason: `fail allocating audio mdat ${mdatSize}`,\n            });\n            return;\n          }\n          if (!rawMPEG) {\n            const view = new DataView(mdat.buffer);\n            view.setUint32(0, mdatSize);\n            mdat.set(MP4.types.mdat, 4);\n          }\n        } else {\n          // no audio samples\n          return;\n        }\n      }\n      mdat.set(unit, offset);\n      const unitLen = unit.byteLength;\n      offset += unitLen;\n      // Default the sample's duration to the computed mp4SampleDuration, which will either be 1024 for AAC or 1152 for MPEG\n      // In the case that we have 1 sample, this will be the duration. If we have more than one sample, the duration\n      // becomes the PTS diff with the previous sample\n      outputSamples.push(new Mp4Sample(true, mp4SampleDuration, unitLen, 0));\n      lastPTS = pts;\n    }\n\n    // We could end up with no audio samples if all input samples were overlapping with the previously remuxed ones\n    const nbSamples = outputSamples.length;\n    if (!nbSamples) {\n      return;\n    }\n\n    // The next audio sample PTS should be equal to last sample PTS + duration\n    const lastSample = outputSamples[outputSamples.length - 1];\n    this.nextAudioPts = nextAudioPts =\n      lastPTS! + scaleFactor * lastSample.duration;\n\n    // Set the track samples from inputSamples to outputSamples before remuxing\n    const moof = rawMPEG\n      ? new Uint8Array(0)\n      : MP4.moof(\n          track.sequenceNumber++,\n          firstPTS! / scaleFactor,\n          Object.assign({}, track, { samples: outputSamples })\n        );\n\n    // Clear the track samples. This also clears the samples array in the demuxer, since the reference is shared\n    track.samples = [];\n    const start = firstPTS! / inputTimeScale;\n    const end = nextAudioPts / inputTimeScale;\n    const type: SourceBufferName = 'audio';\n    const audioData = {\n      data1: moof,\n      data2: mdat,\n      startPTS: start,\n      endPTS: end,\n      startDTS: start,\n      endDTS: end,\n      type,\n      hasAudio: true,\n      hasVideo: false,\n      nb: nbSamples,\n    };\n\n    this.isAudioContiguous = true;\n\n    console.assert(mdat.length, 'MDAT length must not be zero');\n    return audioData;\n  }\n\n  remuxEmptyAudio(\n    track: DemuxedAudioTrack,\n    timeOffset: number,\n    contiguous: boolean,\n    videoData: Fragment\n  ): RemuxedTrack | undefined {\n    const inputTimeScale: number = track.inputTimeScale;\n    const mp4timeScale: number = track.samplerate\n      ? track.samplerate\n      : inputTimeScale;\n    const scaleFactor: number = inputTimeScale / mp4timeScale;\n    const nextAudioPts: number | null = this.nextAudioPts;\n    // sync with video's timestamp\n    const startDTS: number =\n      (nextAudioPts !== null\n        ? nextAudioPts\n        : videoData.startDTS * inputTimeScale) + this._initDTS;\n    const endDTS: number = videoData.endDTS * inputTimeScale + this._initDTS;\n    // one sample's duration value\n    const frameDuration: number = scaleFactor * AAC_SAMPLES_PER_FRAME;\n    // samples count of this segment's duration\n    const nbSamples: number = Math.ceil((endDTS - startDTS) / frameDuration);\n    // silent frame\n    const silentFrame: Uint8Array | undefined = AAC.getSilentFrame(\n      track.manifestCodec || track.codec,\n      track.channelCount\n    );\n\n    logger.warn('[mp4-remuxer]: remux empty Audio');\n    // Can't remux if we can't generate a silent frame...\n    if (!silentFrame) {\n      logger.trace(\n        '[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec'\n      );\n      return;\n    }\n\n    const samples: Array<any> = [];\n    for (let i = 0; i < nbSamples; i++) {\n      const stamp = startDTS + i * frameDuration;\n      samples.push({ unit: silentFrame, pts: stamp, dts: stamp });\n    }\n    track.samples = samples;\n\n    return this.remuxAudio(track, timeOffset, contiguous, false);\n  }\n}\n\nexport function normalizePts(value: number, reference: number | null): number {\n  let offset;\n  if (reference === null) {\n    return value;\n  }\n\n  if (reference < value) {\n    // - 2^33\n    offset = -8589934592;\n  } else {\n    // + 2^33\n    offset = 8589934592;\n  }\n  /* PTS is 33bit (from 0 to 2^33 -1)\n    if diff between value and reference is bigger than half of the amplitude (2^32) then it means that\n    PTS looping occured. fill the gap */\n  while (Math.abs(value - reference) > 4294967296) {\n    value += offset;\n  }\n\n  return value;\n}\n\nfunction findKeyframeIndex(samples: Array<AvcSample>): number {\n  for (let i = 0; i < samples.length; i++) {\n    if (samples[i].key) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function flushTextTrackMetadataCueSamples(\n  track: DemuxedMetadataTrack,\n  timeOffset: number,\n  initPTS: number,\n  initDTS: number\n): RemuxedMetadata | undefined {\n  const length = track.samples.length;\n  if (!length) {\n    return;\n  }\n  const inputTimeScale = track.inputTimeScale;\n  for (let index = 0; index < length; index++) {\n    const sample = track.samples[index];\n    // setting id3 pts, dts to relative time\n    // using this._initPTS and this._initDTS to calculate relative time\n    sample.pts =\n      normalizePts(sample.pts - initPTS, timeOffset * inputTimeScale) /\n      inputTimeScale;\n    sample.dts =\n      normalizePts(sample.dts - initDTS, timeOffset * inputTimeScale) /\n      inputTimeScale;\n  }\n  const samples = track.samples;\n  track.samples = [];\n  return {\n    samples,\n  };\n}\n\nexport function flushTextTrackUserdataCueSamples(\n  track: DemuxedUserdataTrack,\n  timeOffset: number,\n  initPTS: number\n): RemuxedUserdata | undefined {\n  const length = track.samples.length;\n  if (!length) {\n    return;\n  }\n\n  const inputTimeScale = track.inputTimeScale;\n  for (let index = 0; index < length; index++) {\n    const sample = track.samples[index];\n    // setting text pts, dts to relative time\n    // using this._initPTS and this._initDTS to calculate relative time\n    sample.pts =\n      normalizePts(sample.pts - initPTS, timeOffset * inputTimeScale) /\n      inputTimeScale;\n  }\n  track.samples.sort((a, b) => a.pts - b.pts);\n  const samples = track.samples;\n  track.samples = [];\n  return {\n    samples,\n  };\n}\n\nclass Mp4Sample {\n  public size: number;\n  public duration: number;\n  public cts: number;\n  public flags: Mp4SampleFlags;\n\n  constructor(\n    isKeyframe: boolean,\n    duration: number,\n    size: number,\n    cts: number\n  ) {\n    this.duration = duration;\n    this.size = size;\n    this.cts = cts;\n    this.flags = new Mp4SampleFlags(isKeyframe);\n  }\n}\n\nclass Mp4SampleFlags {\n  public isLeading: 0 = 0;\n  public isDependedOn: 0 = 0;\n  public hasRedundancy: 0 = 0;\n  public degradPrio: 0 = 0;\n  public dependsOn: 1 | 2 = 1;\n  public isNonSync: 0 | 1 = 1;\n\n  constructor(isKeyframe) {\n    this.dependsOn = isKeyframe ? 2 : 1;\n    this.isNonSync = isKeyframe ? 0 : 1;\n  }\n}\n", "import {\n  flushTextTrackMetadataCueSamples,\n  flushTextTrackUserdataCueSamples,\n} from './mp4-remuxer';\nimport {\n  InitData,\n  InitDataTrack,\n  patchEncyptionData,\n} from '../utils/mp4-tools';\nimport {\n  getDuration,\n  getStartDTS,\n  offsetStartDTS,\n  parseInitSegment,\n} from '../utils/mp4-tools';\nimport { ElementaryStreamTypes } from '../loader/fragment';\nimport { logger } from '../utils/logger';\nimport type { TrackSet } from '../types/track';\nimport type {\n  InitSegmentData,\n  RemuxedTrack,\n  Remuxer,\n  RemuxerResult,\n} from '../types/remuxer';\nimport type {\n  DemuxedAudioTrack,\n  DemuxedMetadataTrack,\n  DemuxedUserdataTrack,\n  PassthroughTrack,\n} from '../types/demuxer';\nimport type { DecryptData } from '../loader/level-key';\n\nclass PassThroughRemuxer implements Remuxer {\n  private emitInitSegment: boolean = false;\n  private audioCodec?: string;\n  private videoCodec?: string;\n  private initData?: InitData;\n  private initPTS?: number;\n  private initTracks?: TrackSet;\n  private lastEndTime: number | null = null;\n\n  public destroy() {}\n\n  public resetTimeStamp(defaultInitPTS) {\n    this.initPTS = defaultInitPTS;\n    this.lastEndTime = null;\n  }\n\n  public resetNextTimestamp() {\n    this.lastEndTime = null;\n  }\n\n  public resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    decryptdata: DecryptData | null\n  ) {\n    this.audioCodec = audioCodec;\n    this.videoCodec = videoCodec;\n    this.generateInitSegment(patchEncyptionData(initSegment, decryptdata));\n    this.emitInitSegment = true;\n  }\n\n  private generateInitSegment(initSegment: Uint8Array | undefined): void {\n    let { audioCodec, videoCodec } = this;\n    if (!initSegment || !initSegment.byteLength) {\n      this.initTracks = undefined;\n      this.initData = undefined;\n      return;\n    }\n    const initData = (this.initData = parseInitSegment(initSegment));\n\n    // Get codec from initSegment or fallback to default\n    if (!audioCodec) {\n      audioCodec = getParsedTrackCodec(\n        initData.audio,\n        ElementaryStreamTypes.AUDIO\n      );\n    }\n\n    if (!videoCodec) {\n      videoCodec = getParsedTrackCodec(\n        initData.video,\n        ElementaryStreamTypes.VIDEO\n      );\n    }\n\n    const tracks: TrackSet = {};\n    if (initData.audio && initData.video) {\n      tracks.audiovideo = {\n        container: 'video/mp4',\n        codec: audioCodec + ',' + videoCodec,\n        initSegment,\n        id: 'main',\n      };\n    } else if (initData.audio) {\n      tracks.audio = {\n        container: 'audio/mp4',\n        codec: audioCodec,\n        initSegment,\n        id: 'audio',\n      };\n    } else if (initData.video) {\n      tracks.video = {\n        container: 'video/mp4',\n        codec: videoCodec,\n        initSegment,\n        id: 'main',\n      };\n    } else {\n      logger.warn(\n        '[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes.'\n      );\n    }\n    this.initTracks = tracks;\n  }\n\n  public remux(\n    audioTrack: DemuxedAudioTrack,\n    videoTrack: PassthroughTrack,\n    id3Track: DemuxedMetadataTrack,\n    textTrack: DemuxedUserdataTrack,\n    timeOffset: number\n  ): RemuxerResult {\n    let { initPTS, lastEndTime } = this;\n    const result: RemuxerResult = {\n      audio: undefined,\n      video: undefined,\n      text: textTrack,\n      id3: id3Track,\n      initSegment: undefined,\n    };\n\n    // If we haven't yet set a lastEndDTS, or it was reset, set it to the provided timeOffset. We want to use the\n    // lastEndDTS over timeOffset whenever possible; during progressive playback, the media source will not update\n    // the media duration (which is what timeOffset is provided as) before we need to process the next chunk.\n    if (!Number.isFinite(lastEndTime!)) {\n      lastEndTime = this.lastEndTime = timeOffset || 0;\n    }\n\n    // The binary segment data is added to the videoTrack in the mp4demuxer. We don't check to see if the data is only\n    // audio or video (or both); adding it to video was an arbitrary choice.\n    const data = videoTrack.samples;\n    if (!data || !data.length) {\n      return result;\n    }\n\n    const initSegment: InitSegmentData = {\n      initPTS: undefined,\n      timescale: 1,\n    };\n    let initData = this.initData;\n    if (!initData || !initData.length) {\n      this.generateInitSegment(data);\n      initData = this.initData;\n    }\n    if (!initData || !initData.length) {\n      // We can't remux if the initSegment could not be generated\n      logger.warn('[passthrough-remuxer.ts]: Failed to generate initSegment.');\n      return result;\n    }\n    if (this.emitInitSegment) {\n      initSegment.tracks = this.initTracks as TrackSet;\n      this.emitInitSegment = false;\n    }\n\n    const startDTS = getStartDTS(initData, data);\n    if (!Number.isFinite(initPTS!)) {\n      this.initPTS = initSegment.initPTS = initPTS = startDTS - timeOffset;\n    }\n\n    const duration = getDuration(data, initData);\n    const startTime = audioTrack\n      ? startDTS - (initPTS as number)\n      : (lastEndTime as number);\n    const endTime = startTime + duration;\n    offsetStartDTS(initData, data, initPTS as number);\n\n    if (duration > 0) {\n      this.lastEndTime = endTime;\n    } else {\n      logger.warn('Duration parsed from mp4 should be greater than zero');\n      this.resetNextTimestamp();\n    }\n\n    const hasAudio = !!initData.audio;\n    const hasVideo = !!initData.video;\n\n    let type: any = '';\n    if (hasAudio) {\n      type += 'audio';\n    }\n\n    if (hasVideo) {\n      type += 'video';\n    }\n\n    const track: RemuxedTrack = {\n      data1: data,\n      startPTS: startTime,\n      startDTS: startTime,\n      endPTS: endTime,\n      endDTS: endTime,\n      type,\n      hasAudio,\n      hasVideo,\n      nb: 1,\n      dropped: 0,\n    };\n\n    result.audio = track.type === 'audio' ? track : undefined;\n    result.video = track.type !== 'audio' ? track : undefined;\n    result.initSegment = initSegment;\n    const initPtsNum = this.initPTS ?? 0;\n    result.id3 = flushTextTrackMetadataCueSamples(\n      id3Track,\n      timeOffset,\n      initPtsNum,\n      initPtsNum\n    );\n\n    if (textTrack.samples.length) {\n      result.text = flushTextTrackUserdataCueSamples(\n        textTrack,\n        timeOffset,\n        initPtsNum\n      );\n    }\n\n    return result;\n  }\n}\n\nfunction getParsedTrackCodec(\n  track: InitDataTrack | undefined,\n  type: ElementaryStreamTypes.AUDIO | ElementaryStreamTypes.VIDEO\n): string {\n  const parsedCodec = track?.codec;\n  if (parsedCodec && parsedCodec.length > 4) {\n    return parsedCodec;\n  }\n  // Since mp4-tools cannot parse full codec string (see 'TODO: Parse codec details'... in mp4-tools)\n  // Provide defaults based on codec type\n  // This allows for some playback of some fmp4 playlists without CODECS defined in manifest\n  if (parsedCodec === 'hvc1' || parsedCodec === 'hev1') {\n    return 'hvc1.1.c.L120.90';\n  }\n  if (parsedCodec === 'av01') {\n    return 'av01.0.04M.08';\n  }\n  if (parsedCodec === 'avc1' || type === ElementaryStreamTypes.VIDEO) {\n    return 'avc1.42e01e';\n  }\n  return 'mp4a.40.5';\n}\nexport default PassThroughRemuxer;\n", "/**\n * Sub-class specialization of EventHandler base class.\n *\n * TaskLoop allows to schedule a task function being called (optionnaly repeatedly) on the main loop,\n * scheduled asynchroneously, avoiding recursive calls in the same tick.\n *\n * The task itself is implemented in `doTick`. It can be requested and called for single execution\n * using the `tick` method.\n *\n * It will be assured that the task execution method (`tick`) only gets called once per main loop \"tick\",\n * no matter how often it gets requested for execution. Execution in further ticks will be scheduled accordingly.\n *\n * If further execution requests have already been scheduled on the next tick, it can be checked with `hasNextTick`,\n * and cancelled with `clearNextTick`.\n *\n * The task can be scheduled as an interval repeatedly with a period as parameter (see `setInterval`, `clearInterval`).\n *\n * Sub-classes need to implement the `doTick` method which will effectively have the task execution routine.\n *\n * Further explanations:\n *\n * The baseclass has a `tick` method that will schedule the doTick call. It may be called synchroneously\n * only for a stack-depth of one. On re-entrant calls, sub-sequent calls are scheduled for next main loop ticks.\n *\n * When the task execution (`tick` method) is called in re-entrant way this is detected and\n * we are limiting the task execution per call stack to exactly one, but scheduling/post-poning further\n * task processing on the next main loop iteration (also known as \"next tick\" in the Node/JS runtime lingo).\n */\nexport default class TaskLoop {\n  private readonly _boundTick: () => void;\n  private _tickTimer: number | null = null;\n  private _tickInterval: number | null = null;\n  private _tickCallCount = 0;\n\n  constructor() {\n    this._boundTick = this.tick.bind(this);\n  }\n\n  public destroy() {\n    this.onHandlerDestroying();\n    this.onHandlerDestroyed();\n  }\n\n  protected onHandlerDestroying() {\n    // clear all timers before unregistering from event bus\n    this.clearNextTick();\n    this.clearInterval();\n  }\n\n  protected onHandlerDestroyed() {}\n\n  /**\n   * @returns {boolean}\n   */\n  public hasInterval(): boolean {\n    return !!this._tickInterval;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  public hasNextTick(): boolean {\n    return !!this._tickTimer;\n  }\n\n  /**\n   * @param {number} millis Interval time (ms)\n   * @returns {boolean} True when interval has been scheduled, false when already scheduled (no effect)\n   */\n  public setInterval(millis: number): boolean {\n    if (!this._tickInterval) {\n      this._tickInterval = self.setInterval(this._boundTick, millis);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @returns {boolean} True when interval was cleared, false when none was set (no effect)\n   */\n  public clearInterval(): boolean {\n    if (this._tickInterval) {\n      self.clearInterval(this._tickInterval);\n      this._tickInterval = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @returns {boolean} True when timeout was cleared, false when none was set (no effect)\n   */\n  public clearNextTick(): boolean {\n    if (this._tickTimer) {\n      self.clearTimeout(this._tickTimer);\n      this._tickTimer = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Will call the subclass doTick implementation in this main loop tick\n   * or in the next one (via setTimeout(,0)) in case it has already been called\n   * in this tick (in case this is a re-entrant call).\n   */\n  public tick(): void {\n    this._tickCallCount++;\n    if (this._tickCallCount === 1) {\n      this.doTick();\n      // re-entrant call to tick from previous doTick call stack\n      // -> schedule a call on the next main loop iteration to process this task processing request\n      if (this._tickCallCount > 1) {\n        // make sure only one timer exists at any time at max\n        this.tickImmediate();\n      }\n      this._tickCallCount = 0;\n    }\n  }\n\n  public tickImmediate(): void {\n    this.clearNextTick();\n    this._tickTimer = self.setTimeout(this._boundTick, 0);\n  }\n\n  /**\n   * For subclass to implement task logic\n   * @abstract\n   */\n  protected doTick(): void {}\n}\n", "/**\n * CMCD spec version\n */\nexport const CMCDVersion = 1;\n\n/**\n * CMCD Object Type\n */\nexport enum CMCDObjectType {\n  MANIFEST = 'm',\n  AUDIO = 'a',\n  VIDEO = 'v',\n  MUXED = 'av',\n  INIT = 'i',\n  CAPTION = 'c',\n  TIMED_TEXT = 'tt',\n  KEY = 'k',\n  OTHER = 'o',\n}\n\n/**\n * CMCD Streaming Format\n */\nexport enum CMCDStreamingFormat {\n  DASH = 'd',\n  HLS = 'h',\n  SMOOTH = 's',\n  OTHER = 'o',\n}\n\n/**\n * CMCD Streaming Type\n */\nexport enum CMCDStreamType {\n  VOD = 'v',\n  LIVE = 'l',\n}\n\n/**\n * CMCD Headers\n */\nexport interface CMCDHeaders {\n  'CMCD-Object': string;\n  'CMCD-Request': string;\n  'CMCD-Session': string;\n  'CMCD-Status': string;\n}\n\n/**\n * CMCD\n */\nexport interface CMCD {\n  /////////////////\n  // CMCD Object //\n  /////////////////\n\n  /**\n   * Encoded bitrate\n   *\n   * The encoded bitrate of the audio or video object being requested. This may not be known precisely by the player; however,\n   * it MAY be estimated based upon playlist/manifest declarations. If the playlist declares both peak and average bitrate values,\n   * the peak value should be transmitted.\n   *\n   * Integer kbps\n   */\n  br?: number;\n\n  /**\n   * Object duration\n   *\n   * The playback duration in milliseconds of the object being requested. If a partial segment is being requested, then this value\n   * MUST indicate the playback duration of that part and not that of its parent segment. This value can be an approximation of the\n   * estimated duration if the explicit value is not known.\n   *\n   * Integer milliseconds\n   */\n  d?: number;\n\n  /**\n   * Object type\n   *\n   * The media type of the current object being requested:\n   * - `m` = text file, such as a manifest or playlist\n   * - `a` = audio only\n   * - `v` = video only\n   * - `av` = muxed audio and video\n   * - `i` = init segment\n   * - `c` = caption or subtitle\n   * - `tt` = ISOBMFF timed text track\n   * - `k` = cryptographic key, license or certificate.\n   * - `o` = other\n   *\n   * If the object type being requested is unknown, then this key MUST NOT be used.\n   */\n  ot?: CMCDObjectType;\n\n  /**\n   * Top bitrate\n   *\n   * The highest bitrate rendition in the manifest or playlist that the client is allowed to play, given current codec, licensing and\n   * sizing constraints.\n   *\n   * Integer Kbps\n   */\n  tb?: number;\n\n  //////////////////\n  // CMCD Request //\n  //////////////////\n  /**\n   * Buffer length\n   *\n   * The buffer length associated with the media object being requested. This value MUST be rounded to the nearest 100 ms. This key SHOULD only be\n   * sent with an object type of ‘a’, ‘v’ or ‘av’.\n   *\n   * Integer milliseconds\n   */\n  bl?: number;\n\n  /**\n   * Deadline\n   *\n   * Deadline from the request time until the first sample of this Segment/Object needs to be available in order to not create a buffer underrun or\n   * any other playback problems. This value MUST be rounded to the nearest 100ms. For a playback rate of 1, this may be equivalent to the player’s\n   * remaining buffer length.\n   *\n   * Integer milliseconds\n   */\n  dl?: number;\n\n  /**\n   * Measured mtp CMCD throughput\n   *\n   * The throughput between client and server, as measured by the client and MUST be rounded to the nearest 100 kbps. This value, however derived,\n   * SHOULD be the value that the client is using to make its next Adaptive Bitrate switching decision. If the client is connected to multiple\n   * servers concurrently, it must take care to report only the throughput measured against the receiving server. If the client has multiple concurrent\n   * connections to the server, then the intent is that this value communicates the aggregate throughput the client sees across all those connections.\n   *\n   * Integer kbps\n   */\n  mtp?: number;\n\n  /**\n   * Next object request\n   *\n   * Relative path of the next object to be requested. This can be used to trigger pre-fetching by the CDN. This MUST be a path relative to the current\n   * request. This string MUST be URLEncoded. The client SHOULD NOT depend upon any pre-fetch action being taken - it is merely a request for such a\n   * pre-fetch to take place.\n   *\n   * String\n   */\n  nor?: string;\n\n  /**\n   * Next range request\n   *\n   * If the next request will be a partial object request, then this string denotes the byte range to be requested. If the ‘nor’ field is not set, then the\n   * object is assumed to match the object currently being requested. The client SHOULD NOT depend upon any pre-fetch action being taken – it is merely a\n   * request for such a pre-fetch to take place. Formatting is similar to the HTTP Range header, except that the unit MUST be ‘byte’, the ‘Range:’ prefix is\n   * NOT required and specifying multiple ranges is NOT allowed. Valid combinations are:\n   *\n   * - `\"\\<range-start\\>-\"`\n   * - `\"\\<range-start\\>-\\<range-end\\>\"`\n   * - `\"-\\<suffix-length\\>\"`\n   *\n   * String\n   */\n  nrr?: string;\n\n  /**\n   * Startup\n   *\n   * Key is included without a value if the object is needed urgently due to startup, seeking or recovery after a buffer-empty event. The media SHOULD not be\n   * rendering when this request is made. This key MUST not be sent if it is FALSE.\n   *\n   * Boolean\n   */\n  su?: boolean;\n\n  //////////////////\n  // CMCD Session //\n  //////////////////\n\n  /**\n   * Content ID\n   *\n   * A unique string identifying the current content. Maximum length is 64 characters. This value is consistent across multiple different\n   * sessions and devices and is defined and updated at the discretion of the service provider.\n   *\n   * String\n   */\n  cid?: string;\n\n  /**\n   * Playback rate\n   *\n   * `1` if real-time, `2` if double speed, `0` if not playing. SHOULD only be sent if not equal to `1`.\n   *\n   * Decimal\n   */\n  pr?: number;\n\n  /**\n   * Streaming format\n   *\n   * The streaming format that defines the current request.\n   *\n   * - `d` = MPEG DASH\n   * - `h` = HTTP Live Streaming (HLS)\n   * - `s` = Smooth Streaming\n   * - `o` = other\n   *\n   * If the streaming format being requested is unknown, then this key MUST NOT be used.\n   */\n  sf?: CMCDStreamingFormat;\n\n  /**\n   * Session ID\n   *\n   * A GUID identifying the current playback session. A playback session typically ties together segments belonging to a single media asset.\n   * Maximum length is 64 characters. It is RECOMMENDED to conform to the UUID specification.\n   *\n   * String\n   */\n  sid?: string;\n\n  /**\n   * Stream type\n   * - `v` = all segments are available – e.g., VOD\n   * - `l` = segments become available over time – e.g., LIVE\n   */\n  st?: CMCDStreamType;\n\n  /**\n   * CMCD version\n   *\n   * The version of this specification used for interpreting the defined key names and values. If this key is omitted, the client and server MUST\n   * interpret the values as being defined by version 1. Client SHOULD omit this field if the version is 1.\n   *\n   * Integer\n   */\n  v?: number;\n\n  /////////////////\n  // CMCD Status //\n  /////////////////\n\n  /**\n   * Buffer starvation\n   *\n   * Key is included without a value if the buffer was starved at some point between the prior request and this object request,\n   * resulting in the player being in a rebuffering state and the video or audio playback being stalled. This key MUST NOT be\n   * sent if the buffer was not starved since the prior request.\n   *\n   * If the object type `ot` key is sent along with this key, then the `bs` key refers to the buffer associated with the particular\n   * object type. If no object type is communicated, then the buffer state applies to the current session.\n   *\n   * Boolean\n   */\n  bs?: boolean;\n\n  /**\n   * Requested maximum throughput\n   *\n   * The requested maximum throughput that the client considers sufficient for delivery of the asset. Values MUST be rounded to the\n   * nearest 100kbps. For example, a client would indicate that the current segment, encoded at 2Mbps, is to be delivered at no more\n   * than 10Mbps, by using rtp=10000.\n   *\n   * Note: This can benefit clients by preventing buffer saturation through over-delivery and can also deliver a community benefit\n   * through fair-share delivery. The concept is that each client receives the throughput necessary for great performance, but no more.\n   * The CDN may not support the rtp feature.\n   *\n   * Integer kbps\n   */\n  rtp?: number;\n}\n", "export interface Demuxer {\n  demux(\n    data: Uint8Array,\n    timeOffset: number,\n    isSampleAes?: boolean,\n    flush?: boolean\n  ): DemuxerResult;\n  demuxSampleAes(\n    data: Uint8Array,\n    keyData: KeyData,\n    timeOffset: number\n  ): Promise<DemuxerResult>;\n  flush(timeOffset?: number): DemuxerResult | Promise<DemuxerResult>;\n  destroy(): void;\n  resetInitSegment(\n    initSegment: Uint8Array | undefined,\n    audioCodec: string | undefined,\n    videoCodec: string | undefined,\n    trackDuration: number\n  );\n  resetTimeStamp(defaultInitPTS?: number | null): void;\n  resetContiguity(): void;\n}\n\nexport interface DemuxerResult {\n  audioTrack: DemuxedAudioTrack;\n  videoTrack: DemuxedVideoTrack;\n  id3Track: DemuxedMetadataTrack;\n  textTrack: DemuxedUserdataTrack;\n}\n\nexport interface DemuxedTrack {\n  type: string;\n  id: number;\n  pid: number;\n  inputTimeScale: number;\n  sequenceNumber: number;\n  samples:\n    | AudioSample[]\n    | AvcSample[]\n    | MetadataSample[]\n    | UserdataSample[]\n    | Uint8Array;\n  timescale?: number;\n  container?: string;\n  dropped: number;\n  duration?: number;\n  pesData?: ElementaryStreamData | null;\n  codec?: string;\n}\n\nexport interface PassthroughTrack extends DemuxedTrack {\n  sampleDuration: number;\n  samples: Uint8Array;\n  timescale: number;\n  duration: number;\n  codec: string;\n}\nexport interface DemuxedAudioTrack extends DemuxedTrack {\n  config?: number[];\n  samplerate?: number;\n  segmentCodec?: string;\n  channelCount?: number;\n  manifestCodec?: string;\n  samples: AudioSample[];\n}\n\nexport interface DemuxedVideoTrack extends DemuxedTrack {\n  width?: number;\n  height?: number;\n  pixelRatio?: [number, number];\n  audFound?: boolean;\n  pps?: number[];\n  sps?: number[];\n  naluState?: number;\n  samples: AvcSample[] | Uint8Array;\n}\n\nexport interface DemuxedAvcTrack extends DemuxedVideoTrack {\n  samples: AvcSample[];\n}\n\nexport interface DemuxedMetadataTrack extends DemuxedTrack {\n  samples: MetadataSample[];\n}\n\nexport interface DemuxedUserdataTrack extends DemuxedTrack {\n  samples: UserdataSample[];\n}\n\nexport enum MetadataSchema {\n  audioId3 = 'org.id3',\n  dateRange = 'com.apple.quicktime.HLS',\n  emsg = 'https://aomedia.org/emsg/ID3',\n}\nexport interface MetadataSample {\n  pts: number;\n  dts: number;\n  duration: number;\n  len?: number;\n  data: Uint8Array;\n  type: MetadataSchema;\n}\n\nexport interface UserdataSample {\n  pts: number;\n  bytes?: Uint8Array;\n  type?: number;\n  payloadType?: number;\n  uuid?: string;\n  userData?: string;\n  userDataBytes?: Uint8Array;\n}\n\nexport interface AvcSample {\n  dts: number;\n  pts: number;\n  key: boolean;\n  frame: boolean;\n  units: AvcSampleUnit[];\n  debug: string;\n  length: number;\n}\n\nexport interface AvcSampleUnit {\n  data: Uint8Array;\n  type: number;\n}\n\nexport type AudioSample = {\n  unit: Uint8Array;\n  pts: number;\n};\n\nexport type AudioFrame = {\n  sample: AudioSample;\n  length: number;\n  missing: number;\n};\n\nexport interface ElementaryStreamData {\n  data: Uint8Array[];\n  size: number;\n}\n\nexport interface KeyData {\n  method: string;\n  key: Uint8Array;\n  iv: Uint8Array;\n}\n", "import { LevelDetails } from '../loader/level-details';\nimport { AttrList } from '../utils/attr-list';\n\nexport interface LevelParsed {\n  attrs: LevelAttributes;\n  audioCodec?: string;\n  bitrate: number;\n  details?: LevelDetails;\n  height?: number;\n  id?: number;\n  level?: number;\n  name: string;\n  textCodec?: string;\n  unknownCodecs?: string[];\n  url: string;\n  videoCodec?: string;\n  width?: number;\n}\n\nexport interface LevelAttributes extends AttrList {\n  'ALLOWED-CPC'?: string;\n  AUDIO?: string;\n  AUTOSELECT?: string;\n  'AVERAGE-BANDWIDTH'?: string;\n  BANDWIDTH?: string;\n  BYTERANGE?: string;\n  'CLOSED-CAPTIONS'?: string;\n  CHARACTERISTICS?: string;\n  CODECS?: string;\n  DEFAULT?: string;\n  FORCED?: string;\n  'FRAME-RATE'?: string;\n  'HDCP-LEVEL'?: string;\n  LANGUAGE?: string;\n  NAME?: string;\n  'PATHWAY-ID'?: string;\n  'PROGRAM-ID'?: string;\n  RESOLUTION?: string;\n  SCORE?: string;\n  SUBTITLES?: string;\n  TYPE?: string;\n  URI?: string;\n  'VIDEO-RANGE'?: string;\n}\n\nexport const HdcpLevels = ['NONE', 'TYPE-0', 'TYPE-1', 'TYPE-2', null] as const;\nexport type HdcpLevel = typeof HdcpLevels[number];\n\nexport enum HlsSkip {\n  No = '',\n  Yes = 'YES',\n  v2 = 'v2',\n}\n\nexport function getSkipValue(details: LevelDetails, msn?: number): HlsSkip {\n  const { canSkipUntil, canSkipDateRanges, endSN } = details;\n  const snChangeGoal = msn !== undefined ? msn - endSN : 0;\n  if (canSkipUntil && snChangeGoal < canSkipUntil) {\n    if (canSkipDateRanges) {\n      return HlsSkip.v2;\n    }\n    return HlsSkip.Yes;\n  }\n  return HlsSkip.No;\n}\n\nexport class HlsUrlParameters {\n  msn?: number;\n  part?: number;\n  skip?: HlsSkip;\n\n  constructor(msn?: number, part?: number, skip?: HlsSkip) {\n    this.msn = msn;\n    this.part = part;\n    this.skip = skip;\n  }\n\n  addDirectives(uri: string): string | never {\n    const url: URL = new self.URL(uri);\n    if (this.msn !== undefined) {\n      url.searchParams.set('_HLS_msn', this.msn.toString());\n    }\n    if (this.part !== undefined) {\n      url.searchParams.set('_HLS_part', this.part.toString());\n    }\n    if (this.skip) {\n      url.searchParams.set('_HLS_skip', this.skip);\n    }\n    return url.href;\n  }\n}\n\nexport class Level {\n  public readonly attrs: LevelAttributes;\n  public readonly audioCodec: string | undefined;\n  public readonly bitrate: number;\n  public readonly codecSet: string;\n  public readonly height: number;\n  public readonly id: number;\n  public readonly name: string | undefined;\n  public readonly videoCodec: string | undefined;\n  public readonly width: number;\n  public readonly unknownCodecs: string[] | undefined;\n  public audioGroupIds?: string[];\n  public details?: LevelDetails;\n  public fragmentError: number = 0;\n  public loadError: number = 0;\n  public loaded?: { bytes: number; duration: number };\n  public realBitrate: number = 0;\n  public textGroupIds?: string[];\n  public url: string[];\n  private _urlId: number = 0;\n\n  constructor(data: LevelParsed) {\n    this.url = [data.url];\n    this.attrs = data.attrs;\n    this.bitrate = data.bitrate;\n    if (data.details) {\n      this.details = data.details;\n    }\n    this.id = data.id || 0;\n    this.name = data.name;\n    this.width = data.width || 0;\n    this.height = data.height || 0;\n    this.audioCodec = data.audioCodec;\n    this.videoCodec = data.videoCodec;\n    this.unknownCodecs = data.unknownCodecs;\n    this.codecSet = [data.videoCodec, data.audioCodec]\n      .filter((c) => c)\n      .join(',')\n      .replace(/\\.[^.,]+/g, '');\n  }\n\n  get maxBitrate(): number {\n    return Math.max(this.realBitrate, this.bitrate);\n  }\n\n  get uri(): string {\n    return this.url[this._urlId] || '';\n  }\n\n  get urlId(): number {\n    return this._urlId;\n  }\n\n  set urlId(value: number) {\n    const newValue = value % this.url.length;\n    if (this._urlId !== newValue) {\n      this.details = undefined;\n      this._urlId = newValue;\n    }\n  }\n}\n", "import type { Fragment } from '../loader/fragment';\nimport type { Part } from '../loader/fragment';\nimport type { KeyLoaderInfo } from '../loader/key-loader';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { HlsUrlParameters } from './level';\n\nexport interface LoaderContext {\n  // target URL\n  url: string;\n  // loader response type (arraybuffer or default response type for playlist)\n  responseType: string;\n  // headers\n  headers?: Record<string, string>;\n  // start byte range offset\n  rangeStart?: number;\n  // end byte range offset\n  rangeEnd?: number;\n  // true if onProgress should report partial chunk of loaded content\n  progressData?: boolean;\n}\n\nexport interface FragmentLoaderContext extends LoaderContext {\n  frag: Fragment;\n  part: Part | null;\n  resetIV?: boolean;\n}\n\nexport interface KeyLoaderContext extends LoaderContext {\n  keyInfo: KeyLoaderInfo;\n  frag: Fragment;\n}\n\nexport interface LoaderConfiguration {\n  // Max number of load retries\n  maxRetry: number;\n  // Timeout after which `onTimeOut` callback will be triggered\n  // (if loading is still not finished after that delay)\n  timeout: number;\n  // Delay between an I/O error and following connection retry (ms).\n  // This to avoid spamming the server\n  retryDelay: number;\n  // max connection retry delay (ms)\n  maxRetryDelay: number;\n  // When streaming progressively, this is the minimum chunk size required to emit a PROGRESS event\n  highWaterMark: number;\n}\n\nexport interface LoaderResponse {\n  url: string;\n  data: string | ArrayBuffer;\n}\n\nexport interface LoaderStats {\n  aborted: boolean;\n  loaded: number;\n  retry: number;\n  total: number;\n  chunkCount: number;\n  bwEstimate: number;\n  loading: HlsProgressivePerformanceTiming;\n  parsing: HlsPerformanceTiming;\n  buffering: HlsProgressivePerformanceTiming;\n}\n\nexport interface HlsPerformanceTiming {\n  start: number;\n  end: number;\n}\n\nexport interface HlsChunkPerformanceTiming extends HlsPerformanceTiming {\n  executeStart: number;\n  executeEnd: number;\n}\n\nexport interface HlsProgressivePerformanceTiming extends HlsPerformanceTiming {\n  first: number;\n}\n\nexport type LoaderOnSuccess<T extends LoaderContext> = (\n  response: LoaderResponse,\n  stats: LoaderStats,\n  context: T,\n  networkDetails: any\n) => void;\n\nexport type LoaderOnProgress<T extends LoaderContext> = (\n  stats: LoaderStats,\n  context: T,\n  data: string | ArrayBuffer,\n  networkDetails: any\n) => void;\n\nexport type LoaderOnError<T extends LoaderContext> = (\n  error: {\n    // error status code\n    code: number;\n    // error description\n    text: string;\n  },\n  context: T,\n  networkDetails: any\n) => void;\n\nexport type LoaderOnTimeout<T extends LoaderContext> = (\n  stats: LoaderStats,\n  context: T,\n  networkDetails: any\n) => void;\n\nexport type LoaderOnAbort<T extends LoaderContext> = (\n  stats: LoaderStats,\n  context: T,\n  networkDetails: any\n) => void;\n\nexport interface LoaderCallbacks<T extends LoaderContext> {\n  onSuccess: LoaderOnSuccess<T>;\n  onError: LoaderOnError<T>;\n  onTimeout: LoaderOnTimeout<T>;\n  onAbort?: LoaderOnAbort<T>;\n  onProgress?: LoaderOnProgress<T>;\n}\n\nexport interface Loader<T extends LoaderContext> {\n  destroy(): void;\n  abort(): void;\n  load(\n    context: LoaderContext,\n    config: LoaderConfiguration,\n    callbacks: LoaderCallbacks<T>\n  ): void;\n  /**\n   * `getCacheAge()` is called by hls.js to get the duration that a given object\n   * has been sitting in a cache proxy when playing live.  If implemented,\n   * this should return a value in seconds.\n   *\n   * For HTTP based loaders, this should return the contents of the \"age\" header.\n   *\n   * @returns time object being lodaded\n   */\n  getCacheAge?: () => number | null;\n  context: T;\n  stats: LoaderStats;\n}\n\nexport enum PlaylistContextType {\n  MANIFEST = 'manifest',\n  LEVEL = 'level',\n  AUDIO_TRACK = 'audioTrack',\n  SUBTITLE_TRACK = 'subtitleTrack',\n}\n\nexport enum PlaylistLevelType {\n  MAIN = 'main',\n  AUDIO = 'audio',\n  SUBTITLE = 'subtitle',\n}\n\nexport interface PlaylistLoaderContext extends LoaderContext {\n  loader?: Loader<PlaylistLoaderContext>;\n\n  type: PlaylistContextType;\n  // the level index to load\n  level: number | null;\n  // level or track id from LevelLoadingData / TrackLoadingData\n  id: number | null;\n  // track group id\n  groupId: string | null;\n  // internal representation of a parsed m3u8 level playlist\n  levelDetails?: LevelDetails;\n  // Blocking playlist request delivery directives (or null id none were added to playlist url\n  deliveryDirectives: HlsUrlParameters | null;\n}\n", "import type { RemuxerResult } from './remuxer';\nimport type { HlsChunkPerformanceTiming } from './loader';\nimport type { SourceBufferName } from './buffer';\n\nexport interface TransmuxerResult {\n  remuxResult: RemuxerResult;\n  chunkMeta: ChunkMetadata;\n}\n\nexport class ChunkMetadata {\n  public readonly level: number;\n  public readonly sn: number;\n  public readonly part: number;\n  public readonly id: number;\n  public readonly size: number;\n  public readonly partial: boolean;\n  public readonly transmuxing: HlsChunkPerformanceTiming =\n    getNewPerformanceTiming();\n  public readonly buffering: {\n    [key in SourceBufferName]: HlsChunkPerformanceTiming;\n  } = {\n    audio: getNewPerformanceTiming(),\n    video: getNewPerformanceTiming(),\n    audiovideo: getNewPerformanceTiming(),\n  };\n\n  constructor(\n    level: number,\n    sn: number,\n    id: number,\n    size = 0,\n    part = -1,\n    partial = false\n  ) {\n    this.level = level;\n    this.sn = sn;\n    this.id = id;\n    this.size = size;\n    this.part = part;\n    this.partial = partial;\n  }\n}\n\nfunction getNewPerformanceTiming(): HlsChunkPerformanceTiming {\n  return { start: 0, executeStart: 0, executeEnd: 0, end: 0 };\n}\n", "const DECIMAL_RESOLUTION_REGEX = /^(\\d+)x(\\d+)$/; // eslint-disable-line no-useless-escape\nconst ATTR_LIST_REGEX = /\\s*(.+?)\\s*=((?:\\\".*?\\\")|.*?)(?:,|$)/g; // eslint-disable-line no-useless-escape\n\n// adapted from https://github.com/kanongil/node-m3u8parse/blob/master/attrlist.js\nexport class AttrList {\n  [key: string]: any;\n\n  constructor(attrs: string | Record<string, any>) {\n    if (typeof attrs === 'string') {\n      attrs = AttrList.parseAttrList(attrs);\n    }\n\n    for (const attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        this[attr] = attrs[attr];\n      }\n    }\n  }\n\n  decimalInteger(attrName: string): number {\n    const intValue = parseInt(this[attrName], 10);\n    if (intValue > Number.MAX_SAFE_INTEGER) {\n      return Infinity;\n    }\n\n    return intValue;\n  }\n\n  hexadecimalInteger(attrName: string) {\n    if (this[attrName]) {\n      let stringValue = (this[attrName] || '0x').slice(2);\n      stringValue = (stringValue.length & 1 ? '0' : '') + stringValue;\n\n      const value = new Uint8Array(stringValue.length / 2);\n      for (let i = 0; i < stringValue.length / 2; i++) {\n        value[i] = parseInt(stringValue.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      return value;\n    } else {\n      return null;\n    }\n  }\n\n  hexadecimalIntegerAsNumber(attrName: string): number {\n    const intValue = parseInt(this[attrName], 16);\n    if (intValue > Number.MAX_SAFE_INTEGER) {\n      return Infinity;\n    }\n\n    return intValue;\n  }\n\n  decimalFloatingPoint(attrName: string): number {\n    return parseFloat(this[attrName]);\n  }\n\n  optionalFloat(attrName: string, defaultValue: number): number {\n    const value = this[attrName];\n    return value ? parseFloat(value) : defaultValue;\n  }\n\n  enumeratedString(attrName: string): string | undefined {\n    return this[attrName];\n  }\n\n  bool(attrName: string): boolean {\n    return this[attrName] === 'YES';\n  }\n\n  decimalResolution(attrName: string):\n    | {\n        width: number;\n        height: number;\n      }\n    | undefined {\n    const res = DECIMAL_RESOLUTION_REGEX.exec(this[attrName]);\n    if (res === null) {\n      return undefined;\n    }\n\n    return {\n      width: parseInt(res[1], 10),\n      height: parseInt(res[2], 10),\n    };\n  }\n\n  static parseAttrList(input: string): Record<string, any> {\n    let match;\n    const attrs = {};\n    const quote = '\"';\n    ATTR_LIST_REGEX.lastIndex = 0;\n    while ((match = ATTR_LIST_REGEX.exec(input)) !== null) {\n      let value = match[2];\n\n      if (\n        value.indexOf(quote) === 0 &&\n        value.lastIndexOf(quote) === value.length - 1\n      ) {\n        value = value.slice(1, -1);\n      }\n\n      attrs[match[1]] = value;\n    }\n    return attrs;\n  }\n}\n", "type BinarySearchComparison<T> = (candidate: T) => -1 | 0 | 1;\n\nconst BinarySearch = {\n  /**\n   * Searches for an item in an array which matches a certain condition.\n   * This requires the condition to only match one item in the array,\n   * and for the array to be ordered.\n   *\n   * @param {Array<T>} list The array to search.\n   * @param {BinarySearchComparison<T>} comparisonFn\n   *      Called and provided a candidate item as the first argument.\n   *      Should return:\n   *          > -1 if the item should be located at a lower index than the provided item.\n   *          > 1 if the item should be located at a higher index than the provided item.\n   *          > 0 if the item is the item you're looking for.\n   *\n   * @return {T | null} The object if it is found or null otherwise.\n   */\n  search: function <T>(\n    list: T[],\n    comparisonFn: BinarySearchComparison<T>\n  ): T | null {\n    let minIndex: number = 0;\n    let maxIndex: number = list.length - 1;\n    let currentIndex: number | null = null;\n    let currentElement: T | null = null;\n\n    while (minIndex <= maxIndex) {\n      currentIndex = ((minIndex + maxIndex) / 2) | 0;\n      currentElement = list[currentIndex];\n\n      const comparisonResult = comparisonFn(currentElement);\n      if (comparisonResult > 0) {\n        minIndex = currentIndex + 1;\n      } else if (comparisonResult < 0) {\n        maxIndex = currentIndex - 1;\n      } else {\n        return currentElement;\n      }\n    }\n\n    return null;\n  },\n};\n\nexport default BinarySearch;\n", "/**\n * @module BufferHelper\n *\n * Providing methods dealing with buffer length retrieval for example.\n *\n * In general, a helper around HTML5 MediaElement TimeRanges gathered from `buffered` property.\n *\n * Also @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/buffered\n */\n\nimport { logger } from './logger';\n\ntype BufferTimeRange = {\n  start: number;\n  end: number;\n};\n\nexport type Bufferable = {\n  buffered: TimeRanges;\n};\n\nexport type BufferInfo = {\n  len: number;\n  start: number;\n  end: number;\n  nextStart?: number;\n};\n\nconst noopBuffered: TimeRanges = {\n  length: 0,\n  start: () => 0,\n  end: () => 0,\n};\n\nexport class BufferHelper {\n  /**\n   * Return true if `media`'s buffered include `position`\n   * @param {Bufferable} media\n   * @param {number} position\n   * @returns {boolean}\n   */\n  static isBuffered(media: Bufferable, position: number): boolean {\n    try {\n      if (media) {\n        const buffered = BufferHelper.getBuffered(media);\n        for (let i = 0; i < buffered.length; i++) {\n          if (position >= buffered.start(i) && position <= buffered.end(i)) {\n            return true;\n          }\n        }\n      }\n    } catch (error) {\n      // this is to catch\n      // InvalidStateError: Failed to read the 'buffered' property from 'SourceBuffer':\n      // This SourceBuffer has been removed from the parent media source\n    }\n    return false;\n  }\n\n  static bufferInfo(\n    media: Bufferable | null,\n    pos: number,\n    maxHoleDuration: number\n  ): BufferInfo {\n    try {\n      if (media) {\n        const vbuffered = BufferHelper.getBuffered(media);\n        const buffered: BufferTimeRange[] = [];\n        let i: number;\n        for (i = 0; i < vbuffered.length; i++) {\n          buffered.push({ start: vbuffered.start(i), end: vbuffered.end(i) });\n        }\n\n        return this.bufferedInfo(buffered, pos, maxHoleDuration);\n      }\n    } catch (error) {\n      // this is to catch\n      // InvalidStateError: Failed to read the 'buffered' property from 'SourceBuffer':\n      // This SourceBuffer has been removed from the parent media source\n    }\n    return { len: 0, start: pos, end: pos, nextStart: undefined };\n  }\n\n  static bufferedInfo(\n    buffered: BufferTimeRange[],\n    pos: number,\n    maxHoleDuration: number\n  ): {\n    len: number;\n    start: number;\n    end: number;\n    nextStart?: number;\n  } {\n    pos = Math.max(0, pos);\n    // sort on buffer.start/smaller end (IE does not always return sorted buffered range)\n    buffered.sort(function (a, b) {\n      const diff = a.start - b.start;\n      if (diff) {\n        return diff;\n      } else {\n        return b.end - a.end;\n      }\n    });\n\n    let buffered2: BufferTimeRange[] = [];\n    if (maxHoleDuration) {\n      // there might be some small holes between buffer time range\n      // consider that holes smaller than maxHoleDuration are irrelevant and build another\n      // buffer time range representations that discards those holes\n      for (let i = 0; i < buffered.length; i++) {\n        const buf2len = buffered2.length;\n        if (buf2len) {\n          const buf2end = buffered2[buf2len - 1].end;\n          // if small hole (value between 0 or maxHoleDuration ) or overlapping (negative)\n          if (buffered[i].start - buf2end < maxHoleDuration) {\n            // merge overlapping time ranges\n            // update lastRange.end only if smaller than item.end\n            // e.g.  [ 1, 15] with  [ 2,8] => [ 1,15] (no need to modify lastRange.end)\n            // whereas [ 1, 8] with  [ 2,15] => [ 1,15] ( lastRange should switch from [1,8] to [1,15])\n            if (buffered[i].end > buf2end) {\n              buffered2[buf2len - 1].end = buffered[i].end;\n            }\n          } else {\n            // big hole\n            buffered2.push(buffered[i]);\n          }\n        } else {\n          // first value\n          buffered2.push(buffered[i]);\n        }\n      }\n    } else {\n      buffered2 = buffered;\n    }\n\n    let bufferLen = 0;\n\n    // bufferStartNext can possibly be undefined based on the conditional logic below\n    let bufferStartNext: number | undefined;\n\n    // bufferStart and bufferEnd are buffer boundaries around current video position\n    let bufferStart: number = pos;\n    let bufferEnd: number = pos;\n    for (let i = 0; i < buffered2.length; i++) {\n      const start = buffered2[i].start;\n      const end = buffered2[i].end;\n      // logger.log('buf start/end:' + buffered.start(i) + '/' + buffered.end(i));\n      if (pos + maxHoleDuration >= start && pos < end) {\n        // play position is inside this buffer TimeRange, retrieve end of buffer position and buffer length\n        bufferStart = start;\n        bufferEnd = end;\n        bufferLen = bufferEnd - pos;\n      } else if (pos + maxHoleDuration < start) {\n        bufferStartNext = start;\n        break;\n      }\n    }\n    return {\n      len: bufferLen,\n      start: bufferStart || 0,\n      end: bufferEnd || 0,\n      nextStart: bufferStartNext,\n    };\n  }\n\n  /**\n   * Safe method to get buffered property.\n   * SourceBuffer.buffered may throw if SourceBuffer is removed from it's MediaSource\n   */\n  static getBuffered(media: Bufferable): TimeRanges {\n    try {\n      return media.buffered;\n    } catch (e) {\n      logger.log('failed to get media.buffered', e);\n      return noopBuffered;\n    }\n  }\n}\n", "import OutputFilter from './output-filter';\nimport { logger } from '../utils/logger';\n\n/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\n */\n\nconst specialCea608CharsCodes = {\n  0x2a: 0xe1, // lowercase a, acute accent\n  0x5c: 0xe9, // lowercase e, acute accent\n  0x5e: 0xed, // lowercase i, acute accent\n  0x5f: 0xf3, // lowercase o, acute accent\n  0x60: 0xfa, // lowercase u, acute accent\n  0x7b: 0xe7, // lowercase c with cedilla\n  0x7c: 0xf7, // division symbol\n  0x7d: 0xd1, // uppercase N tilde\n  0x7e: 0xf1, // lowercase n tilde\n  0x7f: 0x2588, // Full block\n  // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n  // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\n  // THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\n  0x80: 0xae, // Registered symbol (R)\n  0x81: 0xb0, // degree sign\n  0x82: 0xbd, // 1/2 symbol\n  0x83: 0xbf, // Inverted (open) question mark\n  0x84: 0x2122, // Trademark symbol (TM)\n  0x85: 0xa2, // Cents symbol\n  0x86: 0xa3, // Pounds sterling\n  0x87: 0x266a, // Music 8'th note\n  0x88: 0xe0, // lowercase a, grave accent\n  0x89: 0x20, // transparent space (regular)\n  0x8a: 0xe8, // lowercase e, grave accent\n  0x8b: 0xe2, // lowercase a, circumflex accent\n  0x8c: 0xea, // lowercase e, circumflex accent\n  0x8d: 0xee, // lowercase i, circumflex accent\n  0x8e: 0xf4, // lowercase o, circumflex accent\n  0x8f: 0xfb, // lowercase u, circumflex accent\n  // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n  // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\n  0x90: 0xc1, // capital letter A with acute\n  0x91: 0xc9, // capital letter E with acute\n  0x92: 0xd3, // capital letter O with acute\n  0x93: 0xda, // capital letter U with acute\n  0x94: 0xdc, // capital letter U with diaresis\n  0x95: 0xfc, // lowercase letter U with diaeresis\n  0x96: 0x2018, // opening single quote\n  0x97: 0xa1, // inverted exclamation mark\n  0x98: 0x2a, // asterisk\n  0x99: 0x2019, // closing single quote\n  0x9a: 0x2501, // box drawings heavy horizontal\n  0x9b: 0xa9, // copyright sign\n  0x9c: 0x2120, // Service mark\n  0x9d: 0x2022, // (round) bullet\n  0x9e: 0x201c, // Left double quotation mark\n  0x9f: 0x201d, // Right double quotation mark\n  0xa0: 0xc0, // uppercase A, grave accent\n  0xa1: 0xc2, // uppercase A, circumflex\n  0xa2: 0xc7, // uppercase C with cedilla\n  0xa3: 0xc8, // uppercase E, grave accent\n  0xa4: 0xca, // uppercase E, circumflex\n  0xa5: 0xcb, // capital letter E with diaresis\n  0xa6: 0xeb, // lowercase letter e with diaresis\n  0xa7: 0xce, // uppercase I, circumflex\n  0xa8: 0xcf, // uppercase I, with diaresis\n  0xa9: 0xef, // lowercase i, with diaresis\n  0xaa: 0xd4, // uppercase O, circumflex\n  0xab: 0xd9, // uppercase U, grave accent\n  0xac: 0xf9, // lowercase u, grave accent\n  0xad: 0xdb, // uppercase U, circumflex\n  0xae: 0xab, // left-pointing double angle quotation mark\n  0xaf: 0xbb, // right-pointing double angle quotation mark\n  // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n  // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\n  0xb0: 0xc3, // Uppercase A, tilde\n  0xb1: 0xe3, // Lowercase a, tilde\n  0xb2: 0xcd, // Uppercase I, acute accent\n  0xb3: 0xcc, // Uppercase I, grave accent\n  0xb4: 0xec, // Lowercase i, grave accent\n  0xb5: 0xd2, // Uppercase O, grave accent\n  0xb6: 0xf2, // Lowercase o, grave accent\n  0xb7: 0xd5, // Uppercase O, tilde\n  0xb8: 0xf5, // Lowercase o, tilde\n  0xb9: 0x7b, // Open curly brace\n  0xba: 0x7d, // Closing curly brace\n  0xbb: 0x5c, // Backslash\n  0xbc: 0x5e, // Caret\n  0xbd: 0x5f, // Underscore\n  0xbe: 0x7c, // Pipe (vertical line)\n  0xbf: 0x223c, // Tilde operator\n  0xc0: 0xc4, // Uppercase A, umlaut\n  0xc1: 0xe4, // Lowercase A, umlaut\n  0xc2: 0xd6, // Uppercase O, umlaut\n  0xc3: 0xf6, // Lowercase o, umlaut\n  0xc4: 0xdf, // Esszett (sharp S)\n  0xc5: 0xa5, // Yen symbol\n  0xc6: 0xa4, // Generic currency sign\n  0xc7: 0x2503, // Box drawings heavy vertical\n  0xc8: 0xc5, // Uppercase A, ring\n  0xc9: 0xe5, // Lowercase A, ring\n  0xca: 0xd8, // Uppercase O, stroke\n  0xcb: 0xf8, // Lowercase o, strok\n  0xcc: 0x250f, // Box drawings heavy down and right\n  0xcd: 0x2513, // Box drawings heavy down and left\n  0xce: 0x2517, // Box drawings heavy up and right\n  0xcf: 0x251b, // Box drawings heavy up and left\n};\n\n/**\n * Utils\n */\nconst getCharForByte = function (byte: number) {\n  let charCode = byte;\n  if (specialCea608CharsCodes.hasOwnProperty(byte)) {\n    charCode = specialCea608CharsCodes[byte];\n  }\n\n  return String.fromCharCode(charCode);\n};\n\nconst NR_ROWS = 15;\nconst NR_COLS = 100;\n// Tables to look up row from PAC data\nconst rowsLowCh1 = {\n  0x11: 1,\n  0x12: 3,\n  0x15: 5,\n  0x16: 7,\n  0x17: 9,\n  0x10: 11,\n  0x13: 12,\n  0x14: 14,\n};\nconst rowsHighCh1 = {\n  0x11: 2,\n  0x12: 4,\n  0x15: 6,\n  0x16: 8,\n  0x17: 10,\n  0x13: 13,\n  0x14: 15,\n};\nconst rowsLowCh2 = {\n  0x19: 1,\n  0x1a: 3,\n  0x1d: 5,\n  0x1e: 7,\n  0x1f: 9,\n  0x18: 11,\n  0x1b: 12,\n  0x1c: 14,\n};\nconst rowsHighCh2 = {\n  0x19: 2,\n  0x1a: 4,\n  0x1d: 6,\n  0x1e: 8,\n  0x1f: 10,\n  0x1b: 13,\n  0x1c: 15,\n};\n\nconst backgroundColors = [\n  'white',\n  'green',\n  'blue',\n  'cyan',\n  'red',\n  'yellow',\n  'magenta',\n  'black',\n  'transparent',\n];\n\nenum VerboseLevel {\n  ERROR = 0,\n  TEXT = 1,\n  WARNING = 2,\n  INFO = 2,\n  DEBUG = 3,\n  DATA = 3,\n}\n\nclass CaptionsLogger {\n  public time: number | null = null;\n  public verboseLevel: VerboseLevel = VerboseLevel.ERROR;\n\n  log(severity: VerboseLevel, msg: string | (() => string)): void {\n    if (this.verboseLevel >= severity) {\n      const m: string = typeof msg === 'function' ? msg() : msg;\n      logger.log(`${this.time} [${severity}] ${m}`);\n    }\n  }\n}\n\nconst numArrayToHexArray = function (numArray: number[]): string[] {\n  const hexArray: string[] = [];\n  for (let j = 0; j < numArray.length; j++) {\n    hexArray.push(numArray[j].toString(16));\n  }\n\n  return hexArray;\n};\n\ntype PenStyles = {\n  foreground: string | null;\n  underline: boolean;\n  italics: boolean;\n  background: string;\n  flash: boolean;\n};\n\nclass PenState {\n  public foreground: string;\n  public underline: boolean;\n  public italics: boolean;\n  public background: string;\n  public flash: boolean;\n\n  constructor(\n    foreground?: string,\n    underline?: boolean,\n    italics?: boolean,\n    background?: string,\n    flash?: boolean\n  ) {\n    this.foreground = foreground || 'white';\n    this.underline = underline || false;\n    this.italics = italics || false;\n    this.background = background || 'black';\n    this.flash = flash || false;\n  }\n\n  reset() {\n    this.foreground = 'white';\n    this.underline = false;\n    this.italics = false;\n    this.background = 'black';\n    this.flash = false;\n  }\n\n  setStyles(styles: Partial<PenStyles>) {\n    const attribs = [\n      'foreground',\n      'underline',\n      'italics',\n      'background',\n      'flash',\n    ];\n    for (let i = 0; i < attribs.length; i++) {\n      const style = attribs[i];\n      if (styles.hasOwnProperty(style)) {\n        this[style] = styles[style];\n      }\n    }\n  }\n\n  isDefault() {\n    return (\n      this.foreground === 'white' &&\n      !this.underline &&\n      !this.italics &&\n      this.background === 'black' &&\n      !this.flash\n    );\n  }\n\n  equals(other: PenState) {\n    return (\n      this.foreground === other.foreground &&\n      this.underline === other.underline &&\n      this.italics === other.italics &&\n      this.background === other.background &&\n      this.flash === other.flash\n    );\n  }\n\n  copy(newPenState: PenState) {\n    this.foreground = newPenState.foreground;\n    this.underline = newPenState.underline;\n    this.italics = newPenState.italics;\n    this.background = newPenState.background;\n    this.flash = newPenState.flash;\n  }\n\n  toString(): string {\n    return (\n      'color=' +\n      this.foreground +\n      ', underline=' +\n      this.underline +\n      ', italics=' +\n      this.italics +\n      ', background=' +\n      this.background +\n      ', flash=' +\n      this.flash\n    );\n  }\n}\n\n/**\n * Unicode character with styling and background.\n * @constructor\n */\nclass StyledUnicodeChar {\n  uchar: string;\n  penState: PenState;\n\n  constructor(\n    uchar?: string,\n    foreground?: string,\n    underline?: boolean,\n    italics?: boolean,\n    background?: string,\n    flash?: boolean\n  ) {\n    this.uchar = uchar || ' '; // unicode character\n    this.penState = new PenState(\n      foreground,\n      underline,\n      italics,\n      background,\n      flash\n    );\n  }\n\n  reset() {\n    this.uchar = ' ';\n    this.penState.reset();\n  }\n\n  setChar(uchar: string, newPenState: PenState) {\n    this.uchar = uchar;\n    this.penState.copy(newPenState);\n  }\n\n  setPenState(newPenState: PenState) {\n    this.penState.copy(newPenState);\n  }\n\n  equals(other: StyledUnicodeChar) {\n    return this.uchar === other.uchar && this.penState.equals(other.penState);\n  }\n\n  copy(newChar: StyledUnicodeChar) {\n    this.uchar = newChar.uchar;\n    this.penState.copy(newChar.penState);\n  }\n\n  isEmpty(): boolean {\n    return this.uchar === ' ' && this.penState.isDefault();\n  }\n}\n\n/**\n * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\n * @constructor\n */\nexport class Row {\n  public chars: StyledUnicodeChar[];\n  public pos: number;\n  public currPenState: PenState;\n  public cueStartTime?: number;\n  logger: CaptionsLogger;\n\n  constructor(logger: CaptionsLogger) {\n    this.chars = [];\n    for (let i = 0; i < NR_COLS; i++) {\n      this.chars.push(new StyledUnicodeChar());\n    }\n\n    this.logger = logger;\n    this.pos = 0;\n    this.currPenState = new PenState();\n  }\n\n  equals(other: Row) {\n    let equal = true;\n    for (let i = 0; i < NR_COLS; i++) {\n      if (!this.chars[i].equals(other.chars[i])) {\n        equal = false;\n        break;\n      }\n    }\n    return equal;\n  }\n\n  copy(other: Row) {\n    for (let i = 0; i < NR_COLS; i++) {\n      this.chars[i].copy(other.chars[i]);\n    }\n  }\n\n  isEmpty(): boolean {\n    let empty = true;\n    for (let i = 0; i < NR_COLS; i++) {\n      if (!this.chars[i].isEmpty()) {\n        empty = false;\n        break;\n      }\n    }\n    return empty;\n  }\n\n  /**\n   *  Set the cursor to a valid column.\n   */\n  setCursor(absPos: number) {\n    if (this.pos !== absPos) {\n      this.pos = absPos;\n    }\n\n    if (this.pos < 0) {\n      this.logger.log(\n        VerboseLevel.DEBUG,\n        'Negative cursor position ' + this.pos\n      );\n      this.pos = 0;\n    } else if (this.pos > NR_COLS) {\n      this.logger.log(\n        VerboseLevel.DEBUG,\n        'Too large cursor position ' + this.pos\n      );\n      this.pos = NR_COLS;\n    }\n  }\n\n  /**\n   * Move the cursor relative to current position.\n   */\n  moveCursor(relPos: number) {\n    const newPos = this.pos + relPos;\n    if (relPos > 1) {\n      for (let i = this.pos + 1; i < newPos + 1; i++) {\n        this.chars[i].setPenState(this.currPenState);\n      }\n    }\n    this.setCursor(newPos);\n  }\n\n  /**\n   * Backspace, move one step back and clear character.\n   */\n  backSpace() {\n    this.moveCursor(-1);\n    this.chars[this.pos].setChar(' ', this.currPenState);\n  }\n\n  insertChar(byte: number) {\n    if (byte >= 0x90) {\n      // Extended char\n      this.backSpace();\n    }\n    const char = getCharForByte(byte);\n    if (this.pos >= NR_COLS) {\n      this.logger.log(\n        VerboseLevel.ERROR,\n        () =>\n          'Cannot insert ' +\n          byte.toString(16) +\n          ' (' +\n          char +\n          ') at position ' +\n          this.pos +\n          '. Skipping it!'\n      );\n      return;\n    }\n    this.chars[this.pos].setChar(char, this.currPenState);\n    this.moveCursor(1);\n  }\n\n  clearFromPos(startPos: number) {\n    let i: number;\n    for (i = startPos; i < NR_COLS; i++) {\n      this.chars[i].reset();\n    }\n  }\n\n  clear() {\n    this.clearFromPos(0);\n    this.pos = 0;\n    this.currPenState.reset();\n  }\n\n  clearToEndOfRow() {\n    this.clearFromPos(this.pos);\n  }\n\n  getTextString() {\n    const chars: string[] = [];\n    let empty = true;\n    for (let i = 0; i < NR_COLS; i++) {\n      const char = this.chars[i].uchar;\n      if (char !== ' ') {\n        empty = false;\n      }\n\n      chars.push(char);\n    }\n    if (empty) {\n      return '';\n    } else {\n      return chars.join('');\n    }\n  }\n\n  setPenStyles(styles: Partial<PenStyles>) {\n    this.currPenState.setStyles(styles);\n    const currChar = this.chars[this.pos];\n    currChar.setPenState(this.currPenState);\n  }\n}\n\n/**\n * Keep a CEA-608 screen of 32x15 styled characters\n * @constructor\n */\nexport class CaptionScreen {\n  rows: Row[];\n  currRow: number;\n  nrRollUpRows: number | null;\n  lastOutputScreen: CaptionScreen | null;\n  logger: CaptionsLogger;\n\n  constructor(logger: CaptionsLogger) {\n    this.rows = [];\n    for (let i = 0; i < NR_ROWS; i++) {\n      this.rows.push(new Row(logger));\n    } // Note that we use zero-based numbering (0-14)\n\n    this.logger = logger;\n    this.currRow = NR_ROWS - 1;\n    this.nrRollUpRows = null;\n    this.lastOutputScreen = null;\n    this.reset();\n  }\n\n  reset() {\n    for (let i = 0; i < NR_ROWS; i++) {\n      this.rows[i].clear();\n    }\n\n    this.currRow = NR_ROWS - 1;\n  }\n\n  equals(other: CaptionScreen): boolean {\n    let equal = true;\n    for (let i = 0; i < NR_ROWS; i++) {\n      if (!this.rows[i].equals(other.rows[i])) {\n        equal = false;\n        break;\n      }\n    }\n    return equal;\n  }\n\n  copy(other: CaptionScreen) {\n    for (let i = 0; i < NR_ROWS; i++) {\n      this.rows[i].copy(other.rows[i]);\n    }\n  }\n\n  isEmpty(): boolean {\n    let empty = true;\n    for (let i = 0; i < NR_ROWS; i++) {\n      if (!this.rows[i].isEmpty()) {\n        empty = false;\n        break;\n      }\n    }\n    return empty;\n  }\n\n  backSpace() {\n    const row = this.rows[this.currRow];\n    row.backSpace();\n  }\n\n  clearToEndOfRow() {\n    const row = this.rows[this.currRow];\n    row.clearToEndOfRow();\n  }\n\n  /**\n   * Insert a character (without styling) in the current row.\n   */\n  insertChar(char: number) {\n    const row = this.rows[this.currRow];\n    row.insertChar(char);\n  }\n\n  setPen(styles: Partial<PenStyles>) {\n    const row = this.rows[this.currRow];\n    row.setPenStyles(styles);\n  }\n\n  moveCursor(relPos: number) {\n    const row = this.rows[this.currRow];\n    row.moveCursor(relPos);\n  }\n\n  setCursor(absPos: number) {\n    this.logger.log(VerboseLevel.INFO, 'setCursor: ' + absPos);\n    const row = this.rows[this.currRow];\n    row.setCursor(absPos);\n  }\n\n  setPAC(pacData: PACData) {\n    this.logger.log(\n      VerboseLevel.INFO,\n      () => 'pacData = ' + JSON.stringify(pacData)\n    );\n    let newRow = pacData.row - 1;\n    if (this.nrRollUpRows && newRow < this.nrRollUpRows - 1) {\n      newRow = this.nrRollUpRows - 1;\n    }\n\n    // Make sure this only affects Roll-up Captions by checking this.nrRollUpRows\n    if (this.nrRollUpRows && this.currRow !== newRow) {\n      // clear all rows first\n      for (let i = 0; i < NR_ROWS; i++) {\n        this.rows[i].clear();\n      }\n\n      // Copy this.nrRollUpRows rows from lastOutputScreen and place it in the newRow location\n      // topRowIndex - the start of rows to copy (inclusive index)\n      const topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n      // We only copy if the last position was already shown.\n      // We use the cueStartTime value to check this.\n      const lastOutputScreen = this.lastOutputScreen;\n      if (lastOutputScreen) {\n        const prevLineTime = lastOutputScreen.rows[topRowIndex].cueStartTime;\n        const time = this.logger.time;\n        if (prevLineTime && time !== null && prevLineTime < time) {\n          for (let i = 0; i < this.nrRollUpRows; i++) {\n            this.rows[newRow - this.nrRollUpRows + i + 1].copy(\n              lastOutputScreen.rows[topRowIndex + i]\n            );\n          }\n        }\n      }\n    }\n\n    this.currRow = newRow;\n    const row = this.rows[this.currRow];\n    if (pacData.indent !== null) {\n      const indent = pacData.indent;\n      const prevPos = Math.max(indent - 1, 0);\n      row.setCursor(pacData.indent);\n      pacData.color = row.chars[prevPos].penState.foreground;\n    }\n    const styles: PenStyles = {\n      foreground: pacData.color,\n      underline: pacData.underline,\n      italics: pacData.italics,\n      background: 'black',\n      flash: false,\n    };\n    this.setPen(styles);\n  }\n\n  /**\n   * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n   */\n  setBkgData(bkgData: Partial<PenStyles>) {\n    this.logger.log(\n      VerboseLevel.INFO,\n      () => 'bkgData = ' + JSON.stringify(bkgData)\n    );\n    this.backSpace();\n    this.setPen(bkgData);\n    this.insertChar(0x20); // Space\n  }\n\n  setRollUpRows(nrRows: number | null) {\n    this.nrRollUpRows = nrRows;\n  }\n\n  rollUp() {\n    if (this.nrRollUpRows === null) {\n      this.logger.log(\n        VerboseLevel.DEBUG,\n        'roll_up but nrRollUpRows not set yet'\n      );\n      return; // Not properly setup\n    }\n    this.logger.log(VerboseLevel.TEXT, () => this.getDisplayText());\n    const topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n    const topRow = this.rows.splice(topRowIndex, 1)[0];\n    topRow.clear();\n    this.rows.splice(this.currRow, 0, topRow);\n    this.logger.log(VerboseLevel.INFO, 'Rolling up');\n    // this.logger.log(VerboseLevel.TEXT, this.get_display_text())\n  }\n\n  /**\n   * Get all non-empty rows with as unicode text.\n   */\n  getDisplayText(asOneRow?: boolean) {\n    asOneRow = asOneRow || false;\n    const displayText: string[] = [];\n    let text = '';\n    let rowNr = -1;\n    for (let i = 0; i < NR_ROWS; i++) {\n      const rowText = this.rows[i].getTextString();\n      if (rowText) {\n        rowNr = i + 1;\n        if (asOneRow) {\n          displayText.push('Row ' + rowNr + \": '\" + rowText + \"'\");\n        } else {\n          displayText.push(rowText.trim());\n        }\n      }\n    }\n    if (displayText.length > 0) {\n      if (asOneRow) {\n        text = '[' + displayText.join(' | ') + ']';\n      } else {\n        text = displayText.join('\\n');\n      }\n    }\n    return text;\n  }\n\n  getTextAndFormat() {\n    return this.rows;\n  }\n}\n\n// var modes = ['MODE_ROLL-UP', 'MODE_POP-ON', 'MODE_PAINT-ON', 'MODE_TEXT'];\n\ntype CaptionModes =\n  | 'MODE_ROLL-UP'\n  | 'MODE_POP-ON'\n  | 'MODE_PAINT-ON'\n  | 'MODE_TEXT'\n  | null;\n\nclass Cea608Channel {\n  chNr: number;\n  outputFilter: OutputFilter;\n  mode: CaptionModes;\n  verbose: number;\n  displayedMemory: CaptionScreen;\n  nonDisplayedMemory: CaptionScreen;\n  lastOutputScreen: CaptionScreen;\n  currRollUpRow: Row;\n  writeScreen: CaptionScreen;\n  cueStartTime: number | null;\n  logger: CaptionsLogger;\n\n  constructor(\n    channelNumber: number,\n    outputFilter: OutputFilter,\n    logger: CaptionsLogger\n  ) {\n    this.chNr = channelNumber;\n    this.outputFilter = outputFilter;\n    this.mode = null;\n    this.verbose = 0;\n    this.displayedMemory = new CaptionScreen(logger);\n    this.nonDisplayedMemory = new CaptionScreen(logger);\n    this.lastOutputScreen = new CaptionScreen(logger);\n    this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];\n    this.writeScreen = this.displayedMemory;\n    this.mode = null;\n    this.cueStartTime = null; // Keeps track of where a cue started.\n    this.logger = logger;\n  }\n\n  reset() {\n    this.mode = null;\n    this.displayedMemory.reset();\n    this.nonDisplayedMemory.reset();\n    this.lastOutputScreen.reset();\n    this.outputFilter.reset();\n    this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];\n    this.writeScreen = this.displayedMemory;\n    this.mode = null;\n    this.cueStartTime = null;\n  }\n\n  getHandler(): OutputFilter {\n    return this.outputFilter;\n  }\n\n  setHandler(newHandler: OutputFilter) {\n    this.outputFilter = newHandler;\n  }\n\n  setPAC(pacData: PACData) {\n    this.writeScreen.setPAC(pacData);\n  }\n\n  setBkgData(bkgData: Partial<PenStyles>) {\n    this.writeScreen.setBkgData(bkgData);\n  }\n\n  setMode(newMode: CaptionModes) {\n    if (newMode === this.mode) {\n      return;\n    }\n\n    this.mode = newMode;\n    this.logger.log(VerboseLevel.INFO, () => 'MODE=' + newMode);\n    if (this.mode === 'MODE_POP-ON') {\n      this.writeScreen = this.nonDisplayedMemory;\n    } else {\n      this.writeScreen = this.displayedMemory;\n      this.writeScreen.reset();\n    }\n    if (this.mode !== 'MODE_ROLL-UP') {\n      this.displayedMemory.nrRollUpRows = null;\n      this.nonDisplayedMemory.nrRollUpRows = null;\n    }\n    this.mode = newMode;\n  }\n\n  insertChars(chars: number[]) {\n    for (let i = 0; i < chars.length; i++) {\n      this.writeScreen.insertChar(chars[i]);\n    }\n\n    const screen =\n      this.writeScreen === this.displayedMemory ? 'DISP' : 'NON_DISP';\n    this.logger.log(\n      VerboseLevel.INFO,\n      () => screen + ': ' + this.writeScreen.getDisplayText(true)\n    );\n    if (this.mode === 'MODE_PAINT-ON' || this.mode === 'MODE_ROLL-UP') {\n      this.logger.log(\n        VerboseLevel.TEXT,\n        () => 'DISPLAYED: ' + this.displayedMemory.getDisplayText(true)\n      );\n      this.outputDataUpdate();\n    }\n  }\n\n  ccRCL() {\n    // Resume Caption Loading (switch mode to Pop On)\n    this.logger.log(VerboseLevel.INFO, 'RCL - Resume Caption Loading');\n    this.setMode('MODE_POP-ON');\n  }\n\n  ccBS() {\n    // BackSpace\n    this.logger.log(VerboseLevel.INFO, 'BS - BackSpace');\n    if (this.mode === 'MODE_TEXT') {\n      return;\n    }\n\n    this.writeScreen.backSpace();\n    if (this.writeScreen === this.displayedMemory) {\n      this.outputDataUpdate();\n    }\n  }\n\n  ccAOF() {\n    // Reserved (formerly Alarm Off)\n  }\n\n  ccAON() {\n    // Reserved (formerly Alarm On)\n  }\n\n  ccDER() {\n    // Delete to End of Row\n    this.logger.log(VerboseLevel.INFO, 'DER- Delete to End of Row');\n    this.writeScreen.clearToEndOfRow();\n    this.outputDataUpdate();\n  }\n\n  ccRU(nrRows: number | null) {\n    // Roll-Up Captions-2,3,or 4 Rows\n    this.logger.log(VerboseLevel.INFO, 'RU(' + nrRows + ') - Roll Up');\n    this.writeScreen = this.displayedMemory;\n    this.setMode('MODE_ROLL-UP');\n    this.writeScreen.setRollUpRows(nrRows);\n  }\n\n  ccFON() {\n    // Flash On\n    this.logger.log(VerboseLevel.INFO, 'FON - Flash On');\n    this.writeScreen.setPen({ flash: true });\n  }\n\n  ccRDC() {\n    // Resume Direct Captioning (switch mode to PaintOn)\n    this.logger.log(VerboseLevel.INFO, 'RDC - Resume Direct Captioning');\n    this.setMode('MODE_PAINT-ON');\n  }\n\n  ccTR() {\n    // Text Restart in text mode (not supported, however)\n    this.logger.log(VerboseLevel.INFO, 'TR');\n    this.setMode('MODE_TEXT');\n  }\n\n  ccRTD() {\n    // Resume Text Display in Text mode (not supported, however)\n    this.logger.log(VerboseLevel.INFO, 'RTD');\n    this.setMode('MODE_TEXT');\n  }\n\n  ccEDM() {\n    // Erase Displayed Memory\n    this.logger.log(VerboseLevel.INFO, 'EDM - Erase Displayed Memory');\n    this.displayedMemory.reset();\n    this.outputDataUpdate(true);\n  }\n\n  ccCR() {\n    // Carriage Return\n    this.logger.log(VerboseLevel.INFO, 'CR - Carriage Return');\n    this.writeScreen.rollUp();\n    this.outputDataUpdate(true);\n  }\n\n  ccENM() {\n    // Erase Non-Displayed Memory\n    this.logger.log(VerboseLevel.INFO, 'ENM - Erase Non-displayed Memory');\n    this.nonDisplayedMemory.reset();\n  }\n\n  ccEOC() {\n    // End of Caption (Flip Memories)\n    this.logger.log(VerboseLevel.INFO, 'EOC - End Of Caption');\n    if (this.mode === 'MODE_POP-ON') {\n      const tmp = this.displayedMemory;\n      this.displayedMemory = this.nonDisplayedMemory;\n      this.nonDisplayedMemory = tmp;\n      this.writeScreen = this.nonDisplayedMemory;\n      this.logger.log(\n        VerboseLevel.TEXT,\n        () => 'DISP: ' + this.displayedMemory.getDisplayText()\n      );\n    }\n    this.outputDataUpdate(true);\n  }\n\n  ccTO(nrCols: number) {\n    // Tab Offset 1,2, or 3 columns\n    this.logger.log(VerboseLevel.INFO, 'TO(' + nrCols + ') - Tab Offset');\n    this.writeScreen.moveCursor(nrCols);\n  }\n\n  ccMIDROW(secondByte: number) {\n    // Parse MIDROW command\n    const styles: Partial<PenStyles> = { flash: false };\n    styles.underline = secondByte % 2 === 1;\n    styles.italics = secondByte >= 0x2e;\n    if (!styles.italics) {\n      const colorIndex = Math.floor(secondByte / 2) - 0x10;\n      const colors = [\n        'white',\n        'green',\n        'blue',\n        'cyan',\n        'red',\n        'yellow',\n        'magenta',\n      ];\n      styles.foreground = colors[colorIndex];\n    } else {\n      styles.foreground = 'white';\n    }\n    this.logger.log(VerboseLevel.INFO, 'MIDROW: ' + JSON.stringify(styles));\n    this.writeScreen.setPen(styles);\n  }\n\n  outputDataUpdate(dispatch: boolean = false) {\n    const time = this.logger.time;\n    if (time === null) {\n      return;\n    }\n\n    if (this.outputFilter) {\n      if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) {\n        // Start of a new cue\n        this.cueStartTime = time;\n      } else {\n        if (!this.displayedMemory.equals(this.lastOutputScreen)) {\n          this.outputFilter.newCue(\n            this.cueStartTime!,\n            time,\n            this.lastOutputScreen\n          );\n          if (dispatch && this.outputFilter.dispatchCue) {\n            this.outputFilter.dispatchCue();\n          }\n\n          this.cueStartTime = this.displayedMemory.isEmpty() ? null : time;\n        }\n      }\n      this.lastOutputScreen.copy(this.displayedMemory);\n    }\n  }\n\n  cueSplitAtTime(t: number) {\n    if (this.outputFilter) {\n      if (!this.displayedMemory.isEmpty()) {\n        if (this.outputFilter.newCue) {\n          this.outputFilter.newCue(this.cueStartTime!, t, this.displayedMemory);\n        }\n\n        this.cueStartTime = t;\n      }\n    }\n  }\n}\n\ninterface PACData {\n  row: number;\n  indent: number | null;\n  color: string | null;\n  underline: boolean;\n  italics: boolean;\n}\n\ntype SupportedField = 1 | 3;\n\ntype Channels = 0 | 1 | 2; // Will be 1 or 2 when parsing captions\n\ntype CmdHistory = {\n  a: number | null;\n  b: number | null;\n};\n\nclass Cea608Parser {\n  channels: Array<Cea608Channel | null>;\n  currentChannel: Channels = 0;\n  cmdHistory: CmdHistory;\n  logger: CaptionsLogger;\n\n  constructor(field: SupportedField, out1: OutputFilter, out2: OutputFilter) {\n    const logger = new CaptionsLogger();\n    this.channels = [\n      null,\n      new Cea608Channel(field, out1, logger),\n      new Cea608Channel(field + 1, out2, logger),\n    ];\n    this.cmdHistory = createCmdHistory();\n    this.logger = logger;\n  }\n\n  getHandler(channel: number) {\n    return (this.channels[channel] as Cea608Channel).getHandler();\n  }\n\n  setHandler(channel: number, newHandler: OutputFilter) {\n    (this.channels[channel] as Cea608Channel).setHandler(newHandler);\n  }\n\n  /**\n   * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n   */\n  addData(time: number | null, byteList: number[]) {\n    let cmdFound: boolean;\n    let a: number;\n    let b: number;\n    let charsFound: number[] | boolean | null = false;\n\n    this.logger.time = time;\n\n    for (let i = 0; i < byteList.length; i += 2) {\n      a = byteList[i] & 0x7f;\n      b = byteList[i + 1] & 0x7f;\n      if (a === 0 && b === 0) {\n        continue;\n      } else {\n        this.logger.log(\n          VerboseLevel.DATA,\n          '[' +\n            numArrayToHexArray([byteList[i], byteList[i + 1]]) +\n            '] -> (' +\n            numArrayToHexArray([a, b]) +\n            ')'\n        );\n      }\n\n      cmdFound = this.parseCmd(a, b);\n\n      if (!cmdFound) {\n        cmdFound = this.parseMidrow(a, b);\n      }\n\n      if (!cmdFound) {\n        cmdFound = this.parsePAC(a, b);\n      }\n\n      if (!cmdFound) {\n        cmdFound = this.parseBackgroundAttributes(a, b);\n      }\n\n      if (!cmdFound) {\n        charsFound = this.parseChars(a, b);\n        if (charsFound) {\n          const currChNr = this.currentChannel;\n          if (currChNr && currChNr > 0) {\n            const channel = this.channels[currChNr] as Cea608Channel;\n            channel.insertChars(charsFound);\n          } else {\n            this.logger.log(\n              VerboseLevel.WARNING,\n              'No channel found yet. TEXT-MODE?'\n            );\n          }\n        }\n      }\n      if (!cmdFound && !charsFound) {\n        this.logger.log(\n          VerboseLevel.WARNING,\n          \"Couldn't parse cleaned data \" +\n            numArrayToHexArray([a, b]) +\n            ' orig: ' +\n            numArrayToHexArray([byteList[i], byteList[i + 1]])\n        );\n      }\n    }\n  }\n\n  /**\n   * Parse Command.\n   * @returns {Boolean} Tells if a command was found\n   */\n  parseCmd(a: number, b: number) {\n    const { cmdHistory } = this;\n    const cond1 =\n      (a === 0x14 || a === 0x1c || a === 0x15 || a === 0x1d) &&\n      b >= 0x20 &&\n      b <= 0x2f;\n    const cond2 = (a === 0x17 || a === 0x1f) && b >= 0x21 && b <= 0x23;\n    if (!(cond1 || cond2)) {\n      return false;\n    }\n\n    if (hasCmdRepeated(a, b, cmdHistory)) {\n      setLastCmd(null, null, cmdHistory);\n      this.logger.log(\n        VerboseLevel.DEBUG,\n        'Repeated command (' + numArrayToHexArray([a, b]) + ') is dropped'\n      );\n      return true;\n    }\n\n    const chNr = a === 0x14 || a === 0x15 || a === 0x17 ? 1 : 2;\n    const channel = this.channels[chNr] as Cea608Channel;\n\n    if (a === 0x14 || a === 0x15 || a === 0x1c || a === 0x1d) {\n      if (b === 0x20) {\n        channel.ccRCL();\n      } else if (b === 0x21) {\n        channel.ccBS();\n      } else if (b === 0x22) {\n        channel.ccAOF();\n      } else if (b === 0x23) {\n        channel.ccAON();\n      } else if (b === 0x24) {\n        channel.ccDER();\n      } else if (b === 0x25) {\n        channel.ccRU(2);\n      } else if (b === 0x26) {\n        channel.ccRU(3);\n      } else if (b === 0x27) {\n        channel.ccRU(4);\n      } else if (b === 0x28) {\n        channel.ccFON();\n      } else if (b === 0x29) {\n        channel.ccRDC();\n      } else if (b === 0x2a) {\n        channel.ccTR();\n      } else if (b === 0x2b) {\n        channel.ccRTD();\n      } else if (b === 0x2c) {\n        channel.ccEDM();\n      } else if (b === 0x2d) {\n        channel.ccCR();\n      } else if (b === 0x2e) {\n        channel.ccENM();\n      } else if (b === 0x2f) {\n        channel.ccEOC();\n      }\n    } else {\n      // a == 0x17 || a == 0x1F\n      channel.ccTO(b - 0x20);\n    }\n    setLastCmd(a, b, cmdHistory);\n    this.currentChannel = chNr;\n    return true;\n  }\n\n  /**\n   * Parse midrow styling command\n   * @returns {Boolean}\n   */\n  parseMidrow(a: number, b: number) {\n    let chNr: number = 0;\n\n    if ((a === 0x11 || a === 0x19) && b >= 0x20 && b <= 0x2f) {\n      if (a === 0x11) {\n        chNr = 1;\n      } else {\n        chNr = 2;\n      }\n\n      if (chNr !== this.currentChannel) {\n        this.logger.log(\n          VerboseLevel.ERROR,\n          'Mismatch channel in midrow parsing'\n        );\n        return false;\n      }\n      const channel = this.channels[chNr];\n      if (!channel) {\n        return false;\n      }\n      channel.ccMIDROW(b);\n      this.logger.log(\n        VerboseLevel.DEBUG,\n        'MIDROW (' + numArrayToHexArray([a, b]) + ')'\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Parse Preable Access Codes (Table 53).\n   * @returns {Boolean} Tells if PAC found\n   */\n  parsePAC(a: number, b: number): boolean {\n    let row: number;\n    const cmdHistory = this.cmdHistory;\n\n    const case1 =\n      ((a >= 0x11 && a <= 0x17) || (a >= 0x19 && a <= 0x1f)) &&\n      b >= 0x40 &&\n      b <= 0x7f;\n    const case2 = (a === 0x10 || a === 0x18) && b >= 0x40 && b <= 0x5f;\n    if (!(case1 || case2)) {\n      return false;\n    }\n\n    if (hasCmdRepeated(a, b, cmdHistory)) {\n      setLastCmd(null, null, cmdHistory);\n      return true; // Repeated commands are dropped (once)\n    }\n\n    const chNr: Channels = a <= 0x17 ? 1 : 2;\n\n    if (b >= 0x40 && b <= 0x5f) {\n      row = chNr === 1 ? rowsLowCh1[a] : rowsLowCh2[a];\n    } else {\n      // 0x60 <= b <= 0x7F\n      row = chNr === 1 ? rowsHighCh1[a] : rowsHighCh2[a];\n    }\n    const channel = this.channels[chNr];\n    if (!channel) {\n      return false;\n    }\n    channel.setPAC(this.interpretPAC(row, b));\n    setLastCmd(a, b, cmdHistory);\n    this.currentChannel = chNr;\n    return true;\n  }\n\n  /**\n   * Interpret the second byte of the pac, and return the information.\n   * @returns {Object} pacData with style parameters.\n   */\n  interpretPAC(row: number, byte: number): PACData {\n    let pacIndex;\n    const pacData: PACData = {\n      color: null,\n      italics: false,\n      indent: null,\n      underline: false,\n      row: row,\n    };\n\n    if (byte > 0x5f) {\n      pacIndex = byte - 0x60;\n    } else {\n      pacIndex = byte - 0x40;\n    }\n\n    pacData.underline = (pacIndex & 1) === 1;\n    if (pacIndex <= 0xd) {\n      pacData.color = [\n        'white',\n        'green',\n        'blue',\n        'cyan',\n        'red',\n        'yellow',\n        'magenta',\n        'white',\n      ][Math.floor(pacIndex / 2)];\n    } else if (pacIndex <= 0xf) {\n      pacData.italics = true;\n      pacData.color = 'white';\n    } else {\n      pacData.indent = Math.floor((pacIndex - 0x10) / 2) * 4;\n    }\n    return pacData; // Note that row has zero offset. The spec uses 1.\n  }\n\n  /**\n   * Parse characters.\n   * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n   */\n  parseChars(a: number, b: number): number[] | null {\n    let channelNr: Channels;\n    let charCodes: number[] | null = null;\n    let charCode1: number | null = null;\n\n    if (a >= 0x19) {\n      channelNr = 2;\n      charCode1 = a - 8;\n    } else {\n      channelNr = 1;\n      charCode1 = a;\n    }\n    if (charCode1 >= 0x11 && charCode1 <= 0x13) {\n      // Special character\n      let oneCode;\n      if (charCode1 === 0x11) {\n        oneCode = b + 0x50;\n      } else if (charCode1 === 0x12) {\n        oneCode = b + 0x70;\n      } else {\n        oneCode = b + 0x90;\n      }\n\n      this.logger.log(\n        VerboseLevel.INFO,\n        \"Special char '\" + getCharForByte(oneCode) + \"' in channel \" + channelNr\n      );\n      charCodes = [oneCode];\n    } else if (a >= 0x20 && a <= 0x7f) {\n      charCodes = b === 0 ? [a] : [a, b];\n    }\n    if (charCodes) {\n      const hexCodes = numArrayToHexArray(charCodes);\n      this.logger.log(\n        VerboseLevel.DEBUG,\n        'Char codes =  ' + hexCodes.join(',')\n      );\n      setLastCmd(a, b, this.cmdHistory);\n    }\n    return charCodes;\n  }\n\n  /**\n   * Parse extended background attributes as well as new foreground color black.\n   * @returns {Boolean} Tells if background attributes are found\n   */\n  parseBackgroundAttributes(a: number, b: number): boolean {\n    const case1 = (a === 0x10 || a === 0x18) && b >= 0x20 && b <= 0x2f;\n    const case2 = (a === 0x17 || a === 0x1f) && b >= 0x2d && b <= 0x2f;\n    if (!(case1 || case2)) {\n      return false;\n    }\n    let index: number;\n    const bkgData: Partial<PenStyles> = {};\n    if (a === 0x10 || a === 0x18) {\n      index = Math.floor((b - 0x20) / 2);\n      bkgData.background = backgroundColors[index];\n      if (b % 2 === 1) {\n        bkgData.background = bkgData.background + '_semi';\n      }\n    } else if (b === 0x2d) {\n      bkgData.background = 'transparent';\n    } else {\n      bkgData.foreground = 'black';\n      if (b === 0x2f) {\n        bkgData.underline = true;\n      }\n    }\n    const chNr: Channels = a <= 0x17 ? 1 : 2;\n    const channel: Cea608Channel = this.channels[chNr] as Cea608Channel;\n    channel.setBkgData(bkgData);\n    setLastCmd(a, b, this.cmdHistory);\n    return true;\n  }\n\n  /**\n   * Reset state of parser and its channels.\n   */\n  reset() {\n    for (let i = 0; i < Object.keys(this.channels).length; i++) {\n      const channel = this.channels[i];\n      if (channel) {\n        channel.reset();\n      }\n    }\n    this.cmdHistory = createCmdHistory();\n  }\n\n  /**\n   * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n   */\n  cueSplitAtTime(t: number) {\n    for (let i = 0; i < this.channels.length; i++) {\n      const channel = this.channels[i];\n      if (channel) {\n        channel.cueSplitAtTime(t);\n      }\n    }\n  }\n}\n\nfunction setLastCmd(\n  a: number | null,\n  b: number | null,\n  cmdHistory: CmdHistory\n) {\n  cmdHistory.a = a;\n  cmdHistory.b = b;\n}\n\nfunction hasCmdRepeated(a: number, b: number, cmdHistory: CmdHistory) {\n  return cmdHistory.a === a && cmdHistory.b === b;\n}\n\nfunction createCmdHistory(): CmdHistory {\n  return {\n    a: null,\n    b: null,\n  };\n}\n\nexport default Cea608Parser;\n", "// from http://mp4ra.org/codecs.html\nconst sampleEntryCodesISO = {\n  audio: {\n    a3ds: true,\n    'ac-3': true,\n    'ac-4': true,\n    alac: true,\n    alaw: true,\n    dra1: true,\n    'dts+': true,\n    'dts-': true,\n    dtsc: true,\n    dtse: true,\n    dtsh: true,\n    'ec-3': true,\n    enca: true,\n    g719: true,\n    g726: true,\n    m4ae: true,\n    mha1: true,\n    mha2: true,\n    mhm1: true,\n    mhm2: true,\n    mlpa: true,\n    mp4a: true,\n    'raw ': true,\n    Opus: true,\n    opus: true, // browsers expect this to be lowercase despite MP4RA says 'Opus'\n    samr: true,\n    sawb: true,\n    sawp: true,\n    sevc: true,\n    sqcp: true,\n    ssmv: true,\n    twos: true,\n    ulaw: true,\n  },\n  video: {\n    avc1: true,\n    avc2: true,\n    avc3: true,\n    avc4: true,\n    avcp: true,\n    av01: true,\n    drac: true,\n    dva1: true,\n    dvav: true,\n    dvh1: true,\n    dvhe: true,\n    encv: true,\n    hev1: true,\n    hvc1: true,\n    mjp2: true,\n    mp4v: true,\n    mvc1: true,\n    mvc2: true,\n    mvc3: true,\n    mvc4: true,\n    resv: true,\n    rv60: true,\n    s263: true,\n    svc1: true,\n    svc2: true,\n    'vc-1': true,\n    vp08: true,\n    vp09: true,\n  },\n  text: {\n    stpp: true,\n    wvtt: true,\n  },\n};\n\nexport type CodecType = 'audio' | 'video';\n\nexport function isCodecType(codec: string, type: CodecType): boolean {\n  const typeCodes = sampleEntryCodesISO[type];\n  return !!typeCodes && typeCodes[codec.slice(0, 4)] === true;\n}\n\nexport function isCodecSupportedInMp4(codec: string, type: CodecType): boolean {\n  return MediaSource.isTypeSupported(\n    `${type || 'video'}/mp4;codecs=\"${codec}\"`\n  );\n}\n", "import { fixLineBreaks } from './vttparser';\nimport type { CaptionScreen, Row } from './cea-608-parser';\nimport { generateCueId } from './webvtt-parser';\nimport { addCueToTrack } from './texttrack-utils';\n\nconst WHITESPACE_CHAR = /\\s/;\n\nexport interface CuesInterface {\n  newCue(\n    track: TextTrack | null,\n    startTime: number,\n    endTime: number,\n    captionScreen: CaptionScreen\n  ): VTTCue[];\n}\n\nconst Cues: CuesInterface = {\n  newCue(\n    track: TextTrack | null,\n    startTime: number,\n    endTime: number,\n    captionScreen: CaptionScreen\n  ): VTTCue[] {\n    const result: VTTCue[] = [];\n    let row: Row;\n    // the type data states this is VTTCue, but it can potentially be a TextTrackCue on old browsers\n    let cue: VTTCue;\n    let indenting: boolean;\n    let indent: number;\n    let text: string;\n    const Cue = (self.VTTCue || self.TextTrackCue) as any;\n\n    for (let r = 0; r < captionScreen.rows.length; r++) {\n      row = captionScreen.rows[r];\n      indenting = true;\n      indent = 0;\n      text = '';\n\n      if (!row.isEmpty()) {\n        for (let c = 0; c < row.chars.length; c++) {\n          if (WHITESPACE_CHAR.test(row.chars[c].uchar) && indenting) {\n            indent++;\n          } else {\n            text += row.chars[c].uchar;\n            indenting = false;\n          }\n        }\n        // To be used for cleaning-up orphaned roll-up captions\n        row.cueStartTime = startTime;\n\n        // Give a slight bump to the endTime if it's equal to startTime to avoid a SyntaxError in IE\n        if (startTime === endTime) {\n          endTime += 0.0001;\n        }\n\n        if (indent >= 16) {\n          indent--;\n        } else {\n          indent++;\n        }\n\n        const cueText = fixLineBreaks(text.trim());\n        const id = generateCueId(startTime, endTime, cueText);\n\n        // If this cue already exists in the track do not push it\n        if (!track || !track.cues || !track.cues.getCueById(id)) {\n          cue = new Cue(startTime, endTime, cueText);\n          cue.id = id;\n          cue.line = r + 1;\n          cue.align = 'left';\n          // Clamp the position between 10 and 80 percent (CEA-608 PAC indent code)\n          // https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html#positioning-in-cea-608\n          // Firefox throws an exception and captions break with out of bounds 0-100 values\n          cue.position = 10 + Math.min(80, Math.floor((indent * 8) / 32) * 10);\n          result.push(cue);\n        }\n      }\n    }\n    if (track && result.length) {\n      // Sort bottom cues in reverse order so that they render in line order when overlapping in Chrome\n      result.sort((cueA, cueB) => {\n        if (cueA.line === 'auto' || cueB.line === 'auto') {\n          return 0;\n        }\n        if (cueA.line > 8 && cueB.line > 8) {\n          return cueB.line - cueA.line;\n        }\n        return cueA.line - cueB.line;\n      });\n      result.forEach((cue) => addCueToTrack(track, cue));\n    }\n    return result;\n  },\n};\n\nexport default Cues;\n", "import { logger } from './logger';\nimport { adjustSliding } from '../controller/level-helper';\n\nimport type { Fragment } from '../loader/fragment';\nimport type { LevelDetails } from '../loader/level-details';\nimport type { Level } from '../types/level';\nimport type { RequiredProperties } from '../types/general';\n\nexport function findFirstFragWithCC(fragments: Fragment[], cc: number) {\n  let firstFrag: Fragment | null = null;\n\n  for (let i = 0, len = fragments.length; i < len; i++) {\n    const currentFrag = fragments[i];\n    if (currentFrag && currentFrag.cc === cc) {\n      firstFrag = currentFrag;\n      break;\n    }\n  }\n\n  return firstFrag;\n}\n\nexport function shouldAlignOnDiscontinuities(\n  lastFrag: Fragment | null,\n  lastLevel: Level,\n  details: LevelDetails\n): lastLevel is RequiredProperties<Level, 'details'> {\n  if (lastLevel.details) {\n    if (\n      details.endCC > details.startCC ||\n      (lastFrag && lastFrag.cc < details.startCC)\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Find the first frag in the previous level which matches the CC of the first frag of the new level\nexport function findDiscontinuousReferenceFrag(\n  prevDetails: LevelDetails,\n  curDetails: LevelDetails,\n  referenceIndex: number = 0\n) {\n  const prevFrags = prevDetails.fragments;\n  const curFrags = curDetails.fragments;\n\n  if (!curFrags.length || !prevFrags.length) {\n    logger.log('No fragments to align');\n    return;\n  }\n\n  const prevStartFrag = findFirstFragWithCC(prevFrags, curFrags[0].cc);\n\n  if (!prevStartFrag || (prevStartFrag && !prevStartFrag.startPTS)) {\n    logger.log('No frag in previous level to align on');\n    return;\n  }\n\n  return prevStartFrag;\n}\n\nfunction adjustFragmentStart(frag: Fragment, sliding: number) {\n  if (frag) {\n    const start = frag.start + sliding;\n    frag.start = frag.startPTS = start;\n    frag.endPTS = start + frag.duration;\n  }\n}\n\nexport function adjustSlidingStart(sliding: number, details: LevelDetails) {\n  // Update segments\n  const fragments = details.fragments;\n  for (let i = 0, len = fragments.length; i < len; i++) {\n    adjustFragmentStart(fragments[i], sliding);\n  }\n  // Update LL-HLS parts at the end of the playlist\n  if (details.fragmentHint) {\n    adjustFragmentStart(details.fragmentHint, sliding);\n  }\n  details.alignedSliding = true;\n}\n\n/**\n * Using the parameters of the last level, this function computes PTS' of the new fragments so that they form a\n * contiguous stream with the last fragments.\n * The PTS of a fragment lets Hls.js know where it fits into a stream - by knowing every PTS, we know which fragment to\n * download at any given time. PTS is normally computed when the fragment is demuxed, so taking this step saves us time\n * and an extra download.\n * @param lastFrag\n * @param lastLevel\n * @param details\n */\nexport function alignStream(\n  lastFrag: Fragment | null,\n  lastLevel: Level | null,\n  details: LevelDetails\n) {\n  if (!lastLevel) {\n    return;\n  }\n  alignDiscontinuities(lastFrag, details, lastLevel);\n  if (!details.alignedSliding && lastLevel.details) {\n    // If the PTS wasn't figured out via discontinuity sequence that means there was no CC increase within the level.\n    // Aligning via Program Date Time should therefore be reliable, since PDT should be the same within the same\n    // discontinuity sequence.\n    alignPDT(details, lastLevel.details);\n  }\n  if (\n    !details.alignedSliding &&\n    lastLevel.details &&\n    !details.skippedSegments\n  ) {\n    // Try to align on sn so that we pick a better start fragment.\n    // Do not perform this on playlists with delta updates as this is only to align levels on switch\n    // and adjustSliding only adjusts fragments after skippedSegments.\n    adjustSliding(lastLevel.details, details);\n  }\n}\n\n/**\n * Computes the PTS if a new level's fragments using the PTS of a fragment in the last level which shares the same\n * discontinuity sequence.\n * @param lastFrag - The last Fragment which shares the same discontinuity sequence\n * @param lastLevel - The details of the last loaded level\n * @param details - The details of the new level\n */\nfunction alignDiscontinuities(\n  lastFrag: Fragment | null,\n  details: LevelDetails,\n  lastLevel: Level\n) {\n  if (shouldAlignOnDiscontinuities(lastFrag, lastLevel, details)) {\n    const referenceFrag = findDiscontinuousReferenceFrag(\n      lastLevel.details,\n      details\n    );\n    if (referenceFrag && Number.isFinite(referenceFrag.start)) {\n      logger.log(\n        `Adjusting PTS using last level due to CC increase within current level ${details.url}`\n      );\n      adjustSlidingStart(referenceFrag.start, details);\n    }\n  }\n}\n\n/**\n * Computes the PTS of a new level's fragments using the difference in Program Date Time from the last level.\n * @param details - The details of the new level\n * @param lastDetails - The details of the last loaded level\n */\nexport function alignPDT(details: LevelDetails, lastDetails: LevelDetails) {\n  // This check protects the unsafe \"!\" usage below for null program date time access.\n  if (\n    !lastDetails.fragments.length ||\n    !details.hasProgramDateTime ||\n    !lastDetails.hasProgramDateTime\n  ) {\n    return;\n  }\n  // if last level sliding is 1000 and its first frag PROGRAM-DATE-TIME is 2017-08-20 1:10:00 AM\n  // and if new details first frag PROGRAM DATE-TIME is 2017-08-20 1:10:08 AM\n  // then we can deduce that playlist B sliding is 1000+8 = 1008s\n  const lastPDT = lastDetails.fragments[0].programDateTime!; // hasProgramDateTime check above makes this safe.\n  const newPDT = details.fragments[0].programDateTime!;\n  // date diff is in ms. frag.start is in seconds\n  const sliding = (newPDT - lastPDT) / 1000 + lastDetails.fragments[0].start;\n  if (sliding && Number.isFinite(sliding)) {\n    logger.log(\n      `Adjusting PTS using programDateTime delta ${\n        newPDT - lastPDT\n      }ms, sliding:${sliding.toFixed(3)} ${details.url} `\n    );\n    adjustSlidingStart(sliding, details);\n  }\n}\n\n/**\n * Ensures appropriate time-alignment between renditions based on PDT. Unlike `alignPDT`, which adjusts\n * the timeline based on the delta between PDTs of the 0th fragment of two playlists/`LevelDetails`,\n * this function assumes the timelines represented in `refDetails` are accurate, including the PDTs,\n * and uses the \"wallclock\"/PDT timeline as a cross-reference to `details`, adjusting the presentation\n * times/timelines of `details` accordingly.\n * Given the asynchronous nature of fetches and initial loads of live `main` and audio/subtitle tracks,\n * the primary purpose of this function is to ensure the \"local timelines\" of audio/subtitle tracks\n * are aligned to the main/video timeline, using PDT as the cross-reference/\"anchor\" that should\n * be consistent across playlists, per the HLS spec.\n * @param details - The details of the rendition you'd like to time-align (e.g. an audio rendition).\n * @param refDetails - The details of the reference rendition with start and PDT times for alignment.\n */\nexport function alignMediaPlaylistByPDT(\n  details: LevelDetails,\n  refDetails: LevelDetails\n) {\n  if (!details.hasProgramDateTime || !refDetails.hasProgramDateTime) {\n    return;\n  }\n\n  const fragments = details.fragments;\n  const refFragments = refDetails.fragments;\n  if (!fragments.length || !refFragments.length) {\n    return;\n  }\n\n  // Calculate a delta to apply to all fragments according to the delta in PDT times and start times\n  // of a fragment in the reference details, and a fragment in the target details of the same discontinuity.\n  // If a fragment of the same discontinuity was not found use the middle fragment of both.\n  const middleFrag = Math.round(refFragments.length / 2) - 1;\n  const refFrag = refFragments[middleFrag];\n  const frag =\n    findFirstFragWithCC(fragments, refFrag.cc) ||\n    fragments[Math.round(fragments.length / 2) - 1];\n\n  const refPDT = refFrag.programDateTime;\n  const targetPDT = frag.programDateTime;\n  if (refPDT === null || targetPDT === null) {\n    return;\n  }\n\n  const delta = (targetPDT - refPDT) / 1000 - (frag.start - refFrag.start);\n  adjustSlidingStart(delta, details);\n}\n", "/*\n * EWMA Bandwidth Estimator\n *  - heavily inspired from shaka-player\n * Tracks bandwidth samples and estimates available bandwidth.\n * Based on the minimum of two exponentially-weighted moving averages with\n * different half-lives.\n */\n\nimport EWMA from '../utils/ewma';\n\nclass EwmaBandWidthEstimator {\n  private defaultEstimate_: number;\n  private minWeight_: number;\n  private minDelayMs_: number;\n  private slow_: EWMA;\n  private fast_: EWMA;\n\n  constructor(slow: number, fast: number, defaultEstimate: number) {\n    this.defaultEstimate_ = defaultEstimate;\n    this.minWeight_ = 0.001;\n    this.minDelayMs_ = 50;\n    this.slow_ = new EWMA(slow);\n    this.fast_ = new EWMA(fast);\n  }\n\n  update(slow: number, fast: number) {\n    const { slow_, fast_ } = this;\n    if (this.slow_.halfLife !== slow) {\n      this.slow_ = new EWMA(slow, slow_.getEstimate(), slow_.getTotalWeight());\n    }\n    if (this.fast_.halfLife !== fast) {\n      this.fast_ = new EWMA(fast, fast_.getEstimate(), fast_.getTotalWeight());\n    }\n  }\n\n  sample(durationMs: number, numBytes: number) {\n    durationMs = Math.max(durationMs, this.minDelayMs_);\n    const numBits = 8 * numBytes;\n    // weight is duration in seconds\n    const durationS = durationMs / 1000;\n    // value is bandwidth in bits/s\n    const bandwidthInBps = numBits / durationS;\n    this.fast_.sample(durationS, bandwidthInBps);\n    this.slow_.sample(durationS, bandwidthInBps);\n  }\n\n  canEstimate(): boolean {\n    const fast = this.fast_;\n    return fast && fast.getTotalWeight() >= this.minWeight_;\n  }\n\n  getEstimate(): number {\n    if (this.canEstimate()) {\n      // console.log('slow estimate:'+ Math.round(this.slow_.getEstimate()));\n      // console.log('fast estimate:'+ Math.round(this.fast_.getEstimate()));\n      // Take the minimum of these two estimates.  This should have the effect of\n      // adapting down quickly, but up more slowly.\n      return Math.min(this.fast_.getEstimate(), this.slow_.getEstimate());\n    } else {\n      return this.defaultEstimate_;\n    }\n  }\n\n  destroy() {}\n}\nexport default EwmaBandWidthEstimator;\n", "/*\n * compute an Exponential Weighted moving average\n * - https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n *  - heavily inspired from shaka-player\n */\n\nclass EWMA {\n  public readonly halfLife: number;\n  private alpha_: number;\n  private estimate_: number;\n  private totalWeight_: number;\n\n  //  About half of the estimated value will be from the last |halfLife| samples by weight.\n  constructor(halfLife: number, estimate: number = 0, weight: number = 0) {\n    this.halfLife = halfLife;\n    // Larger values of alpha expire historical data more slowly.\n    this.alpha_ = halfLife ? Math.exp(Math.log(0.5) / halfLife) : 0;\n    this.estimate_ = estimate;\n    this.totalWeight_ = weight;\n  }\n\n  sample(weight: number, value: number) {\n    const adjAlpha = Math.pow(this.alpha_, weight);\n    this.estimate_ = value * (1 - adjAlpha) + adjAlpha * this.estimate_;\n    this.totalWeight_ += weight;\n  }\n\n  getTotalWeight(): number {\n    return this.totalWeight_;\n  }\n\n  getEstimate(): number {\n    if (this.alpha_) {\n      const zeroFactor = 1 - Math.pow(this.alpha_, this.totalWeight_);\n      if (zeroFactor) {\n        return this.estimate_ / zeroFactor;\n      }\n    }\n    return this.estimate_;\n  }\n}\n\nexport default EWMA;\n", "import {\n  LoaderCallbacks,\n  LoaderContext,\n  Loader,\n  LoaderStats,\n  LoaderConfiguration,\n  LoaderOnProgress,\n} from '../types/loader';\nimport { LoadStats } from '../loader/load-stats';\nimport ChunkCache from '../demux/chunk-cache';\n\nexport function fetchSupported() {\n  if (\n    // @ts-ignore\n    self.fetch &&\n    self.AbortController &&\n    self.ReadableStream &&\n    self.Request\n  ) {\n    try {\n      new self.ReadableStream({}); // eslint-disable-line no-new\n      return true;\n    } catch (e) {\n      /* noop */\n    }\n  }\n  return false;\n}\n\nclass FetchLoader implements Loader<LoaderContext> {\n  private fetchSetup: Function;\n  private requestTimeout?: number;\n  private request!: Request;\n  private response!: Response;\n  private controller: AbortController;\n  public context!: LoaderContext;\n  private config: LoaderConfiguration | null = null;\n  private callbacks: LoaderCallbacks<LoaderContext> | null = null;\n  public stats: LoaderStats;\n  private loader: Response | null = null;\n\n  constructor(config /* HlsConfig */) {\n    this.fetchSetup = config.fetchSetup || getRequest;\n    this.controller = new self.AbortController();\n    this.stats = new LoadStats();\n  }\n\n  destroy(): void {\n    this.loader = this.callbacks = null;\n    this.abortInternal();\n  }\n\n  abortInternal(): void {\n    const response = this.response;\n    if (!response || !response.ok) {\n      this.stats.aborted = true;\n      this.controller.abort();\n    }\n  }\n\n  abort(): void {\n    this.abortInternal();\n    if (this.callbacks?.onAbort) {\n      this.callbacks.onAbort(this.stats, this.context, this.response);\n    }\n  }\n\n  load(\n    context: LoaderContext,\n    config: LoaderConfiguration,\n    callbacks: LoaderCallbacks<LoaderContext>\n  ): void {\n    const stats = this.stats;\n    if (stats.loading.start) {\n      throw new Error('Loader can only be used once.');\n    }\n    stats.loading.start = self.performance.now();\n\n    const initParams = getRequestParameters(context, this.controller.signal);\n    const onProgress: LoaderOnProgress<LoaderContext> | undefined =\n      callbacks.onProgress;\n    const isArrayBuffer = context.responseType === 'arraybuffer';\n    const LENGTH = isArrayBuffer ? 'byteLength' : 'length';\n\n    this.context = context;\n    this.config = config;\n    this.callbacks = callbacks;\n    this.request = this.fetchSetup(context, initParams);\n    self.clearTimeout(this.requestTimeout);\n    this.requestTimeout = self.setTimeout(() => {\n      this.abortInternal();\n      callbacks.onTimeout(stats, context, this.response);\n    }, config.timeout);\n\n    self\n      .fetch(this.request)\n      .then((response: Response): Promise<string | ArrayBuffer> => {\n        this.response = this.loader = response;\n\n        if (!response.ok) {\n          const { status, statusText } = response;\n          throw new FetchError(\n            statusText || 'fetch, bad network response',\n            status,\n            response\n          );\n        }\n        stats.loading.first = Math.max(\n          self.performance.now(),\n          stats.loading.start\n        );\n        stats.total = parseInt(response.headers.get('Content-Length') || '0');\n\n        if (onProgress && Number.isFinite(config.highWaterMark)) {\n          return this.loadProgressively(\n            response,\n            stats,\n            context,\n            config.highWaterMark,\n            onProgress\n          );\n        }\n\n        if (isArrayBuffer) {\n          return response.arrayBuffer();\n        }\n        return response.text();\n      })\n      .then((responseData: string | ArrayBuffer) => {\n        const { response } = this;\n        self.clearTimeout(this.requestTimeout);\n        stats.loading.end = Math.max(\n          self.performance.now(),\n          stats.loading.first\n        );\n        const total = responseData[LENGTH];\n        if (total) {\n          stats.loaded = stats.total = total;\n        }\n\n        const loaderResponse = {\n          url: response.url,\n          data: responseData,\n        };\n\n        if (onProgress && !Number.isFinite(config.highWaterMark)) {\n          onProgress(stats, context, responseData, response);\n        }\n\n        callbacks.onSuccess(loaderResponse, stats, context, response);\n      })\n      .catch((error) => {\n        self.clearTimeout(this.requestTimeout);\n        if (stats.aborted) {\n          return;\n        }\n        // CORS errors result in an undefined code. Set it to 0 here to align with XHR's behavior\n        // when destroying, 'error' itself can be undefined\n        const code: number = !error ? 0 : error.code || 0;\n        const text: string = !error ? null : error.message;\n        callbacks.onError(\n          { code, text },\n          context,\n          error ? error.details : null\n        );\n      });\n  }\n\n  getCacheAge(): number | null {\n    let result: number | null = null;\n    if (this.response) {\n      const ageHeader = this.response.headers.get('age');\n      result = ageHeader ? parseFloat(ageHeader) : null;\n    }\n    return result;\n  }\n\n  private loadProgressively(\n    response: Response,\n    stats: LoaderStats,\n    context: LoaderContext,\n    highWaterMark: number = 0,\n    onProgress: LoaderOnProgress<LoaderContext>\n  ): Promise<ArrayBuffer> {\n    const chunkCache = new ChunkCache();\n    const reader = (response.body as ReadableStream).getReader();\n\n    const pump = (): Promise<ArrayBuffer> => {\n      return reader\n        .read()\n        .then((data) => {\n          if (data.done) {\n            if (chunkCache.dataLength) {\n              onProgress(stats, context, chunkCache.flush(), response);\n            }\n\n            return Promise.resolve(new ArrayBuffer(0));\n          }\n          const chunk: Uint8Array = data.value;\n          const len = chunk.length;\n          stats.loaded += len;\n          if (len < highWaterMark || chunkCache.dataLength) {\n            // The current chunk is too small to to be emitted or the cache already has data\n            // Push it to the cache\n            chunkCache.push(chunk);\n            if (chunkCache.dataLength >= highWaterMark) {\n              // flush in order to join the typed arrays\n              onProgress(stats, context, chunkCache.flush(), response);\n            }\n          } else {\n            // If there's nothing cached already, and the chache is large enough\n            // just emit the progress event\n            onProgress(stats, context, chunk, response);\n          }\n          return pump();\n        })\n        .catch(() => {\n          /* aborted */\n          return Promise.reject();\n        });\n    };\n\n    return pump();\n  }\n}\n\nfunction getRequestParameters(context: LoaderContext, signal): any {\n  const initParams: any = {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'same-origin',\n    signal,\n    headers: new self.Headers(Object.assign({}, context.headers)),\n  };\n\n  if (context.rangeEnd) {\n    initParams.headers.set(\n      'Range',\n      'bytes=' + context.rangeStart + '-' + String(context.rangeEnd - 1)\n    );\n  }\n\n  return initParams;\n}\n\nfunction getRequest(context: LoaderContext, initParams: any): Request {\n  return new self.Request(context.url, initParams);\n}\n\nclass FetchError extends Error {\n  public code: number;\n  public details: any;\n  constructor(message: string, code: number, details: any) {\n    super(message);\n    this.code = code;\n    this.details = details;\n  }\n}\n\nexport default FetchLoader;\n", "/**\n *  hex dump helper class\n */\n\nconst Hex = {\n  hexDump: function (array: Uint8Array) {\n    let str = '';\n    for (let i = 0; i < array.length; i++) {\n      let h = array[i].toString(16);\n      if (h.length < 2) {\n        h = '0' + h;\n      }\n\n      str += h;\n    }\n    return str;\n  },\n};\n\nexport default Hex;\n", "import { findBox } from './mp4-tools';\nimport { parseTimeStamp } from './vttparser';\nimport VTTCue from './vttcue';\nimport { utf8ArrayToStr } from '../demux/id3';\nimport { toTimescaleFromScale } from './timescale-conversion';\nimport { generateCueId } from './webvtt-parser';\n\nexport const IMSC1_CODEC = 'stpp.ttml.im1t';\n\n// Time format: h:m:s:frames(.subframes)\nconst HMSF_REGEX = /^(\\d{2,}):(\\d{2}):(\\d{2}):(\\d{2})\\.?(\\d+)?$/;\n\n// Time format: hours, minutes, seconds, milliseconds, frames, ticks\nconst TIME_UNIT_REGEX = /^(\\d*(?:\\.\\d*)?)(h|m|s|ms|f|t)$/;\n\nconst textAlignToLineAlign: Partial<Record<string, LineAlignSetting>> = {\n  left: 'start',\n  center: 'center',\n  right: 'end',\n  start: 'start',\n  end: 'end',\n};\n\nexport function parseIMSC1(\n  payload: ArrayBuffer,\n  initPTS: number,\n  timescale: number,\n  callBack: (cues: Array<VTTCue>) => any,\n  errorCallBack: (error: Error) => any\n) {\n  const results = findBox(new Uint8Array(payload), ['mdat']);\n  if (results.length === 0) {\n    errorCallBack(new Error('Could not parse IMSC1 mdat'));\n    return;\n  }\n\n  const ttmlList = results.map((mdat) => utf8ArrayToStr(mdat));\n\n  const syncTime = toTimescaleFromScale(initPTS, 1, timescale);\n\n  try {\n    ttmlList.forEach((ttml) => callBack(parseTTML(ttml, syncTime)));\n  } catch (error) {\n    errorCallBack(error);\n  }\n}\n\nfunction parseTTML(ttml: string, syncTime: number): Array<VTTCue> {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(ttml, 'text/xml');\n  const tt = xmlDoc.getElementsByTagName('tt')[0];\n  if (!tt) {\n    throw new Error('Invalid ttml');\n  }\n  const defaultRateInfo = {\n    frameRate: 30,\n    subFrameRate: 1,\n    frameRateMultiplier: 0,\n    tickRate: 0,\n  };\n  const rateInfo: Object = Object.keys(defaultRateInfo).reduce(\n    (result, key) => {\n      result[key] = tt.getAttribute(`ttp:${key}`) || defaultRateInfo[key];\n      return result;\n    },\n    {}\n  );\n\n  const trim = tt.getAttribute('xml:space') !== 'preserve';\n\n  const styleElements = collectionToDictionary(\n    getElementCollection(tt, 'styling', 'style')\n  );\n  const regionElements = collectionToDictionary(\n    getElementCollection(tt, 'layout', 'region')\n  );\n  const cueElements = getElementCollection(tt, 'body', '[begin]');\n\n  return [].map\n    .call(cueElements, (cueElement) => {\n      const cueText = getTextContent(cueElement, trim);\n\n      if (!cueText || !cueElement.hasAttribute('begin')) {\n        return null;\n      }\n      const startTime = parseTtmlTime(\n        cueElement.getAttribute('begin'),\n        rateInfo\n      );\n      const duration = parseTtmlTime(cueElement.getAttribute('dur'), rateInfo);\n      let endTime = parseTtmlTime(cueElement.getAttribute('end'), rateInfo);\n      if (startTime === null) {\n        throw timestampParsingError(cueElement);\n      }\n      if (endTime === null) {\n        if (duration === null) {\n          throw timestampParsingError(cueElement);\n        }\n        endTime = startTime + duration;\n      }\n      const cue = new VTTCue(startTime - syncTime, endTime - syncTime, cueText);\n      cue.id = generateCueId(cue.startTime, cue.endTime, cue.text);\n\n      const region = regionElements[cueElement.getAttribute('region')];\n      const style = styleElements[cueElement.getAttribute('style')];\n\n      // Apply styles to cue\n      const styles = getTtmlStyles(region, style, styleElements);\n      const { textAlign } = styles;\n      if (textAlign) {\n        // cue.positionAlign not settable in FF~2016\n        const lineAlign = textAlignToLineAlign[textAlign];\n        if (lineAlign) {\n          cue.lineAlign = lineAlign;\n        }\n        cue.align = textAlign as AlignSetting;\n      }\n      Object.assign(cue, styles);\n\n      return cue;\n    })\n    .filter((cue) => cue !== null);\n}\n\nfunction getElementCollection(\n  fromElement,\n  parentName,\n  childName\n): Array<HTMLElement> {\n  const parent = fromElement.getElementsByTagName(parentName)[0];\n  if (parent) {\n    return [].slice.call(parent.querySelectorAll(childName));\n  }\n  return [];\n}\n\nfunction collectionToDictionary(elementsWithId: Array<HTMLElement>): {\n  [id: string]: HTMLElement;\n} {\n  return elementsWithId.reduce((dict, element: HTMLElement) => {\n    const id = element.getAttribute('xml:id');\n    if (id) {\n      dict[id] = element;\n    }\n    return dict;\n  }, {});\n}\n\nfunction getTextContent(element, trim): string {\n  return [].slice.call(element.childNodes).reduce((str, node, i) => {\n    if (node.nodeName === 'br' && i) {\n      return str + '\\n';\n    }\n    if (node.childNodes?.length) {\n      return getTextContent(node, trim);\n    } else if (trim) {\n      return str + node.textContent.trim().replace(/\\s+/g, ' ');\n    }\n    return str + node.textContent;\n  }, '');\n}\n\nfunction getTtmlStyles(\n  region,\n  style,\n  styleElements\n): { [style: string]: string } {\n  const ttsNs = 'http://www.w3.org/ns/ttml#styling';\n  let regionStyle = null;\n  const styleAttributes = [\n    'displayAlign',\n    'textAlign',\n    'color',\n    'backgroundColor',\n    'fontSize',\n    'fontFamily',\n    // 'fontWeight',\n    // 'lineHeight',\n    // 'wrapOption',\n    // 'fontStyle',\n    // 'direction',\n    // 'writingMode'\n  ];\n\n  const regionStyleName = region?.hasAttribute('style')\n    ? region.getAttribute('style')\n    : null;\n\n  if (regionStyleName && styleElements.hasOwnProperty(regionStyleName)) {\n    regionStyle = styleElements[regionStyleName];\n  }\n\n  return styleAttributes.reduce((styles, name) => {\n    const value =\n      getAttributeNS(style, ttsNs, name) ||\n      getAttributeNS(region, ttsNs, name) ||\n      getAttributeNS(regionStyle, ttsNs, name);\n    if (value) {\n      styles[name] = value;\n    }\n    return styles;\n  }, {});\n}\n\nfunction getAttributeNS(element, ns, name): string | null {\n  if (!element) {\n    return null;\n  }\n  return element.hasAttributeNS(ns, name)\n    ? element.getAttributeNS(ns, name)\n    : null;\n}\n\nfunction timestampParsingError(node) {\n  return new Error(`Could not parse ttml timestamp ${node}`);\n}\n\nfunction parseTtmlTime(timeAttributeValue, rateInfo): number | null {\n  if (!timeAttributeValue) {\n    return null;\n  }\n  let seconds: number | null = parseTimeStamp(timeAttributeValue);\n  if (seconds === null) {\n    if (HMSF_REGEX.test(timeAttributeValue)) {\n      seconds = parseHoursMinutesSecondsFrames(timeAttributeValue, rateInfo);\n    } else if (TIME_UNIT_REGEX.test(timeAttributeValue)) {\n      seconds = parseTimeUnits(timeAttributeValue, rateInfo);\n    }\n  }\n  return seconds;\n}\n\nfunction parseHoursMinutesSecondsFrames(timeAttributeValue, rateInfo): number {\n  const m = HMSF_REGEX.exec(timeAttributeValue) as Array<any>;\n  const frames = (m[4] | 0) + (m[5] | 0) / rateInfo.subFrameRate;\n  return (\n    (m[1] | 0) * 3600 +\n    (m[2] | 0) * 60 +\n    (m[3] | 0) +\n    frames / rateInfo.frameRate\n  );\n}\n\nfunction parseTimeUnits(timeAttributeValue, rateInfo): number {\n  const m = TIME_UNIT_REGEX.exec(timeAttributeValue) as Array<any>;\n  const value = Number(m[1]);\n  const unit = m[2];\n  switch (unit) {\n    case 'h':\n      return value * 3600;\n    case 'm':\n      return value * 60;\n    case 'ms':\n      return value * 1000;\n    case 'f':\n      return value / rateInfo.frameRate;\n    case 't':\n      return value / rateInfo.tickRate;\n  }\n  return value;\n}\n", "import { base64Decode } from './numeric-encoding-utils';\n\nfunction getKeyIdBytes(str: string): Uint8Array {\n  const keyIdbytes = strToUtf8array(str).subarray(0, 16);\n  const paddedkeyIdbytes = new Uint8Array(16);\n  paddedkeyIdbytes.set(keyIdbytes, 16 - keyIdbytes.length);\n  return paddedkeyIdbytes;\n}\n\nexport function changeEndianness(keyId: Uint8Array) {\n  const swap = function (array: Uint8Array, from: number, to: number) {\n    const cur = array[from];\n    array[from] = array[to];\n    array[to] = cur;\n  };\n\n  swap(keyId, 0, 3);\n  swap(keyId, 1, 2);\n  swap(keyId, 4, 5);\n  swap(keyId, 6, 7);\n}\n\nexport function convertDataUriToArrayBytes(uri: string): Uint8Array | null {\n  // data:[<media type][;attribute=value][;base64],<data>\n  const colonsplit = uri.split(':');\n  let keydata: Uint8Array | null = null;\n  if (colonsplit[0] === 'data' && colonsplit.length === 2) {\n    const semicolonsplit = colonsplit[1].split(';');\n    const commasplit = semicolonsplit[semicolonsplit.length - 1].split(',');\n    if (commasplit.length === 2) {\n      const isbase64 = commasplit[0] === 'base64';\n      const data = commasplit[1];\n      if (isbase64) {\n        semicolonsplit.splice(-1, 1); // remove from processing\n        keydata = base64Decode(data);\n      } else {\n        keydata = getKeyIdBytes(data);\n      }\n    }\n  }\n  return keydata;\n}\n\nexport function strToUtf8array(str: string): Uint8Array {\n  return Uint8Array.from(unescape(encodeURIComponent(str)), (c) =>\n    c.charCodeAt(0)\n  );\n}\n", "export interface ILogFunction {\n  (message?: any, ...optionalParams: any[]): void;\n}\n\nexport interface ILogger {\n  trace: ILogFunction;\n  debug: ILogFunction;\n  log: ILogFunction;\n  warn: ILogFunction;\n  info: ILogFunction;\n  error: ILogFunction;\n}\n\nconst noop: ILogFunction = function () {};\n\nconst fakeLogger: ILogger = {\n  trace: noop,\n  debug: noop,\n  log: noop,\n  warn: noop,\n  info: noop,\n  error: noop,\n};\n\nlet exportedLogger: ILogger = fakeLogger;\n\n// let lastCallTime;\n// function formatMsgWithTimeInfo(type, msg) {\n//   const now = Date.now();\n//   const diff = lastCallTime ? '+' + (now - lastCallTime) : '0';\n//   lastCallTime = now;\n//   msg = (new Date(now)).toISOString() + ' | [' +  type + '] > ' + msg + ' ( ' + diff + ' ms )';\n//   return msg;\n// }\n\nfunction consolePrintFn(type: string): ILogFunction {\n  const func: ILogFunction = self.console[type];\n  if (func) {\n    return func.bind(self.console, `[${type}] >`);\n  }\n  return noop;\n}\n\nfunction exportLoggerFunctions(\n  debugConfig: boolean | ILogger,\n  ...functions: string[]\n): void {\n  functions.forEach(function (type) {\n    exportedLogger[type] = debugConfig[type]\n      ? debugConfig[type].bind(debugConfig)\n      : consolePrintFn(type);\n  });\n}\n\nexport function enableLogs(debugConfig: boolean | ILogger, id: string): void {\n  // check that console is available\n  if (\n    (self.console && debugConfig === true) ||\n    typeof debugConfig === 'object'\n  ) {\n    exportLoggerFunctions(\n      debugConfig,\n      // Remove out from list here to hard-disable a log-level\n      // 'trace',\n      'debug',\n      'log',\n      'info',\n      'warn',\n      'error'\n    );\n    // Some browsers don't allow to use bind on console object anyway\n    // fallback to default if needed\n    try {\n      exportedLogger.log(`Debug logs enabled for \"${id}\"`);\n    } catch (e) {\n      exportedLogger = fakeLogger;\n    }\n  } else {\n    exportedLogger = fakeLogger;\n  }\n}\n\nexport const logger: ILogger = exportedLogger;\n", "import type { DRMSystemOptions, EMEControllerConfig } from '../config';\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess\n */\nexport enum KeySystems {\n  CLEARKEY = 'org.w3.clearkey',\n  FAIRPLAY = 'com.apple.fps',\n  PLAYREADY = 'com.microsoft.playready',\n  WIDEVINE = 'com.widevine.alpha',\n}\n\n// Playlist #EXT-X-KEY KEYFORMAT values\nexport enum KeySystemFormats {\n  CLEARKEY = 'org.w3.clearkey',\n  FAIRPLAY = 'com.apple.streamingkeydelivery',\n  PLAYREADY = 'com.microsoft.playready',\n  WIDEVINE = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n}\n\nexport function keySystemFormatToKeySystemDomain(\n  format: KeySystemFormats\n): KeySystems | undefined {\n  switch (format) {\n    case KeySystemFormats.FAIRPLAY:\n      return KeySystems.FAIRPLAY;\n    case KeySystemFormats.PLAYREADY:\n      return KeySystems.PLAYREADY;\n    case KeySystemFormats.WIDEVINE:\n      return KeySystems.WIDEVINE;\n    case KeySystemFormats.CLEARKEY:\n      return KeySystems.CLEARKEY;\n  }\n}\n\n// System IDs for which we can extract a key ID from \"encrypted\" event PSSH\nexport enum KeySystemIds {\n  // CENC = '1077efecc0b24d02ace33c1e52e2fb4b'\n  // CLEARKEY = 'e2719d58a985b3c9781ab030af78d30e',\n  // FAIRPLAY = '94ce86fb07ff4f43adb893d2fa968ca2',\n  // PLAYREADY = '9a04f07998404286ab92e65be0885f95',\n  WIDEVINE = 'edef8ba979d64acea3c827dcd51d21ed',\n}\n\nexport function keySystemIdToKeySystemDomain(\n  systemId: KeySystemIds\n): KeySystems | undefined {\n  if (systemId === KeySystemIds.WIDEVINE) {\n    return KeySystems.WIDEVINE;\n    // } else if (systemId === KeySystemIds.PLAYREADY) {\n    //   return KeySystems.PLAYREADY;\n    // } else if (systemId === KeySystemIds.CENC || systemId === KeySystemIds.CLEARKEY) {\n    //   return KeySystems.CLEARKEY;\n  }\n}\n\nexport function keySystemDomainToKeySystemFormat(\n  keySystem: KeySystems\n): KeySystemFormats | undefined {\n  switch (keySystem) {\n    case KeySystems.FAIRPLAY:\n      return KeySystemFormats.FAIRPLAY;\n    case KeySystems.PLAYREADY:\n      return KeySystemFormats.PLAYREADY;\n    case KeySystems.WIDEVINE:\n      return KeySystemFormats.WIDEVINE;\n    case KeySystems.CLEARKEY:\n      return KeySystemFormats.CLEARKEY;\n  }\n}\n\nexport function getKeySystemsForConfig(\n  config: EMEControllerConfig\n): KeySystems[] {\n  const { drmSystems, widevineLicenseUrl } = config;\n  const keySystemsToAttempt: KeySystems[] = drmSystems\n    ? [\n        KeySystems.FAIRPLAY,\n        KeySystems.WIDEVINE,\n        KeySystems.PLAYREADY,\n        KeySystems.CLEARKEY,\n      ].filter((keySystem) => !!drmSystems[keySystem])\n    : [];\n  if (!keySystemsToAttempt[KeySystems.WIDEVINE] && widevineLicenseUrl) {\n    keySystemsToAttempt.push(KeySystems.WIDEVINE);\n  }\n  return keySystemsToAttempt;\n}\n\nexport type MediaKeyFunc = (\n  keySystem: KeySystems,\n  supportedConfigurations: MediaKeySystemConfiguration[]\n) => Promise<MediaKeySystemAccess>;\n\nexport const requestMediaKeySystemAccess = (function (): MediaKeyFunc | null {\n  if (\n    typeof self !== 'undefined' &&\n    self.navigator &&\n    self.navigator.requestMediaKeySystemAccess\n  ) {\n    return self.navigator.requestMediaKeySystemAccess.bind(self.navigator);\n  } else {\n    return null;\n  }\n})();\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration\n */\nexport function getSupportedMediaKeySystemConfigurations(\n  keySystem: KeySystems,\n  audioCodecs: string[],\n  videoCodecs: string[],\n  drmSystemOptions: DRMSystemOptions\n): MediaKeySystemConfiguration[] {\n  let initDataTypes: string[];\n  switch (keySystem) {\n    case KeySystems.FAIRPLAY:\n      initDataTypes = ['cenc', 'sinf'];\n      break;\n    case KeySystems.WIDEVINE:\n    case KeySystems.PLAYREADY:\n      initDataTypes = ['cenc'];\n      break;\n    case KeySystems.CLEARKEY:\n      initDataTypes = ['cenc', 'keyids'];\n      break;\n    default:\n      throw new Error(`Unknown key-system: ${keySystem}`);\n  }\n  return createMediaKeySystemConfigurations(\n    initDataTypes,\n    audioCodecs,\n    videoCodecs,\n    drmSystemOptions\n  );\n}\n\nfunction createMediaKeySystemConfigurations(\n  initDataTypes: string[],\n  audioCodecs: string[],\n  videoCodecs: string[],\n  drmSystemOptions: DRMSystemOptions\n): MediaKeySystemConfiguration[] {\n  const baseConfig: MediaKeySystemConfiguration = {\n    initDataTypes: initDataTypes,\n    persistentState: drmSystemOptions.persistentState || 'not-allowed',\n    distinctiveIdentifier:\n      drmSystemOptions.distinctiveIdentifier || 'not-allowed',\n    sessionTypes: drmSystemOptions.sessionTypes || [\n      drmSystemOptions.sessionType || 'temporary',\n    ],\n    audioCapabilities: audioCodecs.map((codec) => ({\n      contentType: `audio/mp4; codecs=\"${codec}\"`,\n      robustness: drmSystemOptions.audioRobustness || '',\n      encryptionScheme: drmSystemOptions.audioEncryptionScheme || null,\n    })),\n    videoCapabilities: videoCodecs.map((codec) => ({\n      contentType: `video/mp4; codecs=\"${codec}\"`,\n      robustness: drmSystemOptions.videoRobustness || '',\n      encryptionScheme: drmSystemOptions.videoEncryptionScheme || null,\n    })),\n  };\n\n  return [baseConfig];\n}\n", "/**\n * MediaSource helper\n */\n\nexport function getMediaSource(): typeof MediaSource | undefined {\n  return self.MediaSource || ((self as any).WebKitMediaSource as MediaSource);\n}\n", "import { ElementaryStreamTypes } from '../loader/fragment';\nimport { sliceUint8 } from './typed-array';\nimport { utf8ArrayToStr } from '../demux/id3';\nimport { logger } from '../utils/logger';\nimport Hex from './hex';\nimport type { PassthroughTrack, UserdataSample } from '../types/demuxer';\nimport type { DecryptData } from '../loader/level-key';\n\nconst UINT32_MAX = Math.pow(2, 32) - 1;\nconst push = [].push;\n\n// We are using fixed track IDs for driving the MP4 remuxer\n// instead of following the TS PIDs.\n// There is no reason not to do this and some browsers/SourceBuffer-demuxers\n// may not like if there are TrackID \"switches\"\n// See https://github.com/video-dev/hls.js/issues/1331\n// Here we are mapping our internal track types to constant MP4 track IDs\n// With MSE currently one can only have one track of each, and we are muxing\n// whatever video/audio rendition in them.\nexport const RemuxerTrackIdConfig = {\n  video: 1,\n  audio: 2,\n  id3: 3,\n  text: 4,\n};\n\nexport function bin2str(data: Uint8Array): string {\n  return String.fromCharCode.apply(null, data);\n}\n\nexport function readUint16(buffer: Uint8Array, offset: number): number {\n  const val = (buffer[offset] << 8) | buffer[offset + 1];\n  return val < 0 ? 65536 + val : val;\n}\n\nexport function readUint32(buffer: Uint8Array, offset: number): number {\n  const val = readSint32(buffer, offset);\n  return val < 0 ? 4294967296 + val : val;\n}\n\nexport function readSint32(buffer: Uint8Array, offset: number): number {\n  return (\n    (buffer[offset] << 24) |\n    (buffer[offset + 1] << 16) |\n    (buffer[offset + 2] << 8) |\n    buffer[offset + 3]\n  );\n}\n\nexport function writeUint32(buffer: Uint8Array, offset: number, value: number) {\n  buffer[offset] = value >> 24;\n  buffer[offset + 1] = (value >> 16) & 0xff;\n  buffer[offset + 2] = (value >> 8) & 0xff;\n  buffer[offset + 3] = value & 0xff;\n}\n\n// Find the data for a box specified by its path\nexport function findBox(data: Uint8Array, path: string[]): Uint8Array[] {\n  const results = [] as Uint8Array[];\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n  const end = data.byteLength;\n\n  for (let i = 0; i < end; ) {\n    const size = readUint32(data, i);\n    const type = bin2str(data.subarray(i + 4, i + 8));\n    const endbox = size > 1 ? i + size : end;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, endbox));\n      } else {\n        // recursively search for the next box along the path\n        const subresults = findBox(data.subarray(i + 8, endbox), path.slice(1));\n        if (subresults.length) {\n          push.apply(results, subresults);\n        }\n      }\n    }\n    i = endbox;\n  }\n\n  // we've finished searching all of data\n  return results;\n}\n\ntype SidxInfo = {\n  earliestPresentationTime: number;\n  timescale: number;\n  version: number;\n  referencesCount: number;\n  references: any[];\n};\n\nexport function parseSegmentIndex(sidx: Uint8Array): SidxInfo | null {\n  const references: any[] = [];\n\n  const version = sidx[0];\n\n  // set initial offset, we skip the reference ID (not needed)\n  let index = 8;\n\n  const timescale = readUint32(sidx, index);\n  index += 4;\n\n  // TODO: parse earliestPresentationTime and firstOffset\n  // usually zero in our case\n  const earliestPresentationTime = 0;\n  const firstOffset = 0;\n\n  if (version === 0) {\n    index += 8;\n  } else {\n    index += 16;\n  }\n\n  // skip reserved\n  index += 2;\n\n  let startByte = sidx.length + firstOffset;\n\n  const referencesCount = readUint16(sidx, index);\n  index += 2;\n\n  for (let i = 0; i < referencesCount; i++) {\n    let referenceIndex = index;\n\n    const referenceInfo = readUint32(sidx, referenceIndex);\n    referenceIndex += 4;\n\n    const referenceSize = referenceInfo & 0x7fffffff;\n    const referenceType = (referenceInfo & 0x80000000) >>> 31;\n\n    if (referenceType === 1) {\n      // eslint-disable-next-line no-console\n      console.warn('SIDX has hierarchical references (not supported)');\n      return null;\n    }\n\n    const subsegmentDuration = readUint32(sidx, referenceIndex);\n    referenceIndex += 4;\n\n    references.push({\n      referenceSize,\n      subsegmentDuration, // unscaled\n      info: {\n        duration: subsegmentDuration / timescale,\n        start: startByte,\n        end: startByte + referenceSize - 1,\n      },\n    });\n\n    startByte += referenceSize;\n\n    // Skipping 1 bit for |startsWithSap|, 3 bits for |sapType|, and 28 bits\n    // for |sapDelta|.\n    referenceIndex += 4;\n\n    // skip to next ref\n    index = referenceIndex;\n  }\n\n  return {\n    earliestPresentationTime,\n    timescale,\n    version,\n    referencesCount,\n    references,\n  };\n}\n\n/**\n * Parses an MP4 initialization segment and extracts stream type and\n * timescale values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * moov > trak > mdia > hdlr\n * ```\n * @param initSegment {Uint8Array} the bytes of the init segment\n * @return {InitData} a hash of track type to timescale values or null if\n * the init segment is malformed.\n */\n\nexport interface InitDataTrack {\n  timescale: number;\n  id: number;\n  codec: string;\n}\n\ntype HdlrType = ElementaryStreamTypes.AUDIO | ElementaryStreamTypes.VIDEO;\n\nexport interface InitData extends Array<any> {\n  [index: number]:\n    | {\n        timescale: number;\n        type: HdlrType;\n        default?: {\n          duration: number;\n          flags: number;\n        };\n      }\n    | undefined;\n  audio?: InitDataTrack;\n  video?: InitDataTrack;\n  caption?: InitDataTrack;\n}\n\nexport function parseInitSegment(initSegment: Uint8Array): InitData {\n  const result: InitData = [];\n  const traks = findBox(initSegment, ['moov', 'trak']);\n  for (let i = 0; i < traks.length; i++) {\n    const trak = traks[i];\n    const tkhd = findBox(trak, ['tkhd'])[0];\n    if (tkhd) {\n      let version = tkhd[0];\n      let index = version === 0 ? 12 : 20;\n      const trackId = readUint32(tkhd, index);\n      const mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        const timescale = readUint32(mdhd, index);\n        const hdlr = findBox(trak, ['mdia', 'hdlr'])[0];\n        if (hdlr) {\n          const hdlrType = bin2str(hdlr.subarray(8, 12));\n          const type: HdlrType | undefined = {\n            soun: ElementaryStreamTypes.AUDIO as const,\n            vide: ElementaryStreamTypes.VIDEO as const,\n          }[hdlrType];\n          if (type) {\n            // Parse codec details\n            const stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n            let codec;\n            if (stsd) {\n              codec = bin2str(stsd.subarray(12, 16));\n              // TODO: Parse codec details to be able to build MIME type.\n              // stsd.start += 8;\n              // const codecBox = findBox(stsd, [codec])[0];\n              // if (codecBox) {\n              //   TODO: Codec parsing support for avc1, mp4a, hevc, av01...\n              // }\n            }\n            result[trackId] = { timescale, type };\n            result[type] = { timescale, id: trackId, codec };\n          }\n        }\n      }\n    }\n  }\n\n  const trex = findBox(initSegment, ['moov', 'mvex', 'trex']);\n  trex.forEach((trex) => {\n    const trackId = readUint32(trex, 4);\n    const track = result[trackId];\n    if (track) {\n      track.default = {\n        duration: readUint32(trex, 12),\n        flags: readUint32(trex, 20),\n      };\n    }\n  });\n\n  return result;\n}\n\nexport function patchEncyptionData(\n  initSegment: Uint8Array | undefined,\n  decryptdata: DecryptData | null\n): Uint8Array | undefined {\n  if (!initSegment || !decryptdata) {\n    return initSegment;\n  }\n  const keyId = decryptdata.keyId;\n  if (keyId && decryptdata.isCommonEncryption) {\n    const traks = findBox(initSegment, ['moov', 'trak']);\n    traks.forEach((trak) => {\n      const stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n      // skip the sample entry count\n      const sampleEntries = stsd.subarray(8);\n      let encBoxes = findBox(sampleEntries, ['enca']);\n      const isAudio = encBoxes.length > 0;\n      if (!isAudio) {\n        encBoxes = findBox(sampleEntries, ['encv']);\n      }\n      encBoxes.forEach((enc) => {\n        const encBoxChildren = isAudio ? enc.subarray(28) : enc.subarray(78);\n        const sinfBoxes = findBox(encBoxChildren, ['sinf']);\n        sinfBoxes.forEach((sinf) => {\n          const tenc = parseSinf(sinf);\n          if (tenc) {\n            // Look for default key id (keyID offset is always 8 within the tenc box):\n            const tencKeyId = tenc.subarray(8, 24);\n            if (!tencKeyId.some((b) => b !== 0)) {\n              logger.log(\n                `[eme] Patching keyId in 'enc${\n                  isAudio ? 'a' : 'v'\n                }>sinf>>tenc' box: ${Hex.hexDump(tencKeyId)} -> ${Hex.hexDump(\n                  keyId\n                )}`\n              );\n              tenc.set(keyId, 8);\n            }\n          }\n        });\n      });\n    });\n  }\n\n  return initSegment;\n}\n\nexport function parseSinf(sinf: Uint8Array): Uint8Array | null {\n  const schm = findBox(sinf, ['schm'])[0];\n  if (schm) {\n    const scheme = bin2str(schm.subarray(4, 8));\n    if (scheme === 'cbcs' || scheme === 'cenc') {\n      return findBox(sinf, ['schi', 'tenc'])[0];\n    }\n  }\n  logger.error(`[eme] missing 'schm' box`);\n  return null;\n}\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param initData {InitData} a hash of track type to timescale values\n * @param fmp4 {Uint8Array} the bytes of the mp4 fragment\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nexport function getStartDTS(initData: InitData, fmp4: Uint8Array): number {\n  // we need info from two children of each track fragment box\n  return (\n    findBox(fmp4, ['moof', 'traf']).reduce((result: number | null, traf) => {\n      const tfdt = findBox(traf, ['tfdt'])[0];\n      const version = tfdt[0];\n      const start = findBox(traf, ['tfhd']).reduce(\n        (result: number | null, tfhd) => {\n          // get the track id from the tfhd\n          const id = readUint32(tfhd, 4);\n          const track = initData[id];\n          if (track) {\n            let baseTime = readUint32(tfdt, 4);\n            if (version === 1) {\n              baseTime *= Math.pow(2, 32);\n              baseTime += readUint32(tfdt, 8);\n            }\n            // assume a 90kHz clock if no timescale was specified\n            const scale = track.timescale || 90e3;\n            // convert base time to seconds\n            const startTime = baseTime / scale;\n            if (\n              isFinite(startTime) &&\n              (result === null || startTime < result)\n            ) {\n              return startTime;\n            }\n          }\n          return result;\n        },\n        null\n      );\n      if (\n        start !== null &&\n        isFinite(start) &&\n        (result === null || start < result)\n      ) {\n        return start;\n      }\n      return result;\n    }, null) || 0\n  );\n}\n\n/*\n  For Reference:\n  aligned(8) class TrackFragmentHeaderBox\n           extends FullBox(‘tfhd’, 0, tf_flags){\n     unsigned int(32)  track_ID;\n     // all the following are optional fields\n     unsigned int(64)  base_data_offset;\n     unsigned int(32)  sample_description_index;\n     unsigned int(32)  default_sample_duration;\n     unsigned int(32)  default_sample_size;\n     unsigned int(32)  default_sample_flags\n  }\n */\nexport function getDuration(data: Uint8Array, initData: InitData) {\n  let rawDuration = 0;\n  let videoDuration = 0;\n  let audioDuration = 0;\n  const trafs = findBox(data, ['moof', 'traf']);\n  for (let i = 0; i < trafs.length; i++) {\n    const traf = trafs[i];\n    // There is only one tfhd & trun per traf\n    // This is true for CMAF style content, and we should perhaps check the ftyp\n    // and only look for a single trun then, but for ISOBMFF we should check\n    // for multiple track runs.\n    const tfhd = findBox(traf, ['tfhd'])[0];\n    // get the track id from the tfhd\n    const id = readUint32(tfhd, 4);\n    const track = initData[id];\n    if (!track) {\n      continue;\n    }\n    const trackDefault = track.default;\n    const tfhdFlags = readUint32(tfhd, 0) | trackDefault?.flags!;\n    let sampleDuration: number | undefined = trackDefault?.duration;\n    if (tfhdFlags & 0x000008) {\n      // 0x000008 indicates the presence of the default_sample_duration field\n      if (tfhdFlags & 0x000002) {\n        // 0x000002 indicates the presence of the sample_description_index field, which precedes default_sample_duration\n        // If present, the default_sample_duration exists at byte offset 12\n        sampleDuration = readUint32(tfhd, 12);\n      } else {\n        // Otherwise, the duration is at byte offset 8\n        sampleDuration = readUint32(tfhd, 8);\n      }\n    }\n    // assume a 90kHz clock if no timescale was specified\n    const timescale = track.timescale || 90e3;\n    const truns = findBox(traf, ['trun']);\n    for (let j = 0; j < truns.length; j++) {\n      rawDuration = computeRawDurationFromSamples(truns[j]);\n      if (!rawDuration && sampleDuration) {\n        const sampleCount = readUint32(truns[j], 4);\n        rawDuration = sampleDuration * sampleCount;\n      }\n      if (track.type === ElementaryStreamTypes.VIDEO) {\n        videoDuration += rawDuration / timescale;\n      } else if (track.type === ElementaryStreamTypes.AUDIO) {\n        audioDuration += rawDuration / timescale;\n      }\n    }\n  }\n  if (videoDuration === 0 && audioDuration === 0) {\n    // If duration samples are not available in the traf use sidx subsegment_duration\n    let sidxDuration = 0;\n    const sidxs = findBox(data, ['sidx']);\n    for (let i = 0; i < sidxs.length; i++) {\n      const sidx = parseSegmentIndex(sidxs[i]);\n      if (sidx?.references) {\n        sidxDuration += sidx.references.reduce(\n          (dur, ref) => dur + ref.info.duration || 0,\n          0\n        );\n      }\n    }\n\n    return sidxDuration;\n  }\n  if (videoDuration) {\n    return videoDuration;\n  }\n  return audioDuration;\n}\n\n/*\n  For Reference:\n  aligned(8) class TrackRunBox\n           extends FullBox(‘trun’, version, tr_flags) {\n     unsigned int(32)  sample_count;\n     // the following are optional fields\n     signed int(32) data_offset;\n     unsigned int(32)  first_sample_flags;\n     // all fields in the following array are optional\n     {\n        unsigned int(32)  sample_duration;\n        unsigned int(32)  sample_size;\n        unsigned int(32)  sample_flags\n        if (version == 0)\n           { unsigned int(32)\n        else\n           { signed int(32)\n     }[ sample_count ]\n  }\n */\nexport function computeRawDurationFromSamples(trun): number {\n  const flags = readUint32(trun, 0);\n  // Flags are at offset 0, non-optional sample_count is at offset 4. Therefore we start 8 bytes in.\n  // Each field is an int32, which is 4 bytes\n  let offset = 8;\n  // data-offset-present flag\n  if (flags & 0x000001) {\n    offset += 4;\n  }\n  // first-sample-flags-present flag\n  if (flags & 0x000004) {\n    offset += 4;\n  }\n\n  let duration = 0;\n  const sampleCount = readUint32(trun, 4);\n  for (let i = 0; i < sampleCount; i++) {\n    // sample-duration-present flag\n    if (flags & 0x000100) {\n      const sampleDuration = readUint32(trun, offset);\n      duration += sampleDuration;\n      offset += 4;\n    }\n    // sample-size-present flag\n    if (flags & 0x000200) {\n      offset += 4;\n    }\n    // sample-flags-present flag\n    if (flags & 0x000400) {\n      offset += 4;\n    }\n    // sample-composition-time-offsets-present flag\n    if (flags & 0x000800) {\n      offset += 4;\n    }\n  }\n  return duration;\n}\n\nexport function offsetStartDTS(\n  initData: InitData,\n  fmp4: Uint8Array,\n  timeOffset: number\n) {\n  findBox(fmp4, ['moof', 'traf']).forEach((traf) => {\n    findBox(traf, ['tfhd']).forEach((tfhd) => {\n      // get the track id from the tfhd\n      const id = readUint32(tfhd, 4);\n      const track = initData[id];\n      if (!track) {\n        return;\n      }\n      // assume a 90kHz clock if no timescale was specified\n      const timescale = track.timescale || 90e3;\n      // get the base media decode time from the tfdt\n      findBox(traf, ['tfdt']).forEach((tfdt) => {\n        const version = tfdt[0];\n        let baseMediaDecodeTime = readUint32(tfdt, 4);\n\n        if (version === 0) {\n          baseMediaDecodeTime -= timeOffset * timescale;\n          baseMediaDecodeTime = Math.max(baseMediaDecodeTime, 0);\n          writeUint32(tfdt, 4, baseMediaDecodeTime);\n        } else {\n          baseMediaDecodeTime *= Math.pow(2, 32);\n          baseMediaDecodeTime += readUint32(tfdt, 8);\n          baseMediaDecodeTime -= timeOffset * timescale;\n          baseMediaDecodeTime = Math.max(baseMediaDecodeTime, 0);\n          const upper = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1));\n          const lower = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1));\n          writeUint32(tfdt, 4, upper);\n          writeUint32(tfdt, 8, lower);\n        }\n      });\n    });\n  });\n}\n\n// TODO: Check if the last moof+mdat pair is part of the valid range\nexport function segmentValidRange(data: Uint8Array): SegmentedRange {\n  const segmentedRange: SegmentedRange = {\n    valid: null,\n    remainder: null,\n  };\n\n  const moofs = findBox(data, ['moof']);\n  if (!moofs) {\n    return segmentedRange;\n  } else if (moofs.length < 2) {\n    segmentedRange.remainder = data;\n    return segmentedRange;\n  }\n  const last = moofs[moofs.length - 1];\n  // Offset by 8 bytes; findBox offsets the start by as much\n  segmentedRange.valid = sliceUint8(data, 0, last.byteOffset - 8);\n  segmentedRange.remainder = sliceUint8(data, last.byteOffset - 8);\n  return segmentedRange;\n}\n\nexport interface SegmentedRange {\n  valid: Uint8Array | null;\n  remainder: Uint8Array | null;\n}\n\nexport function appendUint8Array(\n  data1: Uint8Array,\n  data2: Uint8Array\n): Uint8Array {\n  const temp = new Uint8Array(data1.length + data2.length);\n  temp.set(data1);\n  temp.set(data2, data1.length);\n\n  return temp;\n}\n\nexport interface IEmsgParsingData {\n  schemeIdUri: string;\n  value: string;\n  timeScale: number;\n  presentationTimeDelta?: number;\n  presentationTime?: number;\n  eventDuration: number;\n  id: number;\n  payload: Uint8Array;\n}\n\nexport function parseSamples(\n  timeOffset: number,\n  track: PassthroughTrack\n): UserdataSample[] {\n  const seiSamples = [] as UserdataSample[];\n  const videoData = track.samples;\n  const timescale = track.timescale;\n  const trackId = track.id;\n  let isHEVCFlavor = false;\n\n  const moofs = findBox(videoData, ['moof']);\n  moofs.map((moof) => {\n    const moofOffset = moof.byteOffset - 8;\n    const trafs = findBox(moof, ['traf']);\n    trafs.map((traf) => {\n      // get the base media decode time from the tfdt\n      const baseTime = findBox(traf, ['tfdt']).map((tfdt) => {\n        const version = tfdt[0];\n        let result = readUint32(tfdt, 4);\n        if (version === 1) {\n          result *= Math.pow(2, 32);\n          result += readUint32(tfdt, 8);\n        }\n        return result / timescale;\n      })[0];\n\n      if (baseTime !== undefined) {\n        timeOffset = baseTime;\n      }\n\n      return findBox(traf, ['tfhd']).map((tfhd) => {\n        const id = readUint32(tfhd, 4);\n        const tfhdFlags = readUint32(tfhd, 0) & 0xffffff;\n        const baseDataOffsetPresent = (tfhdFlags & 0x000001) !== 0;\n        const sampleDescriptionIndexPresent = (tfhdFlags & 0x000002) !== 0;\n        const defaultSampleDurationPresent = (tfhdFlags & 0x000008) !== 0;\n        let defaultSampleDuration = 0;\n        const defaultSampleSizePresent = (tfhdFlags & 0x000010) !== 0;\n        let defaultSampleSize = 0;\n        const defaultSampleFlagsPresent = (tfhdFlags & 0x000020) !== 0;\n        let tfhdOffset = 8;\n\n        if (id === trackId) {\n          if (baseDataOffsetPresent) {\n            tfhdOffset += 8;\n          }\n          if (sampleDescriptionIndexPresent) {\n            tfhdOffset += 4;\n          }\n          if (defaultSampleDurationPresent) {\n            defaultSampleDuration = readUint32(tfhd, tfhdOffset);\n            tfhdOffset += 4;\n          }\n          if (defaultSampleSizePresent) {\n            defaultSampleSize = readUint32(tfhd, tfhdOffset);\n            tfhdOffset += 4;\n          }\n          if (defaultSampleFlagsPresent) {\n            tfhdOffset += 4;\n          }\n          if (track.type === 'video') {\n            isHEVCFlavor = isHEVC(track.codec);\n          }\n\n          findBox(traf, ['trun']).map((trun) => {\n            const version = trun[0];\n            const flags = readUint32(trun, 0) & 0xffffff;\n            const dataOffsetPresent = (flags & 0x000001) !== 0;\n            let dataOffset = 0;\n            const firstSampleFlagsPresent = (flags & 0x000004) !== 0;\n            const sampleDurationPresent = (flags & 0x000100) !== 0;\n            let sampleDuration = 0;\n            const sampleSizePresent = (flags & 0x000200) !== 0;\n            let sampleSize = 0;\n            const sampleFlagsPresent = (flags & 0x000400) !== 0;\n            const sampleCompositionOffsetsPresent = (flags & 0x000800) !== 0;\n            let compositionOffset = 0;\n            const sampleCount = readUint32(trun, 4);\n            let trunOffset = 8; // past version, flags, and sample count\n\n            if (dataOffsetPresent) {\n              dataOffset = readUint32(trun, trunOffset);\n              trunOffset += 4;\n            }\n            if (firstSampleFlagsPresent) {\n              trunOffset += 4;\n            }\n\n            let sampleOffset = dataOffset + moofOffset;\n\n            for (let ix = 0; ix < sampleCount; ix++) {\n              if (sampleDurationPresent) {\n                sampleDuration = readUint32(trun, trunOffset);\n                trunOffset += 4;\n              } else {\n                sampleDuration = defaultSampleDuration;\n              }\n              if (sampleSizePresent) {\n                sampleSize = readUint32(trun, trunOffset);\n                trunOffset += 4;\n              } else {\n                sampleSize = defaultSampleSize;\n              }\n              if (sampleFlagsPresent) {\n                trunOffset += 4;\n              }\n              if (sampleCompositionOffsetsPresent) {\n                if (version === 0) {\n                  compositionOffset = readUint32(trun, trunOffset);\n                } else {\n                  compositionOffset = readSint32(trun, trunOffset);\n                }\n                trunOffset += 4;\n              }\n              if (track.type === ElementaryStreamTypes.VIDEO) {\n                let naluTotalSize = 0;\n                while (naluTotalSize < sampleSize) {\n                  const naluSize = readUint32(videoData, sampleOffset);\n                  sampleOffset += 4;\n                  if (isSEIMessage(isHEVCFlavor, videoData[sampleOffset])) {\n                    const data = videoData.subarray(\n                      sampleOffset,\n                      sampleOffset + naluSize\n                    );\n                    parseSEIMessageFromNALu(\n                      data,\n                      isHEVCFlavor ? 2 : 1,\n                      timeOffset + compositionOffset / timescale,\n                      seiSamples\n                    );\n                  }\n                  sampleOffset += naluSize;\n                  naluTotalSize += naluSize + 4;\n                }\n              }\n\n              timeOffset += sampleDuration / timescale;\n            }\n          });\n        }\n      });\n    });\n  });\n  return seiSamples;\n}\n\nfunction isHEVC(codec: string) {\n  if (!codec) {\n    return false;\n  }\n  const delimit = codec.indexOf('.');\n  const baseCodec = delimit < 0 ? codec : codec.substring(0, delimit);\n  return (\n    baseCodec === 'hvc1' ||\n    baseCodec === 'hev1' ||\n    // Dolby Vision\n    baseCodec === 'dvh1' ||\n    baseCodec === 'dvhe'\n  );\n}\n\nfunction isSEIMessage(isHEVCFlavor: boolean, naluHeader: number) {\n  if (isHEVCFlavor) {\n    const naluType = (naluHeader >> 1) & 0x3f;\n    return naluType === 39 || naluType === 40;\n  } else {\n    const naluType = naluHeader & 0x1f;\n    return naluType === 6;\n  }\n}\n\nexport function parseSEIMessageFromNALu(\n  unescapedData: Uint8Array,\n  headerSize: number,\n  pts: number,\n  samples: UserdataSample[]\n) {\n  const data = discardEPB(unescapedData);\n  let seiPtr = 0;\n  // skip nal header\n  seiPtr += headerSize;\n  let payloadType = 0;\n  let payloadSize = 0;\n  let endOfCaptions = false;\n  let b = 0;\n\n  while (seiPtr < data.length) {\n    payloadType = 0;\n    do {\n      if (seiPtr >= data.length) {\n        break;\n      }\n      b = data[seiPtr++];\n      payloadType += b;\n    } while (b === 0xff);\n\n    // Parse payload size.\n    payloadSize = 0;\n    do {\n      if (seiPtr >= data.length) {\n        break;\n      }\n      b = data[seiPtr++];\n      payloadSize += b;\n    } while (b === 0xff);\n\n    const leftOver = data.length - seiPtr;\n\n    if (!endOfCaptions && payloadType === 4 && seiPtr < data.length) {\n      endOfCaptions = true;\n\n      const countryCode = data[seiPtr++];\n      if (countryCode === 181) {\n        const providerCode = readUint16(data, seiPtr);\n        seiPtr += 2;\n\n        if (providerCode === 49) {\n          const userStructure = readUint32(data, seiPtr);\n          seiPtr += 4;\n\n          if (userStructure === 0x47413934) {\n            const userDataType = data[seiPtr++];\n\n            // Raw CEA-608 bytes wrapped in CEA-708 packet\n            if (userDataType === 3) {\n              const firstByte = data[seiPtr++];\n              const totalCCs = 0x1f & firstByte;\n              const enabled = 0x40 & firstByte;\n              const totalBytes = enabled ? 2 + totalCCs * 3 : 0;\n              const byteArray = new Uint8Array(totalBytes);\n              if (enabled) {\n                byteArray[0] = firstByte;\n                for (let i = 1; i < totalBytes; i++) {\n                  byteArray[i] = data[seiPtr++];\n                }\n              }\n\n              samples.push({\n                type: userDataType,\n                payloadType,\n                pts,\n                bytes: byteArray,\n              });\n            }\n          }\n        }\n      }\n    } else if (payloadType === 5 && payloadSize < leftOver) {\n      endOfCaptions = true;\n\n      if (payloadSize > 16) {\n        const uuidStrArray: Array<string> = [];\n        for (let i = 0; i < 16; i++) {\n          const b = data[seiPtr++].toString(16);\n          uuidStrArray.push(b.length == 1 ? '0' + b : b);\n\n          if (i === 3 || i === 5 || i === 7 || i === 9) {\n            uuidStrArray.push('-');\n          }\n        }\n        const length = payloadSize - 16;\n        const userDataBytes = new Uint8Array(length);\n        for (let i = 0; i < length; i++) {\n          userDataBytes[i] = data[seiPtr++];\n        }\n\n        samples.push({\n          payloadType,\n          pts,\n          uuid: uuidStrArray.join(''),\n          userData: utf8ArrayToStr(userDataBytes),\n          userDataBytes,\n        });\n      }\n    } else if (payloadSize < leftOver) {\n      seiPtr += payloadSize;\n    } else if (payloadSize > leftOver) {\n      break;\n    }\n  }\n}\n\n/**\n * remove Emulation Prevention bytes from a RBSP\n */\nexport function discardEPB(data: Uint8Array): Uint8Array {\n  const length = data.byteLength;\n  const EPBPositions = [] as Array<number>;\n  let i = 1;\n\n  // Find all `Emulation Prevention Bytes`\n  while (i < length - 2) {\n    if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n      EPBPositions.push(i + 2);\n      i += 2;\n    } else {\n      i++;\n    }\n  }\n\n  // If no Emulation Prevention Bytes were found just return the original\n  // array\n  if (EPBPositions.length === 0) {\n    return data;\n  }\n\n  // Create a new array to hold the NAL unit data\n  const newLength = length - EPBPositions.length;\n  const newData = new Uint8Array(newLength);\n  let sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === EPBPositions[0]) {\n      // Skip this byte\n      sourceIndex++;\n      // Remove this position index\n      EPBPositions.shift();\n    }\n    newData[i] = data[sourceIndex];\n  }\n  return newData;\n}\n\nexport function parseEmsg(data: Uint8Array): IEmsgParsingData {\n  const version = data[0];\n  let schemeIdUri: string = '';\n  let value: string = '';\n  let timeScale: number = 0;\n  let presentationTimeDelta: number = 0;\n  let presentationTime: number = 0;\n  let eventDuration: number = 0;\n  let id: number = 0;\n  let offset: number = 0;\n\n  if (version === 0) {\n    while (bin2str(data.subarray(offset, offset + 1)) !== '\\0') {\n      schemeIdUri += bin2str(data.subarray(offset, offset + 1));\n      offset += 1;\n    }\n\n    schemeIdUri += bin2str(data.subarray(offset, offset + 1));\n    offset += 1;\n\n    while (bin2str(data.subarray(offset, offset + 1)) !== '\\0') {\n      value += bin2str(data.subarray(offset, offset + 1));\n      offset += 1;\n    }\n\n    value += bin2str(data.subarray(offset, offset + 1));\n    offset += 1;\n\n    timeScale = readUint32(data, 12);\n    presentationTimeDelta = readUint32(data, 16);\n    eventDuration = readUint32(data, 20);\n    id = readUint32(data, 24);\n    offset = 28;\n  } else if (version === 1) {\n    offset += 4;\n    timeScale = readUint32(data, offset);\n    offset += 4;\n    const leftPresentationTime = readUint32(data, offset);\n    offset += 4;\n    const rightPresentationTime = readUint32(data, offset);\n    offset += 4;\n    presentationTime = 2 ** 32 * leftPresentationTime + rightPresentationTime;\n    if (!Number.isSafeInteger(presentationTime)) {\n      presentationTime = Number.MAX_SAFE_INTEGER;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box'\n      );\n    }\n\n    eventDuration = readUint32(data, offset);\n    offset += 4;\n    id = readUint32(data, offset);\n    offset += 4;\n\n    while (bin2str(data.subarray(offset, offset + 1)) !== '\\0') {\n      schemeIdUri += bin2str(data.subarray(offset, offset + 1));\n      offset += 1;\n    }\n\n    schemeIdUri += bin2str(data.subarray(offset, offset + 1));\n    offset += 1;\n\n    while (bin2str(data.subarray(offset, offset + 1)) !== '\\0') {\n      value += bin2str(data.subarray(offset, offset + 1));\n      offset += 1;\n    }\n\n    value += bin2str(data.subarray(offset, offset + 1));\n    offset += 1;\n  }\n  const payload = data.subarray(offset, data.byteLength);\n\n  return {\n    schemeIdUri,\n    value,\n    timeScale,\n    presentationTime,\n    presentationTimeDelta,\n    eventDuration,\n    id,\n    payload,\n  };\n}\n\nexport function mp4Box(type: ArrayLike<number>, ...payload: Uint8Array[]) {\n  const len = payload.length;\n  let size = 8;\n  let i = len;\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  const result = new Uint8Array(size);\n  result[0] = (size >> 24) & 0xff;\n  result[1] = (size >> 16) & 0xff;\n  result[2] = (size >> 8) & 0xff;\n  result[3] = size & 0xff;\n  result.set(type, 4);\n  for (i = 0, size = 8; i < len; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n}\n\nexport function mp4pssh(\n  systemId: Uint8Array,\n  keyids: Array<Uint8Array> | null,\n  data: Uint8Array\n) {\n  if (systemId.byteLength !== 16) {\n    throw new RangeError('Invalid system id');\n  }\n  let version;\n  let kids;\n  if (keyids) {\n    version = 1;\n    kids = new Uint8Array(keyids.length * 16);\n    for (let ix = 0; ix < keyids.length; ix++) {\n      const k = keyids[ix]; // uint8array\n      if (k.byteLength !== 16) {\n        throw new RangeError('Invalid key');\n      }\n      kids.set(k, ix * 16);\n    }\n  } else {\n    version = 0;\n    kids = new Uint8Array();\n  }\n  let kidCount;\n  if (version > 0) {\n    kidCount = new Uint8Array(4);\n    if (keyids!.length > 0) {\n      new DataView(kidCount.buffer).setUint32(0, keyids!.length, false);\n    }\n  } else {\n    kidCount = new Uint8Array();\n  }\n  const dataSize = new Uint8Array(4);\n  if (data && data.byteLength > 0) {\n    new DataView(dataSize.buffer).setUint32(0, data.byteLength, false);\n  }\n  return mp4Box(\n    [112, 115, 115, 104],\n    new Uint8Array([\n      version,\n      0x00,\n      0x00,\n      0x00, // Flags\n    ]),\n    systemId, // 16 bytes\n    kidCount,\n    kids,\n    dataSize,\n    data || new Uint8Array()\n  );\n}\n\nexport function parsePssh(initData: ArrayBuffer) {\n  if (!(initData instanceof ArrayBuffer) || initData.byteLength < 32) {\n    return null;\n  }\n  const result = {\n    version: 0,\n    systemId: '',\n    kids: null as null | Uint8Array[],\n    data: null as null | Uint8Array,\n  };\n  const view = new DataView(initData);\n  const boxSize = view.getUint32(0);\n  if (initData.byteLength !== boxSize && boxSize > 44) {\n    return null;\n  }\n  const type = view.getUint32(4);\n  if (type !== 0x70737368) {\n    return null;\n  }\n  result.version = view.getUint32(8) >>> 24;\n  if (result.version > 1) {\n    return null;\n  }\n  result.systemId = Hex.hexDump(new Uint8Array(initData, 12, 16));\n  const dataSizeOrKidCount = view.getUint32(28);\n  if (result.version === 0) {\n    if (boxSize - 32 < dataSizeOrKidCount) {\n      return null;\n    }\n    result.data = new Uint8Array(initData, 32, dataSizeOrKidCount);\n  } else if (result.version === 1) {\n    result.kids = [];\n    for (let i = 0; i < dataSizeOrKidCount; i++) {\n      result.kids.push(new Uint8Array(initData, 32 + i * 16, 16));\n    }\n  }\n  return result;\n}\n", "export function base64ToBase64Url(base64encodedStr: string): string {\n  return base64encodedStr\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n}\n\nexport function strToBase64Encode(str: string): string {\n  return btoa(str);\n}\n\nexport function base64DecodeToStr(str: string): string {\n  return atob(str);\n}\n\nexport function base64Encode(input: Uint8Array): string {\n  return btoa(String.fromCharCode(...input));\n}\n\nexport function base64UrlEncode(input: Uint8Array): string {\n  return base64ToBase64Url(base64Encode(input));\n}\n\nexport function base64Decode(base64encodedStr: string): Uint8Array {\n  return Uint8Array.from(atob(base64encodedStr), (c) => c.charCodeAt(0));\n}\n", "import type { TimelineController } from '../controller/timeline-controller';\nimport type { CaptionScreen } from './cea-608-parser';\n\nexport default class OutputFilter {\n  private timelineController: TimelineController;\n  private cueRanges: Array<[number, number]> = [];\n  private trackName: string;\n  private startTime: number | null = null;\n  private endTime: number | null = null;\n  private screen: CaptionScreen | null = null;\n\n  constructor(timelineController: TimelineController, trackName: string) {\n    this.timelineController = timelineController;\n    this.trackName = trackName;\n  }\n\n  dispatchCue() {\n    if (this.startTime === null) {\n      return;\n    }\n\n    this.timelineController.addCues(\n      this.trackName,\n      this.startTime,\n      this.endTime as number,\n      this.screen as CaptionScreen,\n      this.cueRanges\n    );\n    this.startTime = null;\n  }\n\n  newCue(startTime: number, endTime: number, screen: CaptionScreen) {\n    if (this.startTime === null || this.startTime > startTime) {\n      this.startTime = startTime;\n    }\n\n    this.endTime = endTime;\n    this.screen = screen;\n    this.timelineController.createCaptionsTrack(this.trackName);\n  }\n\n  reset() {\n    this.cueRanges = [];\n    this.startTime = null;\n  }\n}\n", "import { logger } from './logger';\n\nexport function sendAddTrackEvent(track: TextTrack, videoEl: HTMLMediaElement) {\n  let event: Event;\n  try {\n    event = new Event('addtrack');\n  } catch (err) {\n    // for IE11\n    event = document.createEvent('Event');\n    event.initEvent('addtrack', false, false);\n  }\n  (event as any).track = track;\n  videoEl.dispatchEvent(event);\n}\n\nexport function addCueToTrack(track: TextTrack, cue: VTTCue) {\n  // Sometimes there are cue overlaps on segmented vtts so the same\n  // cue can appear more than once in different vtt files.\n  // This avoid showing duplicated cues with same timecode and text.\n  const mode = track.mode;\n  if (mode === 'disabled') {\n    track.mode = 'hidden';\n  }\n  if (track.cues && !track.cues.getCueById(cue.id)) {\n    try {\n      track.addCue(cue);\n      if (!track.cues.getCueById(cue.id)) {\n        throw new Error(`addCue is failed for: ${cue}`);\n      }\n    } catch (err) {\n      logger.debug(`[texttrack-utils]: ${err}`);\n      const textTrackCue = new (self.TextTrackCue as any)(\n        cue.startTime,\n        cue.endTime,\n        cue.text\n      );\n      textTrackCue.id = cue.id;\n      track.addCue(textTrackCue);\n    }\n  }\n  if (mode === 'disabled') {\n    track.mode = mode;\n  }\n}\n\nexport function clearCurrentCues(track: TextTrack) {\n  // When track.mode is disabled, track.cues will be null.\n  // To guarantee the removal of cues, we need to temporarily\n  // change the mode to hidden\n  const mode = track.mode;\n  if (mode === 'disabled') {\n    track.mode = 'hidden';\n  }\n  if (track.cues) {\n    for (let i = track.cues.length; i--; ) {\n      track.removeCue(track.cues[i]);\n    }\n  }\n  if (mode === 'disabled') {\n    track.mode = mode;\n  }\n}\n\nexport function removeCuesInRange(\n  track: TextTrack,\n  start: number,\n  end: number,\n  predicate?: (cue: TextTrackCue) => boolean\n) {\n  const mode = track.mode;\n  if (mode === 'disabled') {\n    track.mode = 'hidden';\n  }\n\n  if (track.cues && track.cues.length > 0) {\n    const cues = getCuesInRange(track.cues, start, end);\n    for (let i = 0; i < cues.length; i++) {\n      if (!predicate || predicate(cues[i])) {\n        track.removeCue(cues[i]);\n      }\n    }\n  }\n  if (mode === 'disabled') {\n    track.mode = mode;\n  }\n}\n\n// Find first cue starting after given time.\n// Modified version of binary search O(log(n)).\nfunction getFirstCueIndexAfterTime(\n  cues: TextTrackCueList | TextTrackCue[],\n  time: number\n): number {\n  // If first cue starts after time, start there\n  if (time < cues[0].startTime) {\n    return 0;\n  }\n  // If the last cue ends before time there is no overlap\n  const len = cues.length - 1;\n  if (time > cues[len].endTime) {\n    return -1;\n  }\n\n  let left = 0;\n  let right = len;\n\n  while (left <= right) {\n    const mid = Math.floor((right + left) / 2);\n\n    if (time < cues[mid].startTime) {\n      right = mid - 1;\n    } else if (time > cues[mid].startTime && left < len) {\n      left = mid + 1;\n    } else {\n      // If it's not lower or higher, it must be equal.\n      return mid;\n    }\n  }\n  // At this point, left and right have swapped.\n  // No direct match was found, left or right element must be the closest. Check which one has the smallest diff.\n  return cues[left].startTime - time < time - cues[right].startTime\n    ? left\n    : right;\n}\n\nexport function getCuesInRange(\n  cues: TextTrackCueList | TextTrackCue[],\n  start: number,\n  end: number\n): TextTrackCue[] {\n  const cuesFound: TextTrackCue[] = [];\n  const firstCueInRange = getFirstCueIndexAfterTime(cues, start);\n  if (firstCueInRange > -1) {\n    for (let i = firstCueInRange, len = cues.length; i < len; i++) {\n      const cue = cues[i];\n      if (cue.startTime >= start && cue.endTime <= end) {\n        cuesFound.push(cue);\n      } else if (cue.startTime > end) {\n        return cuesFound;\n      }\n    }\n  }\n  return cuesFound;\n}\n", "/**\n *  TimeRanges to string helper\n */\n\nconst TimeRanges = {\n  toString: function (r: TimeRanges) {\n    let log = '';\n    const len = r.length;\n    for (let i = 0; i < len; i++) {\n      log += `[${r.start(i).toFixed(3)}-${r.end(i).toFixed(3)}]`;\n    }\n\n    return log;\n  },\n};\n\nexport default TimeRanges;\n", "const MPEG_TS_CLOCK_FREQ_HZ = 90000;\n\nexport function toTimescaleFromBase(\n  value,\n  destScale: number,\n  srcBase: number = 1,\n  round: boolean = false\n): number {\n  const result = value * destScale * srcBase; // equivalent to `(value * scale) / (1 / base)`\n  return round ? Math.round(result) : result;\n}\n\nexport function toTimescaleFromScale(\n  value,\n  destScale: number,\n  srcScale: number = 1,\n  round: boolean = false\n): number {\n  return toTimescaleFromBase(value, destScale, 1 / srcScale, round);\n}\n\nexport function toMsFromMpegTsClock(\n  value: number,\n  round: boolean = false\n): number {\n  return toTimescaleFromBase(value, 1000, 1 / MPEG_TS_CLOCK_FREQ_HZ, round);\n}\n\nexport function toMpegTsClockFromTimescale(\n  value: number,\n  srcScale: number = 1\n): number {\n  return toTimescaleFromBase(value, MPEG_TS_CLOCK_FREQ_HZ, 1 / srcScale);\n}\n", "export function sliceUint8(\n  array: Uint8Array,\n  start?: number,\n  end?: number\n): Uint8Array {\n  // @ts-expect-error This polyfills IE11 usage of Uint8Array slice.\n  // It always exists in the TypeScript definition so fails, but it fails at runtime on IE11.\n  return Uint8Array.prototype.slice\n    ? array.slice(start, end)\n    : new Uint8Array(Array.prototype.slice.call(array, start, end));\n}\n", "/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare interface VTTCuePolyfill extends VTTCue {\n  new (...args): VTTCuePolyfill;\n  hasBeenReset: boolean;\n  displayState: void;\n}\n\nexport default (function () {\n  if (typeof self !== 'undefined' && self.VTTCue) {\n    return self.VTTCue;\n  }\n\n  const AllowedDirections = ['', 'lr', 'rl'] as const;\n  type Direction = typeof AllowedDirections[number];\n\n  const AllowedAlignments = [\n    'start',\n    'middle',\n    'end',\n    'left',\n    'right',\n  ] as const;\n  type Alignment = typeof AllowedAlignments[number];\n\n  function isAllowedValue<T, A>(allowed: T, value: string): A | false {\n    if (typeof value !== 'string') {\n      return false;\n    }\n    // necessary for assuring the generic conforms to the Array interface\n    if (!Array.isArray(allowed)) {\n      return false;\n    }\n    // reset the type so that the next narrowing works well\n    const lcValue = value.toLowerCase() as any;\n    // use the allow list to narrow the type to a specific subset of strings\n    if (~allowed.indexOf(lcValue)) {\n      return lcValue;\n    }\n\n    return false;\n  }\n\n  function findDirectionSetting(value: string) {\n    return isAllowedValue<typeof AllowedDirections, Direction>(\n      AllowedDirections,\n      value\n    );\n  }\n\n  function findAlignSetting(value: string) {\n    return isAllowedValue<typeof AllowedAlignments, Alignment>(\n      AllowedAlignments,\n      value\n    );\n  }\n\n  function extend(obj: Record<string, any>, ...rest: Record<string, any>[]) {\n    let i = 1;\n    for (; i < arguments.length; i++) {\n      const cobj = arguments[i];\n      for (const p in cobj) {\n        obj[p] = cobj[p];\n      }\n    }\n\n    return obj;\n  }\n\n  function VTTCue(startTime: number, endTime: number, text: string) {\n    const cue = this as VTTCuePolyfill;\n    const baseObj = { enumerable: true };\n    /**\n     * Shim implementation specific properties. These properties are not in\n     * the spec.\n     */\n\n    // Lets us know when the VTTCue's data has changed in such a way that we need\n    // to recompute its display state. This lets us compute its display state\n    // lazily.\n    cue.hasBeenReset = false;\n\n    /**\n     * VTTCue and TextTrackCue properties\n     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n     */\n\n    let _id = '';\n    let _pauseOnExit = false;\n    let _startTime = startTime;\n    let _endTime = endTime;\n    let _text = text;\n    let _region = null;\n    let _vertical: Direction = '';\n    let _snapToLines = true;\n    let _line: number | 'auto' = 'auto';\n    let _lineAlign: Alignment = 'start';\n    let _position = 50;\n    let _positionAlign: Alignment = 'middle';\n    let _size = 50;\n    let _align: Alignment = 'middle';\n\n    Object.defineProperty(\n      cue,\n      'id',\n      extend({}, baseObj, {\n        get: function () {\n          return _id;\n        },\n        set: function (value: string) {\n          _id = '' + value;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'pauseOnExit',\n      extend({}, baseObj, {\n        get: function () {\n          return _pauseOnExit;\n        },\n        set: function (value: boolean) {\n          _pauseOnExit = !!value;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'startTime',\n      extend({}, baseObj, {\n        get: function () {\n          return _startTime;\n        },\n        set: function (value: number) {\n          if (typeof value !== 'number') {\n            throw new TypeError('Start time must be set to a number.');\n          }\n\n          _startTime = value;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'endTime',\n      extend({}, baseObj, {\n        get: function () {\n          return _endTime;\n        },\n        set: function (value: number) {\n          if (typeof value !== 'number') {\n            throw new TypeError('End time must be set to a number.');\n          }\n\n          _endTime = value;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'text',\n      extend({}, baseObj, {\n        get: function () {\n          return _text;\n        },\n        set: function (value: string) {\n          _text = '' + value;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    // todo: implement VTTRegion polyfill?\n    Object.defineProperty(\n      cue,\n      'region',\n      extend({}, baseObj, {\n        get: function () {\n          return _region;\n        },\n        set: function (value: any) {\n          _region = value;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'vertical',\n      extend({}, baseObj, {\n        get: function () {\n          return _vertical;\n        },\n        set: function (value: string) {\n          const setting = findDirectionSetting(value);\n          // Have to check for false because the setting an be an empty string.\n          if (setting === false) {\n            throw new SyntaxError(\n              'An invalid or illegal string was specified.'\n            );\n          }\n\n          _vertical = setting;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'snapToLines',\n      extend({}, baseObj, {\n        get: function () {\n          return _snapToLines;\n        },\n        set: function (value: boolean) {\n          _snapToLines = !!value;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'line',\n      extend({}, baseObj, {\n        get: function () {\n          return _line;\n        },\n        set: function (value: number | 'auto') {\n          if (typeof value !== 'number' && value !== 'auto') {\n            throw new SyntaxError(\n              'An invalid number or illegal string was specified.'\n            );\n          }\n\n          _line = value;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'lineAlign',\n      extend({}, baseObj, {\n        get: function () {\n          return _lineAlign;\n        },\n        set: function (value: string) {\n          const setting = findAlignSetting(value);\n          if (!setting) {\n            throw new SyntaxError(\n              'An invalid or illegal string was specified.'\n            );\n          }\n\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'position',\n      extend({}, baseObj, {\n        get: function () {\n          return _position;\n        },\n        set: function (value: number) {\n          if (value < 0 || value > 100) {\n            throw new Error('Position must be between 0 and 100.');\n          }\n\n          _position = value;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'positionAlign',\n      extend({}, baseObj, {\n        get: function () {\n          return _positionAlign;\n        },\n        set: function (value: string) {\n          const setting = findAlignSetting(value);\n          if (!setting) {\n            throw new SyntaxError(\n              'An invalid or illegal string was specified.'\n            );\n          }\n\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'size',\n      extend({}, baseObj, {\n        get: function () {\n          return _size;\n        },\n        set: function (value: number) {\n          if (value < 0 || value > 100) {\n            throw new Error('Size must be between 0 and 100.');\n          }\n\n          _size = value;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    Object.defineProperty(\n      cue,\n      'align',\n      extend({}, baseObj, {\n        get: function () {\n          return _align;\n        },\n        set: function (value: string) {\n          const setting = findAlignSetting(value);\n          if (!setting) {\n            throw new SyntaxError(\n              'An invalid or illegal string was specified.'\n            );\n          }\n\n          _align = setting;\n          this.hasBeenReset = true;\n        },\n      })\n    );\n\n    /**\n     * Other <track> spec defined properties\n     */\n\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n    cue.displayState = undefined;\n  }\n\n  /**\n   * VTTCue methods\n   */\n\n  VTTCue.prototype.getCueAsHTML = function () {\n    // Assume WebVTT.convertCueToDOMTree is on the global.\n    const WebVTT = (self as any).WebVTT;\n    return WebVTT.convertCueToDOMTree(self, this.text);\n  };\n  // this is a polyfill hack\n  return VTTCue as any as VTTCuePolyfill;\n})();\n", "/*\n * Source: https://github.com/mozilla/vtt.js/blob/master/dist/vtt.js\n */\n\nimport VTTCue from './vttcue';\n\nclass StringDecoder {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  decode(data: string | any, options?: Object): string | never {\n    if (!data) {\n      return '';\n    }\n\n    if (typeof data !== 'string') {\n      throw new Error('Error - expected string data.');\n    }\n\n    return decodeURIComponent(encodeURIComponent(data));\n  }\n}\n\n// Try to parse input as a time stamp.\nexport function parseTimeStamp(input: string) {\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + parseFloat(f || 0);\n  }\n\n  const m = input.match(/^(?:(\\d+):)?(\\d{2}):(\\d{2})(\\.\\d+)?/);\n  if (!m) {\n    return null;\n  }\n\n  if (parseFloat(m[2]) > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[2], m[3], 0, m[4]);\n  }\n  // Timestamp takes the form of [hours (optional)]:[minutes]:[seconds].[milliseconds]\n  return computeSeconds(m[1], m[2], m[3], m[4]);\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nclass Settings {\n  private readonly values: { [key: string]: any } = Object.create(null);\n\n  // Only accept the first assignment to any key.\n  set(k: string, v: any) {\n    if (!this.get(k) && v !== '') {\n      this.values[k] = v;\n    }\n  }\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get(k: string, dflt?: any, defaultKey?: string): any {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n\n    return this.has(k) ? this.values[k] : dflt;\n  }\n  // Check whether we have a value for a key.\n  has(k: string): boolean {\n    return k in this.values;\n  }\n  // Accept a setting if its one of the given alternatives.\n  alt(k: string, v: any, a: any[]) {\n    for (let n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  }\n  // Accept a setting if its a valid (signed) integer.\n  integer(k: string, v: any) {\n    if (/^-?\\d+$/.test(v)) {\n      // integer\n      this.set(k, parseInt(v, 10));\n    }\n  }\n  // Accept a setting if its a valid percentage.\n  percent(k: string, v: any): boolean {\n    if (/^([\\d]{1,3})(\\.[\\d]*)?%$/.test(v)) {\n      const percent = parseFloat(v);\n      if (percent >= 0 && percent <= 100) {\n        this.set(k, percent);\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interpret each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(\n  input: string,\n  callback: (k: string, v: any) => void,\n  keyValueDelim: RegExp,\n  groupDelim?: RegExp\n) {\n  const groups = groupDelim ? input.split(groupDelim) : [input];\n  for (const i in groups) {\n    if (typeof groups[i] !== 'string') {\n      continue;\n    }\n\n    const kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n\n    const k = kv[0];\n    const v = kv[1];\n    callback(k, v);\n  }\n}\n\nconst defaults = new VTTCue(0, 0, '');\n// 'middle' was changed to 'center' in the spec: https://github.com/w3c/webvtt/pull/244\n//  Safari doesn't yet support this change, but FF and Chrome do.\nconst center = (defaults.align as string) === 'middle' ? 'middle' : 'center';\n\nfunction parseCue(input: string, cue: VTTCue, regionList: Region[]) {\n  // Remember the original input if we need to throw an error.\n  const oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp(): number | never {\n    const ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new Error('Malformed timestamp: ' + oInput);\n    }\n\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, '');\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input: string, cue: VTTCue) {\n    const settings = new Settings();\n\n    parseOptions(\n      input,\n      function (k, v) {\n        let vals;\n        switch (k) {\n          case 'region':\n            // Find the last region we parsed with the same region id.\n            for (let i = regionList.length - 1; i >= 0; i--) {\n              if (regionList[i].id === v) {\n                settings.set(k, regionList[i].region);\n                break;\n              }\n            }\n            break;\n          case 'vertical':\n            settings.alt(k, v, ['rl', 'lr']);\n            break;\n          case 'line':\n            vals = v.split(',');\n            settings.integer(k, vals[0]);\n            if (settings.percent(k, vals[0])) {\n              settings.set('snapToLines', false);\n            }\n\n            settings.alt(k, vals[0], ['auto']);\n            if (vals.length === 2) {\n              settings.alt('lineAlign', vals[1], ['start', center, 'end']);\n            }\n\n            break;\n          case 'position':\n            vals = v.split(',');\n            settings.percent(k, vals[0]);\n            if (vals.length === 2) {\n              settings.alt('positionAlign', vals[1], [\n                'start',\n                center,\n                'end',\n                'line-left',\n                'line-right',\n                'auto',\n              ]);\n            }\n\n            break;\n          case 'size':\n            settings.percent(k, v);\n            break;\n          case 'align':\n            settings.alt(k, v, ['start', center, 'end', 'left', 'right']);\n            break;\n        }\n      },\n      /:/,\n      /\\s/\n    );\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get('region', null);\n    cue.vertical = settings.get('vertical', '');\n    let line = settings.get('line', 'auto');\n    if (line === 'auto' && defaults.line === -1) {\n      // set numeric line number for Safari\n      line = -1;\n    }\n    cue.line = line;\n    cue.lineAlign = settings.get('lineAlign', 'start');\n    cue.snapToLines = settings.get('snapToLines', true);\n    cue.size = settings.get('size', 100);\n    cue.align = settings.get('align', center);\n    let position = settings.get('position', 'auto');\n    if (position === 'auto' && defaults.position === 50) {\n      // set numeric position for Safari\n      position =\n        cue.align === 'start' || cue.align === 'left'\n          ? 0\n          : cue.align === 'end' || cue.align === 'right'\n          ? 100\n          : 50;\n    }\n    cue.position = position;\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, '');\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n  skipWhitespace();\n  if (input.slice(0, 3) !== '-->') {\n    // (3) next characters must match '-->'\n    throw new Error(\n      \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput\n    );\n  }\n  input = input.slice(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nexport function fixLineBreaks(input: string): string {\n  return input.replace(/<br(?: \\/)?>/gi, '\\n');\n}\n\ntype Region = {\n  id: string;\n  region: any;\n};\n\nexport class VTTParser {\n  private state:\n    | 'INITIAL'\n    | 'HEADER'\n    | 'ID'\n    | 'CUE'\n    | 'CUETEXT'\n    | 'NOTE'\n    | 'BADWEBVTT'\n    | 'BADCUE' = 'INITIAL';\n  private buffer: string = '';\n  private decoder: StringDecoder = new StringDecoder();\n  private regionList: Region[] = [];\n  private cue: VTTCue | null = null;\n  public oncue?: (cue: VTTCue) => void;\n  public onparsingerror?: (error: Error) => void;\n  public onflush?: () => void;\n\n  parse(data?: string): VTTParser {\n    const _this = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      _this.buffer += _this.decoder.decode(data, { stream: true });\n    }\n\n    function collectNextLine(): string {\n      let buffer: string = _this.buffer;\n      let pos = 0;\n\n      buffer = fixLineBreaks(buffer);\n\n      while (\n        pos < buffer.length &&\n        buffer[pos] !== '\\r' &&\n        buffer[pos] !== '\\n'\n      ) {\n        ++pos;\n      }\n\n      const line: string = buffer.slice(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n\n      _this.buffer = buffer.slice(pos);\n      return line;\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      parseOptions(\n        input,\n        function (k, v) {\n          // switch (k) {\n          // case 'region':\n          // 3.3 WebVTT region metadata header syntax\n          // console.log('parse region', v);\n          // parseRegion(v);\n          // break;\n          // }\n        },\n        /:/\n      );\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      let line: string = '';\n      if (_this.state === 'INITIAL') {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(_this.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n        // strip of UTF-8 BOM if any\n        // https://en.wikipedia.org/wiki/Byte_order_mark#UTF-8\n        const m = line.match(/^(ï»¿)?WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new Error('Malformed WebVTT signature.');\n        }\n\n        _this.state = 'HEADER';\n      }\n\n      let alreadyCollectedLine = false;\n      while (_this.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(_this.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (_this.state) {\n          case 'HEADER':\n            // 13-18 - Allow a header (metadata) under the WEBVTT line.\n            if (/:/.test(line)) {\n              parseHeader(line);\n            } else if (!line) {\n              // An empty line terminates the header and starts the body (cues).\n              _this.state = 'ID';\n            }\n            continue;\n          case 'NOTE':\n            // Ignore NOTE blocks.\n            if (!line) {\n              _this.state = 'ID';\n            }\n\n            continue;\n          case 'ID':\n            // Check for the start of NOTE blocks.\n            if (/^NOTE($|[ \\t])/.test(line)) {\n              _this.state = 'NOTE';\n              break;\n            }\n            // 19-29 - Allow any number of line terminators, then initialize new cue values.\n            if (!line) {\n              continue;\n            }\n\n            _this.cue = new VTTCue(0, 0, '');\n            _this.state = 'CUE';\n            // 30-39 - Check if self line contains an optional identifier or timing data.\n            if (line.indexOf('-->') === -1) {\n              _this.cue.id = line;\n              continue;\n            }\n          // Process line as start of a cue.\n          /* falls through */\n          case 'CUE':\n            // 40 - Collect cue timings and settings.\n            if (!_this.cue) {\n              _this.state = 'BADCUE';\n              continue;\n            }\n            try {\n              parseCue(line, _this.cue, _this.regionList);\n            } catch (e) {\n              // In case of an error ignore rest of the cue.\n              _this.cue = null;\n              _this.state = 'BADCUE';\n              continue;\n            }\n            _this.state = 'CUETEXT';\n            continue;\n          case 'CUETEXT':\n            {\n              const hasSubstring = line.indexOf('-->') !== -1;\n              // 34 - If we have an empty line then report the cue.\n              // 35 - If we have the special substring '-->' then report the cue,\n              // but do not collect the line as we need to process the current\n              // one as a new cue.\n              if (!line || (hasSubstring && (alreadyCollectedLine = true))) {\n                // We are done parsing self cue.\n                if (_this.oncue && _this.cue) {\n                  _this.oncue(_this.cue);\n                }\n\n                _this.cue = null;\n                _this.state = 'ID';\n                continue;\n              }\n              if (_this.cue === null) {\n                continue;\n              }\n\n              if (_this.cue.text) {\n                _this.cue.text += '\\n';\n              }\n              _this.cue.text += line;\n            }\n            continue;\n          case 'BADCUE':\n            // 54-62 - Collect and discard the remaining cue.\n            if (!line) {\n              _this.state = 'ID';\n            }\n        }\n      }\n    } catch (e) {\n      // If we are currently parsing a cue, report what we have.\n      if (_this.state === 'CUETEXT' && _this.cue && _this.oncue) {\n        _this.oncue(_this.cue);\n      }\n\n      _this.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      _this.state = _this.state === 'INITIAL' ? 'BADWEBVTT' : 'BADCUE';\n    }\n    return this;\n  }\n\n  flush(): VTTParser {\n    const _this = this;\n    try {\n      // Finish decoding the stream.\n      // _this.buffer += _this.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (_this.cue || _this.state === 'HEADER') {\n        _this.buffer += '\\n\\n';\n        _this.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (_this.state === 'INITIAL' || _this.state === 'BADWEBVTT') {\n        throw new Error('Malformed WebVTT signature.');\n      }\n    } catch (e) {\n      if (_this.onparsingerror) {\n        _this.onparsingerror(e);\n      }\n    }\n    if (_this.onflush) {\n      _this.onflush();\n    }\n\n    return this;\n  }\n}\n", "import { VTTParser } from './vttparser';\nimport { utf8ArrayToStr } from '../demux/id3';\nimport { toMpegTsClockFromTimescale } from './timescale-conversion';\nimport { normalizePts } from '../remux/mp4-remuxer';\nimport type { VTTCCs } from '../types/vtt';\n\nconst LINEBREAKS = /\\r\\n|\\n\\r|\\n|\\r/g;\n\n// String.prototype.startsWith is not supported in IE11\nconst startsWith = function (\n  inputString: string,\n  searchString: string,\n  position: number = 0\n) {\n  return (\n    inputString.slice(position, position + searchString.length) === searchString\n  );\n};\n\nconst cueString2millis = function (timeString: string) {\n  let ts = parseInt(timeString.slice(-3));\n  const secs = parseInt(timeString.slice(-6, -4));\n  const mins = parseInt(timeString.slice(-9, -7));\n  const hours =\n    timeString.length > 9\n      ? parseInt(timeString.substring(0, timeString.indexOf(':')))\n      : 0;\n\n  if (\n    !Number.isFinite(ts) ||\n    !Number.isFinite(secs) ||\n    !Number.isFinite(mins) ||\n    !Number.isFinite(hours)\n  ) {\n    throw Error(`Malformed X-TIMESTAMP-MAP: Local:${timeString}`);\n  }\n\n  ts += 1000 * secs;\n  ts += 60 * 1000 * mins;\n  ts += 60 * 60 * 1000 * hours;\n\n  return ts;\n};\n\n// From https://github.com/darkskyapp/string-hash\nconst hash = function (text: string) {\n  let hash = 5381;\n  let i = text.length;\n  while (i) {\n    hash = (hash * 33) ^ text.charCodeAt(--i);\n  }\n\n  return (hash >>> 0).toString();\n};\n\n// Create a unique hash id for a cue based on start/end times and text.\n// This helps timeline-controller to avoid showing repeated captions.\nexport function generateCueId(\n  startTime: number,\n  endTime: number,\n  text: string\n) {\n  return hash(startTime.toString()) + hash(endTime.toString()) + hash(text);\n}\n\nconst calculateOffset = function (vttCCs: VTTCCs, cc, presentationTime) {\n  let currCC = vttCCs[cc];\n  let prevCC = vttCCs[currCC.prevCC];\n\n  // This is the first discontinuity or cues have been processed since the last discontinuity\n  // Offset = current discontinuity time\n  if (!prevCC || (!prevCC.new && currCC.new)) {\n    vttCCs.ccOffset = vttCCs.presentationOffset = currCC.start;\n    currCC.new = false;\n    return;\n  }\n\n  // There have been discontinuities since cues were last parsed.\n  // Offset = time elapsed\n  while (prevCC?.new) {\n    vttCCs.ccOffset += currCC.start - prevCC.start;\n    currCC.new = false;\n    currCC = prevCC;\n    prevCC = vttCCs[currCC.prevCC];\n  }\n\n  vttCCs.presentationOffset = presentationTime;\n};\n\nexport function parseWebVTT(\n  vttByteArray: ArrayBuffer,\n  initPTS: number,\n  timescale: number,\n  vttCCs: VTTCCs,\n  cc: number,\n  timeOffset: number,\n  callBack: (cues: VTTCue[]) => void,\n  errorCallBack: (error: Error) => void\n) {\n  const parser = new VTTParser();\n  // Convert byteArray into string, replacing any somewhat exotic linefeeds with \"\\n\", then split on that character.\n  // Uint8Array.prototype.reduce is not implemented in IE11\n  const vttLines = utf8ArrayToStr(new Uint8Array(vttByteArray))\n    .trim()\n    .replace(LINEBREAKS, '\\n')\n    .split('\\n');\n  const cues: VTTCue[] = [];\n  const initPTS90Hz = toMpegTsClockFromTimescale(initPTS, timescale);\n  let cueTime = '00:00.000';\n  let timestampMapMPEGTS = 0;\n  let timestampMapLOCAL = 0;\n  let parsingError: Error;\n  let inHeader = true;\n\n  parser.oncue = function (cue: VTTCue) {\n    // Adjust cue timing; clamp cues to start no earlier than - and drop cues that don't end after - 0 on timeline.\n    const currCC = vttCCs[cc];\n    let cueOffset = vttCCs.ccOffset;\n\n    // Calculate subtitle PTS offset\n    const webVttMpegTsMapOffset = (timestampMapMPEGTS - initPTS90Hz) / 90000;\n\n    // Update offsets for new discontinuities\n    if (currCC?.new) {\n      if (timestampMapLOCAL !== undefined) {\n        // When local time is provided, offset = discontinuity start time - local time\n        cueOffset = vttCCs.ccOffset = currCC.start;\n      } else {\n        calculateOffset(vttCCs, cc, webVttMpegTsMapOffset);\n      }\n    }\n\n    if (webVttMpegTsMapOffset) {\n      // If we have MPEGTS, offset = presentation time + discontinuity offset\n      cueOffset = webVttMpegTsMapOffset - vttCCs.presentationOffset;\n    }\n\n    const duration = cue.endTime - cue.startTime;\n    const startTime =\n      normalizePts(\n        (cue.startTime + cueOffset - timestampMapLOCAL) * 90000,\n        timeOffset * 90000\n      ) / 90000;\n    cue.startTime = Math.max(startTime, 0);\n    cue.endTime = Math.max(startTime + duration, 0);\n\n    //trim trailing webvtt block whitespaces\n    const text = cue.text.trim();\n\n    // Fix encoding of special characters\n    cue.text = decodeURIComponent(encodeURIComponent(text));\n\n    // If the cue was not assigned an id from the VTT file (line above the content), create one.\n    if (!cue.id) {\n      cue.id = generateCueId(cue.startTime, cue.endTime, text);\n    }\n\n    if (cue.endTime > 0) {\n      cues.push(cue);\n    }\n  };\n\n  parser.onparsingerror = function (error: Error) {\n    parsingError = error;\n  };\n\n  parser.onflush = function () {\n    if (parsingError) {\n      errorCallBack(parsingError);\n      return;\n    }\n    callBack(cues);\n  };\n\n  // Go through contents line by line.\n  vttLines.forEach((line) => {\n    if (inHeader) {\n      // Look for X-TIMESTAMP-MAP in header.\n      if (startsWith(line, 'X-TIMESTAMP-MAP=')) {\n        // Once found, no more are allowed anyway, so stop searching.\n        inHeader = false;\n        // Extract LOCAL and MPEGTS.\n        line\n          .slice(16)\n          .split(',')\n          .forEach((timestamp) => {\n            if (startsWith(timestamp, 'LOCAL:')) {\n              cueTime = timestamp.slice(6);\n            } else if (startsWith(timestamp, 'MPEGTS:')) {\n              timestampMapMPEGTS = parseInt(timestamp.slice(7));\n            }\n          });\n        try {\n          // Convert cue time to seconds\n          timestampMapLOCAL = cueString2millis(cueTime) / 1000;\n        } catch (error) {\n          parsingError = error;\n        }\n        // Return without parsing X-TIMESTAMP-MAP line.\n        return;\n      } else if (line === '') {\n        inHeader = false;\n      }\n    }\n    // Parse line by default.\n    parser.parse(line + '\\n');\n  });\n\n  parser.flush();\n}\n", "import { logger } from '../utils/logger';\nimport type {\n  LoaderCallbacks,\n  LoaderContext,\n  LoaderStats,\n  Loader,\n  LoaderConfiguration,\n} from '../types/loader';\nimport { LoadStats } from '../loader/load-stats';\n\nconst AGE_HEADER_LINE_REGEX = /^age:\\s*[\\d.]+\\s*$/m;\n\nclass XhrLoader implements Loader<LoaderContext> {\n  private xhrSetup: Function | null;\n  private requestTimeout?: number;\n  private retryTimeout?: number;\n  private retryDelay: number;\n  private config: LoaderConfiguration | null = null;\n  private callbacks: LoaderCallbacks<LoaderContext> | null = null;\n  public context!: LoaderContext;\n\n  private loader: XMLHttpRequest | null = null;\n  public stats: LoaderStats;\n\n  constructor(config /* HlsConfig */) {\n    this.xhrSetup = config ? config.xhrSetup : null;\n    this.stats = new LoadStats();\n    this.retryDelay = 0;\n  }\n\n  destroy(): void {\n    this.callbacks = null;\n    this.abortInternal();\n    this.loader = null;\n    this.config = null;\n  }\n\n  abortInternal(): void {\n    const loader = this.loader;\n    self.clearTimeout(this.requestTimeout);\n    self.clearTimeout(this.retryTimeout);\n    if (loader) {\n      loader.onreadystatechange = null;\n      loader.onprogress = null;\n      if (loader.readyState !== 4) {\n        this.stats.aborted = true;\n        loader.abort();\n      }\n    }\n  }\n\n  abort(): void {\n    this.abortInternal();\n    if (this.callbacks?.onAbort) {\n      this.callbacks.onAbort(this.stats, this.context, this.loader);\n    }\n  }\n\n  load(\n    context: LoaderContext,\n    config: LoaderConfiguration,\n    callbacks: LoaderCallbacks<LoaderContext>\n  ): void {\n    if (this.stats.loading.start) {\n      throw new Error('Loader can only be used once.');\n    }\n    this.stats.loading.start = self.performance.now();\n    this.context = context;\n    this.config = config;\n    this.callbacks = callbacks;\n    this.retryDelay = config.retryDelay;\n    this.loadInternal();\n  }\n\n  loadInternal(): void {\n    const { config, context } = this;\n    if (!config) {\n      return;\n    }\n    const xhr = (this.loader = new self.XMLHttpRequest());\n\n    const stats = this.stats;\n    stats.loading.first = 0;\n    stats.loaded = 0;\n    const xhrSetup = this.xhrSetup;\n\n    try {\n      if (xhrSetup) {\n        try {\n          xhrSetup(xhr, context.url);\n        } catch (e) {\n          // fix xhrSetup: (xhr, url) => {xhr.setRequestHeader(\"Content-Language\", \"test\");}\n          // not working, as xhr.setRequestHeader expects xhr.readyState === OPEN\n          xhr.open('GET', context.url, true);\n          xhrSetup(xhr, context.url);\n        }\n      }\n      if (!xhr.readyState) {\n        xhr.open('GET', context.url, true);\n      }\n\n      const headers = this.context.headers;\n      if (headers) {\n        for (const header in headers) {\n          xhr.setRequestHeader(header, headers[header]);\n        }\n      }\n    } catch (e) {\n      // IE11 throws an exception on xhr.open if attempting to access an HTTP resource over HTTPS\n      this.callbacks!.onError(\n        { code: xhr.status, text: e.message },\n        context,\n        xhr\n      );\n      return;\n    }\n\n    if (context.rangeEnd) {\n      xhr.setRequestHeader(\n        'Range',\n        'bytes=' + context.rangeStart + '-' + (context.rangeEnd - 1)\n      );\n    }\n\n    xhr.onreadystatechange = this.readystatechange.bind(this);\n    xhr.onprogress = this.loadprogress.bind(this);\n    xhr.responseType = context.responseType as XMLHttpRequestResponseType;\n    // setup timeout before we perform request\n    self.clearTimeout(this.requestTimeout);\n    this.requestTimeout = self.setTimeout(\n      this.loadtimeout.bind(this),\n      config.timeout\n    );\n    xhr.send();\n  }\n\n  readystatechange(): void {\n    const { context, loader: xhr, stats } = this;\n    if (!context || !xhr) {\n      return;\n    }\n    const readyState = xhr.readyState;\n    const config = this.config as LoaderConfiguration;\n\n    // don't proceed if xhr has been aborted\n    if (stats.aborted) {\n      return;\n    }\n\n    // >= HEADERS_RECEIVED\n    if (readyState >= 2) {\n      // clear xhr timeout and rearm it if readyState less than 4\n      self.clearTimeout(this.requestTimeout);\n      if (stats.loading.first === 0) {\n        stats.loading.first = Math.max(\n          self.performance.now(),\n          stats.loading.start\n        );\n      }\n\n      if (readyState === 4) {\n        xhr.onreadystatechange = null;\n        xhr.onprogress = null;\n        const status = xhr.status;\n        // http status between 200 to 299 are all successful\n        const isArrayBuffer = xhr.responseType === 'arraybuffer';\n        if (\n          status >= 200 &&\n          status < 300 &&\n          ((isArrayBuffer && xhr.response) || xhr.responseText !== null)\n        ) {\n          stats.loading.end = Math.max(\n            self.performance.now(),\n            stats.loading.first\n          );\n          let data;\n          let len: number;\n          if (isArrayBuffer) {\n            data = xhr.response;\n            len = data.byteLength;\n          } else {\n            data = xhr.responseText;\n            len = data.length;\n          }\n          stats.loaded = stats.total = len;\n\n          if (!this.callbacks) {\n            return;\n          }\n          const onProgress = this.callbacks.onProgress;\n          if (onProgress) {\n            onProgress(stats, context, data, xhr);\n          }\n          if (!this.callbacks) {\n            return;\n          }\n          const response = {\n            url: xhr.responseURL,\n            data: data,\n          };\n\n          this.callbacks.onSuccess(response, stats, context, xhr);\n        } else {\n          // if max nb of retries reached or if http status between 400 and 499 (such error cannot be recovered, retrying is useless), return error\n          if (\n            stats.retry >= config.maxRetry ||\n            (status >= 400 && status < 499)\n          ) {\n            logger.error(`${status} while loading ${context.url}`);\n            this.callbacks!.onError(\n              { code: status, text: xhr.statusText },\n              context,\n              xhr\n            );\n          } else {\n            // retry\n            logger.warn(\n              `${status} while loading ${context.url}, retrying in ${this.retryDelay}...`\n            );\n            // abort and reset internal state\n            this.abortInternal();\n            this.loader = null;\n            // schedule retry\n            self.clearTimeout(this.retryTimeout);\n            this.retryTimeout = self.setTimeout(\n              this.loadInternal.bind(this),\n              this.retryDelay\n            );\n            // set exponential backoff\n            this.retryDelay = Math.min(\n              2 * this.retryDelay,\n              config.maxRetryDelay\n            );\n            stats.retry++;\n          }\n        }\n      } else {\n        // readyState >= 2 AND readyState !==4 (readyState = HEADERS_RECEIVED || LOADING) rearm timeout as xhr not finished yet\n        self.clearTimeout(this.requestTimeout);\n        this.requestTimeout = self.setTimeout(\n          this.loadtimeout.bind(this),\n          config.timeout\n        );\n      }\n    }\n  }\n\n  loadtimeout(): void {\n    logger.warn(`timeout while loading ${this.context.url}`);\n    const callbacks = this.callbacks;\n    if (callbacks) {\n      this.abortInternal();\n      callbacks.onTimeout(this.stats, this.context, this.loader);\n    }\n  }\n\n  loadprogress(event: ProgressEvent): void {\n    const stats = this.stats;\n\n    stats.loaded = event.loaded;\n    if (event.lengthComputable) {\n      stats.total = event.total;\n    }\n  }\n\n  getCacheAge(): number | null {\n    let result: number | null = null;\n    if (\n      this.loader &&\n      AGE_HEADER_LINE_REGEX.test(this.loader.getAllResponseHeaders())\n    ) {\n      const ageHeader = this.loader.getResponseHeader('age');\n      result = ageHeader ? parseFloat(ageHeader) : null;\n    }\n    return result;\n  }\n}\n\nexport default XhrLoader;\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n", "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "", "// module factories are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(\"./src/hls.ts\");\n", "", "// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n", "/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n", "module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n", "/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, DoubleSide, OrthographicCamera, PerspectiveCamera, Vector2 } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = /* @__PURE__ */new Vector3();\nconst v2 = /* @__PURE__ */new Vector3();\nconst v3 = /* @__PURE__ */new Vector3();\nconst v4 = /* @__PURE__ */new Vector2();\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  v4.set(screenPos.x, screenPos.y);\n  raycaster.setFromCamera(v4, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n  return true;\n}\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n  return undefined;\n}\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n  return prepend + matrix3d;\n}\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\nfunction isRefObject(ref) {\n  return ref && typeof ref === 'object' && 'current' in ref;\n}\nconst Html = /* @__PURE__ */React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  castShadow,\n  receiveShadow,\n  material,\n  geometry,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  const {\n    gl,\n    camera,\n    scene,\n    size,\n    raycaster,\n    events,\n    viewport\n  } = useThree();\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useRef();\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null);\n  // Append to the connected element, which makes HTML work with views\n  const target = (portal == null ? void 0 : portal.current) || events.connected || gl.domElement.parentNode;\n  const occlusionMeshRef = React.useRef(null);\n  const isMeshSizeSet = React.useRef(false);\n  const isRayCastOcclusion = React.useMemo(() => {\n    return occlude && occlude !== 'blending' || Array.isArray(occlude) && occlude.length && isRefObject(occlude[0]);\n  }, [occlude]);\n  React.useLayoutEffect(() => {\n    const el = gl.domElement;\n    if (occlude && occlude === 'blending') {\n      el.style.zIndex = `${Math.floor(zIndexRange[0] / 2)}`;\n      el.style.position = 'absolute';\n      el.style.pointerEvents = 'none';\n    } else {\n      el.style.zIndex = null;\n      el.style.position = null;\n      el.style.pointerEvents = null;\n    }\n  }, [occlude]);\n  React.useLayoutEffect(() => {\n    if (group.current) {\n      const currentRoot = root.current = ReactDOM.createRoot(el);\n      scene.updateMatrixWorld();\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n      return () => {\n        if (target) target.removeChild(el);\n        currentRoot.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    isMeshSizeSet.current = false;\n    if (transform) {\n      var _root$current;\n      (_root$current = root.current) == null || _root$current.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      var _root$current2;\n      (_root$current2 = root.current) == null || _root$current2.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(gl => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n        if (isRayCastOcclusion) {\n          if (Array.isArray(occlude)) {\n            raytraceTarget = occlude.map(item => item.current);\n          } else if (occlude !== 'blending') {\n            raytraceTarget = [scene];\n          }\n        }\n        const previouslyVisible = visible.current;\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n        const halfRange = Math.floor(zIndexRange[0] / 2);\n        const zRange = occlude ? isRayCastOcclusion //\n        ? [zIndexRange[0], halfRange] : [halfRange - 1, 0] : zIndexRange;\n        el.style.zIndex = `${objectZIndex(group.current, camera, zRange)}`;\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n    if (!isRayCastOcclusion && occlusionMeshRef.current && !isMeshSizeSet.current) {\n      if (transform) {\n        if (transformOuterRef.current) {\n          const el = transformOuterRef.current.children[0];\n          if (el != null && el.clientWidth && el != null && el.clientHeight) {\n            const {\n              isOrthographicCamera\n            } = camera;\n            if (isOrthographicCamera || geometry) {\n              if (props.scale) {\n                if (!Array.isArray(props.scale)) {\n                  occlusionMeshRef.current.scale.setScalar(1 / props.scale);\n                } else if (props.scale instanceof Vector3) {\n                  occlusionMeshRef.current.scale.copy(props.scale.clone().divideScalar(1));\n                } else {\n                  occlusionMeshRef.current.scale.set(1 / props.scale[0], 1 / props.scale[1], 1 / props.scale[2]);\n                }\n              }\n            } else {\n              const ratio = (distanceFactor || 10) / 400;\n              const w = el.clientWidth * ratio;\n              const h = el.clientHeight * ratio;\n              occlusionMeshRef.current.scale.set(w, h, 1);\n            }\n            isMeshSizeSet.current = true;\n          }\n        }\n      } else {\n        const ele = el.children[0];\n        if (ele != null && ele.clientWidth && ele != null && ele.clientHeight) {\n          const ratio = 1 / viewport.factor;\n          const w = ele.clientWidth * ratio;\n          const h = ele.clientHeight * ratio;\n          occlusionMeshRef.current.scale.set(w, h, 1);\n          isMeshSizeSet.current = true;\n        }\n        occlusionMeshRef.current.lookAt(gl.camera.position);\n      }\n    }\n  });\n  const shaders = React.useMemo(() => ({\n    vertexShader: !transform ? /* glsl */`\n          /*\n            This shader is from the THREE's SpriteMaterial.\n            We need to turn the backing plane into a Sprite\n            (make it always face the camera) if \"transfrom\"\n            is false.\n          */\n          #include <common>\n\n          void main() {\n            vec2 center = vec2(0., 1.);\n            float rotation = 0.0;\n\n            // This is somewhat arbitrary, but it seems to work well\n            // Need to figure out how to derive this dynamically if it even matters\n            float size = 0.03;\n\n            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n            vec2 scale;\n            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n            bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n            if ( isPerspective ) scale *= - mvPosition.z;\n\n            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;\n            vec2 rotatedPosition;\n            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n            mvPosition.xy += rotatedPosition;\n\n            gl_Position = projectionMatrix * mvPosition;\n          }\n      ` : undefined,\n    fragmentShader: /* glsl */`\n        void main() {\n          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n      `\n  }), [transform]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }), occlude && !isRayCastOcclusion && /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: castShadow,\n    receiveShadow: receiveShadow,\n    ref: occlusionMeshRef\n  }, geometry || /*#__PURE__*/React.createElement(\"planeGeometry\", null), material || /*#__PURE__*/React.createElement(\"shaderMaterial\", {\n    side: DoubleSide,\n    vertexShader: shaders.vertexShader,\n    fragmentShader: shaders.fragmentShader\n  })));\n});\n\nexport { Html };\n", "import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction CycleRaycast({\n  onChanged,\n  portal,\n  preventDefault = true,\n  scroll = true,\n  keyCode = 9\n}) {\n  const cycle = React.useRef(0);\n  const setEvents = useThree(state => state.setEvents);\n  const get = useThree(state => state.get);\n  const gl = useThree(state => state.gl);\n  React.useEffect(() => {\n    var _portal$current;\n    let hits = [];\n    let lastEvent = undefined;\n    const prev = get().events.filter;\n    const target = (_portal$current = portal == null ? void 0 : portal.current) !== null && _portal$current !== void 0 ? _portal$current : gl.domElement.parentNode;\n\n    // Render custom status\n    const renderStatus = () => target && onChanged && onChanged(hits, Math.round(cycle.current) % hits.length);\n\n    // Overwrite the raycasters custom filter (this only exists in r3f)\n    setEvents({\n      filter: (intersections, state) => {\n        // Reset cycle when the intersections change\n        let clone = [...intersections];\n        if (clone.length !== hits.length || !hits.every(hit => clone.map(e => e.object.uuid).includes(hit.object.uuid))) {\n          cycle.current = 0;\n          hits = clone;\n          renderStatus();\n        }\n        // Run custom filter if there is one\n        if (prev) clone = prev(clone, state);\n        // Cycle through the actual raycast intersects\n        for (let i = 0; i < Math.round(cycle.current) % clone.length; i++) {\n          const first = clone.shift();\n          clone = [...clone, first];\n        }\n        return clone;\n      }\n    });\n\n    // Cycle, refresh events and render status\n    const refresh = fn => {\n      var _get$events$handlers, _get$events$handlers2;\n      cycle.current = fn(cycle.current);\n      // Cancel hovered elements and fake a pointer-move\n      (_get$events$handlers = get().events.handlers) == null || _get$events$handlers.onPointerCancel(undefined);\n      (_get$events$handlers2 = get().events.handlers) == null || _get$events$handlers2.onPointerMove(lastEvent);\n      renderStatus();\n    };\n\n    // Key events\n    const tabEvent = event => {\n      if ((event.keyCode || event.which) === keyCode) {\n        if (preventDefault) event.preventDefault();\n        if (hits.length > 1) refresh(current => current + 1);\n      }\n    };\n\n    // Wheel events\n    const wheelEvent = event => {\n      if (preventDefault) event.preventDefault();\n      let delta = 0;\n      if (!event) event = window.event;\n      if (event.wheelDelta) delta = event.wheelDelta / 120;else if (event.detail) delta = -event.detail / 3;\n      if (hits.length > 1) refresh(current => Math.abs(current - delta));\n    };\n\n    // Catch last move event and position custom status\n    const moveEvent = event => lastEvent = event;\n    document.addEventListener('pointermove', moveEvent, {\n      passive: true\n    });\n    if (scroll) document.addEventListener('wheel', wheelEvent);\n    if (keyCode !== undefined) document.addEventListener('keydown', tabEvent);\n    return () => {\n      // Clean up\n      setEvents({\n        filter: prev\n      });\n      if (keyCode !== undefined) document.removeEventListener('keydown', tabEvent);\n      if (scroll) document.removeEventListener('wheel', wheelEvent);\n      document.removeEventListener('pointermove', moveEvent);\n    };\n  }, [gl, get, setEvents, preventDefault, scroll, keyCode]);\n  return null;\n}\n\nexport { CycleRaycast };\n", "import * as React from 'react';\n\nfunction useCursor(hovered, onPointerOver = 'pointer', onPointerOut = 'auto', container = document.body) {\n  React.useEffect(() => {\n    if (hovered) {\n      container.style.cursor = onPointerOver;\n      return () => void (container.style.cursor = onPointerOut);\n    }\n  }, [hovered]);\n}\n\nexport { useCursor };\n", "import * as React from 'react';\nimport { useProgress } from '../core/useProgress.js';\n\nconst defaultDataInterpolation = p => `Loading ${p.toFixed(2)}%`;\nfunction Loader({\n  containerStyles,\n  innerStyles,\n  barStyles,\n  dataStyles,\n  dataInterpolation = defaultDataInterpolation,\n  initialState = active => active\n}) {\n  const {\n    active,\n    progress\n  } = useProgress();\n  const progressRef = React.useRef(0);\n  const rafRef = React.useRef(0);\n  const progressSpanRef = React.useRef(null);\n  const [shown, setShown] = React.useState(initialState(active));\n  React.useEffect(() => {\n    let t;\n    if (active !== shown) t = setTimeout(() => setShown(active), 300);\n    return () => clearTimeout(t);\n  }, [shown, active]);\n  const updateProgress = React.useCallback(() => {\n    if (!progressSpanRef.current) return;\n    progressRef.current += (progress - progressRef.current) / 2;\n    if (progressRef.current > 0.95 * progress || progress === 100) progressRef.current = progress;\n    progressSpanRef.current.innerText = dataInterpolation(progressRef.current);\n    if (progressRef.current < progress) rafRef.current = requestAnimationFrame(updateProgress);\n  }, [dataInterpolation, progress]);\n  React.useEffect(() => {\n    updateProgress();\n    return () => cancelAnimationFrame(rafRef.current);\n  }, [updateProgress]);\n  return shown ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      ...styles.container,\n      opacity: active ? 1 : 0,\n      ...containerStyles\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      ...styles.inner,\n      ...innerStyles\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      ...styles.bar,\n      transform: `scaleX(${progress / 100})`,\n      ...barStyles\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    ref: progressSpanRef,\n    style: {\n      ...styles.data,\n      ...dataStyles\n    }\n  })))) : null;\n}\nconst styles = {\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: '#171717',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'opacity 300ms ease',\n    zIndex: 1000\n  },\n  inner: {\n    width: 100,\n    height: 3,\n    background: '#272727',\n    textAlign: 'center'\n  },\n  bar: {\n    height: 3,\n    width: '100%',\n    background: 'white',\n    transition: 'transform 200ms',\n    transformOrigin: 'left center'\n  },\n  data: {\n    display: 'inline-block',\n    position: 'relative',\n    fontVariantNumeric: 'tabular-nums',\n    marginTop: '0.8em',\n    color: '#f0f0f0',\n    fontSize: '0.6em',\n    fontFamily: `-apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Helvetica Neue\", Helvetica, Arial, Roboto, Ubuntu, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n    whiteSpace: 'nowrap'\n  }\n};\n\nexport { Loader };\n", "import { DefaultLoadingManager } from 'three';\nimport create from 'zustand';\n\nlet saveLastTotalLoaded = 0;\nconst useProgress = /* @__PURE__ */create(set => {\n  DefaultLoadingManager.onStart = (item, loaded, total) => {\n    set({\n      active: true,\n      item,\n      loaded,\n      total,\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100\n    });\n  };\n  DefaultLoadingManager.onLoad = () => {\n    set({\n      active: false\n    });\n  };\n  DefaultLoadingManager.onError = item => set(state => ({\n    errors: [...state.errors, item]\n  }));\n  DefaultLoadingManager.onProgress = (item, loaded, total) => {\n    if (loaded === total) {\n      saveLastTotalLoaded = total;\n    }\n    set({\n      active: true,\n      item,\n      loaded,\n      total,\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100 || 100\n    });\n  };\n  return {\n    errors: [],\n    active: false,\n    progress: 0,\n    item: '',\n    loaded: 0,\n    total: 0\n  };\n});\n\nexport { useProgress };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { useGesture } from '@use-gesture/react';\n\nconst initialModelPosition = new THREE.Vector3();\nconst mousePosition2D = new THREE.Vector2();\nconst mousePosition3D = new THREE.Vector3();\nconst dragOffset = new THREE.Vector3();\nconst dragPlaneNormal = new THREE.Vector3();\nconst dragPlane = new THREE.Plane();\nconst DragControls = /*#__PURE__*/React.forwardRef(({\n  autoTransform = true,\n  matrix,\n  axisLock,\n  dragLimits,\n  onHover,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  children,\n  dragConfig,\n  ...props\n}, fRef) => {\n  const defaultControls = useThree(state => state.controls);\n  const {\n    camera,\n    size,\n    raycaster,\n    invalidate\n  } = useThree();\n  const ref = React.useRef(null);\n  const bind = useGesture({\n    onHover: ({\n      hovering\n    }) => onHover && onHover(hovering !== null && hovering !== void 0 ? hovering : false),\n    onDragStart: ({\n      event\n    }) => {\n      if (defaultControls) defaultControls.enabled = false;\n      const {\n        point\n      } = event;\n      ref.current.matrix.decompose(initialModelPosition, new THREE.Quaternion(), new THREE.Vector3());\n      mousePosition3D.copy(point);\n      dragOffset.copy(mousePosition3D).sub(initialModelPosition);\n      onDragStart && onDragStart(initialModelPosition);\n      invalidate();\n    },\n    onDrag: ({\n      xy: [dragX, dragY],\n      intentional\n    }) => {\n      if (!intentional) return;\n      const normalizedMouseX = (dragX - size.left) / size.width * 2 - 1;\n      const normalizedMouseY = -((dragY - size.top) / size.height) * 2 + 1;\n      mousePosition2D.set(normalizedMouseX, normalizedMouseY);\n      raycaster.setFromCamera(mousePosition2D, camera);\n      if (!axisLock) {\n        camera.getWorldDirection(dragPlaneNormal).negate();\n      } else {\n        switch (axisLock) {\n          case 'x':\n            dragPlaneNormal.set(1, 0, 0);\n            break;\n          case 'y':\n            dragPlaneNormal.set(0, 1, 0);\n            break;\n          case 'z':\n            dragPlaneNormal.set(0, 0, 1);\n            break;\n        }\n      }\n      dragPlane.setFromNormalAndCoplanarPoint(dragPlaneNormal, mousePosition3D);\n      raycaster.ray.intersectPlane(dragPlane, mousePosition3D);\n      const previousLocalMatrix = ref.current.matrix.clone();\n      const previousWorldMatrix = ref.current.matrixWorld.clone();\n      const intendedNewPosition = new THREE.Vector3(mousePosition3D.x - dragOffset.x, mousePosition3D.y - dragOffset.y, mousePosition3D.z - dragOffset.z);\n      if (dragLimits) {\n        intendedNewPosition.x = dragLimits[0] ? Math.max(Math.min(intendedNewPosition.x, dragLimits[0][1]), dragLimits[0][0]) : intendedNewPosition.x;\n        intendedNewPosition.y = dragLimits[1] ? Math.max(Math.min(intendedNewPosition.y, dragLimits[1][1]), dragLimits[1][0]) : intendedNewPosition.y;\n        intendedNewPosition.z = dragLimits[2] ? Math.max(Math.min(intendedNewPosition.z, dragLimits[2][1]), dragLimits[2][0]) : intendedNewPosition.z;\n      }\n      if (autoTransform) {\n        ref.current.matrix.setPosition(intendedNewPosition);\n        const deltaLocalMatrix = ref.current.matrix.clone().multiply(previousLocalMatrix.invert());\n        const deltaWorldMatrix = ref.current.matrix.clone().multiply(previousWorldMatrix.invert());\n        onDrag && onDrag(ref.current.matrix, deltaLocalMatrix, ref.current.matrixWorld, deltaWorldMatrix);\n      } else {\n        const tempMatrix = new THREE.Matrix4().copy(ref.current.matrix);\n        tempMatrix.setPosition(intendedNewPosition);\n        const deltaLocalMatrix = tempMatrix.clone().multiply(previousLocalMatrix.invert());\n        const deltaWorldMatrix = tempMatrix.clone().multiply(previousWorldMatrix.invert());\n        onDrag && onDrag(tempMatrix, deltaLocalMatrix, ref.current.matrixWorld, deltaWorldMatrix);\n      }\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (defaultControls) defaultControls.enabled = true;\n      onDragEnd && onDragEnd();\n      invalidate();\n    }\n  }, {\n    drag: {\n      filterTaps: true,\n      threshold: 1,\n      ...(typeof dragConfig === 'object' ? dragConfig : {})\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    if (!matrix) return;\n\n    // If the matrix is a real matrix4 it means that the user wants to control the gizmo\n    // In that case it should just be set, as a bare prop update would merely copy it\n    ref.current.matrix = matrix;\n  }, [matrix]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, bind(), {\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, props), children);\n});\n\nexport { DragControls };\n", "function clamp(v, min, max) {\n  return Math.max(min, Math.min(v, max));\n}\nconst V = {\n  toVector(v, fallback) {\n    if (v === undefined) v = fallback;\n    return Array.isArray(v) ? v : [v, v];\n  },\n  add(v1, v2) {\n    return [v1[0] + v2[0], v1[1] + v2[1]];\n  },\n  sub(v1, v2) {\n    return [v1[0] - v2[0], v1[1] - v2[1]];\n  },\n  addTo(v1, v2) {\n    v1[0] += v2[0];\n    v1[1] += v2[1];\n  },\n  subTo(v1, v2) {\n    v1[0] -= v2[0];\n    v1[1] -= v2[1];\n  }\n};\nfunction rubberband(distance, dimension, constant) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return Math.pow(distance, constant * 5);\n  return distance * dimension * constant / (dimension + constant * distance);\n}\nfunction rubberbandIfOutOfBounds(position, min, max, constant = 0.15) {\n  if (constant === 0) return clamp(position, min, max);\n  if (position < min) return -rubberband(min - position, max - min, constant) + min;\n  if (position > max) return +rubberband(position - max, max - min, constant) + max;\n  return position;\n}\nfunction computeRubberband(bounds, [Vx, Vy], [Rx, Ry]) {\n  const [[X0, X1], [Y0, Y1]] = bounds;\n  return [rubberbandIfOutOfBounds(Vx, X0, X1, Rx), rubberbandIfOutOfBounds(Vy, Y0, Y1, Ry)];\n}\n\nexport { V, computeRubberband as c, rubberbandIfOutOfBounds as r };\n", "import { V, c as computeRubberband } from './maths-0ab39ae9.esm.js';\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\nconst EVENT_TYPE_MAP = {\n  pointer: {\n    start: 'down',\n    change: 'move',\n    end: 'up'\n  },\n  mouse: {\n    start: 'down',\n    change: 'move',\n    end: 'up'\n  },\n  touch: {\n    start: 'start',\n    change: 'move',\n    end: 'end'\n  },\n  gesture: {\n    start: 'start',\n    change: 'change',\n    end: 'end'\n  }\n};\nfunction capitalize(string) {\n  if (!string) return '';\n  return string[0].toUpperCase() + string.slice(1);\n}\nconst actionsWithoutCaptureSupported = ['enter', 'leave'];\nfunction hasCapture(capture = false, actionKey) {\n  return capture && !actionsWithoutCaptureSupported.includes(actionKey);\n}\nfunction toHandlerProp(device, action = '', capture = false) {\n  const deviceProps = EVENT_TYPE_MAP[device];\n  const actionKey = deviceProps ? deviceProps[action] || action : action;\n  return 'on' + capitalize(device) + capitalize(actionKey) + (hasCapture(capture, actionKey) ? 'Capture' : '');\n}\nconst pointerCaptureEvents = ['gotpointercapture', 'lostpointercapture'];\nfunction parseProp(prop) {\n  let eventKey = prop.substring(2).toLowerCase();\n  const passive = !!~eventKey.indexOf('passive');\n  if (passive) eventKey = eventKey.replace('passive', '');\n  const captureKey = pointerCaptureEvents.includes(eventKey) ? 'capturecapture' : 'capture';\n  const capture = !!~eventKey.indexOf(captureKey);\n  if (capture) eventKey = eventKey.replace('capture', '');\n  return {\n    device: eventKey,\n    capture,\n    passive\n  };\n}\nfunction toDomEventType(device, action = '') {\n  const deviceProps = EVENT_TYPE_MAP[device];\n  const actionKey = deviceProps ? deviceProps[action] || action : action;\n  return device + actionKey;\n}\nfunction isTouch(event) {\n  return 'touches' in event;\n}\nfunction getPointerType(event) {\n  if (isTouch(event)) return 'touch';\n  if ('pointerType' in event) return event.pointerType;\n  return 'mouse';\n}\nfunction getCurrentTargetTouchList(event) {\n  return Array.from(event.touches).filter(e => {\n    var _event$currentTarget, _event$currentTarget$;\n    return e.target === event.currentTarget || ((_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 || (_event$currentTarget$ = _event$currentTarget.contains) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.call(_event$currentTarget, e.target));\n  });\n}\nfunction getTouchList(event) {\n  return event.type === 'touchend' || event.type === 'touchcancel' ? event.changedTouches : event.targetTouches;\n}\nfunction getValueEvent(event) {\n  return isTouch(event) ? getTouchList(event)[0] : event;\n}\nfunction distanceAngle(P1, P2) {\n  try {\n    const dx = P2.clientX - P1.clientX;\n    const dy = P2.clientY - P1.clientY;\n    const cx = (P2.clientX + P1.clientX) / 2;\n    const cy = (P2.clientY + P1.clientY) / 2;\n    const distance = Math.hypot(dx, dy);\n    const angle = -(Math.atan2(dx, dy) * 180) / Math.PI;\n    const origin = [cx, cy];\n    return {\n      angle,\n      distance,\n      origin\n    };\n  } catch (_unused) {}\n  return null;\n}\nfunction touchIds(event) {\n  return getCurrentTargetTouchList(event).map(touch => touch.identifier);\n}\nfunction touchDistanceAngle(event, ids) {\n  const [P1, P2] = Array.from(event.touches).filter(touch => ids.includes(touch.identifier));\n  return distanceAngle(P1, P2);\n}\nfunction pointerId(event) {\n  const valueEvent = getValueEvent(event);\n  return isTouch(event) ? valueEvent.identifier : valueEvent.pointerId;\n}\nfunction pointerValues(event) {\n  const valueEvent = getValueEvent(event);\n  return [valueEvent.clientX, valueEvent.clientY];\n}\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nfunction wheelValues(event) {\n  let {\n    deltaX,\n    deltaY,\n    deltaMode\n  } = event;\n  if (deltaMode === 1) {\n    deltaX *= LINE_HEIGHT;\n    deltaY *= LINE_HEIGHT;\n  } else if (deltaMode === 2) {\n    deltaX *= PAGE_HEIGHT;\n    deltaY *= PAGE_HEIGHT;\n  }\n  return [deltaX, deltaY];\n}\nfunction scrollValues(event) {\n  var _ref, _ref2;\n  const {\n    scrollX,\n    scrollY,\n    scrollLeft,\n    scrollTop\n  } = event.currentTarget;\n  return [(_ref = scrollX !== null && scrollX !== void 0 ? scrollX : scrollLeft) !== null && _ref !== void 0 ? _ref : 0, (_ref2 = scrollY !== null && scrollY !== void 0 ? scrollY : scrollTop) !== null && _ref2 !== void 0 ? _ref2 : 0];\n}\nfunction getEventDetails(event) {\n  const payload = {};\n  if ('buttons' in event) payload.buttons = event.buttons;\n  if ('shiftKey' in event) {\n    const {\n      shiftKey,\n      altKey,\n      metaKey,\n      ctrlKey\n    } = event;\n    Object.assign(payload, {\n      shiftKey,\n      altKey,\n      metaKey,\n      ctrlKey\n    });\n  }\n  return payload;\n}\n\nfunction call(v, ...args) {\n  if (typeof v === 'function') {\n    return v(...args);\n  } else {\n    return v;\n  }\n}\nfunction noop() {}\nfunction chain(...fns) {\n  if (fns.length === 0) return noop;\n  if (fns.length === 1) return fns[0];\n  return function () {\n    let result;\n    for (const fn of fns) {\n      result = fn.apply(this, arguments) || result;\n    }\n    return result;\n  };\n}\nfunction assignDefault(value, fallback) {\n  return Object.assign({}, fallback, value || {});\n}\n\nconst BEFORE_LAST_KINEMATICS_DELAY = 32;\nclass Engine {\n  constructor(ctrl, args, key) {\n    this.ctrl = ctrl;\n    this.args = args;\n    this.key = key;\n    if (!this.state) {\n      this.state = {};\n      this.computeValues([0, 0]);\n      this.computeInitial();\n      if (this.init) this.init();\n      this.reset();\n    }\n  }\n  get state() {\n    return this.ctrl.state[this.key];\n  }\n  set state(state) {\n    this.ctrl.state[this.key] = state;\n  }\n  get shared() {\n    return this.ctrl.state.shared;\n  }\n  get eventStore() {\n    return this.ctrl.gestureEventStores[this.key];\n  }\n  get timeoutStore() {\n    return this.ctrl.gestureTimeoutStores[this.key];\n  }\n  get config() {\n    return this.ctrl.config[this.key];\n  }\n  get sharedConfig() {\n    return this.ctrl.config.shared;\n  }\n  get handler() {\n    return this.ctrl.handlers[this.key];\n  }\n  reset() {\n    const {\n      state,\n      shared,\n      ingKey,\n      args\n    } = this;\n    shared[ingKey] = state._active = state.active = state._blocked = state._force = false;\n    state._step = [false, false];\n    state.intentional = false;\n    state._movement = [0, 0];\n    state._distance = [0, 0];\n    state._direction = [0, 0];\n    state._delta = [0, 0];\n    state._bounds = [[-Infinity, Infinity], [-Infinity, Infinity]];\n    state.args = args;\n    state.axis = undefined;\n    state.memo = undefined;\n    state.elapsedTime = state.timeDelta = 0;\n    state.direction = [0, 0];\n    state.distance = [0, 0];\n    state.overflow = [0, 0];\n    state._movementBound = [false, false];\n    state.velocity = [0, 0];\n    state.movement = [0, 0];\n    state.delta = [0, 0];\n    state.timeStamp = 0;\n  }\n  start(event) {\n    const state = this.state;\n    const config = this.config;\n    if (!state._active) {\n      this.reset();\n      this.computeInitial();\n      state._active = true;\n      state.target = event.target;\n      state.currentTarget = event.currentTarget;\n      state.lastOffset = config.from ? call(config.from, state) : state.offset;\n      state.offset = state.lastOffset;\n      state.startTime = state.timeStamp = event.timeStamp;\n    }\n  }\n  computeValues(values) {\n    const state = this.state;\n    state._values = values;\n    state.values = this.config.transform(values);\n  }\n  computeInitial() {\n    const state = this.state;\n    state._initial = state._values;\n    state.initial = state.values;\n  }\n  compute(event) {\n    const {\n      state,\n      config,\n      shared\n    } = this;\n    state.args = this.args;\n    let dt = 0;\n    if (event) {\n      state.event = event;\n      if (config.preventDefault && event.cancelable) state.event.preventDefault();\n      state.type = event.type;\n      shared.touches = this.ctrl.pointerIds.size || this.ctrl.touchIds.size;\n      shared.locked = !!document.pointerLockElement;\n      Object.assign(shared, getEventDetails(event));\n      shared.down = shared.pressed = shared.buttons % 2 === 1 || shared.touches > 0;\n      dt = event.timeStamp - state.timeStamp;\n      state.timeStamp = event.timeStamp;\n      state.elapsedTime = state.timeStamp - state.startTime;\n    }\n    if (state._active) {\n      const _absoluteDelta = state._delta.map(Math.abs);\n      V.addTo(state._distance, _absoluteDelta);\n    }\n    if (this.axisIntent) this.axisIntent(event);\n    const [_m0, _m1] = state._movement;\n    const [t0, t1] = config.threshold;\n    const {\n      _step,\n      values\n    } = state;\n    if (config.hasCustomTransform) {\n      if (_step[0] === false) _step[0] = Math.abs(_m0) >= t0 && values[0];\n      if (_step[1] === false) _step[1] = Math.abs(_m1) >= t1 && values[1];\n    } else {\n      if (_step[0] === false) _step[0] = Math.abs(_m0) >= t0 && Math.sign(_m0) * t0;\n      if (_step[1] === false) _step[1] = Math.abs(_m1) >= t1 && Math.sign(_m1) * t1;\n    }\n    state.intentional = _step[0] !== false || _step[1] !== false;\n    if (!state.intentional) return;\n    const movement = [0, 0];\n    if (config.hasCustomTransform) {\n      const [v0, v1] = values;\n      movement[0] = _step[0] !== false ? v0 - _step[0] : 0;\n      movement[1] = _step[1] !== false ? v1 - _step[1] : 0;\n    } else {\n      movement[0] = _step[0] !== false ? _m0 - _step[0] : 0;\n      movement[1] = _step[1] !== false ? _m1 - _step[1] : 0;\n    }\n    if (this.restrictToAxis && !state._blocked) this.restrictToAxis(movement);\n    const previousOffset = state.offset;\n    const gestureIsActive = state._active && !state._blocked || state.active;\n    if (gestureIsActive) {\n      state.first = state._active && !state.active;\n      state.last = !state._active && state.active;\n      state.active = shared[this.ingKey] = state._active;\n      if (event) {\n        if (state.first) {\n          if ('bounds' in config) state._bounds = call(config.bounds, state);\n          if (this.setup) this.setup();\n        }\n        state.movement = movement;\n        this.computeOffset();\n      }\n    }\n    const [ox, oy] = state.offset;\n    const [[x0, x1], [y0, y1]] = state._bounds;\n    state.overflow = [ox < x0 ? -1 : ox > x1 ? 1 : 0, oy < y0 ? -1 : oy > y1 ? 1 : 0];\n    state._movementBound[0] = state.overflow[0] ? state._movementBound[0] === false ? state._movement[0] : state._movementBound[0] : false;\n    state._movementBound[1] = state.overflow[1] ? state._movementBound[1] === false ? state._movement[1] : state._movementBound[1] : false;\n    const rubberband = state._active ? config.rubberband || [0, 0] : [0, 0];\n    state.offset = computeRubberband(state._bounds, state.offset, rubberband);\n    state.delta = V.sub(state.offset, previousOffset);\n    this.computeMovement();\n    if (gestureIsActive && (!state.last || dt > BEFORE_LAST_KINEMATICS_DELAY)) {\n      state.delta = V.sub(state.offset, previousOffset);\n      const absoluteDelta = state.delta.map(Math.abs);\n      V.addTo(state.distance, absoluteDelta);\n      state.direction = state.delta.map(Math.sign);\n      state._direction = state._delta.map(Math.sign);\n      if (!state.first && dt > 0) {\n        state.velocity = [absoluteDelta[0] / dt, absoluteDelta[1] / dt];\n        state.timeDelta = dt;\n      }\n    }\n  }\n  emit() {\n    const state = this.state;\n    const shared = this.shared;\n    const config = this.config;\n    if (!state._active) this.clean();\n    if ((state._blocked || !state.intentional) && !state._force && !config.triggerAllEvents) return;\n    const memo = this.handler(_objectSpread2(_objectSpread2(_objectSpread2({}, shared), state), {}, {\n      [this.aliasKey]: state.values\n    }));\n    if (memo !== undefined) state.memo = memo;\n  }\n  clean() {\n    this.eventStore.clean();\n    this.timeoutStore.clean();\n  }\n}\n\nfunction selectAxis([dx, dy], threshold) {\n  const absDx = Math.abs(dx);\n  const absDy = Math.abs(dy);\n  if (absDx > absDy && absDx > threshold) {\n    return 'x';\n  }\n  if (absDy > absDx && absDy > threshold) {\n    return 'y';\n  }\n  return undefined;\n}\nclass CoordinatesEngine extends Engine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"aliasKey\", 'xy');\n  }\n  reset() {\n    super.reset();\n    this.state.axis = undefined;\n  }\n  init() {\n    this.state.offset = [0, 0];\n    this.state.lastOffset = [0, 0];\n  }\n  computeOffset() {\n    this.state.offset = V.add(this.state.lastOffset, this.state.movement);\n  }\n  computeMovement() {\n    this.state.movement = V.sub(this.state.offset, this.state.lastOffset);\n  }\n  axisIntent(event) {\n    const state = this.state;\n    const config = this.config;\n    if (!state.axis && event) {\n      const threshold = typeof config.axisThreshold === 'object' ? config.axisThreshold[getPointerType(event)] : config.axisThreshold;\n      state.axis = selectAxis(state._movement, threshold);\n    }\n    state._blocked = (config.lockDirection || !!config.axis) && !state.axis || !!config.axis && config.axis !== state.axis;\n  }\n  restrictToAxis(v) {\n    if (this.config.axis || this.config.lockDirection) {\n      switch (this.state.axis) {\n        case 'x':\n          v[1] = 0;\n          break;\n        case 'y':\n          v[0] = 0;\n          break;\n      }\n    }\n  }\n}\n\nconst identity = v => v;\nconst DEFAULT_RUBBERBAND = 0.15;\nconst commonConfigResolver = {\n  enabled(value = true) {\n    return value;\n  },\n  eventOptions(value, _k, config) {\n    return _objectSpread2(_objectSpread2({}, config.shared.eventOptions), value);\n  },\n  preventDefault(value = false) {\n    return value;\n  },\n  triggerAllEvents(value = false) {\n    return value;\n  },\n  rubberband(value = 0) {\n    switch (value) {\n      case true:\n        return [DEFAULT_RUBBERBAND, DEFAULT_RUBBERBAND];\n      case false:\n        return [0, 0];\n      default:\n        return V.toVector(value);\n    }\n  },\n  from(value) {\n    if (typeof value === 'function') return value;\n    if (value != null) return V.toVector(value);\n  },\n  transform(value, _k, config) {\n    const transform = value || config.shared.transform;\n    this.hasCustomTransform = !!transform;\n    if (process.env.NODE_ENV === 'development') {\n      const originalTransform = transform || identity;\n      return v => {\n        const r = originalTransform(v);\n        if (!isFinite(r[0]) || !isFinite(r[1])) {\n          console.warn(`[@use-gesture]: config.transform() must produce a valid result, but it was: [${r[0]},${[1]}]`);\n        }\n        return r;\n      };\n    }\n    return transform || identity;\n  },\n  threshold(value) {\n    return V.toVector(value, 0);\n  }\n};\nif (process.env.NODE_ENV === 'development') {\n  Object.assign(commonConfigResolver, {\n    domTarget(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\n      }\n      return NaN;\n    },\n    lockDirection(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`lockDirection\\` option has been merged with \\`axis\\`. Use it as in \\`{ axis: 'lock' }\\``);\n      }\n      return NaN;\n    },\n    initial(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`initial\\` option has been renamed to \\`from\\`.`);\n      }\n      return NaN;\n    }\n  });\n}\n\nconst DEFAULT_AXIS_THRESHOLD = 0;\nconst coordinatesConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {\n  axis(_v, _k, {\n    axis\n  }) {\n    this.lockDirection = axis === 'lock';\n    if (!this.lockDirection) return axis;\n  },\n  axisThreshold(value = DEFAULT_AXIS_THRESHOLD) {\n    return value;\n  },\n  bounds(value = {}) {\n    if (typeof value === 'function') {\n      return state => coordinatesConfigResolver.bounds(value(state));\n    }\n    if ('current' in value) {\n      return () => value.current;\n    }\n    if (typeof HTMLElement === 'function' && value instanceof HTMLElement) {\n      return value;\n    }\n    const {\n      left = -Infinity,\n      right = Infinity,\n      top = -Infinity,\n      bottom = Infinity\n    } = value;\n    return [[left, right], [top, bottom]];\n  }\n});\n\nconst KEYS_DELTA_MAP = {\n  ArrowRight: (displacement, factor = 1) => [displacement * factor, 0],\n  ArrowLeft: (displacement, factor = 1) => [-1 * displacement * factor, 0],\n  ArrowUp: (displacement, factor = 1) => [0, -1 * displacement * factor],\n  ArrowDown: (displacement, factor = 1) => [0, displacement * factor]\n};\nclass DragEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'dragging');\n  }\n  reset() {\n    super.reset();\n    const state = this.state;\n    state._pointerId = undefined;\n    state._pointerActive = false;\n    state._keyboardActive = false;\n    state._preventScroll = false;\n    state._delayed = false;\n    state.swipe = [0, 0];\n    state.tap = false;\n    state.canceled = false;\n    state.cancel = this.cancel.bind(this);\n  }\n  setup() {\n    const state = this.state;\n    if (state._bounds instanceof HTMLElement) {\n      const boundRect = state._bounds.getBoundingClientRect();\n      const targetRect = state.currentTarget.getBoundingClientRect();\n      const _bounds = {\n        left: boundRect.left - targetRect.left + state.offset[0],\n        right: boundRect.right - targetRect.right + state.offset[0],\n        top: boundRect.top - targetRect.top + state.offset[1],\n        bottom: boundRect.bottom - targetRect.bottom + state.offset[1]\n      };\n      state._bounds = coordinatesConfigResolver.bounds(_bounds);\n    }\n  }\n  cancel() {\n    const state = this.state;\n    if (state.canceled) return;\n    state.canceled = true;\n    state._active = false;\n    setTimeout(() => {\n      this.compute();\n      this.emit();\n    }, 0);\n  }\n  setActive() {\n    this.state._active = this.state._pointerActive || this.state._keyboardActive;\n  }\n  clean() {\n    this.pointerClean();\n    this.state._pointerActive = false;\n    this.state._keyboardActive = false;\n    super.clean();\n  }\n  pointerDown(event) {\n    const config = this.config;\n    const state = this.state;\n    if (event.buttons != null && (Array.isArray(config.pointerButtons) ? !config.pointerButtons.includes(event.buttons) : config.pointerButtons !== -1 && config.pointerButtons !== event.buttons)) return;\n    const ctrlIds = this.ctrl.setEventIds(event);\n    if (config.pointerCapture) {\n      event.target.setPointerCapture(event.pointerId);\n    }\n    if (ctrlIds && ctrlIds.size > 1 && state._pointerActive) return;\n    this.start(event);\n    this.setupPointer(event);\n    state._pointerId = pointerId(event);\n    state._pointerActive = true;\n    this.computeValues(pointerValues(event));\n    this.computeInitial();\n    if (config.preventScrollAxis && getPointerType(event) !== 'mouse') {\n      state._active = false;\n      this.setupScrollPrevention(event);\n    } else if (config.delay > 0) {\n      this.setupDelayTrigger(event);\n      if (config.triggerAllEvents) {\n        this.compute(event);\n        this.emit();\n      }\n    } else {\n      this.startPointerDrag(event);\n    }\n  }\n  startPointerDrag(event) {\n    const state = this.state;\n    state._active = true;\n    state._preventScroll = true;\n    state._delayed = false;\n    this.compute(event);\n    this.emit();\n  }\n  pointerMove(event) {\n    const state = this.state;\n    const config = this.config;\n    if (!state._pointerActive) return;\n    const id = pointerId(event);\n    if (state._pointerId !== undefined && id !== state._pointerId) return;\n    const _values = pointerValues(event);\n    if (document.pointerLockElement === event.target) {\n      state._delta = [event.movementX, event.movementY];\n    } else {\n      state._delta = V.sub(_values, state._values);\n      this.computeValues(_values);\n    }\n    V.addTo(state._movement, state._delta);\n    this.compute(event);\n    if (state._delayed && state.intentional) {\n      this.timeoutStore.remove('dragDelay');\n      state.active = false;\n      this.startPointerDrag(event);\n      return;\n    }\n    if (config.preventScrollAxis && !state._preventScroll) {\n      if (state.axis) {\n        if (state.axis === config.preventScrollAxis || config.preventScrollAxis === 'xy') {\n          state._active = false;\n          this.clean();\n          return;\n        } else {\n          this.timeoutStore.remove('startPointerDrag');\n          this.startPointerDrag(event);\n          return;\n        }\n      } else {\n        return;\n      }\n    }\n    this.emit();\n  }\n  pointerUp(event) {\n    this.ctrl.setEventIds(event);\n    try {\n      if (this.config.pointerCapture && event.target.hasPointerCapture(event.pointerId)) {\n        ;\n        event.target.releasePointerCapture(event.pointerId);\n      }\n    } catch (_unused) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(`[@use-gesture]: If you see this message, it's likely that you're using an outdated version of \\`@react-three/fiber\\`. \\n\\nPlease upgrade to the latest version.`);\n      }\n    }\n    const state = this.state;\n    const config = this.config;\n    if (!state._active || !state._pointerActive) return;\n    const id = pointerId(event);\n    if (state._pointerId !== undefined && id !== state._pointerId) return;\n    this.state._pointerActive = false;\n    this.setActive();\n    this.compute(event);\n    const [dx, dy] = state._distance;\n    state.tap = dx <= config.tapsThreshold && dy <= config.tapsThreshold;\n    if (state.tap && config.filterTaps) {\n      state._force = true;\n    } else {\n      const [_dx, _dy] = state._delta;\n      const [_mx, _my] = state._movement;\n      const [svx, svy] = config.swipe.velocity;\n      const [sx, sy] = config.swipe.distance;\n      const sdt = config.swipe.duration;\n      if (state.elapsedTime < sdt) {\n        const _vx = Math.abs(_dx / state.timeDelta);\n        const _vy = Math.abs(_dy / state.timeDelta);\n        if (_vx > svx && Math.abs(_mx) > sx) state.swipe[0] = Math.sign(_dx);\n        if (_vy > svy && Math.abs(_my) > sy) state.swipe[1] = Math.sign(_dy);\n      }\n    }\n    this.emit();\n  }\n  pointerClick(event) {\n    if (!this.state.tap && event.detail > 0) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  setupPointer(event) {\n    const config = this.config;\n    const device = config.device;\n    if (process.env.NODE_ENV === 'development') {\n      try {\n        if (device === 'pointer' && config.preventScrollDelay === undefined) {\n          const currentTarget = 'uv' in event ? event.sourceEvent.currentTarget : event.currentTarget;\n          const style = window.getComputedStyle(currentTarget);\n          if (style.touchAction === 'auto') {\n            console.warn(`[@use-gesture]: The drag target has its \\`touch-action\\` style property set to \\`auto\\`. It is recommended to add \\`touch-action: 'none'\\` so that the drag gesture behaves correctly on touch-enabled devices. For more information read this: https://use-gesture.netlify.app/docs/extras/#touch-action.\\n\\nThis message will only show in development mode. It won't appear in production. If this is intended, you can ignore it.`, currentTarget);\n          }\n        }\n      } catch (_unused2) {}\n    }\n    if (config.pointerLock) {\n      event.currentTarget.requestPointerLock();\n    }\n    if (!config.pointerCapture) {\n      this.eventStore.add(this.sharedConfig.window, device, 'change', this.pointerMove.bind(this));\n      this.eventStore.add(this.sharedConfig.window, device, 'end', this.pointerUp.bind(this));\n      this.eventStore.add(this.sharedConfig.window, device, 'cancel', this.pointerUp.bind(this));\n    }\n  }\n  pointerClean() {\n    if (this.config.pointerLock && document.pointerLockElement === this.state.currentTarget) {\n      document.exitPointerLock();\n    }\n  }\n  preventScroll(event) {\n    if (this.state._preventScroll && event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  setupScrollPrevention(event) {\n    this.state._preventScroll = false;\n    persistEvent(event);\n    const remove = this.eventStore.add(this.sharedConfig.window, 'touch', 'change', this.preventScroll.bind(this), {\n      passive: false\n    });\n    this.eventStore.add(this.sharedConfig.window, 'touch', 'end', remove);\n    this.eventStore.add(this.sharedConfig.window, 'touch', 'cancel', remove);\n    this.timeoutStore.add('startPointerDrag', this.startPointerDrag.bind(this), this.config.preventScrollDelay, event);\n  }\n  setupDelayTrigger(event) {\n    this.state._delayed = true;\n    this.timeoutStore.add('dragDelay', () => {\n      this.state._step = [0, 0];\n      this.startPointerDrag(event);\n    }, this.config.delay);\n  }\n  keyDown(event) {\n    const deltaFn = KEYS_DELTA_MAP[event.key];\n    if (deltaFn) {\n      const state = this.state;\n      const factor = event.shiftKey ? 10 : event.altKey ? 0.1 : 1;\n      this.start(event);\n      state._delta = deltaFn(this.config.keyboardDisplacement, factor);\n      state._keyboardActive = true;\n      V.addTo(state._movement, state._delta);\n      this.compute(event);\n      this.emit();\n    }\n  }\n  keyUp(event) {\n    if (!(event.key in KEYS_DELTA_MAP)) return;\n    this.state._keyboardActive = false;\n    this.setActive();\n    this.compute(event);\n    this.emit();\n  }\n  bind(bindFunction) {\n    const device = this.config.device;\n    bindFunction(device, 'start', this.pointerDown.bind(this));\n    if (this.config.pointerCapture) {\n      bindFunction(device, 'change', this.pointerMove.bind(this));\n      bindFunction(device, 'end', this.pointerUp.bind(this));\n      bindFunction(device, 'cancel', this.pointerUp.bind(this));\n      bindFunction('lostPointerCapture', '', this.pointerUp.bind(this));\n    }\n    if (this.config.keys) {\n      bindFunction('key', 'down', this.keyDown.bind(this));\n      bindFunction('key', 'up', this.keyUp.bind(this));\n    }\n    if (this.config.filterTaps) {\n      bindFunction('click', '', this.pointerClick.bind(this), {\n        capture: true,\n        passive: false\n      });\n    }\n  }\n}\nfunction persistEvent(event) {\n  'persist' in event && typeof event.persist === 'function' && event.persist();\n}\n\nconst isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement;\nfunction supportsTouchEvents() {\n  return isBrowser && 'ontouchstart' in window;\n}\nfunction isTouchScreen() {\n  return supportsTouchEvents() || isBrowser && window.navigator.maxTouchPoints > 1;\n}\nfunction supportsPointerEvents() {\n  return isBrowser && 'onpointerdown' in window;\n}\nfunction supportsPointerLock() {\n  return isBrowser && 'exitPointerLock' in window.document;\n}\nfunction supportsGestureEvents() {\n  try {\n    return 'constructor' in GestureEvent;\n  } catch (e) {\n    return false;\n  }\n}\nconst SUPPORT = {\n  isBrowser,\n  gesture: supportsGestureEvents(),\n  touch: supportsTouchEvents(),\n  touchscreen: isTouchScreen(),\n  pointer: supportsPointerEvents(),\n  pointerLock: supportsPointerLock()\n};\n\nconst DEFAULT_PREVENT_SCROLL_DELAY = 250;\nconst DEFAULT_DRAG_DELAY = 180;\nconst DEFAULT_SWIPE_VELOCITY = 0.5;\nconst DEFAULT_SWIPE_DISTANCE = 50;\nconst DEFAULT_SWIPE_DURATION = 250;\nconst DEFAULT_KEYBOARD_DISPLACEMENT = 10;\nconst DEFAULT_DRAG_AXIS_THRESHOLD = {\n  mouse: 0,\n  touch: 0,\n  pen: 8\n};\nconst dragConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {\n  device(_v, _k, {\n    pointer: {\n      touch = false,\n      lock = false,\n      mouse = false\n    } = {}\n  }) {\n    this.pointerLock = lock && SUPPORT.pointerLock;\n    if (SUPPORT.touch && touch) return 'touch';\n    if (this.pointerLock) return 'mouse';\n    if (SUPPORT.pointer && !mouse) return 'pointer';\n    if (SUPPORT.touch) return 'touch';\n    return 'mouse';\n  },\n  preventScrollAxis(value, _k, {\n    preventScroll\n  }) {\n    this.preventScrollDelay = typeof preventScroll === 'number' ? preventScroll : preventScroll || preventScroll === undefined && value ? DEFAULT_PREVENT_SCROLL_DELAY : undefined;\n    if (!SUPPORT.touchscreen || preventScroll === false) return undefined;\n    return value ? value : preventScroll !== undefined ? 'y' : undefined;\n  },\n  pointerCapture(_v, _k, {\n    pointer: {\n      capture = true,\n      buttons = 1,\n      keys = true\n    } = {}\n  }) {\n    this.pointerButtons = buttons;\n    this.keys = keys;\n    return !this.pointerLock && this.device === 'pointer' && capture;\n  },\n  threshold(value, _k, {\n    filterTaps = false,\n    tapsThreshold = 3,\n    axis = undefined\n  }) {\n    const threshold = V.toVector(value, filterTaps ? tapsThreshold : axis ? 1 : 0);\n    this.filterTaps = filterTaps;\n    this.tapsThreshold = tapsThreshold;\n    return threshold;\n  },\n  swipe({\n    velocity = DEFAULT_SWIPE_VELOCITY,\n    distance = DEFAULT_SWIPE_DISTANCE,\n    duration = DEFAULT_SWIPE_DURATION\n  } = {}) {\n    return {\n      velocity: this.transform(V.toVector(velocity)),\n      distance: this.transform(V.toVector(distance)),\n      duration\n    };\n  },\n  delay(value = 0) {\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY;\n      case false:\n        return 0;\n      default:\n        return value;\n    }\n  },\n  axisThreshold(value) {\n    if (!value) return DEFAULT_DRAG_AXIS_THRESHOLD;\n    return _objectSpread2(_objectSpread2({}, DEFAULT_DRAG_AXIS_THRESHOLD), value);\n  },\n  keyboardDisplacement(value = DEFAULT_KEYBOARD_DISPLACEMENT) {\n    return value;\n  }\n});\nif (process.env.NODE_ENV === 'development') {\n  Object.assign(dragConfigResolver, {\n    useTouch(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`useTouch\\` option has been renamed to \\`pointer.touch\\`. Use it as in \\`{ pointer: { touch: true } }\\`.`);\n      }\n      return NaN;\n    },\n    experimental_preventWindowScrollY(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`experimental_preventWindowScrollY\\` option has been renamed to \\`preventScroll\\`.`);\n      }\n      return NaN;\n    },\n    swipeVelocity(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`swipeVelocity\\` option has been renamed to \\`swipe.velocity\\`. Use it as in \\`{ swipe: { velocity: 0.5 } }\\`.`);\n      }\n      return NaN;\n    },\n    swipeDistance(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`swipeDistance\\` option has been renamed to \\`swipe.distance\\`. Use it as in \\`{ swipe: { distance: 50 } }\\`.`);\n      }\n      return NaN;\n    },\n    swipeDuration(value) {\n      if (value !== undefined) {\n        throw Error(`[@use-gesture]: \\`swipeDuration\\` option has been renamed to \\`swipe.duration\\`. Use it as in \\`{ swipe: { duration: 250 } }\\`.`);\n      }\n      return NaN;\n    }\n  });\n}\n\nfunction clampStateInternalMovementToBounds(state) {\n  const [ox, oy] = state.overflow;\n  const [dx, dy] = state._delta;\n  const [dirx, diry] = state._direction;\n  if (ox < 0 && dx > 0 && dirx < 0 || ox > 0 && dx < 0 && dirx > 0) {\n    state._movement[0] = state._movementBound[0];\n  }\n  if (oy < 0 && dy > 0 && diry < 0 || oy > 0 && dy < 0 && diry > 0) {\n    state._movement[1] = state._movementBound[1];\n  }\n}\n\nconst SCALE_ANGLE_RATIO_INTENT_DEG = 30;\nconst PINCH_WHEEL_RATIO = 100;\nclass PinchEngine extends Engine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'pinching');\n    _defineProperty(this, \"aliasKey\", 'da');\n  }\n  init() {\n    this.state.offset = [1, 0];\n    this.state.lastOffset = [1, 0];\n    this.state._pointerEvents = new Map();\n  }\n  reset() {\n    super.reset();\n    const state = this.state;\n    state._touchIds = [];\n    state.canceled = false;\n    state.cancel = this.cancel.bind(this);\n    state.turns = 0;\n  }\n  computeOffset() {\n    const {\n      type,\n      movement,\n      lastOffset\n    } = this.state;\n    if (type === 'wheel') {\n      this.state.offset = V.add(movement, lastOffset);\n    } else {\n      this.state.offset = [(1 + movement[0]) * lastOffset[0], movement[1] + lastOffset[1]];\n    }\n  }\n  computeMovement() {\n    const {\n      offset,\n      lastOffset\n    } = this.state;\n    this.state.movement = [offset[0] / lastOffset[0], offset[1] - lastOffset[1]];\n  }\n  axisIntent() {\n    const state = this.state;\n    const [_m0, _m1] = state._movement;\n    if (!state.axis) {\n      const axisMovementDifference = Math.abs(_m0) * SCALE_ANGLE_RATIO_INTENT_DEG - Math.abs(_m1);\n      if (axisMovementDifference < 0) state.axis = 'angle';else if (axisMovementDifference > 0) state.axis = 'scale';\n    }\n  }\n  restrictToAxis(v) {\n    if (this.config.lockDirection) {\n      if (this.state.axis === 'scale') v[1] = 0;else if (this.state.axis === 'angle') v[0] = 0;\n    }\n  }\n  cancel() {\n    const state = this.state;\n    if (state.canceled) return;\n    setTimeout(() => {\n      state.canceled = true;\n      state._active = false;\n      this.compute();\n      this.emit();\n    }, 0);\n  }\n  touchStart(event) {\n    this.ctrl.setEventIds(event);\n    const state = this.state;\n    const ctrlTouchIds = this.ctrl.touchIds;\n    if (state._active) {\n      if (state._touchIds.every(id => ctrlTouchIds.has(id))) return;\n    }\n    if (ctrlTouchIds.size < 2) return;\n    this.start(event);\n    state._touchIds = Array.from(ctrlTouchIds).slice(0, 2);\n    const payload = touchDistanceAngle(event, state._touchIds);\n    if (!payload) return;\n    this.pinchStart(event, payload);\n  }\n  pointerStart(event) {\n    if (event.buttons != null && event.buttons % 2 !== 1) return;\n    this.ctrl.setEventIds(event);\n    event.target.setPointerCapture(event.pointerId);\n    const state = this.state;\n    const _pointerEvents = state._pointerEvents;\n    const ctrlPointerIds = this.ctrl.pointerIds;\n    if (state._active) {\n      if (Array.from(_pointerEvents.keys()).every(id => ctrlPointerIds.has(id))) return;\n    }\n    if (_pointerEvents.size < 2) {\n      _pointerEvents.set(event.pointerId, event);\n    }\n    if (state._pointerEvents.size < 2) return;\n    this.start(event);\n    const payload = distanceAngle(...Array.from(_pointerEvents.values()));\n    if (!payload) return;\n    this.pinchStart(event, payload);\n  }\n  pinchStart(event, payload) {\n    const state = this.state;\n    state.origin = payload.origin;\n    this.computeValues([payload.distance, payload.angle]);\n    this.computeInitial();\n    this.compute(event);\n    this.emit();\n  }\n  touchMove(event) {\n    if (!this.state._active) return;\n    const payload = touchDistanceAngle(event, this.state._touchIds);\n    if (!payload) return;\n    this.pinchMove(event, payload);\n  }\n  pointerMove(event) {\n    const _pointerEvents = this.state._pointerEvents;\n    if (_pointerEvents.has(event.pointerId)) {\n      _pointerEvents.set(event.pointerId, event);\n    }\n    if (!this.state._active) return;\n    const payload = distanceAngle(...Array.from(_pointerEvents.values()));\n    if (!payload) return;\n    this.pinchMove(event, payload);\n  }\n  pinchMove(event, payload) {\n    const state = this.state;\n    const prev_a = state._values[1];\n    const delta_a = payload.angle - prev_a;\n    let delta_turns = 0;\n    if (Math.abs(delta_a) > 270) delta_turns += Math.sign(delta_a);\n    this.computeValues([payload.distance, payload.angle - 360 * delta_turns]);\n    state.origin = payload.origin;\n    state.turns = delta_turns;\n    state._movement = [state._values[0] / state._initial[0] - 1, state._values[1] - state._initial[1]];\n    this.compute(event);\n    this.emit();\n  }\n  touchEnd(event) {\n    this.ctrl.setEventIds(event);\n    if (!this.state._active) return;\n    if (this.state._touchIds.some(id => !this.ctrl.touchIds.has(id))) {\n      this.state._active = false;\n      this.compute(event);\n      this.emit();\n    }\n  }\n  pointerEnd(event) {\n    const state = this.state;\n    this.ctrl.setEventIds(event);\n    try {\n      event.target.releasePointerCapture(event.pointerId);\n    } catch (_unused) {}\n    if (state._pointerEvents.has(event.pointerId)) {\n      state._pointerEvents.delete(event.pointerId);\n    }\n    if (!state._active) return;\n    if (state._pointerEvents.size < 2) {\n      state._active = false;\n      this.compute(event);\n      this.emit();\n    }\n  }\n  gestureStart(event) {\n    if (event.cancelable) event.preventDefault();\n    const state = this.state;\n    if (state._active) return;\n    this.start(event);\n    this.computeValues([event.scale, event.rotation]);\n    state.origin = [event.clientX, event.clientY];\n    this.compute(event);\n    this.emit();\n  }\n  gestureMove(event) {\n    if (event.cancelable) event.preventDefault();\n    if (!this.state._active) return;\n    const state = this.state;\n    this.computeValues([event.scale, event.rotation]);\n    state.origin = [event.clientX, event.clientY];\n    const _previousMovement = state._movement;\n    state._movement = [event.scale - 1, event.rotation];\n    state._delta = V.sub(state._movement, _previousMovement);\n    this.compute(event);\n    this.emit();\n  }\n  gestureEnd(event) {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute(event);\n    this.emit();\n  }\n  wheel(event) {\n    const modifierKey = this.config.modifierKey;\n    if (modifierKey && (Array.isArray(modifierKey) ? !modifierKey.find(k => event[k]) : !event[modifierKey])) return;\n    if (!this.state._active) this.wheelStart(event);else this.wheelChange(event);\n    this.timeoutStore.add('wheelEnd', this.wheelEnd.bind(this));\n  }\n  wheelStart(event) {\n    this.start(event);\n    this.wheelChange(event);\n  }\n  wheelChange(event) {\n    const isR3f = ('uv' in event);\n    if (!isR3f) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      if (process.env.NODE_ENV === 'development' && !event.defaultPrevented) {\n        console.warn(`[@use-gesture]: To properly support zoom on trackpads, try using the \\`target\\` option.\\n\\nThis message will only appear in development mode.`);\n      }\n    }\n    const state = this.state;\n    state._delta = [-wheelValues(event)[1] / PINCH_WHEEL_RATIO * state.offset[0], 0];\n    V.addTo(state._movement, state._delta);\n    clampStateInternalMovementToBounds(state);\n    this.state.origin = [event.clientX, event.clientY];\n    this.compute(event);\n    this.emit();\n  }\n  wheelEnd() {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute();\n    this.emit();\n  }\n  bind(bindFunction) {\n    const device = this.config.device;\n    if (!!device) {\n      bindFunction(device, 'start', this[device + 'Start'].bind(this));\n      bindFunction(device, 'change', this[device + 'Move'].bind(this));\n      bindFunction(device, 'end', this[device + 'End'].bind(this));\n      bindFunction(device, 'cancel', this[device + 'End'].bind(this));\n      bindFunction('lostPointerCapture', '', this[device + 'End'].bind(this));\n    }\n    if (this.config.pinchOnWheel) {\n      bindFunction('wheel', '', this.wheel.bind(this), {\n        passive: false\n      });\n    }\n  }\n}\n\nconst pinchConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {\n  device(_v, _k, {\n    shared,\n    pointer: {\n      touch = false\n    } = {}\n  }) {\n    const sharedConfig = shared;\n    if (sharedConfig.target && !SUPPORT.touch && SUPPORT.gesture) return 'gesture';\n    if (SUPPORT.touch && touch) return 'touch';\n    if (SUPPORT.touchscreen) {\n      if (SUPPORT.pointer) return 'pointer';\n      if (SUPPORT.touch) return 'touch';\n    }\n  },\n  bounds(_v, _k, {\n    scaleBounds = {},\n    angleBounds = {}\n  }) {\n    const _scaleBounds = state => {\n      const D = assignDefault(call(scaleBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [D.min, D.max];\n    };\n    const _angleBounds = state => {\n      const A = assignDefault(call(angleBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [A.min, A.max];\n    };\n    if (typeof scaleBounds !== 'function' && typeof angleBounds !== 'function') return [_scaleBounds(), _angleBounds()];\n    return state => [_scaleBounds(state), _angleBounds(state)];\n  },\n  threshold(value, _k, config) {\n    this.lockDirection = config.axis === 'lock';\n    const threshold = V.toVector(value, this.lockDirection ? [0.1, 3] : 0);\n    return threshold;\n  },\n  modifierKey(value) {\n    if (value === undefined) return 'ctrlKey';\n    return value;\n  },\n  pinchOnWheel(value = true) {\n    return value;\n  }\n});\n\nclass MoveEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'moving');\n  }\n  move(event) {\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\n    if (!this.state._active) this.moveStart(event);else this.moveChange(event);\n    this.timeoutStore.add('moveEnd', this.moveEnd.bind(this));\n  }\n  moveStart(event) {\n    this.start(event);\n    this.computeValues(pointerValues(event));\n    this.compute(event);\n    this.computeInitial();\n    this.emit();\n  }\n  moveChange(event) {\n    if (!this.state._active) return;\n    const values = pointerValues(event);\n    const state = this.state;\n    state._delta = V.sub(values, state._values);\n    V.addTo(state._movement, state._delta);\n    this.computeValues(values);\n    this.compute(event);\n    this.emit();\n  }\n  moveEnd(event) {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute(event);\n    this.emit();\n  }\n  bind(bindFunction) {\n    bindFunction('pointer', 'change', this.move.bind(this));\n    bindFunction('pointer', 'leave', this.moveEnd.bind(this));\n  }\n}\n\nconst moveConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {\n  mouseOnly: (value = true) => value\n});\n\nclass ScrollEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'scrolling');\n  }\n  scroll(event) {\n    if (!this.state._active) this.start(event);\n    this.scrollChange(event);\n    this.timeoutStore.add('scrollEnd', this.scrollEnd.bind(this));\n  }\n  scrollChange(event) {\n    if (event.cancelable) event.preventDefault();\n    const state = this.state;\n    const values = scrollValues(event);\n    state._delta = V.sub(values, state._values);\n    V.addTo(state._movement, state._delta);\n    this.computeValues(values);\n    this.compute(event);\n    this.emit();\n  }\n  scrollEnd() {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute();\n    this.emit();\n  }\n  bind(bindFunction) {\n    bindFunction('scroll', '', this.scroll.bind(this));\n  }\n}\n\nconst scrollConfigResolver = coordinatesConfigResolver;\n\nclass WheelEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'wheeling');\n  }\n  wheel(event) {\n    if (!this.state._active) this.start(event);\n    this.wheelChange(event);\n    this.timeoutStore.add('wheelEnd', this.wheelEnd.bind(this));\n  }\n  wheelChange(event) {\n    const state = this.state;\n    state._delta = wheelValues(event);\n    V.addTo(state._movement, state._delta);\n    clampStateInternalMovementToBounds(state);\n    this.compute(event);\n    this.emit();\n  }\n  wheelEnd() {\n    if (!this.state._active) return;\n    this.state._active = false;\n    this.compute();\n    this.emit();\n  }\n  bind(bindFunction) {\n    bindFunction('wheel', '', this.wheel.bind(this));\n  }\n}\n\nconst wheelConfigResolver = coordinatesConfigResolver;\n\nclass HoverEngine extends CoordinatesEngine {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"ingKey\", 'hovering');\n  }\n  enter(event) {\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\n    this.start(event);\n    this.computeValues(pointerValues(event));\n    this.compute(event);\n    this.emit();\n  }\n  leave(event) {\n    if (this.config.mouseOnly && event.pointerType !== 'mouse') return;\n    const state = this.state;\n    if (!state._active) return;\n    state._active = false;\n    const values = pointerValues(event);\n    state._movement = state._delta = V.sub(values, state._values);\n    this.computeValues(values);\n    this.compute(event);\n    state.delta = state.movement;\n    this.emit();\n  }\n  bind(bindFunction) {\n    bindFunction('pointer', 'enter', this.enter.bind(this));\n    bindFunction('pointer', 'leave', this.leave.bind(this));\n  }\n}\n\nconst hoverConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {\n  mouseOnly: (value = true) => value\n});\n\nconst EngineMap = new Map();\nconst ConfigResolverMap = new Map();\nfunction registerAction(action) {\n  EngineMap.set(action.key, action.engine);\n  ConfigResolverMap.set(action.key, action.resolver);\n}\nconst dragAction = {\n  key: 'drag',\n  engine: DragEngine,\n  resolver: dragConfigResolver\n};\nconst hoverAction = {\n  key: 'hover',\n  engine: HoverEngine,\n  resolver: hoverConfigResolver\n};\nconst moveAction = {\n  key: 'move',\n  engine: MoveEngine,\n  resolver: moveConfigResolver\n};\nconst pinchAction = {\n  key: 'pinch',\n  engine: PinchEngine,\n  resolver: pinchConfigResolver\n};\nconst scrollAction = {\n  key: 'scroll',\n  engine: ScrollEngine,\n  resolver: scrollConfigResolver\n};\nconst wheelAction = {\n  key: 'wheel',\n  engine: WheelEngine,\n  resolver: wheelConfigResolver\n};\n\nexport { ConfigResolverMap as C, EngineMap as E, SUPPORT as S, _objectSpread2 as _, _defineProperty as a, touchIds as b, chain as c, toHandlerProp as d, dragAction as e, pinchAction as f, hoverAction as h, isTouch as i, moveAction as m, parseProp as p, registerAction as r, scrollAction as s, toDomEventType as t, wheelAction as w };\n", "import { registerAction, dragAction, pinchAction, wheelAction, scrollAction, moveAction, hoverAction } from '@use-gesture/core/actions';\nexport * from '@use-gesture/core/actions';\nimport React from 'react';\nimport { Controller, parseMergedHandlers } from '@use-gesture/core';\nexport * from '@use-gesture/core/utils';\nexport * from '@use-gesture/core/types';\n\nfunction useRecognizers(handlers, config = {}, gestureKey, nativeHandlers) {\n  const ctrl = React.useMemo(() => new Controller(handlers), []);\n  ctrl.applyHandlers(handlers, nativeHandlers);\n  ctrl.applyConfig(config, gestureKey);\n  React.useEffect(ctrl.effect.bind(ctrl));\n  React.useEffect(() => {\n    return ctrl.clean.bind(ctrl);\n  }, []);\n  if (config.target === undefined) {\n    return ctrl.bind.bind(ctrl);\n  }\n  return undefined;\n}\n\nfunction useDrag(handler, config) {\n  registerAction(dragAction);\n  return useRecognizers({\n    drag: handler\n  }, config || {}, 'drag');\n}\n\nfunction usePinch(handler, config) {\n  registerAction(pinchAction);\n  return useRecognizers({\n    pinch: handler\n  }, config || {}, 'pinch');\n}\n\nfunction useWheel(handler, config) {\n  registerAction(wheelAction);\n  return useRecognizers({\n    wheel: handler\n  }, config || {}, 'wheel');\n}\n\nfunction useScroll(handler, config) {\n  registerAction(scrollAction);\n  return useRecognizers({\n    scroll: handler\n  }, config || {}, 'scroll');\n}\n\nfunction useMove(handler, config) {\n  registerAction(moveAction);\n  return useRecognizers({\n    move: handler\n  }, config || {}, 'move');\n}\n\nfunction useHover(handler, config) {\n  registerAction(hoverAction);\n  return useRecognizers({\n    hover: handler\n  }, config || {}, 'hover');\n}\n\nfunction createUseGesture(actions) {\n  actions.forEach(registerAction);\n  return function useGesture(_handlers, _config) {\n    const {\n      handlers,\n      nativeHandlers,\n      config\n    } = parseMergedHandlers(_handlers, _config || {});\n    return useRecognizers(handlers, config, undefined, nativeHandlers);\n  };\n}\n\nfunction useGesture(handlers, config) {\n  const hook = createUseGesture([dragAction, pinchAction, scrollAction, wheelAction, moveAction, hoverAction]);\n  return hook(handlers, config || {});\n}\n\nexport { createUseGesture, useDrag, useGesture, useHover, useMove, usePinch, useScroll, useWheel };\n", "import { S as SUPPORT, C as ConfigResolverMap, _ as _objectSpread2, a as _defineProperty, t as toDomEventType, i as isTouch, b as touchIds, E as EngineMap, c as chain, p as parseProp, d as toHandlerProp } from './actions-fe213e88.esm.js';\nimport './maths-0ab39ae9.esm.js';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nconst sharedConfigResolver = {\n  target(value) {\n    if (value) {\n      return () => 'current' in value ? value.current : value;\n    }\n    return undefined;\n  },\n  enabled(value = true) {\n    return value;\n  },\n  window(value = SUPPORT.isBrowser ? window : undefined) {\n    return value;\n  },\n  eventOptions({\n    passive = true,\n    capture = false\n  } = {}) {\n    return {\n      passive,\n      capture\n    };\n  },\n  transform(value) {\n    return value;\n  }\n};\n\nconst _excluded = [\"target\", \"eventOptions\", \"window\", \"enabled\", \"transform\"];\nfunction resolveWith(config = {}, resolvers) {\n  const result = {};\n  for (const [key, resolver] of Object.entries(resolvers)) {\n    switch (typeof resolver) {\n      case 'function':\n        if (process.env.NODE_ENV === 'development') {\n          const r = resolver.call(result, config[key], key, config);\n          if (!Number.isNaN(r)) result[key] = r;\n        } else {\n          result[key] = resolver.call(result, config[key], key, config);\n        }\n        break;\n      case 'object':\n        result[key] = resolveWith(config[key], resolver);\n        break;\n      case 'boolean':\n        if (resolver) result[key] = config[key];\n        break;\n    }\n  }\n  return result;\n}\nfunction parse(newConfig, gestureKey, _config = {}) {\n  const _ref = newConfig,\n    {\n      target,\n      eventOptions,\n      window,\n      enabled,\n      transform\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  _config.shared = resolveWith({\n    target,\n    eventOptions,\n    window,\n    enabled,\n    transform\n  }, sharedConfigResolver);\n  if (gestureKey) {\n    const resolver = ConfigResolverMap.get(gestureKey);\n    _config[gestureKey] = resolveWith(_objectSpread2({\n      shared: _config.shared\n    }, rest), resolver);\n  } else {\n    for (const key in rest) {\n      const resolver = ConfigResolverMap.get(key);\n      if (resolver) {\n        _config[key] = resolveWith(_objectSpread2({\n          shared: _config.shared\n        }, rest[key]), resolver);\n      } else if (process.env.NODE_ENV === 'development') {\n        if (!['drag', 'pinch', 'scroll', 'wheel', 'move', 'hover'].includes(key)) {\n          if (key === 'domTarget') {\n            throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\n          }\n          console.warn(`[@use-gesture]: Unknown config key \\`${key}\\` was used. Please read the documentation for further information.`);\n        }\n      }\n    }\n  }\n  return _config;\n}\n\nclass EventStore {\n  constructor(ctrl, gestureKey) {\n    _defineProperty(this, \"_listeners\", new Set());\n    this._ctrl = ctrl;\n    this._gestureKey = gestureKey;\n  }\n  add(element, device, action, handler, options) {\n    const listeners = this._listeners;\n    const type = toDomEventType(device, action);\n    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {};\n    const eventOptions = _objectSpread2(_objectSpread2({}, _options), options);\n    element.addEventListener(type, handler, eventOptions);\n    const remove = () => {\n      element.removeEventListener(type, handler, eventOptions);\n      listeners.delete(remove);\n    };\n    listeners.add(remove);\n    return remove;\n  }\n  clean() {\n    this._listeners.forEach(remove => remove());\n    this._listeners.clear();\n  }\n}\n\nclass TimeoutStore {\n  constructor() {\n    _defineProperty(this, \"_timeouts\", new Map());\n  }\n  add(key, callback, ms = 140, ...args) {\n    this.remove(key);\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\n  }\n  remove(key) {\n    const timeout = this._timeouts.get(key);\n    if (timeout) window.clearTimeout(timeout);\n  }\n  clean() {\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\n    this._timeouts.clear();\n  }\n}\n\nclass Controller {\n  constructor(handlers) {\n    _defineProperty(this, \"gestures\", new Set());\n    _defineProperty(this, \"_targetEventStore\", new EventStore(this));\n    _defineProperty(this, \"gestureEventStores\", {});\n    _defineProperty(this, \"gestureTimeoutStores\", {});\n    _defineProperty(this, \"handlers\", {});\n    _defineProperty(this, \"config\", {});\n    _defineProperty(this, \"pointerIds\", new Set());\n    _defineProperty(this, \"touchIds\", new Set());\n    _defineProperty(this, \"state\", {\n      shared: {\n        shiftKey: false,\n        metaKey: false,\n        ctrlKey: false,\n        altKey: false\n      }\n    });\n    resolveGestures(this, handlers);\n  }\n  setEventIds(event) {\n    if (isTouch(event)) {\n      this.touchIds = new Set(touchIds(event));\n      return this.touchIds;\n    } else if ('pointerId' in event) {\n      if (event.type === 'pointerup' || event.type === 'pointercancel') this.pointerIds.delete(event.pointerId);else if (event.type === 'pointerdown') this.pointerIds.add(event.pointerId);\n      return this.pointerIds;\n    }\n  }\n  applyHandlers(handlers, nativeHandlers) {\n    this.handlers = handlers;\n    this.nativeHandlers = nativeHandlers;\n  }\n  applyConfig(config, gestureKey) {\n    this.config = parse(config, gestureKey, this.config);\n  }\n  clean() {\n    this._targetEventStore.clean();\n    for (const key of this.gestures) {\n      this.gestureEventStores[key].clean();\n      this.gestureTimeoutStores[key].clean();\n    }\n  }\n  effect() {\n    if (this.config.shared.target) this.bind();\n    return () => this._targetEventStore.clean();\n  }\n  bind(...args) {\n    const sharedConfig = this.config.shared;\n    const props = {};\n    let target;\n    if (sharedConfig.target) {\n      target = sharedConfig.target();\n      if (!target) return;\n    }\n    if (sharedConfig.enabled) {\n      for (const gestureKey of this.gestures) {\n        const gestureConfig = this.config[gestureKey];\n        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);\n        if (gestureConfig.enabled) {\n          const Engine = EngineMap.get(gestureKey);\n          new Engine(this, args, gestureKey).bind(bindFunction);\n        }\n      }\n      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);\n      for (const eventKey in this.nativeHandlers) {\n        nativeBindFunction(eventKey, '', event => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {\n          event,\n          args\n        })), undefined, true);\n      }\n    }\n    for (const handlerProp in props) {\n      props[handlerProp] = chain(...props[handlerProp]);\n    }\n    if (!target) return props;\n    for (const handlerProp in props) {\n      const {\n        device,\n        capture,\n        passive\n      } = parseProp(handlerProp);\n      this._targetEventStore.add(target, device, '', props[handlerProp], {\n        capture,\n        passive\n      });\n    }\n  }\n}\nfunction setupGesture(ctrl, gestureKey) {\n  ctrl.gestures.add(gestureKey);\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\n}\nfunction resolveGestures(ctrl, internalHandlers) {\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\n}\nconst bindToProps = (props, eventOptions, withPassiveOption) => (device, action, handler, options = {}, isNative = false) => {\n  var _options$capture, _options$passive;\n  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;\n  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;\n  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\n  if (withPassiveOption && passive) handlerProp += 'Passive';\n  props[handlerProp] = props[handlerProp] || [];\n  props[handlerProp].push(handler);\n};\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\nfunction sortHandlers(_handlers) {\n  const native = {};\n  const handlers = {};\n  const actions = new Set();\n  for (let key in _handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handlers[key] = _handlers[key];\n    } else {\n      native[key] = _handlers[key];\n    }\n  }\n  return [handlers, native, actions];\n}\nfunction registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {\n  if (!actions.has(handlerKey)) return;\n  if (!EngineMap.has(key)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(`[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`);\n    }\n    return;\n  }\n  const startKey = handlerKey + 'Start';\n  const endKey = handlerKey + 'End';\n  const fn = state => {\n    let memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n  internalHandlers[key] = fn;\n  config[key] = config[key] || {};\n}\nfunction parseMergedHandlers(mergedHandlers, mergedConfig) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\n  const internalHandlers = {};\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\n  return {\n    handlers: internalHandlers,\n    config: mergedConfig,\n    nativeHandlers\n  };\n}\n\nexport { Controller, parseMergedHandlers };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { useThree, useFrame, context as context$1 } from '@react-three/fiber';\nimport { easing } from 'maath';\n\nconst context = /* @__PURE__ */React.createContext(null);\nfunction useScroll() {\n  return React.useContext(context);\n}\nfunction ScrollControls({\n  eps = 0.00001,\n  enabled = true,\n  infinite,\n  horizontal,\n  pages = 1,\n  distance = 1,\n  damping = 0.25,\n  maxSpeed = Infinity,\n  style = {},\n  children\n}) {\n  const {\n    get,\n    setEvents,\n    gl,\n    size,\n    invalidate,\n    events\n  } = useThree();\n  const [el] = React.useState(() => document.createElement('div'));\n  const [fill] = React.useState(() => document.createElement('div'));\n  const [fixed] = React.useState(() => document.createElement('div'));\n  const target = gl.domElement.parentNode;\n  const scroll = React.useRef(0);\n  const state = React.useMemo(() => {\n    const state = {\n      el,\n      eps,\n      fill,\n      fixed,\n      horizontal,\n      damping,\n      offset: 0,\n      delta: 0,\n      scroll,\n      pages,\n      // 0-1 for a range between from -> from + distance\n      range(from, distance, margin = 0) {\n        const start = from - margin;\n        const end = start + distance + margin * 2;\n        return this.offset < start ? 0 : this.offset > end ? 1 : (this.offset - start) / (end - start);\n      },\n      // 0-1-0 for a range between from -> from + distance\n      curve(from, distance, margin = 0) {\n        return Math.sin(this.range(from, distance, margin) * Math.PI);\n      },\n      // true/false for a range between from -> from + distance\n      visible(from, distance, margin = 0) {\n        const start = from - margin;\n        const end = start + distance + margin * 2;\n        return this.offset >= start && this.offset <= end;\n      }\n    };\n    return state;\n  }, [eps, damping, horizontal, pages]);\n  React.useEffect(() => {\n    el.style.position = 'absolute';\n    el.style.width = '100%';\n    el.style.height = '100%';\n    el.style[horizontal ? 'overflowX' : 'overflowY'] = 'auto';\n    el.style[horizontal ? 'overflowY' : 'overflowX'] = 'hidden';\n    el.style.top = '0px';\n    el.style.left = '0px';\n    for (const key in style) {\n      el.style[key] = style[key];\n    }\n    fixed.style.position = 'sticky';\n    fixed.style.top = '0px';\n    fixed.style.left = '0px';\n    fixed.style.width = '100%';\n    fixed.style.height = '100%';\n    fixed.style.overflow = 'hidden';\n    el.appendChild(fixed);\n    fill.style.height = horizontal ? '100%' : `${pages * distance * 100}%`;\n    fill.style.width = horizontal ? `${pages * distance * 100}%` : '100%';\n    fill.style.pointerEvents = 'none';\n    el.appendChild(fill);\n    target.appendChild(el);\n\n    // Init scroll one pixel in to allow upward/leftward scroll\n    el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\n    const oldTarget = events.connected || gl.domElement;\n    requestAnimationFrame(() => events.connect == null ? void 0 : events.connect(el));\n    const oldCompute = get().events.compute;\n    setEvents({\n      compute(event, state) {\n        // we are using boundingClientRect because we could not rely on target.offsetTop as canvas could be positioned anywhere in dom\n        const {\n          left,\n          top\n        } = target.getBoundingClientRect();\n        const offsetX = event.clientX - left;\n        const offsetY = event.clientY - top;\n        state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n        state.raycaster.setFromCamera(state.pointer, state.camera);\n      }\n    });\n    return () => {\n      target.removeChild(el);\n      setEvents({\n        compute: oldCompute\n      });\n      events.connect == null || events.connect(oldTarget);\n    };\n  }, [pages, distance, horizontal, el, fill, fixed, target]);\n  React.useEffect(() => {\n    if (events.connected === el) {\n      const containerLength = size[horizontal ? 'width' : 'height'];\n      const scrollLength = el[horizontal ? 'scrollWidth' : 'scrollHeight'];\n      const scrollThreshold = scrollLength - containerLength;\n      let current = 0;\n      let disableScroll = true;\n      let firstRun = true;\n      const onScroll = () => {\n        // Prevent first scroll because it is indirectly caused by the one pixel offset\n        if (!enabled || firstRun) return;\n        invalidate();\n        current = el[horizontal ? 'scrollLeft' : 'scrollTop'];\n        scroll.current = current / scrollThreshold;\n        if (infinite) {\n          if (!disableScroll) {\n            if (current >= scrollThreshold) {\n              const damp = 1 - state.offset;\n              el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\n              scroll.current = state.offset = -damp;\n              disableScroll = true;\n            } else if (current <= 0) {\n              const damp = 1 + state.offset;\n              el[horizontal ? 'scrollLeft' : 'scrollTop'] = scrollLength;\n              scroll.current = state.offset = damp;\n              disableScroll = true;\n            }\n          }\n          if (disableScroll) setTimeout(() => disableScroll = false, 40);\n        }\n      };\n      el.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n      requestAnimationFrame(() => firstRun = false);\n      const onWheel = e => el.scrollLeft += e.deltaY / 2;\n      if (horizontal) el.addEventListener('wheel', onWheel, {\n        passive: true\n      });\n      return () => {\n        el.removeEventListener('scroll', onScroll);\n        if (horizontal) el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [el, events, size, infinite, state, invalidate, horizontal, enabled]);\n  let last = 0;\n  useFrame((_, delta) => {\n    last = state.offset;\n    easing.damp(state, 'offset', scroll.current, damping, delta, maxSpeed, undefined, eps);\n    easing.damp(state, 'delta', Math.abs(last - state.offset), damping, delta, maxSpeed, undefined, eps);\n    if (state.delta > eps) invalidate();\n  });\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, children);\n}\nconst ScrollCanvas = /* @__PURE__ */React.forwardRef(({\n  children\n}, ref) => {\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const state = useScroll();\n  const {\n    width,\n    height\n  } = useThree(state => state.viewport);\n  useFrame(() => {\n    group.current.position.x = state.horizontal ? -width * (state.pages - 1) * state.offset : 0;\n    group.current.position.y = state.horizontal ? 0 : height * (state.pages - 1) * state.offset;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: group\n  }, children);\n});\nconst ScrollHtml = /*#__PURE__*/React.forwardRef(({\n  children,\n  style,\n  ...props\n}, ref) => {\n  const state = useScroll();\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const fiberState = React.useContext(context$1);\n  const root = React.useMemo(() => ReactDOM.createRoot(state.fixed), [state.fixed]);\n  useFrame(() => {\n    if (state.delta > state.eps) {\n      group.current.style.transform = `translate3d(${state.horizontal ? -width * (state.pages - 1) * state.offset : 0}px,${state.horizontal ? 0 : height * (state.pages - 1) * -state.offset}px,0)`;\n    }\n  });\n  root.render( /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: group,\n    style: {\n      ...style,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      willChange: 'transform'\n    }\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(context$1.Provider, {\n    value: fiberState\n  }, children))));\n  return null;\n});\nconst Scroll = /* @__PURE__ */React.forwardRef(({\n  html,\n  ...props\n}, ref) => {\n  const El = html ? ScrollHtml : ScrollCanvas;\n  return /*#__PURE__*/React.createElement(El, _extends({\n    ref: ref\n  }, props));\n});\n\nexport { Scroll, ScrollControls, useScroll };\n", "function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nexport { _objectSpread2 as _, _defineProperty as a };\n", "function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { _setPrototypeOf as _, _isNativeReflectConstruct as a };\n", "import { Matrix3 } from 'three';\n\n/**\n *\n * @param terms\n *\n * | a b |\n * | c d |\n *\n * @returns {number} determinant\n */\n\nfunction determinant2() {\n  for (var _len = arguments.length, terms = new Array(_len), _key = 0; _key < _len; _key++) {\n    terms[_key] = arguments[_key];\n  }\n\n  var a = terms[0],\n      b = terms[1],\n      c = terms[2],\n      d = terms[3];\n  return a * d - b * c;\n}\n/**\n *\n * @param terms\n *\n * | a b c |\n * | d e f |\n * | g h i |\n *\n * @returns {number} determinant\n */\n\nfunction determinant3() {\n  for (var _len2 = arguments.length, terms = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    terms[_key2] = arguments[_key2];\n  }\n\n  var a = terms[0],\n      b = terms[1],\n      c = terms[2],\n      d = terms[3],\n      e = terms[4],\n      f = terms[5],\n      g = terms[6],\n      h = terms[7],\n      i = terms[8];\n  return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h;\n}\n/**\n *\n * @param terms\n *\n * | a b c g |\n * | h i j k |\n * | l m n o |\n *\n * @returns {number} determinant\n */\n\nfunction determinant4() {\n  for (var _len3 = arguments.length, terms = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    terms[_key3] = arguments[_key3];\n  }\n\n  terms[0];\n      terms[1];\n      terms[2];\n      terms[3];\n      terms[4];\n      terms[5];\n      terms[6];\n      terms[7];\n      terms[8];\n      terms[9];\n      terms[10];\n      terms[11];\n      terms[12];\n      terms[13];\n      terms[14]; // TODO\n}\n/**\n *\n * Get the determinant of matrix m without row r and col c\n *\n * @param {matrix} m Starter matrix\n * @param r row to remove\n * @param c col to remove\n *\n *     | a b c |\n * m = | d e f |\n *     | g h i |\n *\n * getMinor(m, 1, 1) would result in this determinant\n *\n * | a c |\n * | g i |\n *\n * @returns {number} determinant\n */\n\nfunction getMinor(matrix, r, c) {\n  var _matrixTranspose = matrix.clone().transpose();\n\n  var x = [];\n  var l = _matrixTranspose.elements.length;\n  var n = Math.sqrt(l);\n\n  for (var i = 0; i < l; i++) {\n    var element = _matrixTranspose.elements[i];\n    var row = Math.floor(i / n);\n    var col = i % n;\n\n    if (row !== r - 1 && col !== c - 1) {\n      x.push(element);\n    }\n  }\n\n  return determinant3.apply(void 0, x);\n}\n/**\n *\n */\n\nfunction matrixSum3(m1, m2) {\n  var sum = [];\n  var m1Array = m1.toArray();\n  var m2Array = m2.toArray();\n\n  for (var i = 0; i < m1Array.length; i++) {\n    sum[i] = m1Array[i] + m2Array[i];\n  }\n\n  return new Matrix3().fromArray(sum);\n}\n\nvar matrix = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  determinant2: determinant2,\n  determinant3: determinant3,\n  determinant4: determinant4,\n  getMinor: getMinor,\n  matrixSum3: matrixSum3\n});\n\nexport { matrixSum3 as a, determinant2 as b, determinant4 as c, determinant3 as d, getMinor as g, matrix as m };\n", "import { a as _isNativeReflectConstruct, _ as _setPrototypeOf } from './isNativeReflectConstruct-5594d075.esm.js';\nimport { Vector2, Matrix4 } from 'three';\nimport { d as determinant3, g as getMinor } from './matrix-baa530bf.esm.js';\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\n/**\n *\n * @param point\n *\n * @param triangle\n *\n * @returns {boolean} true if the point is in the triangle\n *\n * TODO: Find explainer\n */\nfunction isPointInTriangle(point, triangle) {\n  var _triangle$ = _slicedToArray(triangle[0], 2),\n      ax = _triangle$[0],\n      ay = _triangle$[1];\n\n  var _triangle$2 = _slicedToArray(triangle[1], 2),\n      bx = _triangle$2[0],\n      by = _triangle$2[1];\n\n  var _triangle$3 = _slicedToArray(triangle[2], 2),\n      cx = _triangle$3[0],\n      cy = _triangle$3[1];\n\n  var _point = _slicedToArray(point, 2),\n      px = _point[0],\n      py = _point[1]; // TODO Sub with static calc\n\n\n  var matrix = new Matrix4(); // prettier-ignore\n\n  matrix.set(ax, ay, ax * ax + ay * ay, 1, bx, by, bx * bx + by * by, 1, cx, cy, cx * cx + cy * cy, 1, px, py, px * px + py * py, 1);\n  return matrix.determinant() <= 0;\n}\nfunction triangleDeterminant(triangle) {\n  var _triangle$4 = _slicedToArray(triangle[0], 2),\n      x1 = _triangle$4[0],\n      y1 = _triangle$4[1];\n\n  var _triangle$5 = _slicedToArray(triangle[1], 2),\n      x2 = _triangle$5[0],\n      y2 = _triangle$5[1];\n\n  var _triangle$6 = _slicedToArray(triangle[2], 2),\n      x3 = _triangle$6[0],\n      y3 = _triangle$6[1]; // prettier-ignore\n\n\n  return determinant3(x1, y1, 1, x2, y2, 1, x3, y3, 1);\n}\n/**\n * Uses triangle area determinant to check if 3 points are collinear.\n * If they are, they can't make a triangle, so the determinant will be 0!\n *\n *      0     1     2\n * ─────■─────■─────■\n *\n *\n * Fun fact, you can use this same determinant to check the order of the points in the triangle\n *\n * NOTE: Should this use a buffer instead? NOTE: Should this use a buffer instead? [x0, y0, x1, y1, x2, y2]?\n *\n */\n\nfunction arePointsCollinear(points) {\n  return triangleDeterminant(points) === 0;\n} // TODO This is the same principle as the prev function, find a way to make it have sense\n\nfunction isTriangleClockwise(triangle) {\n  return triangleDeterminant(triangle) < 0;\n}\n/**\n \nThe circumcircle is a circle touching all the vertices of a triangle or polygon.\n\n             ┌───┐             \n             │ B │             \n             └───┘             \n           .───●───.           \n        ,─'   ╱ ╲   '─.        \n      ,'     ╱   ╲     `.      \n     ╱      ╱     ╲      ╲     \n    ;      ╱       ╲      :    \n    │     ╱         ╲     │    \n    │    ╱           ╲    │    \n    :   ╱             ╲   ;    \n     ╲ ╱               ╲ ╱     \n┌───┐ ●─────────────────● ┌───┐\n│ A │  `.             ,'  │ C │\n└───┘    '─.       ,─'    └───┘\n            `─────'                         \n */\n\n/**\n *\n * @param triangle\n *\n * @returns {number} circumcircle\n */\n// https://math.stackexchange.com/a/1460096\n\nfunction getCircumcircle(triangle) {\n  // TS-TODO the next few lines are ignored because the types aren't current to the change in vectors (that can now be iterated)\n  // @ts-ignore\n  var _triangle$7 = _slicedToArray(triangle[0], 2),\n      ax = _triangle$7[0],\n      ay = _triangle$7[1]; // @ts-ignore\n\n\n  var _triangle$8 = _slicedToArray(triangle[1], 2),\n      bx = _triangle$8[0],\n      by = _triangle$8[1]; // @ts-ignore\n\n\n  var _triangle$9 = _slicedToArray(triangle[2], 2),\n      cx = _triangle$9[0],\n      cy = _triangle$9[1];\n\n  if (arePointsCollinear(triangle)) return null; // points are collinear\n\n  var m = new Matrix4(); // prettier-ignore\n\n  m.set(1, 1, 1, 1, ax * ax + ay * ay, ax, ay, 1, bx * bx + by * by, bx, by, 1, cx * cx + cy * cy, cx, cy, 1);\n  var m11 = getMinor(m, 1, 1);\n  var m13 = getMinor(m, 1, 3);\n  var m12 = getMinor(m, 1, 2);\n  var m14 = getMinor(m, 1, 4);\n  var x0 = 0.5 * (m12 / m11);\n  var y0 = 0.5 * (m13 / m11);\n  var r2 = x0 * x0 + y0 * y0 + m14 / m11;\n  return {\n    x: Math.abs(x0) === 0 ? 0 : x0,\n    y: Math.abs(y0) === 0 ? 0 : -y0,\n    r: Math.sqrt(r2)\n  };\n} // https://stackoverflow.com/questions/39984709/how-can-i-check-wether-a-point-is-inside-the-circumcircle-of-3-points\n\nfunction isPointInCircumcircle(point, triangle) {\n  var _ref = Array.isArray(triangle[0]) ? triangle[0] : triangle[0].toArray(),\n      _ref2 = _slicedToArray(_ref, 2),\n      ax = _ref2[0],\n      ay = _ref2[1];\n\n  var _ref3 = Array.isArray(triangle[1]) ? triangle[1] : triangle[1].toArray(),\n      _ref4 = _slicedToArray(_ref3, 2),\n      bx = _ref4[0],\n      by = _ref4[1];\n\n  var _ref5 = Array.isArray(triangle[2]) ? triangle[2] : triangle[2].toArray(),\n      _ref6 = _slicedToArray(_ref5, 2),\n      cx = _ref6[0],\n      cy = _ref6[1];\n\n  var _point2 = _slicedToArray(point, 2),\n      px = _point2[0],\n      py = _point2[1];\n\n  if (arePointsCollinear(triangle)) throw new Error(\"Collinear points don't form a triangle\");\n  /**\n          | ax-px, ay-py, (ax-px)² + (ay-py)² |\n    det = | bx-px, by-py, (bx-px)² + (by-py)² |\n          | cx-px, cy-py, (cx-px)² + (cy-py)² |\n  */\n\n  var x1mpx = ax - px;\n  var aympy = ay - py;\n  var bxmpx = bx - px;\n  var bympy = by - py;\n  var cxmpx = cx - px;\n  var cympy = cy - py; // prettier-ignore\n\n  var d = determinant3(x1mpx, aympy, x1mpx * x1mpx + aympy * aympy, bxmpx, bympy, bxmpx * bxmpx + bympy * bympy, cxmpx, cympy, cxmpx * cxmpx + cympy * cympy); // if d is 0, the point is on C\n\n  if (d === 0) {\n    return true;\n  }\n\n  return !isTriangleClockwise(triangle) ? d > 0 : d < 0;\n} // From https://algorithmtutor.com/Computational-Geometry/Determining-if-two-consecutive-segments-turn-left-or-right/\n\nvar mv1 = new Vector2();\nvar mv2 = new Vector2();\n/**\n \n     ╱      ╲     \n    ╱        ╲    \n   ▕          ▏   \n                  \n right      left  \n\n * NOTE: Should this use a buffer instead? [x0, y0, x1, y1]?\n */\n\nfunction doThreePointsMakeARight(points) {\n  var _points$map = points.map(function (p) {\n    if (Array.isArray(p)) {\n      return _construct(Vector2, _toConsumableArray(p));\n    }\n\n    return p;\n  }),\n      _points$map2 = _slicedToArray(_points$map, 3),\n      p1 = _points$map2[0],\n      p2 = _points$map2[1],\n      p3 = _points$map2[2];\n\n  if (arePointsCollinear(points)) return false; // @ts-ignore\n\n  var p2p1 = mv1.subVectors(p2, p1); // @ts-ignore\n\n  var p3p1 = mv2.subVectors(p3, p1);\n  var cross = p3p1.cross(p2p1);\n  return cross > 0;\n}\n\nvar triangle = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isPointInTriangle: isPointInTriangle,\n  triangleDeterminant: triangleDeterminant,\n  arePointsCollinear: arePointsCollinear,\n  isTriangleClockwise: isTriangleClockwise,\n  getCircumcircle: getCircumcircle,\n  isPointInCircumcircle: isPointInCircumcircle,\n  doThreePointsMakeARight: doThreePointsMakeARight\n});\n\nexport { _slicedToArray as _, _toConsumableArray as a, triangleDeterminant as b, arePointsCollinear as c, doThreePointsMakeARight as d, isTriangleClockwise as e, isPointInCircumcircle as f, getCircumcircle as g, isPointInTriangle as i, triangle as t };\n", "import { d as doThreePointsMakeARight, a as _toConsumableArray, _ as _slicedToArray } from './triangle-b62b9067.esm.js';\nimport { Vector3, Matrix3 } from 'three';\nimport { a as matrixSum3 } from './matrix-baa530bf.esm.js';\n\n/**\n * Clamps a value between a range.\n */\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n} // Loops the value t, so that it is never larger than length and never smaller than 0.\n\nfunction repeat(t, length) {\n  return clamp(t - Math.floor(t / length) * length, 0, length);\n} // Calculates the shortest difference between two given angles.\n\nfunction deltaAngle(current, target) {\n  var delta = repeat(target - current, Math.PI * 2);\n  if (delta > Math.PI) delta -= Math.PI * 2;\n  return delta;\n}\n/**\n * Converts degrees to radians.\n */\n\nfunction degToRad(degrees) {\n  return degrees / 180 * Math.PI;\n}\n/**\n * Converts radians to degrees.\n */\n\nfunction radToDeg(radians) {\n  return radians * 180 / Math.PI;\n} // adapted from https://gist.github.com/stephanbogner/a5f50548a06bec723dcb0991dcbb0856 by https://twitter.com/st_phan\n\nfunction fibonacciOnSphere(buffer, _ref) {\n  var _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 1 : _ref$radius;\n  var samples = buffer.length / 3;\n  var offset = 2 / samples;\n  var increment = Math.PI * (3 - 2.2360679775);\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    var y = i * offset - 1 + offset / 2;\n    var distance = Math.sqrt(1 - Math.pow(y, 2));\n    var phi = i % samples * increment;\n    var x = Math.cos(phi) * distance;\n    var z = Math.sin(phi) * distance;\n    buffer[i] = x * radius;\n    buffer[i + 1] = y * radius;\n    buffer[i + 2] = z * radius;\n  }\n} // @ts-ignore\n\nfunction vectorEquals(a, b) {\n  var eps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.EPSILON;\n  return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n}\n/**\n * Sorts vectors in lexicographic order, works with both v2 and v3\n *\n *  Use as:\n *  const sorted = arrayOfVectors.sort(lexicographicOrder)\n */\n// https://en.wikipedia.org/wiki/Lexicographic_order\n\nfunction lexicographic(a, b) {\n  if (a.x === b.x) {\n    // do a check to see if points is 3D,\n    // in which case add y eq check and sort by z\n    if (typeof a.z !== \"undefined\") {\n      if (a.y === b.y) {\n        return a.z - b.z;\n      }\n    }\n\n    return a.y - b.y;\n  }\n\n  return a.x - b.x;\n}\n/**\n * Convex Hull\n *\n * Returns an array of 2D Vectors representing the convex hull of a set of 2D Vectors\n */\n\n/**\n * Calculate the convex hull of a set of points\n */\n\nfunction convexHull(_points) {\n  var points = _points.sort(lexicographic); // put p1 and p2 in a list lUpper with p1 as the first point\n\n\n  var lUpper = [points[0], points[1]]; // for i <- 3 to n\n\n  for (var i = 2; i < points.length; i++) {\n    lUpper.push(points[i]); // while lUpper contains more than 2 points and the last three points in lUpper do not make a right turn\n\n    while (lUpper.length > 2 && doThreePointsMakeARight(_toConsumableArray(lUpper.slice(-3)))) {\n      // delete the middle of the last three points from lUpper\n      lUpper.splice(lUpper.length - 2, 1);\n    }\n  } // put pn and pn-1 in a list lLower with pn as the first point\n\n\n  var lLower = [points[points.length - 1], points[points.length - 2]]; // for (i <- n - 2 downto 1)\n\n  for (var _i = points.length - 3; _i >= 0; _i--) {\n    // append pi to lLower\n    lLower.push(points[_i]); // while lLower contains more than 2 points and the last three points in lLower do not make a right turn\n\n    while (lLower.length > 2 && doThreePointsMakeARight(_toConsumableArray(lLower.slice(-3)))) {\n      // delete the middle of the last three points from lLower\n      lLower.splice(lLower.length - 2, 1);\n    }\n  } // remove the first and last point from lLower to avoid duplication of the points where the upper and lower hull meet\n\n\n  lLower.splice(0, 1);\n  lLower.splice(lLower.length - 1, 1); // prettier-ignore\n\n  var c = [].concat(lUpper, lLower);\n  return c;\n}\nfunction remap(x, _ref2, _ref3) {\n  var _ref4 = _slicedToArray(_ref2, 2),\n      low1 = _ref4[0],\n      high1 = _ref4[1];\n\n  var _ref5 = _slicedToArray(_ref3, 2),\n      low2 = _ref5[0],\n      high2 = _ref5[1];\n\n  return low2 + (x - low1) * (high2 - low2) / (high1 - low1);\n}\n/**\n *\n * https://www.desmos.com/calculator/vsnmlaljdu\n *\n * Ease-in-out, goes to -Infinite before 0 and Infinite after 1\n *\n * @param t\n * @returns\n */\n\nfunction fade(t) {\n  return t * t * t * (t * (t * 6 - 15) + 10);\n}\n/**\n *\n * Returns the result of linearly interpolating between input A and input B by input T.\n *\n * @param v0\n * @param v1\n * @param t\n * @returns\n */\n\nfunction lerp(v0, v1, t) {\n  return v0 * (1 - t) + v1 * t;\n}\n/**\n *\n * Returns the linear parameter that produces the interpolant specified by input T within the range of input A to input B.\n *\n * @param v0\n * @param v1\n * @param t\n * @returns\n */\n\nfunction inverseLerp(v0, v1, t) {\n  return (t - v0) / (v1 - v0);\n}\n/**\n *\n */\n\nfunction normalize(x, y, z) {\n  var m = Math.sqrt(x * x + y * y + z * z);\n  return [x / m, y / m, z / m];\n}\n/**\n *\n */\n\nfunction pointOnCubeToPointOnSphere(x, y, z) {\n  var x2 = x * x;\n  var y2 = y * y;\n  var z2 = z * z;\n  var nx = x * Math.sqrt(1 - (y2 + z2) / 2 + y2 * z2 / 3);\n  var ny = y * Math.sqrt(1 - (z2 + x2) / 2 + z2 * x2 / 3);\n  var nz = z * Math.sqrt(1 - (x2 + y2) / 2 + x2 * y2 / 3);\n  return [nx, ny, nz];\n} // https://math.stackexchange.com/questions/180418/calculate-rotation-matrix-to-align-vector-a-to-vector-b-in-3d\n\n/**\n * Give two unit vectors a and b, returns the transformation matrix that rotates a onto b.\n *\n * */\n\nfunction rotateVectorOnVector(a, b) {\n  var v = new Vector3().crossVectors(a, b);\n  var c = a.dot(b);\n  var i = new Matrix3().identity(); //  skew-symmetric cross-product matrix of 𝑣 https://en.wikipedia.org/wiki/Skew-symmetric_matrix\n  // prettier-ignore\n\n  var vx = new Matrix3().set(0, -v.z, v.y, v.z, 0, -v.x, -v.y, v.x, 0);\n  var vxsquared = new Matrix3().multiplyMatrices(vx, vx).multiplyScalar(1 / (1 + c));\n\n  var _final = matrixSum3(matrixSum3(i, vx), vxsquared);\n\n  return _final;\n} // calculate latitude and longitude (in radians) from point on unit sphere\n\nfunction pointToCoordinate(x, y, z) {\n  var lat = Math.asin(y);\n  var lon = Math.atan2(x, -z);\n  return [lat, lon];\n} // calculate point on unit sphere given latitude and logitude in radians\n\nfunction coordinateToPoint(lat, lon) {\n  var y = Math.sin(lat);\n  var r = Math.cos(lat);\n  var x = Math.sin(lon) * r;\n  var z = -Math.cos(lon) * r;\n  return [x, y, z];\n}\n/**\n * Given a plane and a segment, return the intersection point if it exists or null it doesn't.\n */\n\nfunction planeSegmentIntersection(plane, segment) {\n  var _segment = _slicedToArray(segment, 2),\n      a = _segment[0],\n      b = _segment[1];\n\n  var matrix = rotateVectorOnVector(plane.normal, new Vector3(0, 1, 0));\n  var t = inverseLerp(a.clone().applyMatrix3(matrix).y, b.clone().applyMatrix3(matrix).y, 0);\n  return new Vector3().lerpVectors(a, b, t);\n}\n/**\n * Given a plane and a point, return the distance.\n */\n\nfunction pointToPlaneDistance(p, plane) {\n  var d = plane.normal.dot(p); // TODO\n\n  return d;\n}\nfunction getIndexFrom3D(coords, sides) {\n  var _coords = _slicedToArray(coords, 3),\n      ix = _coords[0],\n      iy = _coords[1],\n      iz = _coords[2];\n\n  var _sides = _slicedToArray(sides, 2),\n      rx = _sides[0],\n      ry = _sides[1];\n\n  return iz * rx * ry + iy * rx + ix;\n}\nfunction get3DFromIndex(index, size) {\n  var _size = _slicedToArray(size, 2),\n      rx = _size[0],\n      ry = _size[1];\n\n  var a = rx * ry;\n  var z = index / a;\n  var b = index - a * z;\n  var y = b / rx;\n  var x = b % rx;\n  return [x, y, z];\n}\nfunction getIndexFrom2D(coords, size) {\n  return coords[0] + size[0] * coords[1];\n}\nfunction get2DFromIndex(index, columns) {\n  var x = index % columns;\n  var y = Math.floor(index / columns);\n  return [x, y];\n}\n\nvar misc = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp,\n  repeat: repeat,\n  deltaAngle: deltaAngle,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  fibonacciOnSphere: fibonacciOnSphere,\n  vectorEquals: vectorEquals,\n  lexicographic: lexicographic,\n  convexHull: convexHull,\n  remap: remap,\n  fade: fade,\n  lerp: lerp,\n  inverseLerp: inverseLerp,\n  normalize: normalize,\n  pointOnCubeToPointOnSphere: pointOnCubeToPointOnSphere,\n  rotateVectorOnVector: rotateVectorOnVector,\n  pointToCoordinate: pointToCoordinate,\n  coordinateToPoint: coordinateToPoint,\n  planeSegmentIntersection: planeSegmentIntersection,\n  pointToPlaneDistance: pointToPlaneDistance,\n  getIndexFrom3D: getIndexFrom3D,\n  get3DFromIndex: get3DFromIndex,\n  getIndexFrom2D: getIndexFrom2D,\n  get2DFromIndex: get2DFromIndex\n});\n\nexport { degToRad as a, radToDeg as b, clamp as c, deltaAngle as d, fibonacciOnSphere as e, fade as f, lexicographic as g, convexHull as h, remap as i, inverseLerp as j, rotateVectorOnVector as k, lerp as l, misc as m, normalize as n, pointToCoordinate as o, pointOnCubeToPointOnSphere as p, coordinateToPoint as q, repeat as r, planeSegmentIntersection as s, pointToPlaneDistance as t, getIndexFrom3D as u, vectorEquals as v, get3DFromIndex as w, getIndexFrom2D as x, get2DFromIndex as y };\n", "/**\n *\n */\nfunction zero() {\n  return [0, 0];\n}\nfunction one() {\n  return [1, 1];\n}\nfunction add(a, b) {\n  return [a[0] + b[0], a[1] + b[1]];\n}\nfunction addValue(a, n) {\n  return [a[0] + n, a[1] + n];\n}\nfunction sub(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n}\nfunction subValue(a, n) {\n  return [a[0] - n, a[1] - n];\n}\nfunction scale(a, n) {\n  return [a[0] * n, a[1] * n];\n}\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Calculate the squared length of a vector.\n * Use this when comparing two vectors instead of length, as it's more efficient (no sqrt)\n */\n\nfunction lengthSqr(a) {\n  return a[0] * a[0] + a[1] * a[1];\n}\n/**\n * Calculate the length of a vector.\n * If you only need to compare lenghts, consider using the more efficient lengthSqr\n */\n\nfunction length(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1]);\n}\nfunction distance(a, b) {\n  return Math.sqrt((a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]));\n}\n\nvar vector2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  zero: zero,\n  one: one,\n  add: add,\n  addValue: addValue,\n  sub: sub,\n  subValue: subValue,\n  scale: scale,\n  dot: dot,\n  lengthSqr: lengthSqr,\n  length: length,\n  distance: distance\n});\n\nexport { add as a, addValue as b, subValue as c, scale as d, dot as e, length as f, distance as g, lengthSqr as l, one as o, sub as s, vector2 as v, zero as z };\n", "/**\n *\n */\nfunction zero() {\n  return [0, 0, 0];\n}\nfunction one() {\n  return [1, 1, 1];\n}\nfunction add(a, b) {\n  return [a[0] + b[0], a[1] + b[1], a[2] + b[2]];\n}\nfunction addValue(a, n) {\n  return [a[0] + n, a[1] + n, a[2] + n];\n}\nfunction sub(a, b) {\n  return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\n}\nfunction subValue(a, n) {\n  return [a[0] - n, a[1] - n, a[2] - n];\n}\nfunction scale(a, n) {\n  return [a[0] * n, a[1] * n, a[2] * n];\n}\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nfunction cross(a, b) {\n  var x = a[1] * b[2] - a[2] * b[1];\n  var y = a[2] * b[0] - a[0] * b[2];\n  var z = a[0] * b[1] - a[1] * b[0];\n  return [x, y, z];\n}\n/**\n * Calculate the squared length of a vector.\n * Use this when comparing two vectors instead of length, as it's more efficient (no sqrt)\n */\n\nfunction lengthSqr(a) {\n  return a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n}\n/**\n * Calculate the length of a vector.\n * If you only need to compare lenghts, consider using the more efficient lengthSqr\n */\n\nfunction length(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n}\nfunction distance(a, b) {\n  return Math.sqrt((a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]) + (a[2] - b[2]) * (a[2] - b[2]));\n}\n\nvar vector3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  zero: zero,\n  one: one,\n  add: add,\n  addValue: addValue,\n  sub: sub,\n  subValue: subValue,\n  scale: scale,\n  dot: dot,\n  cross: cross,\n  lengthSqr: lengthSqr,\n  length: length,\n  distance: distance\n});\n\nexport { add as a, addValue as b, subValue as c, scale as d, dot as e, cross as f, length as g, distance as h, lengthSqr as l, one as o, sub as s, vector3 as v, zero as z };\n", "import { _ as _objectSpread2 } from './objectSpread2-284232a6.esm.js';\nimport { _ as _slicedToArray } from './triangle-b62b9067.esm.js';\nimport { Quaternion, Vector3 } from 'three';\nimport { l as lerp$1 } from './misc-19a3ec46.esm.js';\nimport { z as zero, a as add$1 } from './vector2-d2bf51f1.esm.js';\nimport { a as add } from './vector3-0a088b7f.esm.js';\n\nfunction swizzle(buffer) {\n  var stride = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  var swizzle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"xyz\";\n  var o = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n\n  for (var _i = 0; _i < buffer.length; _i += stride) {\n    o.x = buffer[_i];\n    o.y = buffer[_i + 1];\n    o.z = buffer[_i + 2];\n\n    var _swizzle$split = swizzle.split(\"\"),\n        _swizzle$split2 = _slicedToArray(_swizzle$split, 3),\n        x = _swizzle$split2[0],\n        y = _swizzle$split2[1],\n        z = _swizzle$split2[2]; // TODO Fix this ugly type\n\n\n    buffer[_i] = o[x];\n    buffer[_i + 1] = o[y];\n\n    if (stride === 3) {\n      buffer[_i + 2] = o[z];\n    }\n  }\n\n  return buffer;\n}\n/**\n * @param buffer A stride 2 points buffer\n * @param valueGenerator A function that returns the value of the z axis at index i\n * @returns\n */\n\nfunction addAxis(buffer, size) {\n  var valueGenerator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n    return Math.random();\n  };\n  var newSize = size + 1;\n  var newBuffer = new Float32Array(buffer.length / size * newSize);\n\n  for (var _i2 = 0; _i2 < buffer.length; _i2 += size) {\n    var _j = _i2 / size * newSize;\n\n    newBuffer[_j] = buffer[_i2];\n    newBuffer[_j + 1] = buffer[_i2 + 1];\n\n    if (size === 2) {\n      newBuffer[_j + 2] = valueGenerator(_j);\n    }\n\n    if (size === 3) {\n      newBuffer[_j + 2] = buffer[_i2 + 2];\n      newBuffer[_j + 3] = valueGenerator(_j);\n    }\n  }\n\n  return newBuffer;\n}\n/**\n * Lerps bufferA and bufferB into final\n *\n * @param bufferA\n * @param bufferB\n * @param final\n * @param t\n */\n\nfunction lerp(bufferA, bufferB, _final, t) {\n  for (var _i3 = 0; _i3 < bufferA.length; _i3++) {\n    _final[_i3] = lerp$1(bufferA[_i3], bufferB[_i3], t);\n  }\n} // TODO add stride\n// TODO Fix types & vectors\n\n/**\n *\n * Translate all points in the passed buffer by the passed translactionVector.\n *\n * @param buffer\n * @param translationVector\n * @returns\n */\n\nfunction translate(buffer, translationVector) {\n  var stride = translationVector.length;\n\n  for (var _i4 = 0; _i4 < buffer.length; _i4 += stride) {\n    buffer[_i4] += translationVector[0];\n    buffer[_i4 + 1] += translationVector[1];\n    buffer[_i4 + 2] += translationVector[2];\n  }\n\n  return buffer;\n} // TODO add stride\n// TODO remove quaternion & vector3 dependencies\n\nfunction rotate(buffer, rotation) {\n  var defaultRotation = {\n    center: [0, 0, 0],\n    q: new Quaternion().identity()\n  };\n  var v = new Vector3();\n\n  var _defaultRotation$rota = _objectSpread2(_objectSpread2({}, defaultRotation), rotation),\n      q = _defaultRotation$rota.q,\n      center = _defaultRotation$rota.center;\n\n  for (var _i5 = 0; _i5 < buffer.length; _i5 += 3) {\n    v.set(buffer[_i5] - center[0], buffer[_i5 + 1] - center[1], buffer[_i5 + 2] - center[2]);\n    v.applyQuaternion(q);\n    buffer[_i5] = v.x + center[0];\n    buffer[_i5 + 1] = v.y + center[1];\n    buffer[_i5 + 2] = v.z + center[1];\n  }\n\n  return buffer;\n}\nfunction map(buffer, stride, callback) {\n  for (var _i6 = 0, _j2 = 0; _i6 < buffer.length; _i6 += stride, _j2++) {\n    if (stride === 3) {\n      var res = callback([buffer[_i6], buffer[_i6 + 1], buffer[_i6 + 2]], _j2);\n      buffer.set(res, _i6);\n    } else {\n      buffer.set(callback([buffer[_i6], buffer[_i6 + 1]], _j2), _i6);\n    }\n  }\n\n  return buffer;\n}\n/**\n * Reduces passed buffer\n */\n\nfunction reduce(b, stride, callback, acc) {\n  for (var _i7 = 0, _j3 = 0; _i7 < b.length; _i7 += stride, _j3++) {\n    if (stride === 2) {\n      acc = callback(acc, [b[_i7], b[_i7 + 1]], _j3);\n    } else {\n      acc = callback(acc, [b[_i7], b[_i7 + 1], b[_i7 + 2]], _j3);\n    }\n  }\n\n  return acc;\n}\nfunction expand(b, stride, opts) {\n  var defaultExpandOptions = {\n    center: [0, 0, 0]\n  };\n\n  var _defaultExpandOptions = _objectSpread2(_objectSpread2({}, defaultExpandOptions), opts),\n      center = _defaultExpandOptions.center,\n      distance = _defaultExpandOptions.distance;\n\n  for (var _i8 = 0; _i8 < b.length; _i8 += stride) {\n    /**\n     * 1. translate to origin (subtract the scaling center)\n     * 2. scale by the correct amount (multiply by a constant)\n     * 2. translate from origin (add the scaling center)\n     */\n    b[_i8] = (b[_i8] - center[0]) * (1 + distance) + center[0];\n    b[_i8 + 1] = (b[_i8 + 1] - center[1]) * (1 + distance) + center[1];\n\n    if (stride === 3) {\n      b[_i8 + 2] = (b[_i8 + 2] - center[1]) * (1 + distance) + center[2];\n    }\n  }\n\n  return b;\n}\nfunction center(myBuffer, stride) {\n  return reduce(myBuffer, stride, function (acc, point) {\n    if (stride === 3) {\n      // some type hacking is necessary to avoid type errors going from [n, n] => [n, n, n]\n      // but it's not an actual problem, as this path would always get a v3\n      acc = add(acc, point);\n    } else {\n      acc = add$1(acc, point);\n    }\n\n    return acc;\n  }, zero());\n}\nfunction sort(myBuffer, stride, callback) {\n  // 1. make an array of the correct size\n  var indices = Int16Array.from({\n    length: myBuffer.length / stride\n  }, function (_, i) {\n    return i;\n  }); // 2. sort the indices array\n\n  indices.sort(function (a, b) {\n    var pa = myBuffer.slice(a * stride, a * stride + stride);\n    var pb = myBuffer.slice(b * stride, b * stride + stride);\n    return callback(pa, pb);\n  }); // 3. make a copy of the original array to fetch indices from\n\n  var prevBuffer = myBuffer.slice(0); // 4. mutate the passed array\n\n  for (var _i9 = 0; _i9 < indices.length; _i9++) {\n    var _j4 = indices[_i9];\n    myBuffer.set(prevBuffer.slice(_j4 * stride, _j4 * stride + stride), _i9 * 3);\n  }\n\n  return myBuffer;\n}\n\nvar buffer = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  swizzle: swizzle,\n  addAxis: addAxis,\n  lerp: lerp,\n  translate: translate,\n  rotate: rotate,\n  map: map,\n  reduce: reduce,\n  expand: expand,\n  center: center,\n  sort: sort\n});\n\nexport { addAxis as a, buffer as b, reduce as c, center as d, expand as e, sort as f, lerp as l, map as m, rotate as r, swizzle as s, translate as t };\n", "function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nexport { _classCallCheck as _ };\n", "import { a as _defineProperty, _ as _objectSpread2 } from './objectSpread2-284232a6.esm.js';\nimport { _ as _classCallCheck } from './classCallCheck-9098b006.esm.js';\nimport { l as lerp, f as fade } from './misc-19a3ec46.esm.js';\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\nvar Grad = function Grad(x, y, z) {\n  var _this = this;\n\n  _classCallCheck(this, Grad);\n\n  _defineProperty(this, \"dot2\", function (x, y) {\n    return _this.x * x + _this.y * y;\n  });\n\n  _defineProperty(this, \"dot3\", function (x, y, z) {\n    return _this.x * x + _this.y * y + _this.z * z;\n  });\n\n  this.x = x;\n  this.y = y;\n  this.z = z;\n};\n\nvar grad3 = [new Grad(1, 1, 0), new Grad(-1, 1, 0), new Grad(1, -1, 0), new Grad(-1, -1, 0), new Grad(1, 0, 1), new Grad(-1, 0, 1), new Grad(1, 0, -1), new Grad(-1, 0, -1), new Grad(0, 1, 1), new Grad(0, -1, 1), new Grad(0, 1, -1), new Grad(0, -1, -1)];\nvar p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180]; // To remove the need for index wrapping, double the permutation table length\n\nvar perm = new Array(512);\nvar gradP = new Array(512); // This isn't a very good seeding function, but it works ok. It supports 2^16\n// different seed values. Write something better if you need more seeds.\n\nvar seed = function seed(_seed) {\n  if (_seed > 0 && _seed < 1) {\n    // Scale the seed out\n    _seed *= 65536;\n  }\n\n  _seed = Math.floor(_seed);\n\n  if (_seed < 256) {\n    _seed |= _seed << 8;\n  }\n\n  for (var i = 0; i < 256; i++) {\n    var v;\n\n    if (i & 1) {\n      v = p[i] ^ _seed & 255;\n    } else {\n      v = p[i] ^ _seed >> 8 & 255;\n    }\n\n    perm[i] = perm[i + 256] = v;\n    gradP[i] = gradP[i + 256] = grad3[v % 12];\n  }\n};\nseed(0);\n/*\n  for(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n  }*/\n// Skewing and unskewing factors for 2, 3, and 4 dimensions\n\nvar F2 = 0.5 * (Math.sqrt(3) - 1);\nvar G2 = (3 - Math.sqrt(3)) / 6;\nvar F3 = 1 / 3;\nvar G3 = 1 / 6; // 2D simplex noise\n\nvar simplex2 = function simplex2(xin, yin) {\n  var n0, n1, n2; // Noise contributions from the three corners\n  // Skew the input space to determine which simplex cell we're in\n\n  var s = (xin + yin) * F2; // Hairy factor for 2D\n\n  var i = Math.floor(xin + s);\n  var j = Math.floor(yin + s);\n  var t = (i + j) * G2;\n  var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n\n  var y0 = yin - j + t; // For the 2D case, the simplex shape is an equilateral triangle.\n  // Determine which simplex we are in.\n\n  var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\n  if (x0 > y0) {\n    // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n    i1 = 1;\n    j1 = 0;\n  } else {\n    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n    i1 = 0;\n    j1 = 1;\n  } // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n  // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n  // c = (3-sqrt(3))/6\n\n\n  var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\n  var y1 = y0 - j1 + G2;\n  var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n\n  var y2 = y0 - 1 + 2 * G2; // Work out the hashed gradient indices of the three simplex corners\n\n  i &= 255;\n  j &= 255;\n  var gi0 = gradP[i + perm[j]];\n  var gi1 = gradP[i + i1 + perm[j + j1]];\n  var gi2 = gradP[i + 1 + perm[j + 1]]; // Calculate the contribution from the three corners\n\n  var t0 = 0.5 - x0 * x0 - y0 * y0;\n\n  if (t0 < 0) {\n    n0 = 0;\n  } else {\n    t0 *= t0;\n    n0 = t0 * t0 * gi0.dot2(x0, y0); // (x,y) of grad3 used for 2D gradient\n  }\n\n  var t1 = 0.5 - x1 * x1 - y1 * y1;\n\n  if (t1 < 0) {\n    n1 = 0;\n  } else {\n    t1 *= t1;\n    n1 = t1 * t1 * gi1.dot2(x1, y1);\n  }\n\n  var t2 = 0.5 - x2 * x2 - y2 * y2;\n\n  if (t2 < 0) {\n    n2 = 0;\n  } else {\n    t2 *= t2;\n    n2 = t2 * t2 * gi2.dot2(x2, y2);\n  } // Add contributions from each corner to get the final noise value.\n  // The result is scaled to return values in the interval [-1,1].\n\n\n  return 70 * (n0 + n1 + n2);\n}; // 3D simplex noise\n\nvar simplex3 = function simplex3(xin, yin, zin) {\n  var n0, n1, n2, n3; // Noise contributions from the four corners\n  // Skew the input space to determine which simplex cell we're in\n\n  var s = (xin + yin + zin) * F3; // Hairy factor for 2D\n\n  var i = Math.floor(xin + s);\n  var j = Math.floor(yin + s);\n  var k = Math.floor(zin + s);\n  var t = (i + j + k) * G3;\n  var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n\n  var y0 = yin - j + t;\n  var z0 = zin - k + t; // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n  // Determine which simplex we are in.\n\n  var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n\n  var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n\n  if (x0 >= y0) {\n    if (y0 >= z0) {\n      i1 = 1;\n      j1 = 0;\n      k1 = 0;\n      i2 = 1;\n      j2 = 1;\n      k2 = 0;\n    } else if (x0 >= z0) {\n      i1 = 1;\n      j1 = 0;\n      k1 = 0;\n      i2 = 1;\n      j2 = 0;\n      k2 = 1;\n    } else {\n      i1 = 0;\n      j1 = 0;\n      k1 = 1;\n      i2 = 1;\n      j2 = 0;\n      k2 = 1;\n    }\n  } else {\n    if (y0 < z0) {\n      i1 = 0;\n      j1 = 0;\n      k1 = 1;\n      i2 = 0;\n      j2 = 1;\n      k2 = 1;\n    } else if (x0 < z0) {\n      i1 = 0;\n      j1 = 1;\n      k1 = 0;\n      i2 = 0;\n      j2 = 1;\n      k2 = 1;\n    } else {\n      i1 = 0;\n      j1 = 1;\n      k1 = 0;\n      i2 = 1;\n      j2 = 1;\n      k2 = 0;\n    }\n  } // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n  // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n  // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n  // c = 1/6.\n\n\n  var x1 = x0 - i1 + G3; // Offsets for second corner\n\n  var y1 = y0 - j1 + G3;\n  var z1 = z0 - k1 + G3;\n  var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n\n  var y2 = y0 - j2 + 2 * G3;\n  var z2 = z0 - k2 + 2 * G3;\n  var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n\n  var y3 = y0 - 1 + 3 * G3;\n  var z3 = z0 - 1 + 3 * G3; // Work out the hashed gradient indices of the four simplex corners\n\n  i &= 255;\n  j &= 255;\n  k &= 255;\n  var gi0 = gradP[i + perm[j + perm[k]]];\n  var gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]];\n  var gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]];\n  var gi3 = gradP[i + 1 + perm[j + 1 + perm[k + 1]]]; // Calculate the contribution from the four corners\n\n  var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n\n  if (t0 < 0) {\n    n0 = 0;\n  } else {\n    t0 *= t0;\n    n0 = t0 * t0 * gi0.dot3(x0, y0, z0); // (x,y) of grad3 used for 2D gradient\n  }\n\n  var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n\n  if (t1 < 0) {\n    n1 = 0;\n  } else {\n    t1 *= t1;\n    n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n  }\n\n  var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n\n  if (t2 < 0) {\n    n2 = 0;\n  } else {\n    t2 *= t2;\n    n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n  }\n\n  var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n\n  if (t3 < 0) {\n    n3 = 0;\n  } else {\n    t3 *= t3;\n    n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n  } // Add contributions from each corner to get the final noise value.\n  // The result is scaled to return values in the interval [-1,1].\n\n\n  return 32 * (n0 + n1 + n2 + n3);\n}; // ##### Perlin noise stuff\n// 2D Perlin Noise\n\nvar perlin2 = function perlin2(x, y) {\n  // Find unit grid cell containing point\n  var X = Math.floor(x),\n      Y = Math.floor(y); // Get relative xy coordinates of point within that cell\n\n  x = x - X;\n  y = y - Y; // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n\n  X = X & 255;\n  Y = Y & 255; // Calculate noise contributions from each of the four corners\n\n  var n00 = gradP[X + perm[Y]].dot2(x, y);\n  var n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1);\n  var n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\n  var n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1); // Compute the fade curve value for x\n\n  var u = fade(x); // Interpolate the four results\n\n  return lerp(lerp(n00, n10, u), lerp(n01, n11, u), fade(y));\n}; // 3D Perlin Noise\n\nvar perlin3 = function perlin3(x, y, z) {\n  // Find unit grid cell containing point\n  var X = Math.floor(x),\n      Y = Math.floor(y),\n      Z = Math.floor(z); // Get relative xyz coordinates of point within that cell\n\n  x = x - X;\n  y = y - Y;\n  z = z - Z; // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n\n  X = X & 255;\n  Y = Y & 255;\n  Z = Z & 255; // Calculate noise contributions from each of the eight corners\n\n  var n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z);\n  var n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1);\n  var n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z);\n  var n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1);\n  var n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z);\n  var n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1);\n  var n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z);\n  var n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1); // Compute the fade curve value for x, y, z\n\n  var u = fade(x);\n  var v = fade(y);\n  var w = fade(z); // Interpolate\n\n  return lerp(lerp(lerp(n000, n100, u), lerp(n001, n101, u), w), lerp(lerp(n010, n110, u), lerp(n011, n111, u), w), v);\n};\n\nvar noise = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  seed: seed,\n  simplex2: simplex2,\n  simplex3: simplex3,\n  perlin2: perlin2,\n  perlin3: perlin3\n});\n\nvar TAU = Math.PI * 2;\nvar FlashGen = /*#__PURE__*/function () {\n  function FlashGen(props) {\n    _classCallCheck(this, FlashGen);\n\n    _defineProperty(this, \"nextBurstTime\", 0);\n\n    _defineProperty(this, \"nextFlashEndTime\", 0);\n\n    _defineProperty(this, \"flashesDone\", 0);\n\n    _defineProperty(this, \"isFlashing\", false);\n\n    _defineProperty(this, \"currentCount\", 0);\n\n    _defineProperty(this, \"flashIntensity\", 0);\n\n    _defineProperty(this, \"isDecaying\", false);\n\n    _defineProperty(this, \"autoBurst\", true);\n\n    _defineProperty(this, \"decaySpeed\", 40);\n\n    _defineProperty(this, \"minInterval\", 5000);\n\n    _defineProperty(this, \"maxInterval\", 10000);\n\n    _defineProperty(this, \"minDuration\", 50);\n\n    _defineProperty(this, \"maxDuration\", 300);\n\n    _defineProperty(this, \"count\", 5);\n\n    Object.assign(this, props);\n  }\n\n  _createClass(FlashGen, [{\n    key: \"scheduleNextBurst\",\n    value: function scheduleNextBurst(currentTime) {\n      var burstInterval = Math.random() * (this.maxInterval - this.minInterval) + this.minInterval;\n      this.nextBurstTime = currentTime + burstInterval / 1000;\n      this.flashesDone = 0;\n      this.isFlashing = false;\n    }\n  }, {\n    key: \"burst\",\n    value: function burst() {\n      this.nextBurstTime = 0;\n      this.flashesDone = 0;\n      this.isFlashing = false;\n    }\n  }, {\n    key: \"update\",\n    value: function update(currentTime, delta) {\n      if (currentTime > this.nextBurstTime && this.currentCount === 0) {\n        this.currentCount = Math.floor(Math.random() * this.count) + 1;\n      }\n\n      if (this.flashesDone < this.currentCount && currentTime > this.nextBurstTime) {\n        if (!this.isFlashing) {\n          this.isFlashing = true;\n          this.flashIntensity = 1;\n          var flashDuration = Math.random() * (this.maxDuration - this.minDuration) + this.minDuration;\n          this.nextFlashEndTime = currentTime + flashDuration / 1000;\n        } else if (this.isFlashing && currentTime > this.nextFlashEndTime) {\n          this.isFlashing = false;\n          this.isDecaying = true;\n          this.flashesDone++;\n\n          if (this.flashesDone >= this.currentCount) {\n            this.currentCount = 0;\n            if (this.autoBurst) this.scheduleNextBurst(currentTime);\n          }\n        }\n      }\n\n      if (this.isDecaying) {\n        this.flashIntensity -= delta * this.decaySpeed;\n        this.flashIntensity = Math.max(0, Math.min(1, this.flashIntensity));\n\n        if (this.flashIntensity <= 0) {\n          this.isDecaying = false;\n          this.flashIntensity = 0;\n        }\n      }\n\n      return this.flashIntensity;\n    }\n  }]);\n\n  return FlashGen;\n}(); // Credits @kchapelier https://github.com/kchapelier/wavefunctioncollapse/blob/master/example/lcg.js#L22-L30\n\nfunction normalizeSeed(seed) {\n  if (typeof seed === \"number\") {\n    seed = Math.abs(seed);\n  } else if (typeof seed === \"string\") {\n    var string = seed;\n    seed = 0;\n\n    for (var i = 0; i < string.length; i++) {\n      seed = (seed + (i + 1) * (string.charCodeAt(i) % 96)) % 2147483647;\n    }\n  }\n\n  if (seed === 0) {\n    seed = 311;\n  }\n\n  return seed;\n}\n\nfunction lcgRandom(seed) {\n  var state = normalizeSeed(seed);\n  return function () {\n    var result = state * 48271 % 2147483647;\n    state = result;\n    return result / 2147483647;\n  };\n}\n\nvar Generator = function Generator(_seed) {\n  var _this = this;\n\n  _classCallCheck(this, Generator);\n\n  _defineProperty(this, \"seed\", 0);\n\n  _defineProperty(this, \"init\", function (seed) {\n    _this.seed = seed;\n    _this.value = lcgRandom(seed);\n  });\n\n  _defineProperty(this, \"value\", lcgRandom(this.seed));\n\n  this.init(_seed);\n};\nvar defaultGen = new Generator(Math.random());\n/***\n * [3D] Sphere\n */\n\nvar defaultSphere = {\n  radius: 1,\n  center: [0, 0, 0]\n}; // random on surface of sphere\n// - https://twitter.com/fermatslibrary/status/1430932503578226688\n// - https://mathworld.wolfram.com/SpherePointPicking.html\n\nfunction onSphere(buffer, sphere) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultSphere$sphere = _objectSpread2(_objectSpread2({}, defaultSphere), sphere),\n      radius = _defaultSphere$sphere.radius,\n      center = _defaultSphere$sphere.center;\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    var u = rng.value();\n    var v = rng.value();\n    var theta = Math.acos(2 * v - 1);\n    var phi = TAU * u;\n    buffer[i] = Math.sin(theta) * Math.cos(phi) * radius + center[0];\n    buffer[i + 1] = Math.sin(theta) * Math.sin(phi) * radius + center[1];\n    buffer[i + 2] = Math.cos(theta) * radius + center[2];\n  }\n\n  return buffer;\n} // from \"Another Method\" https://datagenetics.com/blog/january32020/index.html\n\nfunction inSphere(buffer, sphere) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultSphere$sphere2 = _objectSpread2(_objectSpread2({}, defaultSphere), sphere),\n      radius = _defaultSphere$sphere2.radius,\n      center = _defaultSphere$sphere2.center;\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    var u = Math.pow(rng.value(), 1 / 3);\n    var x = rng.value() * 2 - 1;\n    var y = rng.value() * 2 - 1;\n    var z = rng.value() * 2 - 1;\n    var mag = Math.sqrt(x * x + y * y + z * z);\n    x = u * x / mag;\n    y = u * y / mag;\n    z = u * z / mag;\n    buffer[i] = x * radius + center[0];\n    buffer[i + 1] = y * radius + center[1];\n    buffer[i + 2] = z * radius + center[2];\n  }\n\n  return buffer;\n}\n/***\n * [2D] Circle\n */\n\nvar defaultCircle = {\n  radius: 1,\n  center: [0, 0]\n}; // random circle https://stackoverflow.com/a/50746409\n\nfunction inCircle(buffer, circle) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultCircle$circle = _objectSpread2(_objectSpread2({}, defaultCircle), circle),\n      radius = _defaultCircle$circle.radius,\n      center = _defaultCircle$circle.center;\n\n  for (var i = 0; i < buffer.length; i += 2) {\n    var r = radius * Math.sqrt(rng.value());\n    var theta = rng.value() * TAU;\n    buffer[i] = Math.sin(theta) * r + center[0];\n    buffer[i + 1] = Math.cos(theta) * r + center[1];\n  }\n\n  return buffer;\n}\nfunction onCircle(buffer, circle) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultCircle$circle2 = _objectSpread2(_objectSpread2({}, defaultCircle), circle),\n      radius = _defaultCircle$circle2.radius,\n      center = _defaultCircle$circle2.center;\n\n  for (var i = 0; i < buffer.length; i += 2) {\n    var theta = rng.value() * TAU;\n    buffer[i] = Math.sin(theta) * radius + center[0];\n    buffer[i + 1] = Math.cos(theta) * radius + center[1];\n  }\n\n  return buffer;\n}\n/**\n * [2D] Plane\n */\n\nvar defaultRect = {\n  sides: 1,\n  center: [0, 0]\n};\nfunction inRect(buffer, rect) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultRect$rect = _objectSpread2(_objectSpread2({}, defaultRect), rect),\n      sides = _defaultRect$rect.sides,\n      center = _defaultRect$rect.center;\n\n  var sideX = typeof sides === \"number\" ? sides : sides[0];\n  var sideY = typeof sides === \"number\" ? sides : sides[1];\n\n  for (var i = 0; i < buffer.length; i += 2) {\n    buffer[i] = (rng.value() - 0.5) * sideX + center[0];\n    buffer[i + 1] = (rng.value() - 0.5) * sideY + center[1];\n  }\n\n  return buffer;\n}\nfunction onRect(buffer, rect) {\n  return buffer;\n}\n/***\n * [3D] Box\n */\n\nfunction inBox(buffer, box) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultBox$box = _objectSpread2(_objectSpread2({}, defaultBox), box),\n      sides = _defaultBox$box.sides,\n      center = _defaultBox$box.center;\n\n  var sideX = typeof sides === \"number\" ? sides : sides[0];\n  var sideY = typeof sides === \"number\" ? sides : sides[1];\n  var sideZ = typeof sides === \"number\" ? sides : sides[2];\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    buffer[i] = (rng.value() - 0.5) * sideX + center[0];\n    buffer[i + 1] = (rng.value() - 0.5) * sideY + center[1];\n    buffer[i + 2] = (rng.value() - 0.5) * sideZ + center[2];\n  }\n\n  return buffer;\n}\nvar defaultBox = {\n  sides: 1,\n  center: [0, 0, 0]\n};\nfunction onBox(buffer, box) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultBox$box2 = _objectSpread2(_objectSpread2({}, defaultBox), box),\n      sides = _defaultBox$box2.sides,\n      center = _defaultBox$box2.center;\n\n  var sideX = typeof sides === \"number\" ? sides : sides[0];\n  var sideY = typeof sides === \"number\" ? sides : sides[1];\n  var sideZ = typeof sides === \"number\" ? sides : sides[2];\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    buffer[i] = (rng.value() - 0.5) * sideX + center[0];\n    buffer[i + 1] = (rng.value() - 0.5) * sideY + center[1];\n    buffer[i + 2] = (rng.value() - 0.5) * sideZ + center[2];\n  }\n\n  return buffer;\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  FlashGen: FlashGen,\n  Generator: Generator,\n  onSphere: onSphere,\n  inSphere: inSphere,\n  inCircle: inCircle,\n  onCircle: onCircle,\n  inRect: inRect,\n  onRect: onRect,\n  inBox: inBox,\n  onBox: onBox,\n  noise: noise\n});\n\nexport { FlashGen as F, Generator as G, inSphere as a, inCircle as b, onCircle as c, inRect as d, onRect as e, inBox as f, onBox as g, index as i, noise as n, onSphere as o };\n", "import { a as _toConsumableArray } from './triangle-b62b9067.esm.js';\nimport { Color, Vector3, Quaternion, Matrix4, Vector2, Vector4, Euler, Spherical } from 'three';\nimport { d as deltaAngle } from './misc-19a3ec46.esm.js';\n\nvar rsqw = function rsqw(t) {\n  var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.01;\n  var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var f = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1 / (2 * Math.PI);\n  return a / Math.atan(1 / delta) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta);\n};\nvar exp = function exp(t) {\n  return 1 / (1 + t + 0.48 * t * t + 0.235 * t * t * t);\n};\nvar linear = function linear(t) {\n  return t;\n};\nvar sine = {\n  \"in\": function _in(x) {\n    return 1 - Math.cos(x * Math.PI / 2);\n  },\n  out: function out(x) {\n    return Math.sin(x * Math.PI / 2);\n  },\n  inOut: function inOut(x) {\n    return -(Math.cos(Math.PI * x) - 1) / 2;\n  }\n};\nvar cubic = {\n  \"in\": function _in(x) {\n    return x * x * x;\n  },\n  out: function out(x) {\n    return 1 - Math.pow(1 - x, 3);\n  },\n  inOut: function inOut(x) {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n  }\n};\nvar quint = {\n  \"in\": function _in(x) {\n    return x * x * x * x * x;\n  },\n  out: function out(x) {\n    return 1 - Math.pow(1 - x, 5);\n  },\n  inOut: function inOut(x) {\n    return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2;\n  }\n};\nvar circ = {\n  \"in\": function _in(x) {\n    return 1 - Math.sqrt(1 - Math.pow(x, 2));\n  },\n  out: function out(x) {\n    return Math.sqrt(1 - Math.pow(x - 1, 2));\n  },\n  inOut: function inOut(x) {\n    return x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n  }\n};\nvar quart = {\n  \"in\": function _in(t) {\n    return t * t * t * t;\n  },\n  out: function out(t) {\n    return 1 - --t * t * t * t;\n  },\n  inOut: function inOut(t) {\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n  }\n};\nvar expo = {\n  \"in\": function _in(x) {\n    return x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n  },\n  out: function out(x) {\n    return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n  },\n  inOut: function inOut(x) {\n    return x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2 : (2 - Math.pow(2, -20 * x + 10)) / 2;\n  }\n};\n/**\n * Damp, based on Game Programming Gems 4 Chapter 1.10\n *   Return value indicates whether the animation is still running.\n */\n\nfunction damp(\n/** The object */\ncurrent,\n/** The key to animate */\nprop,\n/** To goal value */\ntarget) {\n  var smoothTime = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.25;\n  var delta = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.01;\n  var maxSpeed = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Infinity;\n  var easing = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : exp;\n  var eps = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0.001;\n  var vel = \"velocity_\" + prop;\n  if (current.__damp === undefined) current.__damp = {};\n  if (current.__damp[vel] === undefined) current.__damp[vel] = 0;\n\n  if (Math.abs(current[prop] - target) <= eps) {\n    current[prop] = target;\n    return false;\n  }\n\n  smoothTime = Math.max(0.0001, smoothTime);\n  var omega = 2 / smoothTime;\n  var t = easing(omega * delta);\n  var change = current[prop] - target;\n  var originalTo = target; // Clamp maximum maxSpeed\n\n  var maxChange = maxSpeed * smoothTime;\n  change = Math.min(Math.max(change, -maxChange), maxChange);\n  target = current[prop] - change;\n  var temp = (current.__damp[vel] + omega * change) * delta;\n  current.__damp[vel] = (current.__damp[vel] - omega * temp) * t;\n  var output = target + (change + temp) * t; // Prevent overshooting\n\n  if (originalTo - current[prop] > 0.0 === output > originalTo) {\n    output = originalTo;\n    current.__damp[vel] = (output - originalTo) / delta;\n  }\n\n  current[prop] = output;\n  return true;\n}\n/**\n * DampLookAt\n */\n\nvar isCamera = function isCamera(v) {\n  return v && v.isCamera;\n};\n\nvar isLight = function isLight(v) {\n  return v && v.isLight;\n};\n\nvar vl3d = /*@__PURE__*/new Vector3();\n\nvar _q1 = /*@__PURE__*/new Quaternion();\n\nvar _q2 = /*@__PURE__*/new Quaternion();\n\nvar _m1 = /*@__PURE__*/new Matrix4();\n\nvar _position = /*@__PURE__*/new Vector3();\n\nfunction dampLookAt(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  // This method does not support objects having non-uniformly-scaled parent(s)\n  if (typeof target === \"number\") vl3d.setScalar(target);else if (Array.isArray(target)) vl3d.set(target[0], target[1], target[2]);else vl3d.copy(target);\n  var parent = current.parent;\n  current.updateWorldMatrix(true, false);\n\n  _position.setFromMatrixPosition(current.matrixWorld);\n\n  if (isCamera(current) || isLight(current)) _m1.lookAt(_position, vl3d, current.up);else _m1.lookAt(vl3d, _position, current.up);\n  dampQ(current.quaternion, _q2.setFromRotationMatrix(_m1), smoothTime, delta, maxSpeed, easing, eps);\n\n  if (parent) {\n    _m1.extractRotation(parent.matrixWorld);\n\n    _q1.setFromRotationMatrix(_m1);\n\n    dampQ(current.quaternion, _q2.copy(current.quaternion).premultiply(_q1.invert()), smoothTime, delta, maxSpeed, easing, eps);\n  }\n}\n/**\n * DampAngle, with a shortest-path\n */\n\nfunction dampAngle(current, prop, target, smoothTime, delta, maxSpeed, easing, eps) {\n  return damp(current, prop, current[prop] + deltaAngle(current[prop], target), smoothTime, delta, maxSpeed, easing, eps);\n}\n/**\n * Vector2D Damp\n */\n\nvar v2d = /*@__PURE__*/new Vector2();\nvar a2, b2;\nfunction damp2(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v2d.setScalar(target);else if (Array.isArray(target)) v2d.set(target[0], target[1]);else v2d.copy(target);\n  a2 = damp(current, \"x\", v2d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b2 = damp(current, \"y\", v2d.y, smoothTime, delta, maxSpeed, easing, eps);\n  return a2 || b2;\n}\n/**\n * Vector3D Damp\n */\n\nvar v3d = /*@__PURE__*/new Vector3();\nvar a3, b3, c3;\nfunction damp3(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v3d.setScalar(target);else if (Array.isArray(target)) v3d.set(target[0], target[1], target[2]);else v3d.copy(target);\n  a3 = damp(current, \"x\", v3d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b3 = damp(current, \"y\", v3d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c3 = damp(current, \"z\", v3d.z, smoothTime, delta, maxSpeed, easing, eps);\n  return a3 || b3 || c3;\n}\n/**\n * Vector4D Damp\n */\n\nvar v4d = /*@__PURE__*/new Vector4();\nvar a4, b4, c4, d4;\nfunction damp4(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v4d.setScalar(target);else if (Array.isArray(target)) v4d.set(target[0], target[1], target[2], target[3]);else v4d.copy(target);\n  a4 = damp(current, \"x\", v4d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b4 = damp(current, \"y\", v4d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c4 = damp(current, \"z\", v4d.z, smoothTime, delta, maxSpeed, easing, eps);\n  d4 = damp(current, \"w\", v4d.w, smoothTime, delta, maxSpeed, easing, eps);\n  return a4 || b4 || c4 || d4;\n}\n/**\n * Euler Damp\n */\n\nvar rot = /*@__PURE__*/new Euler();\nvar aE, bE, cE;\nfunction dampE(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) rot.set(target[0], target[1], target[2], target[3]);else rot.copy(target);\n  aE = dampAngle(current, \"x\", rot.x, smoothTime, delta, maxSpeed, easing, eps);\n  bE = dampAngle(current, \"y\", rot.y, smoothTime, delta, maxSpeed, easing, eps);\n  cE = dampAngle(current, \"z\", rot.z, smoothTime, delta, maxSpeed, easing, eps);\n  return aE || bE || cE;\n}\n/**\n * Color Damp\n */\n\nvar col = /*@__PURE__*/new Color();\nvar aC, bC, cC;\nfunction dampC(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (target instanceof Color) col.copy(target);else if (Array.isArray(target)) col.setRGB(target[0], target[1], target[2]);else col.set(target);\n  aC = damp(current, \"r\", col.r, smoothTime, delta, maxSpeed, easing, eps);\n  bC = damp(current, \"g\", col.g, smoothTime, delta, maxSpeed, easing, eps);\n  cC = damp(current, \"b\", col.b, smoothTime, delta, maxSpeed, easing, eps);\n  return aC || bC || cC;\n}\n/**\n * Quaternion Damp\n * https://gist.github.com/maxattack/4c7b4de00f5c1b95a33b\n * Copyright 2016 Max Kaufmann (max.kaufmann@gmail.com)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nvar qt = /*@__PURE__*/new Quaternion();\nvar v4result = /*@__PURE__*/new Vector4();\nvar v4velocity = /*@__PURE__*/new Vector4();\nvar v4error = /*@__PURE__*/new Vector4();\nvar aQ, bQ, cQ, dQ;\nfunction dampQ(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n  if (Array.isArray(target)) qt.set(target[0], target[1], target[2], target[3]);else qt.copy(target);\n  var multi = current.dot(qt) > 0 ? 1 : -1;\n  qt.x *= multi;\n  qt.y *= multi;\n  qt.z *= multi;\n  qt.w *= multi;\n  aQ = damp(current, \"x\", qt.x, smoothTime, delta, maxSpeed, easing, eps);\n  bQ = damp(current, \"y\", qt.y, smoothTime, delta, maxSpeed, easing, eps);\n  cQ = damp(current, \"z\", qt.z, smoothTime, delta, maxSpeed, easing, eps);\n  dQ = damp(current, \"w\", qt.w, smoothTime, delta, maxSpeed, easing, eps); // smooth damp (nlerp approx)\n\n  v4result.set(current.x, current.y, current.z, current.w).normalize();\n  v4velocity.set(cur.__damp.velocity_x, cur.__damp.velocity_y, cur.__damp.velocity_z, cur.__damp.velocity_w); // ensure deriv is tangent\n\n  v4error.copy(v4result).multiplyScalar(v4velocity.dot(v4result) / v4result.dot(v4result));\n  cur.__damp.velocity_x -= v4error.x;\n  cur.__damp.velocity_y -= v4error.y;\n  cur.__damp.velocity_z -= v4error.z;\n  cur.__damp.velocity_w -= v4error.w;\n  current.set(v4result.x, v4result.y, v4result.z, v4result.w);\n  return aQ || bQ || cQ || dQ;\n}\n/**\n * Spherical Damp\n */\n\nvar spherical = /*@__PURE__*/new Spherical();\nvar aS, bS, cS;\nfunction dampS(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) spherical.set(target[0], target[1], target[2]);else spherical.copy(target);\n  aS = damp(current, \"radius\", spherical.radius, smoothTime, delta, maxSpeed, easing, eps);\n  bS = dampAngle(current, \"phi\", spherical.phi, smoothTime, delta, maxSpeed, easing, eps);\n  cS = dampAngle(current, \"theta\", spherical.theta, smoothTime, delta, maxSpeed, easing, eps);\n  return aS || bS || cS;\n}\n/**\n * Matrix4 Damp\n */\n\nvar mat = /*@__PURE__*/new Matrix4();\nvar mPos = /*@__PURE__*/new Vector3();\nvar mRot = /*@__PURE__*/new Quaternion();\nvar mSca = /*@__PURE__*/new Vector3();\nvar aM, bM, cM;\nfunction dampM(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n\n  if (cur.__damp === undefined) {\n    cur.__damp = {\n      position: new Vector3(),\n      rotation: new Quaternion(),\n      scale: new Vector3()\n    };\n    current.decompose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  }\n\n  if (Array.isArray(target)) mat.set.apply(mat, _toConsumableArray(target));else mat.copy(target);\n  mat.decompose(mPos, mRot, mSca);\n  aM = damp3(cur.__damp.position, mPos, smoothTime, delta, maxSpeed, easing, eps);\n  bM = dampQ(cur.__damp.rotation, mRot, smoothTime, delta, maxSpeed, easing, eps);\n  cM = damp3(cur.__damp.scale, mSca, smoothTime, delta, maxSpeed, easing, eps);\n  current.compose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  return aM || bM || cM;\n}\n\nvar easing = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  rsqw: rsqw,\n  exp: exp,\n  linear: linear,\n  sine: sine,\n  cubic: cubic,\n  quint: quint,\n  circ: circ,\n  quart: quart,\n  expo: expo,\n  damp: damp,\n  dampLookAt: dampLookAt,\n  dampAngle: dampAngle,\n  damp2: damp2,\n  damp3: damp3,\n  damp4: damp4,\n  dampE: dampE,\n  dampC: dampC,\n  dampQ: dampQ,\n  dampS: dampS,\n  dampM: dampM\n});\n\nexport { exp as a, circ as b, cubic as c, quart as d, easing as e, expo as f, damp as g, dampLookAt as h, dampAngle as i, damp2 as j, damp3 as k, linear as l, damp4 as m, dampE as n, dampC as o, dampQ as p, quint as q, rsqw as r, sine as s, dampS as t, dampM as u };\n", "import { _ as _classCallCheck } from './classCallCheck-9098b006.esm.js';\nimport { _ as _setPrototypeOf, a as _isNativeReflectConstruct } from './isNativeReflectConstruct-5594d075.esm.js';\nimport * as THREE from 'three';\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nvar RoundedPlaneGeometry = /*#__PURE__*/function (_THREE$BufferGeometry) {\n  _inherits(RoundedPlaneGeometry, _THREE$BufferGeometry);\n\n  var _super = _createSuper(RoundedPlaneGeometry);\n\n  function RoundedPlaneGeometry() {\n    var _this;\n\n    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.2;\n    var segments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 16;\n\n    _classCallCheck(this, RoundedPlaneGeometry);\n\n    _this = _super.call(this);\n    _this.parameters = {\n      width: width,\n      height: height,\n      radius: radius,\n      segments: segments\n    }; // helper const's\n\n    var wi = width / 2 - radius; // inner width\n\n    var hi = height / 2 - radius; // inner height\n\n    var ul = radius / width; // u left\n\n    var ur = (width - radius) / width; // u right\n\n    var vl = radius / height; // v low\n\n    var vh = (height - radius) / height; // v high\n\n    var positions = [wi, hi, 0, -wi, hi, 0, -wi, -hi, 0, wi, -hi, 0];\n    var uvs = [ur, vh, ul, vh, ul, vl, ur, vl];\n    var n = [3 * (segments + 1) + 3, 3 * (segments + 1) + 4, segments + 4, segments + 5, 2 * (segments + 1) + 4, 2, 1, 2 * (segments + 1) + 3, 3, 4 * (segments + 1) + 3, 4, 0];\n    var indices = [n[0], n[1], n[2], n[0], n[2], n[3], n[4], n[5], n[6], n[4], n[6], n[7], n[8], n[9], n[10], n[8], n[10], n[11]];\n    var phi, cos, sin, xc, yc, uc, vc, idx;\n\n    for (var i = 0; i < 4; i++) {\n      xc = i < 1 || i > 2 ? wi : -wi;\n      yc = i < 2 ? hi : -hi;\n      uc = i < 1 || i > 2 ? ur : ul;\n      vc = i < 2 ? vh : vl;\n\n      for (var j = 0; j <= segments; j++) {\n        phi = Math.PI / 2 * (i + j / segments);\n        cos = Math.cos(phi);\n        sin = Math.sin(phi);\n        positions.push(xc + radius * cos, yc + radius * sin, 0);\n        uvs.push(uc + ul * cos, vc + vl * sin);\n\n        if (j < segments) {\n          idx = (segments + 1) * i + j + 4;\n          indices.push(i, idx, idx + 1);\n        }\n      }\n    }\n\n    _this.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n\n    _this.setAttribute(\"position\", new THREE.BufferAttribute(new Float32Array(positions), 3));\n\n    _this.setAttribute(\"uv\", new THREE.BufferAttribute(new Float32Array(uvs), 2));\n\n    return _this;\n  }\n\n  return RoundedPlaneGeometry;\n}(THREE.BufferGeometry); // Author: https://stackoverflow.com/users/128511/gman\n// https://stackoverflow.com/questions/34958072/programmatically-generate-simple-uv-mapping-for-models\n\nfunction applyCylindricalUV(bufferGeometry) {\n  var uvs = [];\n\n  for (var i = 0; i < bufferGeometry.attributes.position.array.length / 3; i++) {\n    var x = bufferGeometry.attributes.position.array[i * 3 + 0];\n    var y = bufferGeometry.attributes.position.array[i * 3 + 1];\n    var z = bufferGeometry.attributes.position.array[i * 3 + 2];\n    uvs.push(Math.atan2(x, z) / Math.PI * 0.5 + 0.5, y / Math.PI * 0.5 + 0.5);\n  }\n\n  if (bufferGeometry.attributes.uv) delete bufferGeometry.attributes.uv;\n  bufferGeometry.setAttribute(\"uv\", new THREE.Float32BufferAttribute(uvs, 2));\n  bufferGeometry.attributes.uv.needsUpdate = true;\n  return bufferGeometry;\n} // Author: https://stackoverflow.com/users/268905/knee-cola\n// https://stackoverflow.com/questions/20774648/three-js-generate-uv-coordinate\n\nfunction applySphereUV(bufferGeometry) {\n  var uvs = [];\n  var vertices = [];\n\n  for (var i = 0; i < bufferGeometry.attributes.position.array.length / 3; i++) {\n    var x = bufferGeometry.attributes.position.array[i * 3 + 0];\n    var y = bufferGeometry.attributes.position.array[i * 3 + 1];\n    var z = bufferGeometry.attributes.position.array[i * 3 + 2];\n    vertices.push(new THREE.Vector3(x, y, z));\n  }\n\n  var polarVertices = vertices.map(cartesian2polar);\n\n  for (var _i = 0; _i < polarVertices.length / 3; _i++) {\n    var tri = new THREE.Triangle(vertices[_i * 3 + 0], vertices[_i * 3 + 1], vertices[_i * 3 + 2]);\n    var normal = tri.getNormal(new THREE.Vector3());\n\n    for (var f = 0; f < 3; f++) {\n      var vertex = polarVertices[_i * 3 + f];\n\n      if (vertex.theta === 0 && (vertex.phi === 0 || vertex.phi === Math.PI)) {\n        var alignedVertice = vertex.phi === 0 ? _i * 3 + 1 : _i * 3 + 0;\n        vertex = {\n          r: vertex.r,\n          phi: vertex.phi,\n          theta: polarVertices[alignedVertice].theta\n        };\n      }\n\n      if (vertex.theta === Math.PI && cartesian2polar(normal).theta < Math.PI / 2) {\n        vertex.theta = -Math.PI;\n      }\n\n      var canvasPoint = polar2canvas(vertex);\n      uvs.push(1 - canvasPoint.x, 1 - canvasPoint.y);\n    }\n  }\n\n  if (bufferGeometry.attributes.uv) delete bufferGeometry.attributes.uv;\n  bufferGeometry.setAttribute(\"uv\", new THREE.Float32BufferAttribute(uvs, 2));\n  bufferGeometry.attributes.uv.needsUpdate = true;\n  return bufferGeometry;\n}\n\nfunction cartesian2polar(position) {\n  var r = Math.sqrt(position.x * position.x + position.z * position.z + position.y * position.y);\n  return {\n    r: r,\n    phi: Math.acos(position.y / r),\n    theta: Math.atan2(position.z, position.x)\n  };\n}\n\nfunction polar2canvas(polarPoint) {\n  return {\n    y: polarPoint.phi / Math.PI,\n    x: (polarPoint.theta + Math.PI) / (2 * Math.PI)\n  };\n} // Author: Alex Khoroshylov (https://stackoverflow.com/users/8742287/alex-khoroshylov)\n// https://stackoverflow.com/questions/20774648/three-js-generate-uv-coordinate\n\n\nfunction applyBoxUV(bufferGeometry) {\n  bufferGeometry.computeBoundingBox();\n  var bboxSize = bufferGeometry.boundingBox.getSize(new THREE.Vector3());\n  var boxSize = Math.min(bboxSize.x, bboxSize.y, bboxSize.z);\n  var boxGeometry = new THREE.BoxGeometry(boxSize, boxSize, boxSize);\n  var cube = new THREE.Mesh(boxGeometry);\n  cube.rotation.set(0, 0, 0);\n  cube.updateWorldMatrix(true, false);\n  var transformMatrix = cube.matrix.clone().invert();\n  var uvBbox = new THREE.Box3(new THREE.Vector3(-boxSize / 2, -boxSize / 2, -boxSize / 2), new THREE.Vector3(boxSize / 2, boxSize / 2, boxSize / 2));\n\n  _applyBoxUV(bufferGeometry, transformMatrix, uvBbox, boxSize);\n\n  bufferGeometry.attributes.uv.needsUpdate = true;\n  return bufferGeometry;\n}\n\nfunction _applyBoxUV(geom, transformMatrix, bbox, bbox_max_size) {\n  var coords = [];\n  coords.length = 2 * geom.attributes.position.array.length / 3; //maps 3 verts of 1 face on the better side of the cube\n  //side of the cube can be XY, XZ or YZ\n\n  var makeUVs = function makeUVs(v0, v1, v2) {\n    //pre-rotate the model so that cube sides match world axis\n    v0.applyMatrix4(transformMatrix);\n    v1.applyMatrix4(transformMatrix);\n    v2.applyMatrix4(transformMatrix); //get normal of the face, to know into which cube side it maps better\n\n    var n = new THREE.Vector3();\n    n.crossVectors(v1.clone().sub(v0), v1.clone().sub(v2)).normalize();\n    n.x = Math.abs(n.x);\n    n.y = Math.abs(n.y);\n    n.z = Math.abs(n.z);\n    var uv0 = new THREE.Vector2();\n    var uv1 = new THREE.Vector2();\n    var uv2 = new THREE.Vector2(); // xz mapping\n\n    if (n.y > n.x && n.y > n.z) {\n      uv0.x = (v0.x - bbox.min.x) / bbox_max_size;\n      uv0.y = (bbox.max.z - v0.z) / bbox_max_size;\n      uv1.x = (v1.x - bbox.min.x) / bbox_max_size;\n      uv1.y = (bbox.max.z - v1.z) / bbox_max_size;\n      uv2.x = (v2.x - bbox.min.x) / bbox_max_size;\n      uv2.y = (bbox.max.z - v2.z) / bbox_max_size;\n    } else if (n.x > n.y && n.x > n.z) {\n      uv0.x = (v0.z - bbox.min.z) / bbox_max_size;\n      uv0.y = (v0.y - bbox.min.y) / bbox_max_size;\n      uv1.x = (v1.z - bbox.min.z) / bbox_max_size;\n      uv1.y = (v1.y - bbox.min.y) / bbox_max_size;\n      uv2.x = (v2.z - bbox.min.z) / bbox_max_size;\n      uv2.y = (v2.y - bbox.min.y) / bbox_max_size;\n    } else if (n.z > n.y && n.z > n.x) {\n      uv0.x = (v0.x - bbox.min.x) / bbox_max_size;\n      uv0.y = (v0.y - bbox.min.y) / bbox_max_size;\n      uv1.x = (v1.x - bbox.min.x) / bbox_max_size;\n      uv1.y = (v1.y - bbox.min.y) / bbox_max_size;\n      uv2.x = (v2.x - bbox.min.x) / bbox_max_size;\n      uv2.y = (v2.y - bbox.min.y) / bbox_max_size;\n    }\n\n    return {\n      uv0: uv0,\n      uv1: uv1,\n      uv2: uv2\n    };\n  };\n\n  if (geom.index) {\n    // is it indexed buffer geometry?\n    for (var vi = 0; vi < geom.index.array.length; vi += 3) {\n      var idx0 = geom.index.array[vi];\n      var idx1 = geom.index.array[vi + 1];\n      var idx2 = geom.index.array[vi + 2];\n      var vx0 = geom.attributes.position.array[3 * idx0];\n      var vy0 = geom.attributes.position.array[3 * idx0 + 1];\n      var vz0 = geom.attributes.position.array[3 * idx0 + 2];\n      var vx1 = geom.attributes.position.array[3 * idx1];\n      var vy1 = geom.attributes.position.array[3 * idx1 + 1];\n      var vz1 = geom.attributes.position.array[3 * idx1 + 2];\n      var vx2 = geom.attributes.position.array[3 * idx2];\n      var vy2 = geom.attributes.position.array[3 * idx2 + 1];\n      var vz2 = geom.attributes.position.array[3 * idx2 + 2];\n      var v0 = new THREE.Vector3(vx0, vy0, vz0);\n      var v1 = new THREE.Vector3(vx1, vy1, vz1);\n      var v2 = new THREE.Vector3(vx2, vy2, vz2);\n      var uvs = makeUVs(v0, v1, v2);\n      coords[2 * idx0] = uvs.uv0.x;\n      coords[2 * idx0 + 1] = uvs.uv0.y;\n      coords[2 * idx1] = uvs.uv1.x;\n      coords[2 * idx1 + 1] = uvs.uv1.y;\n      coords[2 * idx2] = uvs.uv2.x;\n      coords[2 * idx2 + 1] = uvs.uv2.y;\n    }\n  } else {\n    for (var _vi = 0; _vi < geom.attributes.position.array.length; _vi += 9) {\n      var _vx = geom.attributes.position.array[_vi];\n      var _vy = geom.attributes.position.array[_vi + 1];\n      var _vz = geom.attributes.position.array[_vi + 2];\n      var _vx2 = geom.attributes.position.array[_vi + 3];\n      var _vy2 = geom.attributes.position.array[_vi + 4];\n      var _vz2 = geom.attributes.position.array[_vi + 5];\n      var _vx3 = geom.attributes.position.array[_vi + 6];\n      var _vy3 = geom.attributes.position.array[_vi + 7];\n      var _vz3 = geom.attributes.position.array[_vi + 8];\n\n      var _v = new THREE.Vector3(_vx, _vy, _vz);\n\n      var _v2 = new THREE.Vector3(_vx2, _vy2, _vz2);\n\n      var _v3 = new THREE.Vector3(_vx3, _vy3, _vz3);\n\n      var _uvs = makeUVs(_v, _v2, _v3);\n\n      var _idx = _vi / 3;\n\n      var _idx2 = _idx + 1;\n\n      var _idx3 = _idx + 2;\n\n      coords[2 * _idx] = _uvs.uv0.x;\n      coords[2 * _idx + 1] = _uvs.uv0.y;\n      coords[2 * _idx2] = _uvs.uv1.x;\n      coords[2 * _idx2 + 1] = _uvs.uv1.y;\n      coords[2 * _idx3] = _uvs.uv2.x;\n      coords[2 * _idx3 + 1] = _uvs.uv2.y;\n    }\n  }\n\n  if (geom.attributes.uv) delete geom.attributes.uv;\n  geom.setAttribute(\"uv\", new THREE.Float32BufferAttribute(coords, 2));\n}\n\nvar geometry = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  RoundedPlaneGeometry: RoundedPlaneGeometry,\n  applyCylindricalUV: applyCylindricalUV,\n  applySphereUV: applySphereUV,\n  applyBoxUV: applyBoxUV\n});\n\nexport { RoundedPlaneGeometry as R, applyCylindricalUV as a, applySphereUV as b, applyBoxUV as c, geometry as g };\n", "import { Vector3, Vector2 } from 'three';\n\n/**\n * Helpers for converting buffers to and from Three.js objects\n */\n\n/**\n * Convents passed buffer of passed stride to an array of vectors with the correct length.\n *\n * @param buffer\n * @param stride\n * @returns\n */\nfunction bufferToVectors(buffer) {\n  var stride = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  var p = [];\n\n  for (var i = 0, j = 0; i < buffer.length; i += stride, j++) {\n    if (stride === 3) {\n      p[j] = new Vector3(buffer[i], buffer[i + 1], buffer[i + 2]);\n    } else {\n      p[j] = new Vector2(buffer[i], buffer[i + 1]);\n    }\n  }\n\n  return p;\n}\n/**\n * Transforms a passed Vector2 or Vector3 array to a points buffer\n *\n * @param vectorArray\n * @returns\n */\n\nfunction vectorsToBuffer(vectorArray) {\n  var l = vectorArray.length;\n  var stride = vectorArray[0].hasOwnProperty(\"z\") ? 3 : 2;\n  var buffer = new Float32Array(l * stride);\n\n  for (var i = 0; i < l; i++) {\n    var j = i * stride;\n    buffer[j] = vectorArray[i].x;\n    buffer[j + 1] = vectorArray[i].y;\n\n    if (stride === 3) {\n      buffer[j + 2] = vectorArray[i].z;\n    }\n  }\n\n  return buffer;\n}\n\nvar three = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  bufferToVectors: bufferToVectors,\n  vectorsToBuffer: vectorsToBuffer\n});\n\nexport { bufferToVectors as b, three as t, vectorsToBuffer as v };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MathUtils } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { useSpring, a } from '@react-spring/three';\nimport { useGesture } from '@use-gesture/react';\n\nfunction PresentationControls({\n  enabled = true,\n  snap,\n  global,\n  domElement,\n  cursor = true,\n  children,\n  speed = 1,\n  rotation = [0, 0, 0],\n  zoom = 1,\n  polar = [0, Math.PI / 2],\n  azimuth = [-Infinity, Infinity],\n  config = {\n    mass: 1,\n    tension: 170,\n    friction: 26\n  }\n}) {\n  const events = useThree(state => state.events);\n  const gl = useThree(state => state.gl);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const {\n    size\n  } = useThree();\n  const rPolar = React.useMemo(() => [rotation[0] + polar[0], rotation[0] + polar[1]], [rotation[0], polar[0], polar[1]]);\n  const rAzimuth = React.useMemo(() => [rotation[1] + azimuth[0], rotation[1] + azimuth[1]], [rotation[1], azimuth[0], azimuth[1]]);\n  const rInitial = React.useMemo(() => [MathUtils.clamp(rotation[0], ...rPolar), MathUtils.clamp(rotation[1], ...rAzimuth), rotation[2]], [rotation[0], rotation[1], rotation[2], rPolar, rAzimuth]);\n  const [spring, api] = useSpring(() => ({\n    scale: 1,\n    rotation: rInitial,\n    config\n  }));\n  React.useEffect(() => void api.start({\n    scale: 1,\n    rotation: rInitial,\n    config\n  }), [rInitial]);\n  React.useEffect(() => {\n    if (global && cursor && enabled) {\n      explDomElement.style.cursor = 'grab';\n      gl.domElement.style.cursor = '';\n      return () => {\n        explDomElement.style.cursor = 'default';\n        gl.domElement.style.cursor = 'default';\n      };\n    }\n  }, [global, cursor, explDomElement, enabled]);\n  const bind = useGesture({\n    onHover: ({\n      last\n    }) => {\n      if (cursor && !global && enabled) explDomElement.style.cursor = last ? 'auto' : 'grab';\n    },\n    onDrag: ({\n      down,\n      delta: [x, y],\n      memo: [oldY, oldX] = spring.rotation.animation.to || rInitial\n    }) => {\n      if (!enabled) return [y, x];\n      if (cursor) explDomElement.style.cursor = down ? 'grabbing' : 'grab';\n      x = MathUtils.clamp(oldX + x / size.width * Math.PI * speed, ...rAzimuth);\n      y = MathUtils.clamp(oldY + y / size.height * Math.PI * speed, ...rPolar);\n      const sConfig = snap && !down && typeof snap !== 'boolean' ? snap : config;\n      api.start({\n        scale: down && y > rPolar[1] / 2 ? zoom : 1,\n        rotation: snap && !down ? rInitial : [y, x, 0],\n        config: n => n === 'scale' ? {\n          ...sConfig,\n          friction: sConfig.friction * 3\n        } : sConfig\n      });\n      return [y, x];\n    }\n  }, {\n    target: global ? explDomElement : undefined\n  });\n  return /*#__PURE__*/React.createElement(a.group, _extends({}, bind == null ? void 0 : bind(), spring), children);\n}\n\nexport { PresentationControls };\n", "let updateQueue = makeQueue();\nconst raf = fn => schedule(fn, updateQueue);\nlet writeQueue = makeQueue();\n\nraf.write = fn => schedule(fn, writeQueue);\n\nlet onStartQueue = makeQueue();\n\nraf.onStart = fn => schedule(fn, onStartQueue);\n\nlet onFrameQueue = makeQueue();\n\nraf.onFrame = fn => schedule(fn, onFrameQueue);\n\nlet onFinishQueue = makeQueue();\n\nraf.onFinish = fn => schedule(fn, onFinishQueue);\n\nlet timeouts = [];\n\nraf.setTimeout = (handler, ms) => {\n  let time = raf.now() + ms;\n\n  let cancel = () => {\n    let i = timeouts.findIndex(t => t.cancel == cancel);\n    if (~i) timeouts.splice(i, 1);\n    pendingCount -= ~i ? 1 : 0;\n  };\n\n  let timeout = {\n    time,\n    handler,\n    cancel\n  };\n  timeouts.splice(findTimeout(time), 0, timeout);\n  pendingCount += 1;\n  start();\n  return timeout;\n};\n\nlet findTimeout = time => ~(~timeouts.findIndex(t => t.time > time) || ~timeouts.length);\n\nraf.cancel = fn => {\n  onStartQueue.delete(fn);\n  onFrameQueue.delete(fn);\n  onFinishQueue.delete(fn);\n  updateQueue.delete(fn);\n  writeQueue.delete(fn);\n};\n\nraf.sync = fn => {\n  sync = true;\n  raf.batchedUpdates(fn);\n  sync = false;\n};\n\nraf.throttle = fn => {\n  let lastArgs;\n\n  function queuedFn() {\n    try {\n      fn(...lastArgs);\n    } finally {\n      lastArgs = null;\n    }\n  }\n\n  function throttled(...args) {\n    lastArgs = args;\n    raf.onStart(queuedFn);\n  }\n\n  throttled.handler = fn;\n\n  throttled.cancel = () => {\n    onStartQueue.delete(queuedFn);\n    lastArgs = null;\n  };\n\n  return throttled;\n};\n\nlet nativeRaf = typeof window != 'undefined' ? window.requestAnimationFrame : () => {};\n\nraf.use = impl => nativeRaf = impl;\n\nraf.now = typeof performance != 'undefined' ? () => performance.now() : Date.now;\n\nraf.batchedUpdates = fn => fn();\n\nraf.catch = console.error;\nraf.frameLoop = 'always';\n\nraf.advance = () => {\n  if (raf.frameLoop !== 'demand') {\n    console.warn('Cannot call the manual advancement of rafz whilst frameLoop is not set as demand');\n  } else {\n    update();\n  }\n};\n\nlet ts = -1;\nlet pendingCount = 0;\nlet sync = false;\n\nfunction schedule(fn, queue) {\n  if (sync) {\n    queue.delete(fn);\n    fn(0);\n  } else {\n    queue.add(fn);\n    start();\n  }\n}\n\nfunction start() {\n  if (ts < 0) {\n    ts = 0;\n\n    if (raf.frameLoop !== 'demand') {\n      nativeRaf(loop);\n    }\n  }\n}\n\nfunction stop() {\n  ts = -1;\n}\n\nfunction loop() {\n  if (~ts) {\n    nativeRaf(loop);\n    raf.batchedUpdates(update);\n  }\n}\n\nfunction update() {\n  let prevTs = ts;\n  ts = raf.now();\n  let count = findTimeout(ts);\n\n  if (count) {\n    eachSafely(timeouts.splice(0, count), t => t.handler());\n    pendingCount -= count;\n  }\n\n  if (!pendingCount) {\n    stop();\n    return;\n  }\n\n  onStartQueue.flush();\n  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667);\n  onFrameQueue.flush();\n  writeQueue.flush();\n  onFinishQueue.flush();\n}\n\nfunction makeQueue() {\n  let next = new Set();\n  let current = next;\n  return {\n    add(fn) {\n      pendingCount += current == next && !next.has(fn) ? 1 : 0;\n      next.add(fn);\n    },\n\n    delete(fn) {\n      pendingCount -= current == next && next.has(fn) ? 1 : 0;\n      return next.delete(fn);\n    },\n\n    flush(arg) {\n      if (current.size) {\n        next = new Set();\n        pendingCount -= current.size;\n        eachSafely(current, fn => fn(arg) && next.add(fn));\n        pendingCount += next.size;\n        current = next;\n      }\n    }\n\n  };\n}\n\nfunction eachSafely(values, each) {\n  values.forEach(value => {\n    try {\n      each(value);\n    } catch (e) {\n      raf.catch(e);\n    }\n  });\n}\n\nconst __raf = {\n  count() {\n    return pendingCount;\n  },\n\n  isRunning() {\n    return ts >= 0;\n  },\n\n  clear() {\n    ts = -1;\n    timeouts = [];\n    onStartQueue = makeQueue();\n    updateQueue = makeQueue();\n    onFrameQueue = makeQueue();\n    writeQueue = makeQueue();\n    onFinishQueue = makeQueue();\n    pendingCount = 0;\n  }\n\n};\n\nexport { __raf, raf };\n", "import { raf } from '@react-spring/rafz';\nexport { raf } from '@react-spring/rafz';\nimport { useRef, useEffect, useLayoutEffect, useState } from 'react';\n\nfunction noop() {}\nconst defineHidden = (obj, key, value) => Object.defineProperty(obj, key, {\n  value,\n  writable: true,\n  configurable: true\n});\nconst is = {\n  arr: Array.isArray,\n  obj: a => !!a && a.constructor.name === 'Object',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  und: a => a === undefined\n};\nfunction isEqual(a, b) {\n  if (is.arr(a)) {\n    if (!is.arr(b) || a.length !== b.length) return false;\n\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  return a === b;\n}\nconst each = (obj, fn) => obj.forEach(fn);\nfunction eachProp(obj, fn, ctx) {\n  if (is.arr(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn.call(ctx, obj[i], `${i}`);\n    }\n\n    return;\n  }\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn.call(ctx, obj[key], key);\n    }\n  }\n}\nconst toArray = a => is.und(a) ? [] : is.arr(a) ? a : [a];\nfunction flush(queue, iterator) {\n  if (queue.size) {\n    const items = Array.from(queue);\n    queue.clear();\n    each(items, iterator);\n  }\n}\nconst flushCalls = (queue, ...args) => flush(queue, fn => fn(...args));\nconst isSSR = () => typeof window === 'undefined' || !window.navigator || /ServerSideRendering|^Deno\\//.test(window.navigator.userAgent);\n\nlet createStringInterpolator$1;\nlet to;\nlet colors$1 = null;\nlet skipAnimation = false;\nlet willAdvance = noop;\nconst assign = globals => {\n  if (globals.to) to = globals.to;\n  if (globals.now) raf.now = globals.now;\n  if (globals.colors !== undefined) colors$1 = globals.colors;\n  if (globals.skipAnimation != null) skipAnimation = globals.skipAnimation;\n  if (globals.createStringInterpolator) createStringInterpolator$1 = globals.createStringInterpolator;\n  if (globals.requestAnimationFrame) raf.use(globals.requestAnimationFrame);\n  if (globals.batchedUpdates) raf.batchedUpdates = globals.batchedUpdates;\n  if (globals.willAdvance) willAdvance = globals.willAdvance;\n  if (globals.frameLoop) raf.frameLoop = globals.frameLoop;\n};\n\nvar globals = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get createStringInterpolator () { return createStringInterpolator$1; },\n  get to () { return to; },\n  get colors () { return colors$1; },\n  get skipAnimation () { return skipAnimation; },\n  get willAdvance () { return willAdvance; },\n  assign: assign\n});\n\nconst startQueue = new Set();\nlet currentFrame = [];\nlet prevFrame = [];\nlet priority = 0;\nconst frameLoop = {\n  get idle() {\n    return !startQueue.size && !currentFrame.length;\n  },\n\n  start(animation) {\n    if (priority > animation.priority) {\n      startQueue.add(animation);\n      raf.onStart(flushStartQueue);\n    } else {\n      startSafely(animation);\n      raf(advance);\n    }\n  },\n\n  advance,\n\n  sort(animation) {\n    if (priority) {\n      raf.onFrame(() => frameLoop.sort(animation));\n    } else {\n      const prevIndex = currentFrame.indexOf(animation);\n\n      if (~prevIndex) {\n        currentFrame.splice(prevIndex, 1);\n        startUnsafely(animation);\n      }\n    }\n  },\n\n  clear() {\n    currentFrame = [];\n    startQueue.clear();\n  }\n\n};\n\nfunction flushStartQueue() {\n  startQueue.forEach(startSafely);\n  startQueue.clear();\n  raf(advance);\n}\n\nfunction startSafely(animation) {\n  if (!currentFrame.includes(animation)) startUnsafely(animation);\n}\n\nfunction startUnsafely(animation) {\n  currentFrame.splice(findIndex(currentFrame, other => other.priority > animation.priority), 0, animation);\n}\n\nfunction advance(dt) {\n  const nextFrame = prevFrame;\n\n  for (let i = 0; i < currentFrame.length; i++) {\n    const animation = currentFrame[i];\n    priority = animation.priority;\n\n    if (!animation.idle) {\n      willAdvance(animation);\n      animation.advance(dt);\n\n      if (!animation.idle) {\n        nextFrame.push(animation);\n      }\n    }\n  }\n\n  priority = 0;\n  prevFrame = currentFrame;\n  prevFrame.length = 0;\n  currentFrame = nextFrame;\n  return currentFrame.length > 0;\n}\n\nfunction findIndex(arr, test) {\n  const index = arr.findIndex(test);\n  return index < 0 ? arr.length : index;\n}\n\nconst clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nconst colors = {\n  transparent: 0x00000000,\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff\n};\n\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call(...parts) {\n  return '\\\\(\\\\s*(' + parts.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nconst rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));\nconst rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER));\nconst hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE));\nconst hsla = new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));\nconst hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex6 = /^#([0-9a-fA-F]{6})$/;\nconst hex8 = /^#([0-9a-fA-F]{8})$/;\n\nfunction normalizeColor(color) {\n  let match;\n\n  if (typeof color === 'number') {\n    return color >>> 0 === color && color >= 0 && color <= 0xffffffff ? color : null;\n  }\n\n  if (match = hex6.exec(color)) return parseInt(match[1] + 'ff', 16) >>> 0;\n\n  if (colors$1 && colors$1[color] !== undefined) {\n    return colors$1[color];\n  }\n\n  if (match = rgb.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;\n  }\n\n  if (match = rgba.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;\n  }\n\n  if (match = hex3.exec(color)) {\n    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;\n  }\n\n  if (match = hex8.exec(color)) return parseInt(match[1], 16) >>> 0;\n\n  if (match = hex4.exec(color)) {\n    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;\n  }\n\n  if (match = hsl.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;\n  }\n\n  if (match = hsla.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\n}\n\nfunction parse255(str) {\n  const int = parseInt(str, 10);\n  if (int < 0) return 0;\n  if (int > 255) return 255;\n  return int;\n}\n\nfunction parse360(str) {\n  const int = parseFloat(str);\n  return (int % 360 + 360) % 360 / 360;\n}\n\nfunction parse1(str) {\n  const num = parseFloat(str);\n  if (num < 0) return 0;\n  if (num > 1) return 255;\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  const int = parseFloat(str);\n  if (int < 0) return 0;\n  if (int > 100) return 1;\n  return int / 100;\n}\n\nfunction colorToRgba(input) {\n  let int32Color = normalizeColor(input);\n  if (int32Color === null) return input;\n  int32Color = int32Color || 0;\n  let r = (int32Color & 0xff000000) >>> 24;\n  let g = (int32Color & 0x00ff0000) >>> 16;\n  let b = (int32Color & 0x0000ff00) >>> 8;\n  let a = (int32Color & 0x000000ff) / 255;\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n}\n\nconst createInterpolator = (range, output, extrapolate) => {\n  if (is.fun(range)) {\n    return range;\n  }\n\n  if (is.arr(range)) {\n    return createInterpolator({\n      range,\n      output: output,\n      extrapolate\n    });\n  }\n\n  if (is.str(range.output[0])) {\n    return createStringInterpolator$1(range);\n  }\n\n  const config = range;\n  const outputRange = config.output;\n  const inputRange = config.range || [0, 1];\n  const extrapolateLeft = config.extrapolateLeft || config.extrapolate || 'extend';\n  const extrapolateRight = config.extrapolateRight || config.extrapolate || 'extend';\n\n  const easing = config.easing || (t => t);\n\n  return input => {\n    const range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight, config.map);\n  };\n};\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map) {\n  let result = map ? map(input) : input;\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') return result;else if (extrapolateLeft === 'clamp') result = inputMin;\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') return result;else if (extrapolateRight === 'clamp') result = inputMax;\n  }\n\n  if (outputMin === outputMax) return outputMin;\n  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax;\n  if (inputMin === -Infinity) result = -result;else if (inputMax === Infinity) result = result - inputMin;else result = (result - inputMin) / (inputMax - inputMin);\n  result = easing(result);\n  if (outputMin === -Infinity) result = -result;else if (outputMax === Infinity) result = result + outputMin;else result = result * (outputMax - outputMin) + outputMin;\n  return result;\n}\n\nfunction findRange(input, inputRange) {\n  for (var i = 1; i < inputRange.length - 1; ++i) if (inputRange[i] >= input) break;\n\n  return i - 1;\n}\n\nconst steps = (steps, direction = 'end') => progress => {\n  progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n  const expanded = progress * steps;\n  const rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n  return clamp(0, 1, rounded / steps);\n};\n\nconst c1 = 1.70158;\nconst c2 = c1 * 1.525;\nconst c3 = c1 + 1;\nconst c4 = 2 * Math.PI / 3;\nconst c5 = 2 * Math.PI / 4.5;\n\nconst bounceOut = x => {\n  const n1 = 7.5625;\n  const d1 = 2.75;\n\n  if (x < 1 / d1) {\n    return n1 * x * x;\n  } else if (x < 2 / d1) {\n    return n1 * (x -= 1.5 / d1) * x + 0.75;\n  } else if (x < 2.5 / d1) {\n    return n1 * (x -= 2.25 / d1) * x + 0.9375;\n  } else {\n    return n1 * (x -= 2.625 / d1) * x + 0.984375;\n  }\n};\n\nconst easings = {\n  linear: x => x,\n  easeInQuad: x => x * x,\n  easeOutQuad: x => 1 - (1 - x) * (1 - x),\n  easeInOutQuad: x => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n  easeInCubic: x => x * x * x,\n  easeOutCubic: x => 1 - Math.pow(1 - x, 3),\n  easeInOutCubic: x => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n  easeInQuart: x => x * x * x * x,\n  easeOutQuart: x => 1 - Math.pow(1 - x, 4),\n  easeInOutQuart: x => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n  easeInQuint: x => x * x * x * x * x,\n  easeOutQuint: x => 1 - Math.pow(1 - x, 5),\n  easeInOutQuint: x => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n  easeInSine: x => 1 - Math.cos(x * Math.PI / 2),\n  easeOutSine: x => Math.sin(x * Math.PI / 2),\n  easeInOutSine: x => -(Math.cos(Math.PI * x) - 1) / 2,\n  easeInExpo: x => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n  easeOutExpo: x => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n  easeInOutExpo: x => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2 : (2 - Math.pow(2, -20 * x + 10)) / 2,\n  easeInCirc: x => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n  easeOutCirc: x => Math.sqrt(1 - Math.pow(x - 1, 2)),\n  easeInOutCirc: x => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2,\n  easeInBack: x => c3 * x * x * x - c1 * x * x,\n  easeOutBack: x => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n  easeInOutBack: x => x < 0.5 ? Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2) / 2 : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2,\n  easeInElastic: x => x === 0 ? 0 : x === 1 ? 1 : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4),\n  easeOutElastic: x => x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1,\n  easeInOutElastic: x => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2 : Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5) / 2 + 1,\n  easeInBounce: x => 1 - bounceOut(1 - x),\n  easeOutBounce: bounceOut,\n  easeInOutBounce: x => x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2,\n  steps\n};\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nconst $get = Symbol.for('FluidValue.get');\nconst $observers = Symbol.for('FluidValue.observers');\n\nconst hasFluidValue = arg => Boolean(arg && arg[$get]);\n\nconst getFluidValue = arg => arg && arg[$get] ? arg[$get]() : arg;\n\nconst getFluidObservers = target => target[$observers] || null;\n\nfunction callFluidObserver(observer, event) {\n  if (observer.eventObserved) {\n    observer.eventObserved(event);\n  } else {\n    observer(event);\n  }\n}\n\nfunction callFluidObservers(target, event) {\n  let observers = target[$observers];\n\n  if (observers) {\n    observers.forEach(observer => {\n      callFluidObserver(observer, event);\n    });\n  }\n}\n\nclass FluidValue {\n  constructor(get) {\n    this[$get] = void 0;\n    this[$observers] = void 0;\n\n    if (!get && !(get = this.get)) {\n      throw Error('Unknown getter');\n    }\n\n    setFluidGetter(this, get);\n  }\n\n}\n\nconst setFluidGetter = (target, get) => setHidden(target, $get, get);\n\nfunction addFluidObserver(target, observer) {\n  if (target[$get]) {\n    let observers = target[$observers];\n\n    if (!observers) {\n      setHidden(target, $observers, observers = new Set());\n    }\n\n    if (!observers.has(observer)) {\n      observers.add(observer);\n\n      if (target.observerAdded) {\n        target.observerAdded(observers.size, observer);\n      }\n    }\n  }\n\n  return observer;\n}\n\nfunction removeFluidObserver(target, observer) {\n  let observers = target[$observers];\n\n  if (observers && observers.has(observer)) {\n    const count = observers.size - 1;\n\n    if (count) {\n      observers.delete(observer);\n    } else {\n      target[$observers] = null;\n    }\n\n    if (target.observerRemoved) {\n      target.observerRemoved(count, observer);\n    }\n  }\n}\n\nconst setHidden = (target, key, value) => Object.defineProperty(target, key, {\n  value,\n  writable: true,\n  configurable: true\n});\n\nconst numberRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nconst colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi;\nconst unitRegex = new RegExp(`(${numberRegex.source})(%|[a-z]+)`, 'i');\nconst rgbaRegex = /rgba\\(([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+)\\)/gi;\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\n\nconst variableToRgba = input => {\n  const [token, fallback] = parseCSSVariable(input);\n\n  if (!token || isSSR()) {\n    return input;\n  }\n\n  const value = window.getComputedStyle(document.documentElement).getPropertyValue(token);\n\n  if (value) {\n    return value.trim();\n  } else if (fallback && fallback.startsWith('--')) {\n    const _value = window.getComputedStyle(document.documentElement).getPropertyValue(fallback);\n\n    if (_value) {\n      return _value;\n    } else {\n      return input;\n    }\n  } else if (fallback && cssVariableRegex.test(fallback)) {\n    return variableToRgba(fallback);\n  } else if (fallback) {\n    return fallback;\n  }\n\n  return input;\n};\n\nconst parseCSSVariable = current => {\n  const match = cssVariableRegex.exec(current);\n  if (!match) return [,];\n  const [, token, fallback] = match;\n  return [token, fallback];\n};\n\nlet namedColorRegex;\n\nconst rgbaRound = (_, p1, p2, p3, p4) => `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`;\n\nconst createStringInterpolator = config => {\n  if (!namedColorRegex) namedColorRegex = colors$1 ? new RegExp(`(${Object.keys(colors$1).join('|')})(?!\\\\w)`, 'g') : /^\\b$/;\n  const output = config.output.map(value => {\n    return getFluidValue(value).replace(cssVariableRegex, variableToRgba).replace(colorRegex, colorToRgba).replace(namedColorRegex, colorToRgba);\n  });\n  const keyframes = output.map(value => value.match(numberRegex).map(Number));\n  const outputRanges = keyframes[0].map((_, i) => keyframes.map(values => {\n    if (!(i in values)) {\n      throw Error('The arity of each \"output\" value must be equal');\n    }\n\n    return values[i];\n  }));\n  const interpolators = outputRanges.map(output => createInterpolator(_extends({}, config, {\n    output\n  })));\n  return input => {\n    var _output$find;\n\n    const missingUnit = !unitRegex.test(output[0]) && ((_output$find = output.find(value => unitRegex.test(value))) == null ? void 0 : _output$find.replace(numberRegex, ''));\n    let i = 0;\n    return output[0].replace(numberRegex, () => `${interpolators[i++](input)}${missingUnit || ''}`).replace(rgbaRegex, rgbaRound);\n  };\n};\n\nconst prefix = 'react-spring: ';\nconst once = fn => {\n  const func = fn;\n  let called = false;\n\n  if (typeof func != 'function') {\n    throw new TypeError(`${prefix}once requires a function parameter`);\n  }\n\n  return (...args) => {\n    if (!called) {\n      func(...args);\n      called = true;\n    }\n  };\n};\nconst warnInterpolate = once(console.warn);\nfunction deprecateInterpolate() {\n  warnInterpolate(`${prefix}The \"interpolate\" function is deprecated in v9 (use \"to\" instead)`);\n}\nconst warnDirectCall = once(console.warn);\nfunction deprecateDirectCall() {\n  warnDirectCall(`${prefix}Directly calling start instead of using the api object is deprecated in v9 (use \".start\" instead), this will be removed in later 0.X.0 versions`);\n}\n\nfunction isAnimatedString(value) {\n  return is.str(value) && (value[0] == '#' || /\\d/.test(value) || !isSSR() && cssVariableRegex.test(value) || value in (colors$1 || {}));\n}\n\nlet observer;\nconst resizeHandlers = new WeakMap();\n\nconst handleObservation = entries => entries.forEach(({\n  target,\n  contentRect\n}) => {\n  var _resizeHandlers$get;\n\n  return (_resizeHandlers$get = resizeHandlers.get(target)) == null ? void 0 : _resizeHandlers$get.forEach(handler => handler(contentRect));\n});\n\nfunction resizeElement(handler, target) {\n  if (!observer) {\n    if (typeof ResizeObserver !== 'undefined') {\n      observer = new ResizeObserver(handleObservation);\n    }\n  }\n\n  let elementHandlers = resizeHandlers.get(target);\n\n  if (!elementHandlers) {\n    elementHandlers = new Set();\n    resizeHandlers.set(target, elementHandlers);\n  }\n\n  elementHandlers.add(handler);\n\n  if (observer) {\n    observer.observe(target);\n  }\n\n  return () => {\n    const elementHandlers = resizeHandlers.get(target);\n    if (!elementHandlers) return;\n    elementHandlers.delete(handler);\n\n    if (!elementHandlers.size && observer) {\n      observer.unobserve(target);\n    }\n  };\n}\n\nconst listeners = new Set();\nlet cleanupWindowResizeHandler;\n\nconst createResizeHandler = () => {\n  const handleResize = () => {\n    listeners.forEach(callback => callback({\n      width: window.innerWidth,\n      height: window.innerHeight\n    }));\n  };\n\n  window.addEventListener('resize', handleResize);\n  return () => {\n    window.removeEventListener('resize', handleResize);\n  };\n};\n\nconst resizeWindow = callback => {\n  listeners.add(callback);\n\n  if (!cleanupWindowResizeHandler) {\n    cleanupWindowResizeHandler = createResizeHandler();\n  }\n\n  return () => {\n    listeners.delete(callback);\n\n    if (!listeners.size && cleanupWindowResizeHandler) {\n      cleanupWindowResizeHandler();\n      cleanupWindowResizeHandler = undefined;\n    }\n  };\n};\n\nconst onResize = (callback, {\n  container: _container = document.documentElement\n} = {}) => {\n  if (_container === document.documentElement) {\n    return resizeWindow(callback);\n  } else {\n    return resizeElement(callback, _container);\n  }\n};\n\nconst progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\n\nconst SCROLL_KEYS = {\n  x: {\n    length: 'Width',\n    position: 'Left'\n  },\n  y: {\n    length: 'Height',\n    position: 'Top'\n  }\n};\nclass ScrollHandler {\n  constructor(callback, container) {\n    this.callback = void 0;\n    this.container = void 0;\n    this.info = void 0;\n\n    this.createAxis = () => ({\n      current: 0,\n      progress: 0,\n      scrollLength: 0\n    });\n\n    this.updateAxis = axisName => {\n      const axis = this.info[axisName];\n      const {\n        length,\n        position\n      } = SCROLL_KEYS[axisName];\n      axis.current = this.container[`scroll${position}`];\n      axis.scrollLength = this.container['scroll' + length] - this.container['client' + length];\n      axis.progress = progress(0, axis.scrollLength, axis.current);\n    };\n\n    this.update = () => {\n      this.updateAxis('x');\n      this.updateAxis('y');\n    };\n\n    this.sendEvent = () => {\n      this.callback(this.info);\n    };\n\n    this.advance = () => {\n      this.update();\n      this.sendEvent();\n    };\n\n    this.callback = callback;\n    this.container = container;\n    this.info = {\n      time: 0,\n      x: this.createAxis(),\n      y: this.createAxis()\n    };\n  }\n\n}\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\n\nconst getTarget = container => container === document.documentElement ? window : container;\n\nconst onScroll = (callback, {\n  container: _container = document.documentElement\n} = {}) => {\n  let containerHandlers = onScrollHandlers.get(_container);\n\n  if (!containerHandlers) {\n    containerHandlers = new Set();\n    onScrollHandlers.set(_container, containerHandlers);\n  }\n\n  const containerHandler = new ScrollHandler(callback, _container);\n  containerHandlers.add(containerHandler);\n\n  if (!scrollListeners.has(_container)) {\n    const listener = () => {\n      var _containerHandlers;\n\n      (_containerHandlers = containerHandlers) == null ? void 0 : _containerHandlers.forEach(handler => handler.advance());\n      return true;\n    };\n\n    scrollListeners.set(_container, listener);\n    const target = getTarget(_container);\n    window.addEventListener('resize', listener, {\n      passive: true\n    });\n\n    if (_container !== document.documentElement) {\n      resizeListeners.set(_container, onResize(listener, {\n        container: _container\n      }));\n    }\n\n    target.addEventListener('scroll', listener, {\n      passive: true\n    });\n  }\n\n  const animateScroll = scrollListeners.get(_container);\n  raf(animateScroll);\n  return () => {\n    raf.cancel(animateScroll);\n    const containerHandlers = onScrollHandlers.get(_container);\n    if (!containerHandlers) return;\n    containerHandlers.delete(containerHandler);\n    if (containerHandlers.size) return;\n    const listener = scrollListeners.get(_container);\n    scrollListeners.delete(_container);\n\n    if (listener) {\n      var _resizeListeners$get;\n\n      getTarget(_container).removeEventListener('scroll', listener);\n      window.removeEventListener('resize', listener);\n      (_resizeListeners$get = resizeListeners.get(_container)) == null ? void 0 : _resizeListeners$get();\n    }\n  };\n};\n\nfunction useConstant(init) {\n  const ref = useRef(null);\n\n  if (ref.current === null) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nconst useIsomorphicLayoutEffect = isSSR() ? useEffect : useLayoutEffect;\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\nfunction useForceUpdate() {\n  const update = useState()[1];\n  const isMounted = useIsMounted();\n  return () => {\n    if (isMounted.current) {\n      update(Math.random());\n    }\n  };\n}\n\nfunction useMemoOne(getResult, inputs) {\n  const [initial] = useState(() => ({\n    inputs,\n    result: getResult()\n  }));\n  const committed = useRef();\n  const prevCache = committed.current;\n  let cache = prevCache;\n\n  if (cache) {\n    const useCache = Boolean(inputs && cache.inputs && areInputsEqual(inputs, cache.inputs));\n\n    if (!useCache) {\n      cache = {\n        inputs,\n        result: getResult()\n      };\n    }\n  } else {\n    cache = initial;\n  }\n\n  useEffect(() => {\n    committed.current = cache;\n\n    if (prevCache == initial) {\n      initial.inputs = initial.result = undefined;\n    }\n  }, [cache]);\n  return cache.result;\n}\n\nfunction areInputsEqual(next, prev) {\n  if (next.length !== prev.length) {\n    return false;\n  }\n\n  for (let i = 0; i < next.length; i++) {\n    if (next[i] !== prev[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconst useOnce = effect => useEffect(effect, emptyDeps);\nconst emptyDeps = [];\n\nfunction usePrev(value) {\n  const prevRef = useRef();\n  useEffect(() => {\n    prevRef.current = value;\n  });\n  return prevRef.current;\n}\n\nconst useReducedMotion = () => {\n  const [reducedMotion, setReducedMotion] = useState(null);\n  useIsomorphicLayoutEffect(() => {\n    const mql = window.matchMedia('(prefers-reduced-motion)');\n\n    const handleMediaChange = e => {\n      setReducedMotion(e.matches);\n      assign({\n        skipAnimation: e.matches\n      });\n    };\n\n    handleMediaChange(mql);\n    mql.addEventListener('change', handleMediaChange);\n    return () => {\n      mql.removeEventListener('change', handleMediaChange);\n    };\n  }, []);\n  return reducedMotion;\n};\n\nexport { FluidValue, globals as Globals, addFluidObserver, callFluidObserver, callFluidObservers, clamp, colorToRgba, colors, createInterpolator, createStringInterpolator, defineHidden, deprecateDirectCall, deprecateInterpolate, each, eachProp, easings, flush, flushCalls, frameLoop, getFluidObservers, getFluidValue, hasFluidValue, hex3, hex4, hex6, hex8, hsl, hsla, is, isAnimatedString, isEqual, isSSR, noop, onResize, onScroll, once, prefix, removeFluidObserver, rgb, rgba, setFluidGetter, toArray, useConstant, useForceUpdate, useIsomorphicLayoutEffect, useMemoOne, useOnce, usePrev, useReducedMotion };\n", "import { eachProp, is, toArray, getFluidValue, isAnimatedString, Globals, useIsomorphicLayoutEffect, each, easings, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, useConstant, onScroll, onResize, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator, easings, useIsomorphicLayoutEffect, useReducedMotion } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction callProp(value, ...args) {\n  return is.fun(value) ? value(...args) : value;\n}\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\n\nconst noopTransform = value => value;\n\nconst getDefaultProps = (props, transform = noopTransform) => {\n  let keys = DEFAULT_PROPS;\n\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n\n  const defaults = {};\n\n  for (const key of keys) {\n    const value = transform(props[key], key);\n\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n\n  return defaults;\n};\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\n\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n\n  if (count) {\n    return forward;\n  }\n}\n\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n\n  return _extends({}, props);\n}\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\nfunction hasProps(props) {\n  for (const _ in props) return true;\n\n  return false;\n}\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\n\nfunction useChain(refs, timeSteps, timeFrame = 1000) {\n  useIsomorphicLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n          });\n          ref.start();\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\n\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: easings.linear,\n  clamp: false\n});\n\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n\n}\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n\n  return config;\n}\n\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\n\nconst emptyArray = [];\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n\n}\n\nfunction scheduleProps(callId, {\n  key,\n  props,\n  defaultProps,\n  state,\n  actions\n}) {\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n\n      delay = callProp(props.delay || 0, key);\n\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n\n    function onResume() {\n      if (delay > 0 && !Globals.skipAnimation) {\n        state.delayed = true;\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n\n    function onStart() {\n      if (state.delayed) {\n        state.delayed = false;\n      }\n\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\n\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\nconst getFinishedResult = (value, finished, cancelled = false) => ({\n  value,\n  finished,\n  cancelled\n});\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\n\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAnimationSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n\n        return result;\n      })();\n    };\n\n    let result;\n\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n\n    try {\n      let animating;\n\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n        animating = Promise.resolve(to(animate, target.stop.bind(target)));\n      }\n\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAnimationSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n\n    return result;\n  })();\n}\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n\n}\nclass SkipAnimationSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n\n}\n\nconst isFrameValue = value => value instanceof FrameValue;\nlet nextId$1 = 1;\nclass FrameValue extends FluidValue {\n  constructor(...args) {\n    super(...args);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n\n      this._onPriorityChange(priority);\n    }\n  }\n\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n\n  to(...args) {\n    return Globals.to(this, args);\n  }\n\n  interpolate(...args) {\n    deprecateInterpolate();\n    return Globals.to(this, args);\n  }\n\n  toJSON() {\n    return this.get();\n  }\n\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n\n  _attach() {}\n\n  _detach() {}\n\n  _onChange(value, idle = false) {\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n\n}\n\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\n\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      delayed: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n\n      this.start(props);\n    }\n  }\n\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n\n  get isAnimating() {\n    return isAnimating(this);\n  }\n\n  get isPaused() {\n    return isPaused(this);\n  }\n\n  get isDelayed() {\n    return this._state.delayed;\n  }\n\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n\n      if (!finished) {\n        position = node.lastPosition;\n\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n        const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n\n        if (!is.und(config.duration)) {\n          let p = 1;\n\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n          const decay = config.decay === true ? 0.998 : config.decay;\n          const e = Math.exp(-(1 - decay) * elapsed);\n          position = from + v0 / (1 - decay) * (1 - e);\n          finished = Math.abs(node.lastPosition - position) <= precision;\n          velocity = v0 * e;\n        } else {\n          velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n          const restVelocity = config.restVelocity || precision / 10;\n          const bounceFactor = config.clamp ? 0 : config.bounce;\n          const canBounce = !is.und(bounceFactor);\n          const isGrowing = from == to ? node.v0 > 0 : from < to;\n          let isMoving;\n          let isBouncing = false;\n          const step = 1;\n          const numSteps = Math.ceil(dt / step);\n\n          for (let n = 0; n < numSteps; ++n) {\n            isMoving = Math.abs(velocity) > restVelocity;\n\n            if (!isMoving) {\n              finished = Math.abs(to - position) <= precision;\n\n              if (finished) {\n                break;\n              }\n            }\n\n            if (canBounce) {\n              isBouncing = position == to || position > to == isGrowing;\n\n              if (isBouncing) {\n                velocity = -velocity * bounceFactor;\n                position = to;\n              }\n            }\n\n            const springForce = -config.tension * 0.000001 * (position - to);\n            const dampingForce = -config.friction * 0.001 * velocity;\n            const acceleration = (springForce + dampingForce) / config.mass;\n            velocity = velocity + acceleration * step;\n            position = position + velocity * step;\n          }\n        }\n\n        node.lastVelocity = velocity;\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n\n      this._focus(value);\n\n      this._set(value);\n    });\n    return this;\n  }\n\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n\n        if (!config.decay) {\n          this._set(to, false);\n        }\n\n        this._stop();\n      });\n    }\n\n    return this;\n  }\n\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n\n  start(to, arg2) {\n    let queue;\n\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n\n    return Promise.all(queue.map(props => {\n      const up = this._update(props);\n\n      return up;\n    })).then(results => getCombinedResult(this, results));\n  }\n\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n\n    this._focus(this.get());\n\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n\n    from = is.obj(from) ? from[key] : from;\n\n    if (from == null) {\n      from = undefined;\n    }\n\n    const range = {\n      to,\n      from\n    };\n\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n        this._set(to);\n      }\n    }\n\n    return range;\n  }\n\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n\n    const range = this._prepareNode(props);\n\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n\n            if (isAnimating(this)) {\n              this._resume();\n            }\n\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n\n    if (hasToChanged) {\n      this._focus(to);\n    }\n\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n\n    let node = getAnimated(this);\n\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n        this._stop(prevTo);\n      }\n    }\n\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n\n        this._pendingCalls.add(resolve);\n\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n            anim.onStart == null ? void 0 : anim.onStart(result, this);\n          }\n        });\n      }\n    }\n\n    if (reset) {\n      this._set(value);\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n      this._start();\n    } else if (isAnimating(this) && !hasToChanged) {\n      this._pendingCalls.add(resolve);\n    } else {\n      resolve(getNoopResult(value));\n    }\n  }\n\n  _focus(value) {\n    const anim = this.animation;\n\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n\n      anim.to = value;\n\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n\n    this.priority = priority;\n  }\n\n  _detach() {\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n\n  _set(arg, idle = true) {\n    const value = getFluidValue(arg);\n\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n\n    return getAnimated(this);\n  }\n\n  _onStart() {\n    const anim = this.animation;\n\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n\n      callProp(this.animation.onChange, value, this);\n    }\n\n    callProp(this.defaultProps.onChange, value, this);\n\n    super._onChange(value, idle);\n  }\n\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n\n}\n\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\n\nfunction createLoopUpdate(props, loop = props.loop, to = props.to) {\n  let loopRet = callProp(loop);\n\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n\n  return update;\n}\n\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\n\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\n\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\n\nfunction sendEvent(target, type, ...args) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\n\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n\n    if (flush) {\n      this._flush = flush;\n    }\n\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => {\n      return spring.idle && !spring.isDelayed && !spring.isPaused;\n    });\n  }\n\n  get item() {\n    return this._item;\n  }\n\n  set item(item) {\n    this._item = item;\n  }\n\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n\n    return this;\n  }\n\n  start(props) {\n    let {\n      queue\n    } = this;\n\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n\n    return this;\n  }\n\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n\n    return this;\n  }\n\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n\n    return this;\n  }\n\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, ([onStart, result]) => {\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n\n    if (changed && onChange.size) {\n      flush(onChange, ([onChange, result]) => {\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n\n    if (idle) {\n      this._started = false;\n      flush(onRest, ([onRest, result]) => {\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n\n    raf.onFrame(this._onFrame);\n  }\n\n}\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n\n  if (loop) {\n    props.loop = false;\n  }\n\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n    each(BATCHED_EVENTS, key => {\n      const handler = props[key];\n\n      if (is.fun(handler)) {\n        const queue = ctrl['_events'][key];\n\n        props[key] = ({\n          finished,\n          cancelled\n        }) => {\n          const result = queue.get(handler);\n\n          if (result) {\n            if (!finished) result.finished = false;\n            if (cancelled) result.cancelled = true;\n          } else {\n            queue.set(handler, {\n              value: null,\n              finished: finished || false,\n              cancelled: cancelled || false\n            });\n          }\n        };\n\n        if (defaults) {\n          defaults[key] = props[key];\n        }\n      }\n    });\n  }\n\n  const state = ctrl['_state'];\n\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n    props.pause = true;\n  }\n\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n\n      }\n    }));\n  }\n\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n\n  return result;\n}\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n\n  setSprings(ctrl, springs);\n  return springs;\n}\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\n\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n\n  return spring;\n}\n\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\n\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded$6 = [\"children\"];\nconst SpringContext = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$6);\n\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n        immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\n\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\n\nconst SpringRef = () => {\n  const current = [];\n\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.current = current;\n\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\n\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      const update = updates[i];\n\n      if (update) {\n        replaceRef(ctrl, update.ref);\n\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\n\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\n\nconst initSpringRef = () => SpringRef();\n\nconst useSpringRef = () => useState(initSpringRef)[0];\n\nconst useSpringValue = (initial, props) => {\n  const springValue = useConstant(() => new SpringValue(initial, props));\n  useOnce(() => () => {\n    springValue.stop();\n  });\n  return springValue;\n};\n\nfunction useTrail(length, propsArg, deps) {\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  let passedRef = undefined;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    passedRef = props.ref;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  useIsomorphicLayoutEffect(() => {\n    each(result[1].current, (ctrl, i) => {\n      const parent = result[1].current[i + (reverse ? 1 : -1)];\n      replaceRef(ctrl, passedRef);\n\n      if (ctrl.ref) {\n        if (parent) {\n          ctrl.update({\n            to: parent.springs\n          });\n        }\n\n        return;\n      }\n\n      if (parent) {\n        ctrl.start({\n          to: parent.springs\n        });\n      } else {\n        ctrl.start();\n      }\n    });\n  }, deps);\n\n  if (propsFn || arguments.length == 3) {\n    var _passedRef;\n\n    const ref = (_passedRef = passedRef) != null ? _passedRef : result[1];\n\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n\n    return result;\n  }\n\n  return result[0];\n}\n\nlet TransitionPhase;\n\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\n\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    exitBeforeEnter = false,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useIsomorphicLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => {\n    each(transitions, t => {\n      ref == null ? void 0 : ref.add(t.ctrl);\n      t.ctrl.ref = ref;\n    });\n    return () => {\n      each(usedTransitions.current, t => {\n        if (t.expired) {\n          clearTimeout(t.expirationId);\n        }\n\n        detachRefs(t.ctrl, ref);\n        t.ctrl.stop(true);\n      });\n    };\n  });\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useIsomorphicLayoutEffect(() => each(expired, ({\n    ctrl,\n    item,\n    key\n  }) => {\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  const exitingTransitions = useRef(new Map());\n  const forceChange = useRef(false);\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n\n    delay += trail;\n\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n\n    const {\n      onResolve\n    } = payload;\n\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n\n        if (idle && transitions.some(t => t.expired)) {\n          exitingTransitions.current.delete(t);\n\n          if (exitBeforeEnter) {\n            forceChange.current = true;\n          }\n\n          forceUpdate();\n        }\n      }\n    };\n\n    const springs = getSprings(t.ctrl, payload);\n\n    if (phase === TransitionPhase.LEAVE && exitBeforeEnter) {\n      exitingTransitions.current.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    } else {\n      changes.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    }\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    if (hasContext) {\n      each(transitions, t => {\n        t.ctrl.start({\n          default: context\n        });\n      });\n    }\n  }, [context]);\n  each(changes, (_, t) => {\n    if (exitingTransitions.current.size) {\n      const ind = transitions.findIndex(state => state.key === t.key);\n      transitions.splice(ind, 1);\n    }\n  });\n  useIsomorphicLayoutEffect(() => {\n    each(exitingTransitions.current.size ? exitingTransitions.current : changes, ({\n      phase,\n      payload\n    }, t) => {\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n\n        if ((ctrl.ref || ref) && !forceChange.current) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n\n          if (forceChange.current) {\n            forceChange.current = false;\n          }\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\nlet nextKey = 1;\n\nfunction getKeys(items, {\n  key,\n  keys = key\n}, prevTransitions) {\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n\n      return nextKey++;\n    });\n  }\n\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\n\nconst _excluded$5 = [\"container\"];\nconst useScroll = (_ref = {}) => {\n  let {\n    container\n  } = _ref,\n      springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$5);\n\n  const [scrollValues, api] = useSpring(() => _extends({\n    scrollX: 0,\n    scrollY: 0,\n    scrollXProgress: 0,\n    scrollYProgress: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onScroll(({\n      x,\n      y\n    }) => {\n      api.start({\n        scrollX: x.current,\n        scrollXProgress: x.progress,\n        scrollY: y.current,\n        scrollYProgress: y.progress\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(scrollValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return scrollValues;\n};\n\nconst _excluded$4 = [\"container\"];\nconst useResize = _ref => {\n  let {\n    container\n  } = _ref,\n      springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n\n  const [sizeValues, api] = useSpring(() => _extends({\n    width: 0,\n    height: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onResize(({\n      width,\n      height\n    }) => {\n      api.start({\n        width,\n        height,\n        immediate: sizeValues.width.get() === 0 || sizeValues.height.get() === 0\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(sizeValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return sizeValues;\n};\n\nconst _excluded$3 = [\"to\", \"from\"],\n      _excluded2 = [\"root\", \"once\", \"amount\"];\nconst defaultThresholdOptions = {\n  any: 0,\n  all: 1\n};\nfunction useInView(props, args) {\n  const [isInView, setIsInView] = useState(false);\n  const ref = useRef();\n  const propsFn = is.fun(props) && props;\n  const springsProps = propsFn ? propsFn() : {};\n\n  const {\n    to = {},\n    from = {}\n  } = springsProps,\n        restSpringProps = _objectWithoutPropertiesLoose(springsProps, _excluded$3);\n\n  const intersectionArguments = propsFn ? args : props;\n  const [springs, api] = useSpring(() => _extends({\n    from\n  }, restSpringProps), []);\n  useIsomorphicLayoutEffect(() => {\n    const element = ref.current;\n\n    const _ref = intersectionArguments != null ? intersectionArguments : {},\n          {\n      root,\n      once,\n      amount = 'any'\n    } = _ref,\n          restArgs = _objectWithoutPropertiesLoose(_ref, _excluded2);\n\n    if (!element || once && isInView || typeof IntersectionObserver === 'undefined') return;\n    const activeIntersections = new WeakMap();\n\n    const onEnter = () => {\n      if (to) {\n        api.start(to);\n      }\n\n      setIsInView(true);\n\n      const cleanup = () => {\n        if (from) {\n          api.start(from);\n        }\n\n        setIsInView(false);\n      };\n\n      return once ? undefined : cleanup;\n    };\n\n    const handleIntersection = entries => {\n      entries.forEach(entry => {\n        const onLeave = activeIntersections.get(entry.target);\n\n        if (entry.isIntersecting === Boolean(onLeave)) {\n          return;\n        }\n\n        if (entry.isIntersecting) {\n          const newOnLeave = onEnter();\n\n          if (is.fun(newOnLeave)) {\n            activeIntersections.set(entry.target, newOnLeave);\n          } else {\n            observer.unobserve(entry.target);\n          }\n        } else if (onLeave) {\n          onLeave();\n          activeIntersections.delete(entry.target);\n        }\n      });\n    };\n\n    const observer = new IntersectionObserver(handleIntersection, _extends({\n      root: root && root.current || undefined,\n      threshold: typeof amount === 'number' || Array.isArray(amount) ? amount : defaultThresholdOptions[amount]\n    }, restArgs));\n    observer.observe(element);\n    return () => observer.unobserve(element);\n  }, [intersectionArguments]);\n\n  if (propsFn) {\n    return [ref, springs];\n  }\n\n  return [ref, isInView];\n}\n\nconst _excluded$2 = [\"children\"];\nfunction Spring(_ref) {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  return children(useSpring(props));\n}\n\nconst _excluded$1 = [\"items\", \"children\"];\nfunction Trail(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\n\nconst _excluded = [\"items\", \"children\"];\nfunction Transition(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return useTransition(items, props)(children);\n}\n\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n\n    const value = this._get();\n\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n\n  advance(_dt) {\n    const value = this._get();\n\n    const oldValue = this.get();\n\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n\n      this._onChange(value, this.idle);\n    }\n\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n\n    this._start();\n  }\n\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n\n    this._active.clear();\n\n    becomeIdle(this);\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else if (event.type == 'priority') {\n      this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n    }\n  }\n\n}\n\nfunction isIdle(source) {\n  return source.idle !== false;\n}\n\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\n\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\n\nconst to = (source, ...args) => new Interpolation(source, args);\nconst interpolate = (source, ...args) => (deprecateInterpolate(), new Interpolation(source, args));\n\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\n\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, inferTo, interpolate, to, update, useChain, useInView, useResize, useScroll, useSpring, useSpringRef, useSpringValue, useSprings, useTrail, useTransition };\n", "import { defineHidden, is, createInterpolator, eachProp, hasFluidValue, getFluidValue, each, isAnimatedString, useForceUpdate, useIsomorphicLayoutEffect, addFluidObserver, removeFluidObserver, raf, useOnce } from '@react-spring/shared';\nimport * as React from 'react';\nimport { forwardRef, useRef, useCallback, useEffect } from 'react';\n\nconst $node = Symbol.for('Animated:node');\nconst isAnimated = value => !!value && value[$node] === value;\nconst getAnimated = owner => owner && owner[$node];\nconst setAnimated = (owner, node) => defineHidden(owner, $node, node);\nconst getPayload = owner => owner && owner[$node] && owner[$node].getPayload();\nclass Animated {\n  constructor() {\n    this.payload = void 0;\n    setAnimated(this, this);\n  }\n\n  getPayload() {\n    return this.payload || [];\n  }\n\n}\n\nclass AnimatedValue extends Animated {\n  constructor(_value) {\n    super();\n    this.done = true;\n    this.elapsedTime = void 0;\n    this.lastPosition = void 0;\n    this.lastVelocity = void 0;\n    this.v0 = void 0;\n    this.durationProgress = 0;\n    this._value = _value;\n\n    if (is.num(this._value)) {\n      this.lastPosition = this._value;\n    }\n  }\n\n  static create(value) {\n    return new AnimatedValue(value);\n  }\n\n  getPayload() {\n    return [this];\n  }\n\n  getValue() {\n    return this._value;\n  }\n\n  setValue(value, step) {\n    if (is.num(value)) {\n      this.lastPosition = value;\n\n      if (step) {\n        value = Math.round(value / step) * step;\n\n        if (this.done) {\n          this.lastPosition = value;\n        }\n      }\n    }\n\n    if (this._value === value) {\n      return false;\n    }\n\n    this._value = value;\n    return true;\n  }\n\n  reset() {\n    const {\n      done\n    } = this;\n    this.done = false;\n\n    if (is.num(this._value)) {\n      this.elapsedTime = 0;\n      this.durationProgress = 0;\n      this.lastPosition = this._value;\n      if (done) this.lastVelocity = null;\n      this.v0 = null;\n    }\n  }\n\n}\n\nclass AnimatedString extends AnimatedValue {\n  constructor(value) {\n    super(0);\n    this._string = null;\n    this._toString = void 0;\n    this._toString = createInterpolator({\n      output: [value, value]\n    });\n  }\n\n  static create(value) {\n    return new AnimatedString(value);\n  }\n\n  getValue() {\n    let value = this._string;\n    return value == null ? this._string = this._toString(this._value) : value;\n  }\n\n  setValue(value) {\n    if (is.str(value)) {\n      if (value == this._string) {\n        return false;\n      }\n\n      this._string = value;\n      this._value = 1;\n    } else if (super.setValue(value)) {\n      this._string = null;\n    } else {\n      return false;\n    }\n\n    return true;\n  }\n\n  reset(goal) {\n    if (goal) {\n      this._toString = createInterpolator({\n        output: [this.getValue(), goal]\n      });\n    }\n\n    this._value = 0;\n    super.reset();\n  }\n\n}\n\nconst TreeContext = {\n  dependencies: null\n};\n\nclass AnimatedObject extends Animated {\n  constructor(source) {\n    super();\n    this.source = source;\n    this.setValue(source);\n  }\n\n  getValue(animated) {\n    const values = {};\n    eachProp(this.source, (source, key) => {\n      if (isAnimated(source)) {\n        values[key] = source.getValue(animated);\n      } else if (hasFluidValue(source)) {\n        values[key] = getFluidValue(source);\n      } else if (!animated) {\n        values[key] = source;\n      }\n    });\n    return values;\n  }\n\n  setValue(source) {\n    this.source = source;\n    this.payload = this._makePayload(source);\n  }\n\n  reset() {\n    if (this.payload) {\n      each(this.payload, node => node.reset());\n    }\n  }\n\n  _makePayload(source) {\n    if (source) {\n      const payload = new Set();\n      eachProp(source, this._addToPayload, payload);\n      return Array.from(payload);\n    }\n  }\n\n  _addToPayload(source) {\n    if (TreeContext.dependencies && hasFluidValue(source)) {\n      TreeContext.dependencies.add(source);\n    }\n\n    const payload = getPayload(source);\n\n    if (payload) {\n      each(payload, node => this.add(node));\n    }\n  }\n\n}\n\nclass AnimatedArray extends AnimatedObject {\n  constructor(source) {\n    super(source);\n  }\n\n  static create(source) {\n    return new AnimatedArray(source);\n  }\n\n  getValue() {\n    return this.source.map(node => node.getValue());\n  }\n\n  setValue(source) {\n    const payload = this.getPayload();\n\n    if (source.length == payload.length) {\n      return payload.map((node, i) => node.setValue(source[i])).some(Boolean);\n    }\n\n    super.setValue(source.map(makeAnimated));\n    return true;\n  }\n\n}\n\nfunction makeAnimated(value) {\n  const nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue;\n  return nodeType.create(value);\n}\n\nfunction getAnimatedType(value) {\n  const parentNode = getAnimated(value);\n  return parentNode ? parentNode.constructor : is.arr(value) ? AnimatedArray : isAnimatedString(value) ? AnimatedString : AnimatedValue;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nconst withAnimated = (Component, host) => {\n  const hasInstance = !is.fun(Component) || Component.prototype && Component.prototype.isReactComponent;\n  return forwardRef((givenProps, givenRef) => {\n    const instanceRef = useRef(null);\n    const ref = hasInstance && useCallback(value => {\n      instanceRef.current = updateRef(givenRef, value);\n    }, [givenRef]);\n    const [props, deps] = getAnimatedState(givenProps, host);\n    const forceUpdate = useForceUpdate();\n\n    const callback = () => {\n      const instance = instanceRef.current;\n\n      if (hasInstance && !instance) {\n        return;\n      }\n\n      const didUpdate = instance ? host.applyAnimatedValues(instance, props.getValue(true)) : false;\n\n      if (didUpdate === false) {\n        forceUpdate();\n      }\n    };\n\n    const observer = new PropsObserver(callback, deps);\n    const observerRef = useRef();\n    useIsomorphicLayoutEffect(() => {\n      observerRef.current = observer;\n      each(deps, dep => addFluidObserver(dep, observer));\n      return () => {\n        if (observerRef.current) {\n          each(observerRef.current.deps, dep => removeFluidObserver(dep, observerRef.current));\n          raf.cancel(observerRef.current.update);\n        }\n      };\n    });\n    useEffect(callback, []);\n    useOnce(() => () => {\n      const observer = observerRef.current;\n      each(observer.deps, dep => removeFluidObserver(dep, observer));\n    });\n    const usedProps = host.getComponentProps(props.getValue());\n    return React.createElement(Component, _extends({}, usedProps, {\n      ref: ref\n    }));\n  });\n};\n\nclass PropsObserver {\n  constructor(update, deps) {\n    this.update = update;\n    this.deps = deps;\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      raf.write(this.update);\n    }\n  }\n\n}\n\nfunction getAnimatedState(props, host) {\n  const dependencies = new Set();\n  TreeContext.dependencies = dependencies;\n  if (props.style) props = _extends({}, props, {\n    style: host.createAnimatedStyle(props.style)\n  });\n  props = new AnimatedObject(props);\n  TreeContext.dependencies = null;\n  return [props, dependencies];\n}\n\nfunction updateRef(ref, value) {\n  if (ref) {\n    if (is.fun(ref)) ref(value);else ref.current = value;\n  }\n\n  return value;\n}\n\nconst cacheKey = Symbol.for('AnimatedComponent');\nconst createHost = (components, {\n  applyAnimatedValues: _applyAnimatedValues = () => false,\n  createAnimatedStyle: _createAnimatedStyle = style => new AnimatedObject(style),\n  getComponentProps: _getComponentProps = props => props\n} = {}) => {\n  const hostConfig = {\n    applyAnimatedValues: _applyAnimatedValues,\n    createAnimatedStyle: _createAnimatedStyle,\n    getComponentProps: _getComponentProps\n  };\n\n  const animated = Component => {\n    const displayName = getDisplayName(Component) || 'Anonymous';\n\n    if (is.str(Component)) {\n      Component = animated[Component] || (animated[Component] = withAnimated(Component, hostConfig));\n    } else {\n      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));\n    }\n\n    Component.displayName = `Animated(${displayName})`;\n    return Component;\n  };\n\n  eachProp(components, (Component, key) => {\n    if (is.arr(components)) {\n      key = getDisplayName(Component);\n    }\n\n    animated[key] = animated(Component);\n  });\n  return {\n    animated\n  };\n};\n\nconst getDisplayName = arg => is.str(arg) ? arg : arg && is.str(arg.displayName) ? arg.displayName : is.fun(arg) && arg.name || null;\n\nexport { Animated, AnimatedArray, AnimatedObject, AnimatedString, AnimatedValue, createHost, getAnimated, getAnimatedType, getPayload, isAnimated, setAnimated };\n", "import { addEffect, applyProps } from '@react-three/fiber';\nimport { Globals } from '@react-spring/core';\nexport * from '@react-spring/core';\nimport { createStringInterpolator, colors, raf } from '@react-spring/shared';\nimport { createHost } from '@react-spring/animated';\nimport * as THREE from 'three';\n\nconst primitives = ['primitive'].concat(Object.keys(THREE).filter(key => /^[A-Z]/.test(key)).map(key => key[0].toLowerCase() + key.slice(1)));\n\nGlobals.assign({\n  createStringInterpolator,\n  colors,\n  frameLoop: 'demand'\n});\naddEffect(() => {\n  raf.advance();\n});\nconst host = createHost(primitives, {\n  applyAnimatedValues: applyProps\n});\nconst animated = host.animated;\n\nexport { animated as a, animated };\n", "import * as React from 'react';\nimport create from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\n\n// These are removed in Zustand v4\n// unknown\n\n// Zustand v3 marked deprecations in 3.x, but there's no visible upgrade path\n\nconst context = /* @__PURE__ */React.createContext(null);\nfunction KeyboardControls({\n  map,\n  children,\n  onChange,\n  domElement\n}) {\n  const key = map.map(item => item.name + item.keys).join('-');\n  const useControls = React.useMemo(() => {\n    return create(subscribeWithSelector(() => map.reduce((prev, cur) => ({\n      ...prev,\n      [cur.name]: false\n    }), {})));\n  }, [key]);\n  const api = React.useMemo(() => [useControls.subscribe, useControls.getState, useControls], [key]);\n  const set = useControls.setState;\n  React.useEffect(() => {\n    const config = map.map(({\n      name,\n      keys,\n      up\n    }) => ({\n      keys,\n      up,\n      fn: value => {\n        // Set zustand state\n        set({\n          [name]: value\n        });\n        // Inform callback\n        if (onChange) onChange(name, value, api[1]());\n      }\n    }));\n    const keyMap = config.reduce((out, {\n      keys,\n      fn,\n      up = true\n    }) => {\n      keys.forEach(key => out[key] = {\n        fn,\n        pressed: false,\n        up\n      });\n      return out;\n    }, {});\n    const downHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        pressed,\n        up\n      } = obj;\n      obj.pressed = true;\n      if (up || !pressed) fn(true);\n    };\n    const upHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        up\n      } = obj;\n      obj.pressed = false;\n      if (up) fn(false);\n    };\n    const source = domElement || window;\n    source.addEventListener('keydown', downHandler, {\n      passive: true\n    });\n    source.addEventListener('keyup', upHandler, {\n      passive: true\n    });\n    return () => {\n      source.removeEventListener('keydown', downHandler);\n      source.removeEventListener('keyup', upHandler);\n    };\n  }, [domElement, key]);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api,\n    children: children\n  });\n}\nfunction useKeyboardControls(sel) {\n  const [sub, get, store] = React.useContext(context);\n  if (sel) return store(sel);else return [sub, get];\n}\n\nexport { KeyboardControls, useKeyboardControls };\n", "var __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nconst redux = (reducer, initial) => (set, get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return __spreadValues$1({ dispatch: (...a) => api.dispatch(...a) }, initial);\n};\n\nfunction devtools(fn, options) {\n  return (set, get, api) => {\n    var _a;\n    let didWarnAboutNameDeprecation = false;\n    if (typeof options === \"string\" && !didWarnAboutNameDeprecation) {\n      console.warn(\"[zustand devtools middleware]: passing `name` as directly will be not allowed in next majorpass the `name` in an object `{ name: ... }` instead\");\n      didWarnAboutNameDeprecation = true;\n    }\n    const devtoolsOptions = options === void 0 ? { name: void 0, anonymousActionType: void 0 } : typeof options === \"string\" ? { name: options } : options;\n    if (typeof ((_a = devtoolsOptions == null ? void 0 : devtoolsOptions.serialize) == null ? void 0 : _a.options) !== \"undefined\") {\n      console.warn(\"[zustand devtools middleware]: `serialize.options` is deprecated, just use `serialize`\");\n    }\n    let extensionConnector;\n    try {\n      extensionConnector = window.__REDUX_DEVTOOLS_EXTENSION__ || window.top.__REDUX_DEVTOOLS_EXTENSION__;\n    } catch {\n    }\n    if (!extensionConnector) {\n      if ((import.meta.env && import.meta.env.MODE) !== \"production\" && typeof window !== \"undefined\") {\n        console.warn(\"[zustand devtools middleware] Please install/enable Redux devtools extension\");\n      }\n      return fn(set, get, api);\n    }\n    let extension = Object.create(extensionConnector.connect(devtoolsOptions));\n    let didWarnAboutDevtools = false;\n    Object.defineProperty(api, \"devtools\", {\n      get: () => {\n        if (!didWarnAboutDevtools) {\n          console.warn(\"[zustand devtools middleware] `devtools` property on the store is deprecated it will be removed in the next major.\\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly\");\n          didWarnAboutDevtools = true;\n        }\n        return extension;\n      },\n      set: (value) => {\n        if (!didWarnAboutDevtools) {\n          console.warn(\"[zustand devtools middleware] `api.devtools` is deprecated, it will be removed in the next major.\\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly\");\n          didWarnAboutDevtools = true;\n        }\n        extension = value;\n      }\n    });\n    let didWarnAboutPrefix = false;\n    Object.defineProperty(extension, \"prefix\", {\n      get: () => {\n        if (!didWarnAboutPrefix) {\n          console.warn(\"[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\\nWe no longer prefix the actions/names\" + devtoolsOptions.name === void 0 ? \", pass the `name` option to create a separate instance of devtools for each store.\" : \", because the `name` option already creates a separate instance of devtools for each store.\");\n          didWarnAboutPrefix = true;\n        }\n        return \"\";\n      },\n      set: () => {\n        if (!didWarnAboutPrefix) {\n          console.warn(\"[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\\nWe no longer prefix the actions/names\" + devtoolsOptions.name === void 0 ? \", pass the `name` option to create a separate instance of devtools for each store.\" : \", because the `name` option already creates a separate instance of devtools for each store.\");\n          didWarnAboutPrefix = true;\n        }\n      }\n    });\n    let isRecording = true;\n    api.setState = (state, replace, nameOrAction) => {\n      set(state, replace);\n      if (!isRecording)\n        return;\n      extension.send(nameOrAction === void 0 ? { type: devtoolsOptions.anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction, get());\n    };\n    const setStateFromDevtools = (...a) => {\n      const originalIsRecording = isRecording;\n      isRecording = false;\n      set(...a);\n      isRecording = originalIsRecording;\n    };\n    const initialState = fn(api.setState, get, api);\n    extension.init(initialState);\n    if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n      let didWarnAboutReservedActionType = false;\n      const originalDispatch = api.dispatch;\n      api.dispatch = (...a) => {\n        if (a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n          console.warn('[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.');\n          didWarnAboutReservedActionType = true;\n        }\n        originalDispatch(...a);\n      };\n    }\n    extension.subscribe((message) => {\n      var _a2;\n      switch (message.type) {\n        case \"ACTION\":\n          if (typeof message.payload !== \"string\") {\n            console.error(\"[zustand devtools middleware] Unsupported action format\");\n            return;\n          }\n          return parseJsonThen(message.payload, (action) => {\n            if (action.type === \"__setState\") {\n              setStateFromDevtools(action.state);\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          });\n        case \"DISPATCH\":\n          switch (message.payload.type) {\n            case \"RESET\":\n              setStateFromDevtools(initialState);\n              return extension.init(api.getState());\n            case \"COMMIT\":\n              return extension.init(api.getState());\n            case \"ROLLBACK\":\n              return parseJsonThen(message.state, (state) => {\n                setStateFromDevtools(state);\n                extension.init(api.getState());\n              });\n            case \"JUMP_TO_STATE\":\n            case \"JUMP_TO_ACTION\":\n              return parseJsonThen(message.state, (state) => {\n                setStateFromDevtools(state);\n              });\n            case \"IMPORT_STATE\": {\n              const { nextLiftedState } = message.payload;\n              const lastComputedState = (_a2 = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a2.state;\n              if (!lastComputedState)\n                return;\n              setStateFromDevtools(lastComputedState);\n              extension.send(null, nextLiftedState);\n              return;\n            }\n            case \"PAUSE_RECORDING\":\n              return isRecording = !isRecording;\n          }\n          return;\n      }\n    });\n    return initialState;\n  };\n}\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\"[zustand devtools middleware] Could not parse the received json\", e);\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelector = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\n\nconst combine = (initialState, create) => (set, get, api) => Object.assign({}, initialState, create(set, get, api));\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persist = (config, baseOptions) => (set, get, api) => {\n  let options = __spreadValues({\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => __spreadValues(__spreadValues({}, currentState), persistedState)\n  }, baseOptions);\n  if (options.blacklist || options.whitelist) {\n    console.warn(`The ${options.blacklist ? \"blacklist\" : \"whitelist\"} option is deprecated and will be removed in the next version. Please use the 'partialize' option instead.`);\n  }\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config((...args) => {\n      console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`);\n      set(...args);\n    }, get, api);\n  } else if (!storage.removeItem) {\n    console.warn(`[zustand persist middleware] The given storage for item '${options.name}' does not contain a 'removeItem' method, which will be required in v4.`);\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize(__spreadValues({}, get()));\n    if (options.whitelist) {\n      Object.keys(state).forEach((key) => {\n        var _a;\n        !((_a = options.whitelist) == null ? void 0 : _a.includes(key)) && delete state[key];\n      });\n    }\n    if (options.blacklist) {\n      options.blacklist.forEach((key) => delete state[key]);\n    }\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then((serializedValue) => storage.setItem(options.name, serializedValue)).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config((...args) => {\n    set(...args);\n    void setItem();\n  }, get, api);\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);\n          }\n          console.error(`State loaded from storage couldn't be migrated since no migrate function was provided`);\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(migratedState, (_a2 = get()) != null ? _a2 : configResult);\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = __spreadValues(__spreadValues({}, options), newOptions);\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      var _a;\n      (_a = storage == null ? void 0 : storage.removeItem) == null ? void 0 : _a.call(storage, options.name);\n    },\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\n\nexport { combine, devtools, persist, redux, subscribeWithSelector };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { SelectionBox } from 'three-stdlib';\nimport { useThree } from '@react-three/fiber';\nimport shallow from 'zustand/shallow';\n\nconst context = /* @__PURE__ */React.createContext([]);\nfunction Select({\n  box,\n  multiple,\n  children,\n  onChange,\n  onChangePointerUp,\n  border = '1px solid #55aaff',\n  backgroundColor = 'rgba(75, 160, 255, 0.1)',\n  filter: customFilter = item => item,\n  ...props\n}) {\n  const [downed, down] = React.useState(false);\n  const {\n    setEvents,\n    camera,\n    raycaster,\n    gl,\n    controls,\n    size,\n    get\n  } = useThree();\n  const [hovered, hover] = React.useState(false);\n  const [active, dispatch] = React.useReducer((state, {\n    object,\n    shift\n  }) => {\n    if (object === undefined) return [];else if (Array.isArray(object)) return object;else if (!shift) return state[0] === object ? [] : [object];else if (state.includes(object)) return state.filter(o => o !== object);else return [object, ...state];\n  }, []);\n  React.useEffect(() => {\n    if (downed) onChange == null || onChange(active);else onChangePointerUp == null || onChangePointerUp(active);\n  }, [active, downed]);\n  const onClick = React.useCallback(e => {\n    e.stopPropagation();\n    dispatch({\n      object: customFilter([e.object])[0],\n      shift: multiple && e.shiftKey\n    });\n  }, []);\n  const onPointerMissed = React.useCallback(e => !hovered && dispatch({}), [hovered]);\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (!box || !multiple) return;\n    const selBox = new SelectionBox(camera, ref.current);\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n    element.style.border = border;\n    element.style.backgroundColor = backgroundColor;\n    element.style.position = 'fixed';\n    const startPoint = new THREE.Vector2();\n    const pointTopLeft = new THREE.Vector2();\n    const pointBottomRight = new THREE.Vector2();\n    const oldRaycasterEnabled = get().events.enabled;\n    const oldControlsEnabled = controls == null ? void 0 : controls.enabled;\n    let isDown = false;\n    function prepareRay(event, vec) {\n      const {\n        offsetX,\n        offsetY\n      } = event;\n      const {\n        width,\n        height\n      } = size;\n      vec.set(offsetX / width * 2 - 1, -(offsetY / height) * 2 + 1);\n    }\n    function onSelectStart(event) {\n      var _gl$domElement$parent;\n      if (controls) controls.enabled = false;\n      setEvents({\n        enabled: false\n      });\n      down(isDown = true);\n      (_gl$domElement$parent = gl.domElement.parentElement) == null || _gl$domElement$parent.appendChild(element);\n      element.style.left = `${event.clientX}px`;\n      element.style.top = `${event.clientY}px`;\n      element.style.width = '0px';\n      element.style.height = '0px';\n      startPoint.x = event.clientX;\n      startPoint.y = event.clientY;\n    }\n    function onSelectMove(event) {\n      pointBottomRight.x = Math.max(startPoint.x, event.clientX);\n      pointBottomRight.y = Math.max(startPoint.y, event.clientY);\n      pointTopLeft.x = Math.min(startPoint.x, event.clientX);\n      pointTopLeft.y = Math.min(startPoint.y, event.clientY);\n      element.style.left = `${pointTopLeft.x}px`;\n      element.style.top = `${pointTopLeft.y}px`;\n      element.style.width = `${pointBottomRight.x - pointTopLeft.x}px`;\n      element.style.height = `${pointBottomRight.y - pointTopLeft.y}px`;\n    }\n    function onSelectOver() {\n      if (isDown) {\n        var _element$parentElemen;\n        if (controls) controls.enabled = oldControlsEnabled;\n        setEvents({\n          enabled: oldRaycasterEnabled\n        });\n        down(isDown = false);\n        (_element$parentElemen = element.parentElement) == null || _element$parentElemen.removeChild(element);\n      }\n    }\n    function pointerDown(event) {\n      if (event.shiftKey) {\n        onSelectStart(event);\n        prepareRay(event, selBox.startPoint);\n      }\n    }\n    let previous = [];\n    function pointerMove(event) {\n      if (isDown) {\n        onSelectMove(event);\n        prepareRay(event, selBox.endPoint);\n        const allSelected = selBox.select().sort(o => o.uuid).filter(o => o.isMesh);\n        if (!shallow(allSelected, previous)) {\n          previous = allSelected;\n          dispatch({\n            object: customFilter(allSelected)\n          });\n        }\n      }\n    }\n    function pointerUp(event) {\n      if (isDown) onSelectOver();\n    }\n    document.addEventListener('pointerdown', pointerDown, {\n      passive: true\n    });\n    document.addEventListener('pointermove', pointerMove, {\n      passive: true,\n      capture: true\n    });\n    document.addEventListener('pointerup', pointerUp, {\n      passive: true\n    });\n    return () => {\n      document.removeEventListener('pointerdown', pointerDown);\n      document.removeEventListener('pointermove', pointerMove, true);\n      document.removeEventListener('pointerup', pointerUp);\n    };\n  }, [size.width, size.height, raycaster, camera, controls, gl]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref,\n    onClick: onClick,\n    onPointerOver: () => hover(true),\n    onPointerOut: () => hover(false),\n    onPointerMissed: onPointerMissed\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: active\n  }, children));\n}\n\n// The return type is explicitly declared here because otherwise TypeScript will emit `THREE.Object3D<THREE.Event>[]`.\n// The meaning of the generic parameter for `Object3D` was changed in r156, so it should not be included so that it\n// works with all versions of @types/three.\nfunction useSelect() {\n  return React.useContext(context);\n}\n\nexport { Select, useSelect };\n", "function shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { shallow as default };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Quaternion } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\n/**\n * Wraps children in a billboarded group. Sample usage:\n *\n * ```js\n * <Billboard>\n *   <Text>hi</Text>\n * </Billboard>\n * ```\n */\nconst Billboard = /* @__PURE__ */React.forwardRef(function Billboard({\n  children,\n  follow = true,\n  lockX = false,\n  lockY = false,\n  lockZ = false,\n  ...props\n}, fref) {\n  const inner = React.useRef(null);\n  const localRef = React.useRef(null);\n  const q = new Quaternion();\n  useFrame(({\n    camera\n  }) => {\n    if (!follow || !localRef.current) return;\n\n    // save previous rotation in case we're locking an axis\n    const prevRotation = localRef.current.rotation.clone();\n\n    // always face the camera\n    localRef.current.updateMatrix();\n    localRef.current.updateWorldMatrix(false, false);\n    localRef.current.getWorldQuaternion(q);\n    camera.getWorldQuaternion(inner.current.quaternion).premultiply(q.invert());\n\n    // readjust any axis that is locked\n    if (lockX) localRef.current.rotation.x = prevRotation.x;\n    if (lockY) localRef.current.rotation.y = prevRotation.y;\n    if (lockZ) localRef.current.rotation.z = prevRotation.z;\n  });\n  React.useImperativeHandle(fref, () => localRef.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: localRef,\n    matrixAutoUpdate: false,\n    matrixWorldAutoUpdate: false\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children));\n});\n\nexport { Billboard };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst ScreenSpace = /* @__PURE__ */React.forwardRef(({\n  children,\n  depth = -1,\n  ...rest\n}, ref) => {\n  const localRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => localRef.current, []);\n  useFrame(({\n    camera\n  }) => {\n    localRef.current.quaternion.copy(camera.quaternion);\n    localRef.current.position.copy(camera.position);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: localRef\n  }, rest), /*#__PURE__*/React.createElement(\"group\", {\n    \"position-z\": -depth\n  }, children));\n});\n\nexport { ScreenSpace };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useRef } from 'react';\nimport { Vector3 } from 'three';\nimport { calculateScaleFactor } from './calculateScaleFactor.js';\n\nconst worldPos = /* @__PURE__ */new Vector3();\n/**\n * Wraps children in an `Object3D` and attempts to scale from\n * world units to screen units * scale factor.\n *\n * For example, this will render a box of roughly 1x1 pixel size,\n * independently of how far the camera is.\n *\n * ```jsx\n * <ScreenSizer>\n *   <Box />\n * </ScreenSizer>\n * ```\n */\nconst ScreenSizer = /* @__PURE__ */forwardRef(({\n  scale = 1,\n  ...props\n}, ref) => {\n  const container = useRef(null);\n  React.useImperativeHandle(ref, () => container.current, []);\n  useFrame(state => {\n    const obj = container.current;\n    if (!obj) return;\n    const sf = calculateScaleFactor(obj.getWorldPosition(worldPos), scale, state.camera, state.size);\n    obj.scale.setScalar(sf * scale);\n  });\n  return /*#__PURE__*/React.createElement(\"object3D\", _extends({\n    ref: container\n  }, props));\n});\n\nexport { ScreenSizer };\n", "import * as THREE from 'three';\n\nconst tV0 = /* @__PURE__ */new THREE.Vector3();\nconst tV1 = /* @__PURE__ */new THREE.Vector3();\nconst tV2 = /* @__PURE__ */new THREE.Vector3();\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n  return scale;\n};\n\nexport { calculateScaleFactor };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { QuadraticBezierCurve3, Vector3 } from 'three';\nimport { Line } from './Line.js';\n\nconst v = /* @__PURE__ */new Vector3();\nconst QuadraticBezierLine = /* @__PURE__ */React.forwardRef(function QuadraticBezierLine({\n  start = [0, 0, 0],\n  end = [0, 0, 0],\n  mid,\n  segments = 20,\n  ...rest\n}, forwardref) {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardref, () => ref.current);\n  const [curve] = React.useState(() => new QuadraticBezierCurve3(undefined, undefined, undefined));\n  const getPoints = React.useCallback((start, end, mid, segments = 20) => {\n    if (start instanceof Vector3) curve.v0.copy(start);else curve.v0.set(...start);\n    if (end instanceof Vector3) curve.v2.copy(end);else curve.v2.set(...end);\n    if (mid instanceof Vector3) {\n      curve.v1.copy(mid);\n    } else if (Array.isArray(mid)) {\n      curve.v1.set(...mid);\n    } else {\n      curve.v1.copy(curve.v0.clone().add(curve.v2.clone().sub(curve.v0)).add(v.set(0, curve.v0.y - curve.v2.y, 0)));\n    }\n    return curve.getPoints(segments);\n  }, []);\n  React.useLayoutEffect(() => {\n    ref.current.setPoints = (start, end, mid) => {\n      const points = getPoints(start, end, mid);\n      if (ref.current.geometry) ref.current.geometry.setPositions(points.map(p => p.toArray()).flat());\n    };\n  }, []);\n  const points = React.useMemo(() => getPoints(start, end, mid, segments), [start, end, mid, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: ref,\n    points: points\n  }, rest));\n});\n\nexport { QuadraticBezierLine };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, Vector4, Vector2, Color } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { LineSegments2, Line2, LineMaterial, LineSegmentsGeometry, LineGeometry } from 'three-stdlib';\n\nconst Line = /* @__PURE__ */React.forwardRef(function Line({\n  points,\n  color = 0xffffff,\n  vertexColors,\n  linewidth,\n  lineWidth,\n  segments,\n  dashed,\n  ...rest\n}, ref) {\n  var _vertexColors$, _ref;\n  const size = useThree(state => state.size);\n  const line2 = React.useMemo(() => segments ? new LineSegments2() : new Line2(), [segments]);\n  const [lineMaterial] = React.useState(() => new LineMaterial());\n  const itemSize = (vertexColors == null || (_vertexColors$ = vertexColors[0]) == null ? void 0 : _vertexColors$.length) === 4 ? 4 : 3;\n  const lineGeom = React.useMemo(() => {\n    const geom = segments ? new LineSegmentsGeometry() : new LineGeometry();\n    const pValues = points.map(p => {\n      const isArray = Array.isArray(p);\n      return p instanceof Vector3 || p instanceof Vector4 ? [p.x, p.y, p.z] : p instanceof Vector2 ? [p.x, p.y, 0] : isArray && p.length === 3 ? [p[0], p[1], p[2]] : isArray && p.length === 2 ? [p[0], p[1], 0] : p;\n    });\n    geom.setPositions(pValues.flat());\n    if (vertexColors) {\n      // using vertexColors requires the color value to be white see #1813\n      color = 0xffffff;\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\n      geom.setColors(cValues.flat(), itemSize);\n    }\n    return geom;\n  }, [points, segments, vertexColors, itemSize]);\n  React.useLayoutEffect(() => {\n    line2.computeLineDistances();\n  }, [points, line2]);\n  React.useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  React.useEffect(() => {\n    return () => lineGeom.dispose();\n  }, [lineGeom]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: lineGeom,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: [size.width, size.height],\n    linewidth: (_ref = linewidth !== null && linewidth !== void 0 ? linewidth : lineWidth) !== null && _ref !== void 0 ? _ref : 1,\n    dashed: dashed,\n    transparent: itemSize === 4\n  }, rest)));\n});\n\nexport { Line };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CubicBezierCurve3 } from 'three';\nimport { Line } from './Line.js';\n\nconst CubicBezierLine = /* @__PURE__ */React.forwardRef(function CubicBezierLine({\n  start,\n  end,\n  midA,\n  midB,\n  segments = 20,\n  ...rest\n}, ref) {\n  const points = React.useMemo(() => {\n    const startV = start instanceof Vector3 ? start : new Vector3(...start);\n    const endV = end instanceof Vector3 ? end : new Vector3(...end);\n    const midAV = midA instanceof Vector3 ? midA : new Vector3(...midA);\n    const midBV = midB instanceof Vector3 ? midB : new Vector3(...midB);\n    const interpolatedV = new CubicBezierCurve3(startV, midAV, midBV, endV).getPoints(segments);\n    return interpolatedV;\n  }, [start, end, midA, midB, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: ref,\n    points: points\n  }, rest));\n});\n\nexport { CubicBezierLine };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CatmullRomCurve3, Color } from 'three';\nimport { Line } from './Line.js';\n\nconst CatmullRomLine = /* @__PURE__ */React.forwardRef(function CatmullRomLine({\n  points,\n  closed = false,\n  curveType = 'centripetal',\n  tension = 0.5,\n  segments = 20,\n  vertexColors,\n  ...rest\n}, ref) {\n  const curve = React.useMemo(() => {\n    const mappedPoints = points.map(pt => pt instanceof Vector3 ? pt : new Vector3(...pt));\n    return new CatmullRomCurve3(mappedPoints, closed, curveType, tension);\n  }, [points, closed, curveType, tension]);\n  const segmentedPoints = React.useMemo(() => curve.getPoints(segments), [curve, segments]);\n  const interpolatedVertexColors = React.useMemo(() => {\n    if (!vertexColors || vertexColors.length < 2) return undefined;\n    if (vertexColors.length === segments + 1) return vertexColors;\n    const mappedColors = vertexColors.map(color => color instanceof Color ? color : new Color(...color));\n    if (closed) mappedColors.push(mappedColors[0].clone());\n    const iColors = [mappedColors[0]];\n    const divisions = segments / (mappedColors.length - 1);\n    for (let i = 1; i < segments; i++) {\n      const alpha = i % divisions / divisions;\n      const colorIndex = Math.floor(i / divisions);\n      iColors.push(mappedColors[colorIndex].clone().lerp(mappedColors[colorIndex + 1], alpha));\n    }\n    iColors.push(mappedColors[mappedColors.length - 1]);\n    return iColors;\n  }, [vertexColors, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: ref,\n    points: segmentedPoints,\n    vertexColors: interpolatedVertexColors\n  }, rest));\n});\n\nexport { CatmullRomLine };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { AudioListener, AudioLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\n\nconst PositionalAudio = /* @__PURE__ */React.forwardRef(({\n  url,\n  distance = 1,\n  loop = true,\n  autoplay,\n  ...props\n}, ref) => {\n  const sound = React.useRef(null);\n  React.useImperativeHandle(ref, () => sound.current, []);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const [listener] = React.useState(() => new AudioListener());\n  const buffer = useLoader(AudioLoader, url);\n  React.useEffect(() => {\n    const _sound = sound.current;\n    if (_sound) {\n      _sound.setBuffer(buffer);\n      _sound.setRefDistance(distance);\n      _sound.setLoop(loop);\n      if (autoplay && !_sound.isPlaying) _sound.play();\n    }\n  }, [buffer, camera, distance, loop]);\n  React.useEffect(() => {\n    const _sound = sound.current;\n    camera.add(listener);\n    return () => {\n      camera.remove(listener);\n      if (_sound) {\n        if (_sound.isPlaying) _sound.stop();\n        if (_sound.source && _sound.source._connected) _sound.disconnect();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"positionalAudio\", _extends({\n    ref: sound,\n    args: [listener]\n  }, props));\n});\n\nexport { PositionalAudio };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\n// eslint-disable-next-line prettier/prettier\nconst Text = /* @__PURE__ */React.forwardRef(({\n  sdfGlyphSize = 64,\n  anchorX = 'center',\n  anchorY = 'middle',\n  font,\n  fontSize = 1,\n  children,\n  characters,\n  onSync,\n  ...props\n}, ref) => {\n  // https://github.com/pmndrs/drei/issues/1725\n  // https://github.com/pmndrs/drei/issues/1840\n  const {\n    Text: TextMeshImpl,\n    preloadFont\n  } = suspend(async () => import('troika-three-text'), []);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const [troikaMesh] = React.useState(() => new TextMeshImpl());\n  const [nodes, text] = React.useMemo(() => {\n    const n = [];\n    let t = '';\n    React.Children.forEach(children, child => {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  suspend(() => new Promise(res => preloadFont({\n    font,\n    characters\n  }, res)), ['troika-text', font, characters]);\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  React.useEffect(() => {\n    return () => troikaMesh.dispose();\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    font: font,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY,\n    fontSize: fontSize,\n    sdfGlyphSize: sdfGlyphSize\n  }, props), nodes);\n});\n\nexport { Text };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { TextGeometry, mergeVertices } from 'three-stdlib';\nimport { useFont } from './useFont.js';\n\nconst types = ['string', 'number'];\nconst getTextFromChildren = children => {\n  let label = '';\n  const rest = [];\n  React.Children.forEach(children, child => {\n    if (types.includes(typeof child)) label += child + '';else rest.push(child);\n  });\n  return [label, ...rest];\n};\nconst Text3D = /* @__PURE__ */React.forwardRef(({\n  font: _font,\n  letterSpacing = 0,\n  lineHeight = 1,\n  size = 1,\n  height = 0.2,\n  bevelThickness = 0.1,\n  bevelSize = 0.01,\n  bevelEnabled = false,\n  bevelOffset = 0,\n  bevelSegments = 4,\n  curveSegments = 8,\n  smooth,\n  children,\n  ...props\n}, fref) => {\n  React.useMemo(() => extend({\n    RenamedTextGeometry: TextGeometry\n  }), []);\n  const ref = React.useRef(null);\n  const font = useFont(_font);\n  const opts = useMemo(() => {\n    return {\n      font,\n      size,\n      height,\n      bevelThickness,\n      bevelSize,\n      bevelEnabled,\n      bevelSegments,\n      bevelOffset,\n      curveSegments,\n      letterSpacing,\n      lineHeight\n    };\n  }, [font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelSegments, bevelOffset, curveSegments, letterSpacing, lineHeight]);\n\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n  const [label, ...rest] = useMemo(() => getTextFromChildren(children), [children]);\n  const args = React.useMemo(() => [label, opts], [label, opts]);\n  React.useLayoutEffect(() => {\n    if (smooth) {\n      ref.current.geometry = mergeVertices(ref.current.geometry, smooth);\n      ref.current.geometry.computeVertexNormals();\n    }\n  }, [args, smooth]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), rest);\n});\n\nexport { Text3D };\n", "import { FontLoader } from 'three-stdlib';\nimport { suspend, preload, clear } from 'suspend-react';\n\nlet fontLoader = null;\nasync function loadFontData(font) {\n  return typeof font === 'string' ? await (await fetch(font)).json() : font;\n}\nfunction parseFontData(fontData) {\n  if (!fontLoader) {\n    fontLoader = new FontLoader();\n  }\n  return fontLoader.parse(fontData);\n}\nasync function loader(font) {\n  const data = await loadFontData(font);\n  return parseFontData(data);\n}\nfunction useFont(font) {\n  return suspend(loader, [font]);\n}\nuseFont.preload = font => preload(loader, [font]);\nuseFont.clear = font => clear([font]);\n\nexport { useFont };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { WebGLRenderTarget, HalfFloatType, RGBAFormat, UnsignedByteType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { EffectComposer, RenderPass, ShaderPass, GammaCorrectionShader } from 'three-stdlib';\n\nconst isWebGL2Available = () => {\n  try {\n    var canvas = document.createElement('canvas');\n    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n  } catch (e) {\n    return false;\n  }\n};\nconst Effects = /* @__PURE__ */React.forwardRef(({\n  children,\n  multisamping = 8,\n  renderIndex = 1,\n  disableRender,\n  disableGamma,\n  disableRenderPass,\n  depthBuffer = true,\n  stencilBuffer = false,\n  anisotropy = 1,\n  encoding,\n  type,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    EffectComposer,\n    RenderPass,\n    ShaderPass\n  }), []);\n  const composer = React.useRef(null);\n  React.useImperativeHandle(ref, () => composer.current, []);\n  const {\n    scene,\n    camera,\n    gl,\n    size,\n    viewport\n  } = useThree();\n  const [target] = React.useState(() => {\n    const t = new WebGLRenderTarget(size.width, size.height, {\n      type: type || HalfFloatType,\n      format: RGBAFormat,\n      depthBuffer,\n      stencilBuffer,\n      anisotropy\n    });\n\n    // sRGB textures must be RGBA8 since r137 https://github.com/mrdoob/three.js/pull/23129\n    if (type === UnsignedByteType && encoding != null) {\n      if ('colorSpace' in t) t.texture.colorSpace = encoding;else t.texture.encoding = encoding;\n    }\n    t.samples = multisamping;\n    return t;\n  });\n  React.useEffect(() => {\n    var _composer$current, _composer$current2;\n    (_composer$current = composer.current) == null || _composer$current.setSize(size.width, size.height);\n    (_composer$current2 = composer.current) == null || _composer$current2.setPixelRatio(viewport.dpr);\n  }, [gl, size, viewport.dpr]);\n  useFrame(() => {\n    var _composer$current3;\n    if (!disableRender) (_composer$current3 = composer.current) == null || _composer$current3.render();\n  }, renderIndex);\n  const passes = [];\n  if (!disableRenderPass) passes.push( /*#__PURE__*/React.createElement(\"renderPass\", {\n    key: \"renderpass\",\n    attach: `passes-${passes.length}`,\n    args: [scene, camera]\n  }));\n  if (!disableGamma) passes.push( /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attach: `passes-${passes.length}`,\n    key: \"gammapass\",\n    args: [GammaCorrectionShader]\n  }));\n  React.Children.forEach(children, el => {\n    el && passes.push( /*#__PURE__*/React.cloneElement(el, {\n      key: passes.length,\n      attach: `passes-${passes.length}`\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"effectComposer\", _extends({\n    ref: composer,\n    args: [gl, target]\n  }, props), passes);\n});\n\nexport { Effects, isWebGL2Available };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nlet GradientType = /*#__PURE__*/function (GradientType) {\n  GradientType[\"Linear\"] = \"linear\";\n  GradientType[\"Radial\"] = \"radial\";\n  return GradientType;\n}({});\nfunction GradientTexture({\n  stops,\n  colors,\n  size = 1024,\n  width = 16,\n  //@ts-ignore - weird error about type never, although the type is clearly defined\n  type = GradientType.Linear,\n  innerCircleRadius = 0,\n  outerCircleRadius = 'auto',\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const canvas = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = width;\n    canvas.height = size;\n    let gradient;\n    if (type === GradientType.Linear) {\n      gradient = context.createLinearGradient(0, 0, 0, size);\n    } else {\n      const canvasCenterX = canvas.width / 2;\n      const canvasCenterY = canvas.height / 2;\n      const radius = outerCircleRadius !== 'auto' ? Math.abs(Number(outerCircleRadius)) : Math.sqrt(canvasCenterX ** 2 + canvasCenterY ** 2);\n      gradient = context.createRadialGradient(canvasCenterX, canvasCenterY, Math.abs(innerCircleRadius), canvasCenterX, canvasCenterY, radius);\n    }\n    let i = stops.length;\n    while (i--) {\n      gradient.addColorStop(stops[i], colors[i]);\n    }\n    context.save();\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, size);\n    context.restore();\n    return canvas;\n  }, [stops]);\n\n  // @ts-ignore ????\n  return /*#__PURE__*/React.createElement(\"canvasTexture\", _extends({\n    colorSpace: gl.outputColorSpace,\n    args: [canvas],\n    attach: \"map\"\n  }, props));\n}\n\nexport { GradientTexture, GradientType };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useTexture } from './useTexture.js';\nimport { version } from '../helpers/constants.js';\n\n// {texture: THREE.Texture} XOR {url: string}\n\nconst ImageMaterialImpl = /* @__PURE__ */shaderMaterial({\n  color: /* @__PURE__ */new THREE.Color('white'),\n  scale: /* @__PURE__ */new THREE.Vector2(1, 1),\n  imageBounds: /* @__PURE__ */new THREE.Vector2(1, 1),\n  resolution: 1024,\n  map: null,\n  zoom: 1,\n  radius: 0,\n  grayscale: 0,\n  opacity: 1\n}, /* glsl */`\n  varying vec2 vUv;\n  varying vec2 vPos;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n    vPos = position.xy;\n  }\n`, /* glsl */`\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  varying vec2 vPos;\n  uniform vec2 scale;\n  uniform vec2 imageBounds;\n  uniform float resolution;\n  uniform vec3 color;\n  uniform sampler2D map;\n  uniform float radius;\n  uniform float zoom;\n  uniform float grayscale;\n  uniform float opacity;\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n  vec2 aspect(vec2 size) {\n    return size / min(size.x, size.y);\n  }\n  \n  const float PI = 3.14159265;\n    \n  // from https://iquilezles.org/articles/distfunctions\n  float udRoundBox( vec2 p, vec2 b, float r ) {\n    return length(max(abs(p)-b+r,0.0))-r;\n  }\n\n  void main() {\n    vec2 s = aspect(scale);\n    vec2 i = aspect(imageBounds);\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n\n    vec2 res = vec2(scale * resolution);\n    vec2 halfRes = 0.5 * res;\n    float b = udRoundBox(vUv.xy * res - halfRes, halfRes, resolution * radius);    \n\t  vec3 a = mix(vec3(1.0,0.0,0.0), vec3(0.0,0.0,0.0), smoothstep(0.0, 1.0, b));\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity * a), grayscale);\n    \n    #include <tonemapping_fragment>\n    #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n  }\n`);\nconst ImageBase = /* @__PURE__ */React.forwardRef(({\n  children,\n  color,\n  segments = 1,\n  scale = 1,\n  zoom = 1,\n  grayscale = 0,\n  opacity = 1,\n  radius = 0,\n  texture,\n  toneMapped,\n  transparent,\n  side,\n  ...props\n}, fref) => {\n  extend({\n    ImageMaterial: ImageMaterialImpl\n  });\n  const ref = React.useRef(null);\n  const size = useThree(state => state.size);\n  const planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\n  const imageBounds = [texture.image.width, texture.image.height];\n  const resolution = Math.max(size.width, size.height);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    // Support arbitrary plane geometries (for instance with rounded corners)\n    // @ts-ignore\n    if (ref.current.geometry.parameters) {\n      // @ts-ignore\n      ref.current.material.scale.set(\n      // @ts-ignore\n      planeBounds[0] * ref.current.geometry.parameters.width,\n      // @ts-ignore\n      planeBounds[1] * ref.current.geometry.parameters.height);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: Array.isArray(scale) ? [...scale, 1] : scale\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\n    color: color,\n    map: texture,\n    zoom: zoom,\n    grayscale: grayscale,\n    opacity: opacity,\n    scale: planeBounds,\n    imageBounds: imageBounds,\n    resolution: resolution,\n    radius: radius,\n    toneMapped: toneMapped,\n    transparent: transparent,\n    side: side,\n    key: ImageMaterialImpl.key\n  }), children);\n});\nconst ImageWithUrl = /* @__PURE__ */React.forwardRef(({\n  url,\n  ...props\n}, ref) => {\n  const texture = useTexture(url);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    texture: texture,\n    ref: ref\n  }));\n});\nconst ImageWithTexture = /* @__PURE__ */React.forwardRef(({\n  url: _url,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    ref: ref\n  }));\n});\nconst Image = /* @__PURE__ */React.forwardRef((props, ref) => {\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\n    ref: ref\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\n    ref: ref\n  }));else throw new Error('<Image /> requires a url or texture');\n});\n\nexport { Image };\n", "import * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  const material = class material extends THREE.ShaderMaterial {\n    constructor(parameters = {}) {\n      const entries = Object.entries(uniforms);\n      // Create unforms and shaders\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = THREE.UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return {\n            ...acc,\n            ...uniform\n          };\n        }, {}),\n        vertexShader,\n        fragmentShader\n      });\n      // Create getter/setters\n      this.key = '';\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n\n      // Assign parameters, this might include uniforms\n      Object.assign(this, parameters);\n      // Call onInit\n      if (onInit) onInit(this);\n    }\n  };\n  material.key = THREE.MathUtils.generateUUID();\n  return material;\n}\n\nexport { shaderMaterial };\n", "import { TextureLoader, Texture } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useLayoutEffect, useEffect, useMemo } from 'react';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input, onLoad) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(() => {\n    onLoad == null || onLoad(textures);\n  }, [onLoad]);\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  // NOTE: only available for WebGLRenderer\n  useEffect(() => {\n    if ('initTexture' in gl) {\n      let textureArray = [];\n      if (Array.isArray(textures)) {\n        textureArray = textures;\n      } else if (textures instanceof Texture) {\n        textureArray = [textures];\n      } else if (IsObject(textures)) {\n        textureArray = Object.values(textures);\n      }\n      textureArray.forEach(texture => {\n        if (texture instanceof Texture) {\n          gl.initTexture(texture);\n        }\n      });\n    }\n  }, [gl, textures]);\n  const mappedTextures = useMemo(() => {\n    if (IsObject(input)) {\n      const keyed = {};\n      let i = 0;\n      for (const key in input) keyed[key] = textures[i++];\n      return keyed;\n    } else {\n      return textures;\n    }\n  }, [input, textures]);\n  return mappedTextures;\n}\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { IsObject, useTexture };\n", "import { REVISION } from 'three';\n\nconst getVersion = () => parseInt(REVISION.replace(/\\D+/g, ''));\nconst version = /* @__PURE__ */getVersion();\n\nexport { version };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { Line } from './Line.js';\n\nconst Edges = /* @__PURE__ */React.forwardRef(({\n  threshold = 15,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  const tmpPoints = React.useMemo(() => [0, 0, 0, 1, 0, 0], []);\n  const memoizedGeometry = React.useRef();\n  const memoizedThreshold = React.useRef();\n  React.useLayoutEffect(() => {\n    const parent = ref.current.parent;\n    if (parent) {\n      const geometry = parent.geometry;\n      if (geometry !== memoizedGeometry.current || threshold !== memoizedThreshold.current) {\n        memoizedGeometry.current = geometry;\n        memoizedThreshold.current = threshold;\n        const points = new THREE.EdgesGeometry(geometry, threshold).attributes.position.array;\n        ref.current.geometry.setPositions(points);\n        ref.current.geometry.attributes.instanceStart.needsUpdate = true;\n        ref.current.geometry.attributes.instanceEnd.needsUpdate = true;\n        ref.current.computeLineDistances();\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    segments: true,\n    points: tmpPoints,\n    ref: ref,\n    raycast: () => null\n  }, props));\n});\n\nexport { Edges };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useThree, extend, applyProps } from '@react-three/fiber';\nimport { toCreasedNormals } from 'three-stdlib';\nimport { version } from '../helpers/constants.js';\n\nconst OutlinesMaterial = /* @__PURE__ */shaderMaterial({\n  screenspace: false,\n  color: /* @__PURE__ */new THREE.Color('black'),\n  opacity: 1,\n  thickness: 0.05,\n  size: /* @__PURE__ */new THREE.Vector2()\n}, `#include <common>\n   #include <morphtarget_pars_vertex>\n   #include <skinning_pars_vertex>\n   uniform float thickness;\n   uniform float screenspace;\n   uniform vec2 size;\n   void main() {\n     #if defined (USE_SKINNING)\n\t     #include <beginnormal_vertex>\n       #include <morphnormal_vertex>\n       #include <skinbase_vertex>\n       #include <skinnormal_vertex>\n       #include <defaultnormal_vertex>\n     #endif\n     #include <begin_vertex>\n\t   #include <morphtarget_vertex>\n\t   #include <skinning_vertex>\n     #include <project_vertex>\n     vec4 tNormal = vec4(normal, 0.0);\n     vec4 tPosition = vec4(transformed, 1.0);\n     #ifdef USE_INSTANCING\n       tNormal = instanceMatrix * tNormal;\n       tPosition = instanceMatrix * tPosition;\n     #endif\n     if (screenspace == 0.0) {\n       vec3 newPosition = tPosition.xyz + tNormal.xyz * thickness;\n       gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0); \n     } else {\n       vec4 clipPosition = projectionMatrix * modelViewMatrix * tPosition;\n       vec4 clipNormal = projectionMatrix * modelViewMatrix * tNormal;\n       vec2 offset = normalize(clipNormal.xy) * thickness / size * clipPosition.w * 2.0;\n       clipPosition.xy += offset;\n       gl_Position = clipPosition;\n     }\n   }`, `uniform vec3 color;\n   uniform float opacity;\n   void main(){\n     gl_FragColor = vec4(color, opacity);\n     #include <tonemapping_fragment>\n     #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nfunction Outlines({\n  color = 'black',\n  opacity = 1,\n  transparent = false,\n  screenspace = false,\n  toneMapped = true,\n  polygonOffset = false,\n  polygonOffsetFactor = 0,\n  renderOrder = 0,\n  thickness = 0.05,\n  angle = Math.PI,\n  ...props\n}) {\n  const ref = React.useRef();\n  const [material] = React.useState(() => new OutlinesMaterial({\n    side: THREE.BackSide\n  }));\n  const {\n    gl\n  } = useThree();\n  const contextSize = gl.getDrawingBufferSize(new THREE.Vector2());\n  React.useMemo(() => extend({\n    OutlinesMaterial\n  }), []);\n  const oldAngle = React.useRef(0);\n  const oldGeometry = React.useRef();\n  React.useLayoutEffect(() => {\n    const group = ref.current;\n    if (!group) return;\n    const parent = group.parent;\n    if (parent && parent.geometry) {\n      if (oldAngle.current !== angle || oldGeometry.current !== parent.geometry) {\n        var _group$children;\n        oldAngle.current = angle;\n        oldGeometry.current = parent.geometry;\n\n        // Remove old mesh\n        let mesh = (_group$children = group.children) == null ? void 0 : _group$children[0];\n        if (mesh) {\n          if (angle) mesh.geometry.dispose();\n          group.remove(mesh);\n        }\n        if (parent.skeleton) {\n          mesh = new THREE.SkinnedMesh();\n          mesh.material = material;\n          mesh.bind(parent.skeleton, parent.bindMatrix);\n          group.add(mesh);\n        } else if (parent.isInstancedMesh) {\n          mesh = new THREE.InstancedMesh(parent.geometry, material, parent.count);\n          mesh.instanceMatrix = parent.instanceMatrix;\n          group.add(mesh);\n        } else {\n          mesh = new THREE.Mesh();\n          mesh.material = material;\n          group.add(mesh);\n        }\n        mesh.geometry = angle ? toCreasedNormals(parent.geometry, angle) : parent.geometry;\n      }\n    }\n  });\n  React.useLayoutEffect(() => {\n    const group = ref.current;\n    if (!group) return;\n    const mesh = group.children[0];\n    if (mesh) {\n      mesh.renderOrder = renderOrder;\n      applyProps(mesh.material, {\n        transparent,\n        thickness,\n        color,\n        opacity,\n        size: contextSize,\n        screenspace,\n        toneMapped,\n        polygonOffset,\n        polygonOffsetFactor\n      });\n    }\n  });\n  React.useEffect(() => {\n    return () => {\n      // Dispose everything on unmount\n      const group = ref.current;\n      if (!group) return;\n      const mesh = group.children[0];\n      if (mesh) {\n        if (angle) mesh.geometry.dispose();\n        group.remove(mesh);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n}\n\nexport { Outlines };\n", "import { useFrame, useThree, createPortal } from '@react-three/fiber';\nimport * as React from 'react';\nimport { Vector3, Object3D, Vector2 } from 'three';\nimport { MeshLineGeometry, MeshLineMaterial } from 'meshline';\n\nconst defaults = {\n  width: 0.2,\n  length: 1,\n  decay: 1,\n  local: false,\n  stride: 0,\n  interval: 1\n};\nconst shiftLeft = (collection, steps = 1) => {\n  collection.set(collection.subarray(steps));\n  collection.fill(-Infinity, -steps);\n  return collection;\n};\nfunction useTrail(target, settings) {\n  const {\n    length,\n    local,\n    decay,\n    interval,\n    stride\n  } = {\n    ...defaults,\n    ...settings\n  };\n  const points = React.useRef();\n  const [worldPosition] = React.useState(() => new Vector3());\n  React.useLayoutEffect(() => {\n    if (target) {\n      points.current = Float32Array.from({\n        length: length * 10 * 3\n      }, (_, i) => target.position.getComponent(i % 3));\n    }\n  }, [length, target]);\n  const prevPosition = React.useRef(new Vector3());\n  const frameCount = React.useRef(0);\n  useFrame(() => {\n    if (!target) return;\n    if (!points.current) return;\n    if (frameCount.current === 0) {\n      let newPosition;\n      if (local) {\n        newPosition = target.position;\n      } else {\n        target.getWorldPosition(worldPosition);\n        newPosition = worldPosition;\n      }\n      const steps = 1 * decay;\n      for (let i = 0; i < steps; i++) {\n        if (newPosition.distanceTo(prevPosition.current) < stride) continue;\n        shiftLeft(points.current, 3);\n        points.current.set(newPosition.toArray(), points.current.length - 3);\n      }\n      prevPosition.current.copy(newPosition);\n    }\n    frameCount.current++;\n    frameCount.current = frameCount.current % interval;\n  });\n  return points;\n}\nconst Trail = /* @__PURE__ */React.forwardRef((props, forwardRef) => {\n  const {\n    children\n  } = props;\n  const {\n    width,\n    length,\n    decay,\n    local,\n    stride,\n    interval\n  } = {\n    ...defaults,\n    ...props\n  };\n  const {\n    color = 'hotpink',\n    attenuation,\n    target\n  } = props;\n  const size = useThree(s => s.size);\n  const scene = useThree(s => s.scene);\n  const ref = React.useRef(null);\n  const [anchor, setAnchor] = React.useState(null);\n  const points = useTrail(anchor, {\n    length,\n    decay,\n    local,\n    stride,\n    interval\n  });\n  React.useEffect(() => {\n    const t = (target == null ? void 0 : target.current) || ref.current.children.find(o => {\n      return o instanceof Object3D;\n    });\n    if (t) {\n      setAnchor(t);\n    }\n  }, [points, target]);\n  const geo = React.useMemo(() => new MeshLineGeometry(), []);\n  const mat = React.useMemo(() => {\n    var _matOverride;\n    const m = new MeshLineMaterial({\n      lineWidth: 0.1 * width,\n      color: color,\n      sizeAttenuation: 1,\n      resolution: new Vector2(size.width, size.height)\n    });\n\n    // Get and apply first <meshLineMaterial /> from children\n    let matOverride;\n    if (children) {\n      if (Array.isArray(children)) {\n        matOverride = children.find(child => {\n          const c = child;\n          return typeof c.type === 'string' && c.type === 'meshLineMaterial';\n        });\n      } else {\n        const c = children;\n        if (typeof c.type === 'string' && c.type === 'meshLineMaterial') {\n          matOverride = c;\n        }\n      }\n    }\n    if (typeof ((_matOverride = matOverride) == null ? void 0 : _matOverride.props) === 'object') {\n      m.setValues(matOverride.props);\n    }\n    return m;\n  }, [width, color, size, children]);\n  React.useEffect(() => {\n    mat.uniforms.resolution.value.set(size.width, size.height);\n  }, [size]);\n  useFrame(() => {\n    if (!points.current) return;\n    geo.setPoints(points.current, attenuation);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", null, createPortal( /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: forwardRef,\n    geometry: geo,\n    material: mat\n  }), scene), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children));\n});\n\nexport { Trail, useTrail };\n", "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport * as THREE from \"three\";\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\n  let i;\n  src = src.subarray || src.slice ? src : src.buffer;\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\n  src = srcOffset ? src.subarray ? src.subarray(srcOffset, length && srcOffset + length) : src.slice(srcOffset, length && srcOffset + length) : src;\n  if (dst.set) {\n    dst.set(src, dstOffset);\n  } else {\n    for (i = 0; i < src.length; i++)\n      dst[i + dstOffset] = src[i];\n  }\n  return dst;\n}\nfunction convertPoints(points) {\n  if (points instanceof Float32Array)\n    return points;\n  if (points instanceof THREE.BufferGeometry)\n    return points.getAttribute(\"position\").array;\n  return points.map((p) => {\n    const isArray = Array.isArray(p);\n    return p instanceof THREE.Vector3 ? [p.x, p.y, p.z] : p instanceof THREE.Vector2 ? [p.x, p.y, 0] : isArray && p.length === 3 ? [p[0], p[1], p[2]] : isArray && p.length === 2 ? [p[0], p[1], 0] : p;\n  }).flat();\n}\nclass MeshLineGeometry extends THREE.BufferGeometry {\n  constructor() {\n    super();\n    __publicField(this, \"type\", \"MeshLine\");\n    __publicField(this, \"isMeshLine\", true);\n    __publicField(this, \"positions\", []);\n    __publicField(this, \"previous\", []);\n    __publicField(this, \"next\", []);\n    __publicField(this, \"side\", []);\n    __publicField(this, \"width\", []);\n    __publicField(this, \"indices_array\", []);\n    __publicField(this, \"uvs\", []);\n    __publicField(this, \"counters\", []);\n    __publicField(this, \"widthCallback\", null);\n    __publicField(this, \"_attributes\");\n    __publicField(this, \"_points\", []);\n    __publicField(this, \"points\");\n    __publicField(this, \"matrixWorld\", new THREE.Matrix4());\n    Object.defineProperties(this, {\n      points: {\n        enumerable: true,\n        get() {\n          return this._points;\n        },\n        set(value) {\n          this.setPoints(value, this.widthCallback);\n        }\n      }\n    });\n  }\n  setMatrixWorld(matrixWorld) {\n    this.matrixWorld = matrixWorld;\n  }\n  setPoints(points, wcb) {\n    points = convertPoints(points);\n    this._points = points;\n    this.widthCallback = wcb != null ? wcb : null;\n    this.positions = [];\n    this.counters = [];\n    if (points.length && points[0] instanceof THREE.Vector3) {\n      for (let j = 0; j < points.length; j++) {\n        const p = points[j];\n        const c = j / (points.length - 1);\n        this.positions.push(p.x, p.y, p.z);\n        this.positions.push(p.x, p.y, p.z);\n        this.counters.push(c);\n        this.counters.push(c);\n      }\n    } else {\n      for (let j = 0; j < points.length; j += 3) {\n        const c = j / (points.length - 1);\n        this.positions.push(points[j], points[j + 1], points[j + 2]);\n        this.positions.push(points[j], points[j + 1], points[j + 2]);\n        this.counters.push(c);\n        this.counters.push(c);\n      }\n    }\n    this.process();\n  }\n  compareV3(a, b) {\n    const aa = a * 6;\n    const ab = b * 6;\n    return this.positions[aa] === this.positions[ab] && this.positions[aa + 1] === this.positions[ab + 1] && this.positions[aa + 2] === this.positions[ab + 2];\n  }\n  copyV3(a) {\n    const aa = a * 6;\n    return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\n  }\n  process() {\n    const l = this.positions.length / 6;\n    this.previous = [];\n    this.next = [];\n    this.side = [];\n    this.width = [];\n    this.indices_array = [];\n    this.uvs = [];\n    let w;\n    let v;\n    if (this.compareV3(0, l - 1)) {\n      v = this.copyV3(l - 2);\n    } else {\n      v = [\n        this.positions[0] - (this.positions[6] - this.positions[0]),\n        this.positions[1] - (this.positions[6 + 1] - this.positions[1]),\n        this.positions[2] - (this.positions[6 + 2] - this.positions[2])\n      ];\n    }\n    this.previous.push(v[0], v[1], v[2]);\n    this.previous.push(v[0], v[1], v[2]);\n    for (let j = 0; j < l; j++) {\n      this.side.push(1);\n      this.side.push(-1);\n      if (this.widthCallback)\n        w = this.widthCallback(j / (l - 1));\n      else\n        w = 1;\n      this.width.push(w);\n      this.width.push(w);\n      this.uvs.push(j / (l - 1), 0);\n      this.uvs.push(j / (l - 1), 1);\n      if (j < l - 1) {\n        v = this.copyV3(j);\n        this.previous.push(v[0], v[1], v[2]);\n        this.previous.push(v[0], v[1], v[2]);\n        const n = j * 2;\n        this.indices_array.push(n, n + 1, n + 2);\n        this.indices_array.push(n + 2, n + 1, n + 3);\n      }\n      if (j > 0) {\n        v = this.copyV3(j);\n        this.next.push(v[0], v[1], v[2]);\n        this.next.push(v[0], v[1], v[2]);\n      }\n    }\n    if (this.compareV3(l - 1, 0)) {\n      v = this.copyV3(1);\n    } else {\n      v = [\n        this.positions[l - 1] + (this.positions[l - 1] - this.positions[l - 1 - 6]),\n        this.positions[l - 2] + (this.positions[l - 2] - this.positions[l - 2 - 6]),\n        this.positions[l - 3] + (this.positions[l - 3] - this.positions[l - 3 - 6])\n      ];\n    }\n    this.next.push(v[0], v[1], v[2]);\n    this.next.push(v[0], v[1], v[2]);\n    if (!this._attributes || this._attributes.position.count !== this.counters.length) {\n      this._attributes = {\n        position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\n        previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\n        next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\n        side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\n        width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\n        uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\n        index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\n        counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\n      };\n    } else {\n      this._attributes.position.copyArray(new Float32Array(this.positions));\n      this._attributes.position.needsUpdate = true;\n      this._attributes.previous.copyArray(new Float32Array(this.previous));\n      this._attributes.previous.needsUpdate = true;\n      this._attributes.next.copyArray(new Float32Array(this.next));\n      this._attributes.next.needsUpdate = true;\n      this._attributes.side.copyArray(new Float32Array(this.side));\n      this._attributes.side.needsUpdate = true;\n      this._attributes.width.copyArray(new Float32Array(this.width));\n      this._attributes.width.needsUpdate = true;\n      this._attributes.uv.copyArray(new Float32Array(this.uvs));\n      this._attributes.uv.needsUpdate = true;\n      this._attributes.index.copyArray(new Uint16Array(this.indices_array));\n      this._attributes.index.needsUpdate = true;\n    }\n    this.setAttribute(\"position\", this._attributes.position);\n    this.setAttribute(\"previous\", this._attributes.previous);\n    this.setAttribute(\"next\", this._attributes.next);\n    this.setAttribute(\"side\", this._attributes.side);\n    this.setAttribute(\"width\", this._attributes.width);\n    this.setAttribute(\"uv\", this._attributes.uv);\n    this.setAttribute(\"counters\", this._attributes.counters);\n    this.setAttribute(\"position\", this._attributes.position);\n    this.setAttribute(\"previous\", this._attributes.previous);\n    this.setAttribute(\"next\", this._attributes.next);\n    this.setAttribute(\"side\", this._attributes.side);\n    this.setAttribute(\"width\", this._attributes.width);\n    this.setAttribute(\"uv\", this._attributes.uv);\n    this.setAttribute(\"counters\", this._attributes.counters);\n    this.setIndex(this._attributes.index);\n    this.computeBoundingSphere();\n    this.computeBoundingBox();\n  }\n  advance({ x, y, z }) {\n    const positions = this._attributes.position.array;\n    const previous = this._attributes.previous.array;\n    const next = this._attributes.next.array;\n    const l = positions.length;\n    memcpy(positions, 0, previous, 0, l);\n    memcpy(positions, 6, positions, 0, l - 6);\n    positions[l - 6] = x;\n    positions[l - 5] = y;\n    positions[l - 4] = z;\n    positions[l - 3] = x;\n    positions[l - 2] = y;\n    positions[l - 1] = z;\n    memcpy(positions, 6, next, 0, l - 6);\n    next[l - 6] = x;\n    next[l - 5] = y;\n    next[l - 4] = z;\n    next[l - 3] = x;\n    next[l - 2] = y;\n    next[l - 1] = z;\n    this._attributes.position.needsUpdate = true;\n    this._attributes.previous.needsUpdate = true;\n    this._attributes.next.needsUpdate = true;\n  }\n}\nconst vertexShader = `\n  #include <common>\n  #include <logdepthbuf_pars_vertex>\n  #include <fog_pars_vertex>\n  #include <clipping_planes_pars_vertex>\n\n  attribute vec3 previous;\n  attribute vec3 next;\n  attribute float side;\n  attribute float width;\n  attribute float counters;\n  \n  uniform vec2 resolution;\n  uniform float lineWidth;\n  uniform vec3 color;\n  uniform float opacity;\n  uniform float sizeAttenuation;\n  \n  varying vec2 vUV;\n  varying vec4 vColor;\n  varying float vCounters;\n  \n  vec2 fix(vec4 i, float aspect) {\n    vec2 res = i.xy / i.w;\n    res.x *= aspect;\n  \tvCounters = counters;\n    return res;\n  }\n  \n  void main() {\n    float aspect = resolution.x / resolution.y;\n    vColor = vec4(color, opacity);\n    vUV = uv;\n  \n    mat4 m = projectionMatrix * modelViewMatrix;\n    vec4 finalPosition = m * vec4(position, 1.0) * aspect;\n    vec4 prevPos = m * vec4(previous, 1.0);\n    vec4 nextPos = m * vec4(next, 1.0);\n  \n    vec2 currentP = fix(finalPosition, aspect);\n    vec2 prevP = fix(prevPos, aspect);\n    vec2 nextP = fix(nextPos, aspect);\n  \n    float w = lineWidth * width;\n  \n    vec2 dir1 = normalize(currentP - prevP);\n    vec2 dir2 = normalize(nextP - currentP);\n    vec2 dir = normalize(dir1 + dir2);\n\n    vec2 perp = vec2(-dir1.y, dir1.x);\n    vec2 miter = vec2(-dir.y, dir.x);\n    //w = clamp(w / dot(miter, perp), 0., 4. * lineWidth * width);\n  \n    //vec2 normal = (cross(vec3(dir, 0.), vec3(0., 0., 1.))).xy;\n    vec4 normal = vec4(-dir.y, dir.x, 0., 1.);\n    normal.xy *= .5 * w;\n    //normal *= projectionMatrix;\n    if (sizeAttenuation == 0.) {\n      normal.xy *= finalPosition.w;\n      normal.xy /= (vec4(resolution, 0., 1.) * projectionMatrix).xy * aspect;\n    }\n  \n    finalPosition.xy += normal.xy * side;\n    gl_Position = finalPosition;\n    #include <logdepthbuf_vertex>\n    #include <fog_vertex>\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n    #include <clipping_planes_vertex>\n    #include <fog_vertex>\n  }\n`;\nconst version = /* @__PURE__ */ (() => parseInt(THREE.REVISION.replace(/\\D+/g, \"\")))();\nconst colorspace_fragment = version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\";\nconst fragmentShader = `\n  #include <fog_pars_fragment>\n  #include <logdepthbuf_pars_fragment>\n  #include <clipping_planes_pars_fragment>\n  \n  uniform sampler2D map;\n  uniform sampler2D alphaMap;\n  uniform float useGradient;\n  uniform float useMap;\n  uniform float useAlphaMap;\n  uniform float useDash;\n  uniform float dashArray;\n  uniform float dashOffset;\n  uniform float dashRatio;\n  uniform float visibility;\n  uniform float alphaTest;\n  uniform vec2 repeat;\n  uniform vec3 gradient[2];\n  \n  varying vec2 vUV;\n  varying vec4 vColor;\n  varying float vCounters;\n  \n  void main() {\n    #include <logdepthbuf_fragment>\n    vec4 diffuseColor = vColor;\n    if (useGradient == 1.) diffuseColor = vec4(mix(gradient[0], gradient[1], vCounters), 1.0);\n    if (useMap == 1.) diffuseColor *= texture2D(map, vUV * repeat);\n    if (useAlphaMap == 1.) diffuseColor.a *= texture2D(alphaMap, vUV * repeat).a;\n    if (diffuseColor.a < alphaTest) discard;\n    if (useDash == 1.) diffuseColor.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));\n    diffuseColor.a *= step(vCounters, visibility);\n    #include <clipping_planes_fragment>\n    gl_FragColor = diffuseColor;     \n    #include <fog_fragment>\n    #include <tonemapping_fragment>\n    #include <${colorspace_fragment}>\n  }\n`;\nclass MeshLineMaterial extends THREE.ShaderMaterial {\n  constructor(parameters) {\n    super({\n      uniforms: {\n        ...THREE.UniformsLib.fog,\n        lineWidth: { value: 1 },\n        map: { value: null },\n        useMap: { value: 0 },\n        alphaMap: { value: null },\n        useAlphaMap: { value: 0 },\n        color: { value: new THREE.Color(16777215) },\n        gradient: { value: [new THREE.Color(16711680), new THREE.Color(65280)] },\n        opacity: { value: 1 },\n        resolution: { value: new THREE.Vector2(1, 1) },\n        sizeAttenuation: { value: 1 },\n        dashArray: { value: 0 },\n        dashOffset: { value: 0 },\n        dashRatio: { value: 0.5 },\n        useDash: { value: 0 },\n        useGradient: { value: 0 },\n        visibility: { value: 1 },\n        alphaTest: { value: 0 },\n        repeat: { value: new THREE.Vector2(1, 1) }\n      },\n      vertexShader,\n      fragmentShader\n    });\n    __publicField(this, \"lineWidth\");\n    __publicField(this, \"map\");\n    __publicField(this, \"useMap\");\n    __publicField(this, \"alphaMap\");\n    __publicField(this, \"useAlphaMap\");\n    __publicField(this, \"color\");\n    __publicField(this, \"gradient\");\n    __publicField(this, \"opacity\", 1);\n    __publicField(this, \"resolution\");\n    __publicField(this, \"sizeAttenuation\");\n    __publicField(this, \"dashArray\");\n    __publicField(this, \"dashOffset\");\n    __publicField(this, \"dashRatio\");\n    __publicField(this, \"useDash\");\n    __publicField(this, \"useGradient\");\n    __publicField(this, \"visibility\");\n    __publicField(this, \"alphaTest\", 0);\n    __publicField(this, \"repeat\");\n    this.type = \"MeshLineMaterial\";\n    Object.defineProperties(this, {\n      lineWidth: {\n        enumerable: true,\n        get() {\n          return this.uniforms.lineWidth.value;\n        },\n        set(value) {\n          this.uniforms.lineWidth.value = value;\n        }\n      },\n      map: {\n        enumerable: true,\n        get() {\n          return this.uniforms.map.value;\n        },\n        set(value) {\n          this.uniforms.map.value = value;\n        }\n      },\n      useMap: {\n        enumerable: true,\n        get() {\n          return this.uniforms.useMap.value;\n        },\n        set(value) {\n          this.uniforms.useMap.value = value;\n        }\n      },\n      alphaMap: {\n        enumerable: true,\n        get() {\n          return this.uniforms.alphaMap.value;\n        },\n        set(value) {\n          this.uniforms.alphaMap.value = value;\n        }\n      },\n      useAlphaMap: {\n        enumerable: true,\n        get() {\n          return this.uniforms.useAlphaMap.value;\n        },\n        set(value) {\n          this.uniforms.useAlphaMap.value = value;\n        }\n      },\n      color: {\n        enumerable: true,\n        get() {\n          return this.uniforms.color.value;\n        },\n        set(value) {\n          this.uniforms.color.value = value;\n        }\n      },\n      gradient: {\n        enumerable: true,\n        get() {\n          return this.uniforms.gradient.value;\n        },\n        set(value) {\n          this.uniforms.gradient.value = value;\n        }\n      },\n      opacity: {\n        enumerable: true,\n        get() {\n          return this.uniforms.opacity.value;\n        },\n        set(value) {\n          this.uniforms.opacity.value = value;\n        }\n      },\n      resolution: {\n        enumerable: true,\n        get() {\n          return this.uniforms.resolution.value;\n        },\n        set(value) {\n          this.uniforms.resolution.value.copy(value);\n        }\n      },\n      sizeAttenuation: {\n        enumerable: true,\n        get() {\n          return this.uniforms.sizeAttenuation.value;\n        },\n        set(value) {\n          this.uniforms.sizeAttenuation.value = value;\n        }\n      },\n      dashArray: {\n        enumerable: true,\n        get() {\n          return this.uniforms.dashArray.value;\n        },\n        set(value) {\n          this.uniforms.dashArray.value = value;\n          this.useDash = value !== 0 ? 1 : 0;\n        }\n      },\n      dashOffset: {\n        enumerable: true,\n        get() {\n          return this.uniforms.dashOffset.value;\n        },\n        set(value) {\n          this.uniforms.dashOffset.value = value;\n        }\n      },\n      dashRatio: {\n        enumerable: true,\n        get() {\n          return this.uniforms.dashRatio.value;\n        },\n        set(value) {\n          this.uniforms.dashRatio.value = value;\n        }\n      },\n      useDash: {\n        enumerable: true,\n        get() {\n          return this.uniforms.useDash.value;\n        },\n        set(value) {\n          this.uniforms.useDash.value = value;\n        }\n      },\n      useGradient: {\n        enumerable: true,\n        get() {\n          return this.uniforms.useGradient.value;\n        },\n        set(value) {\n          this.uniforms.useGradient.value = value;\n        }\n      },\n      visibility: {\n        enumerable: true,\n        get() {\n          return this.uniforms.visibility.value;\n        },\n        set(value) {\n          this.uniforms.visibility.value = value;\n        }\n      },\n      alphaTest: {\n        enumerable: true,\n        get() {\n          return this.uniforms.alphaTest.value;\n        },\n        set(value) {\n          this.uniforms.alphaTest.value = value;\n        }\n      },\n      repeat: {\n        enumerable: true,\n        get() {\n          return this.uniforms.repeat.value;\n        },\n        set(value) {\n          this.uniforms.repeat.value.copy(value);\n        }\n      }\n    });\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.lineWidth = source.lineWidth;\n    this.map = source.map;\n    this.useMap = source.useMap;\n    this.alphaMap = source.alphaMap;\n    this.useAlphaMap = source.useAlphaMap;\n    this.color.copy(source.color);\n    this.gradient = source.gradient;\n    this.opacity = source.opacity;\n    this.resolution.copy(source.resolution);\n    this.sizeAttenuation = source.sizeAttenuation;\n    this.dashArray = source.dashArray;\n    this.dashOffset = source.dashOffset;\n    this.dashRatio = source.dashRatio;\n    this.useDash = source.useDash;\n    this.useGradient = source.useGradient;\n    this.visibility = source.visibility;\n    this.alphaTest = source.alphaTest;\n    this.repeat.copy(source.repeat);\n    return this;\n  }\n}\nfunction raycast(raycaster, intersects) {\n  const inverseMatrix = new THREE.Matrix4();\n  const ray = new THREE.Ray();\n  const sphere = new THREE.Sphere();\n  const interRay = new THREE.Vector3();\n  const geometry = this.geometry;\n  sphere.copy(geometry.boundingSphere);\n  sphere.applyMatrix4(this.matrixWorld);\n  if (!raycaster.ray.intersectSphere(sphere, interRay))\n    return;\n  inverseMatrix.copy(this.matrixWorld).invert();\n  ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n  const vStart = new THREE.Vector3();\n  const vEnd = new THREE.Vector3();\n  const interSegment = new THREE.Vector3();\n  const step = this instanceof THREE.LineSegments ? 2 : 1;\n  const index = geometry.index;\n  const attributes = geometry.attributes;\n  if (index !== null) {\n    const indices = index.array;\n    const positions = attributes.position.array;\n    const widths = attributes.width.array;\n    for (let i = 0, l = indices.length - 1; i < l; i += step) {\n      const a = indices[i];\n      const b = indices[i + 1];\n      vStart.fromArray(positions, a * 3);\n      vEnd.fromArray(positions, b * 3);\n      const width = widths[Math.floor(i / 3)] != void 0 ? widths[Math.floor(i / 3)] : 1;\n      const precision = raycaster.params.Line.threshold + this.material.lineWidth * width / 2;\n      const precisionSq = precision * precision;\n      const distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n      if (distSq > precisionSq)\n        continue;\n      interRay.applyMatrix4(this.matrixWorld);\n      const distance = raycaster.ray.origin.distanceTo(interRay);\n      if (distance < raycaster.near || distance > raycaster.far)\n        continue;\n      intersects.push({\n        distance,\n        point: interSegment.clone().applyMatrix4(this.matrixWorld),\n        index: i,\n        face: null,\n        faceIndex: void 0,\n        object: this\n      });\n      i = l;\n    }\n  }\n}\nexport {\n  MeshLineGeometry,\n  MeshLineMaterial,\n  raycast\n};\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshSurfaceSampler } from 'three-stdlib';\nimport { InstancedBufferAttribute, Vector3, Color, Object3D } from 'three';\n\nfunction useSurfaceSampler(mesh, count = 16, transform, weight, instanceMesh) {\n  const [buffer, setBuffer] = React.useState(() => {\n    const arr = Array.from({\n      length: count\n    }, () => [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]).flat();\n    return new InstancedBufferAttribute(Float32Array.from(arr), 16);\n  });\n  React.useLayoutEffect(() => {\n    if (typeof mesh.current === 'undefined') return;\n    const sampler = new MeshSurfaceSampler(mesh.current);\n    if (weight) {\n      sampler.setWeightAttribute(weight);\n    }\n    sampler.build();\n    const position = new Vector3();\n    const normal = new Vector3();\n    const color = new Color();\n    const dummy = new Object3D();\n    mesh.current.updateMatrixWorld(true);\n    for (let i = 0; i < count; i++) {\n      sampler.sample(position, normal, color);\n      if (typeof transform === 'function') {\n        transform({\n          dummy,\n          sampledMesh: mesh.current,\n          position,\n          normal,\n          color\n        }, i);\n      } else {\n        dummy.position.copy(position);\n      }\n      dummy.updateMatrix();\n      if (instanceMesh != null && instanceMesh.current) {\n        instanceMesh.current.setMatrixAt(i, dummy.matrix);\n      }\n      dummy.matrix.toArray(buffer.array, i * 16);\n    }\n    if (instanceMesh != null && instanceMesh.current) {\n      instanceMesh.current.instanceMatrix.needsUpdate = true;\n    }\n    buffer.needsUpdate = true;\n    setBuffer(new InstancedBufferAttribute(buffer.array, buffer.itemSize).copy(buffer));\n  }, [mesh, instanceMesh, weight, count, transform]);\n  return buffer;\n}\nfunction Sampler({\n  children,\n  weight,\n  transform,\n  instances,\n  mesh,\n  count = 16,\n  ...props\n}) {\n  const group = React.useRef(null);\n  const instancedRef = React.useRef(null);\n  const meshToSampleRef = React.useRef(null);\n  React.useLayoutEffect(() => {\n    var _instances$current, _mesh$current;\n    instancedRef.current = (_instances$current = instances == null ? void 0 : instances.current) !== null && _instances$current !== void 0 ? _instances$current : group.current.children.find(c => c.hasOwnProperty('instanceMatrix'));\n    meshToSampleRef.current = (_mesh$current = mesh == null ? void 0 : mesh.current) !== null && _mesh$current !== void 0 ? _mesh$current : group.current.children.find(c => c.type === 'Mesh');\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\n  useSurfaceSampler(meshToSampleRef, count, transform, weight, instancedRef);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n}\n\nexport { Sampler, useSurfaceSampler };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { BufferAttribute } from 'three';\n\n/**\n * Used exclusively as a child of a BufferGeometry.\n * Computes the BufferAttribute by calling the `compute` function\n * and attaches the attribute to the geometry.\n */\nconst ComputedAttribute = ({\n  compute,\n  name,\n  ...props\n}) => {\n  const [bufferAttribute] = React.useState(() => new BufferAttribute(new Float32Array(0), 1));\n  const primitive = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (primitive.current) {\n      var _ref;\n      // @ts-expect-error brittle\n      const parent = (_ref = primitive.current.parent) !== null && _ref !== void 0 ? _ref : primitive.current.__r3f.parent;\n      const attr = compute(parent);\n      primitive.current.copy(attr);\n    }\n  }, [compute]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: primitive,\n    object: bufferAttribute,\n    attach: `attributes-${name}`\n  }, props));\n};\n\nexport { ComputedAttribute };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = {};\n  for (const key of keys) {\n    spread[key] = child[key];\n  }\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n  if (inject) {\n    if (typeof inject === 'function') spread = {\n      ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = {\n      ...spread,\n      children: inject\n    };else spread = {\n      ...spread,\n      ...inject\n    };\n  }\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n  return spread;\n}\nconst Clone = /* @__PURE__ */React.forwardRef(({\n  isChild = false,\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n    return object;\n  }, [object, isChild]);\n\n  // Deal with arrayed clones\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  }\n\n  // Singleton clones\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), object.children.map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { MarchingCubes as MarchingCubes$1 } from 'three-stdlib';\nimport { useFrame } from '@react-three/fiber';\n\nconst globalContext = /* @__PURE__ */React.createContext(null);\nconst MarchingCubes = /* @__PURE__ */React.forwardRef(({\n  resolution = 28,\n  maxPolyCount = 10000,\n  enableUvs = false,\n  enableColors = false,\n  children,\n  ...props\n}, ref) => {\n  const marchingCubesRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => marchingCubesRef.current, []);\n  const marchingCubes = React.useMemo(() => new MarchingCubes$1(resolution, null, enableUvs, enableColors, maxPolyCount), [resolution, maxPolyCount, enableUvs, enableColors]);\n  const api = React.useMemo(() => ({\n    getParent: () => marchingCubesRef\n  }), []);\n  useFrame(() => {\n    marchingCubes.update();\n    marchingCubes.reset();\n  }, -1); // To make sure the reset runs before the balls or planes are added\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: marchingCubes,\n    ref: marchingCubesRef\n  }, props), /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children)));\n});\nconst MarchingCube = /* @__PURE__ */React.forwardRef(({\n  strength = 0.5,\n  subtract = 12,\n  color,\n  ...props\n}, ref) => {\n  const {\n    getParent\n  } = React.useContext(globalContext);\n  const parentRef = React.useMemo(() => getParent(), [getParent]);\n  const cubeRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => cubeRef.current, []);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (!parentRef.current || !cubeRef.current) return;\n    cubeRef.current.getWorldPosition(vec);\n    parentRef.current.addBall(0.5 + vec.x * 0.5, 0.5 + vec.y * 0.5, 0.5 + vec.z * 0.5, strength, subtract, color);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: cubeRef\n  }, props));\n});\nconst MarchingPlane = /* @__PURE__ */React.forwardRef(({\n  planeType: _planeType = 'x',\n  strength = 0.5,\n  subtract = 12,\n  ...props\n}, ref) => {\n  const {\n    getParent\n  } = React.useContext(globalContext);\n  const parentRef = React.useMemo(() => getParent(), [getParent]);\n  const wallRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => wallRef.current, []);\n  const planeType = React.useMemo(() => _planeType === 'x' ? 'addPlaneX' : _planeType === 'y' ? 'addPlaneY' : 'addPlaneZ', [_planeType]);\n  useFrame(() => {\n    if (!parentRef.current || !wallRef.current) return;\n    parentRef.current[planeType](strength, subtract);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: wallRef\n  }, props));\n});\n\nexport { MarchingCube, MarchingCubes, MarchingPlane };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { applyProps } from '@react-three/fiber';\nimport { DecalGeometry } from 'three-stdlib';\n\nfunction isArray(vec) {\n  return Array.isArray(vec);\n}\nfunction vecToArray(vec = [0, 0, 0]) {\n  if (isArray(vec)) {\n    return vec;\n  } else if (vec instanceof THREE.Vector3 || vec instanceof THREE.Euler) {\n    return [vec.x, vec.y, vec.z];\n  } else {\n    return [vec, vec, vec];\n  }\n}\nconst Decal = /* @__PURE__ */React.forwardRef(function Decal({\n  debug,\n  depthTest = false,\n  polygonOffsetFactor = -10,\n  map,\n  mesh,\n  children,\n  position,\n  rotation,\n  scale,\n  ...props\n}, forwardRef) {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, () => ref.current);\n  const helper = React.useRef(null);\n  React.useLayoutEffect(() => {\n    const parent = (mesh == null ? void 0 : mesh.current) || ref.current.parent;\n    const target = ref.current;\n    if (!(parent instanceof THREE.Mesh)) {\n      throw new Error('Decal must have a Mesh as parent or specify its \"mesh\" prop');\n    }\n    const state = {\n      position: new THREE.Vector3(),\n      rotation: new THREE.Euler(),\n      scale: new THREE.Vector3(1, 1, 1)\n    };\n    if (parent) {\n      applyProps(state, {\n        position,\n        scale\n      });\n\n      // Zero out the parents matrix world for this operation\n      const matrixWorld = parent.matrixWorld.clone();\n      parent.matrixWorld.identity();\n      if (!rotation || typeof rotation === 'number') {\n        const o = new THREE.Object3D();\n        o.position.copy(state.position);\n        o.lookAt(parent.position);\n        if (typeof rotation === 'number') o.rotateZ(rotation);\n        applyProps(state, {\n          rotation: o.rotation\n        });\n      } else {\n        applyProps(state, {\n          rotation\n        });\n      }\n      target.geometry = new DecalGeometry(parent, state.position, state.rotation, state.scale);\n      if (helper.current) {\n        applyProps(helper.current, state);\n        // Prevent the helpers from blocking rays\n        helper.current.traverse(child => child.raycast = () => null);\n      }\n      // Reset parents matix-world\n      parent.matrixWorld = matrixWorld;\n      return () => {\n        target.geometry.dispose();\n      };\n    }\n  }, [mesh, ...vecToArray(position), ...vecToArray(scale), ...vecToArray(rotation)]);\n\n  // <meshStandardMaterial transparent polygonOffset polygonOffsetFactor={-10} {...props} />}\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    \"material-transparent\": true,\n    \"material-polygonOffset\": true,\n    \"material-polygonOffsetFactor\": polygonOffsetFactor,\n    \"material-depthTest\": depthTest,\n    \"material-map\": map\n  }, props), children, debug && /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: helper\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", null), /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n    wireframe: true\n  }), /*#__PURE__*/React.createElement(\"axesHelper\", null)));\n});\n\nexport { Decal };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useLoader } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect, Fragment } from 'react';\nimport { DoubleSide } from 'three';\nimport { SVGLoader } from 'three-stdlib';\n\nconst Svg = /* @__PURE__ */forwardRef(function R3FSvg({\n  src,\n  skipFill,\n  skipStrokes,\n  fillMaterial,\n  strokeMaterial,\n  fillMeshProps,\n  strokeMeshProps,\n  ...props\n}, ref) {\n  const svg = useLoader(SVGLoader, !src.startsWith('<svg') ? src : `data:image/svg+xml;utf8,${src}`);\n  const strokeGeometries = useMemo(() => skipStrokes ? [] : svg.paths.map(path => {\n    var _path$userData;\n    return ((_path$userData = path.userData) == null ? void 0 : _path$userData.style.stroke) === undefined || path.userData.style.stroke === 'none' ? null : path.subPaths.map(subPath => SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style));\n  }), [svg, skipStrokes]);\n  useEffect(() => {\n    return () => strokeGeometries.forEach(group => group && group.map(g => g.dispose()));\n  }, [strokeGeometries]);\n  return /*#__PURE__*/React.createElement(\"object3D\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"object3D\", {\n    scale: [1, -1, 1]\n  }, svg.paths.map((path, p) => {\n    var _path$userData2, _path$userData3;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: p\n    }, !skipFill && ((_path$userData2 = path.userData) == null ? void 0 : _path$userData2.style.fill) !== undefined && path.userData.style.fill !== 'none' && SVGLoader.createShapes(path).map((shape, s) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      key: s\n    }, fillMeshProps), /*#__PURE__*/React.createElement(\"shapeGeometry\", {\n      args: [shape]\n    }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", _extends({\n      color: path.userData.style.fill,\n      opacity: path.userData.style.fillOpacity,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false\n    }, fillMaterial)))), !skipStrokes && ((_path$userData3 = path.userData) == null ? void 0 : _path$userData3.style.stroke) !== undefined && path.userData.style.stroke !== 'none' && path.subPaths.map((_subPath, s) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      key: s,\n      geometry: strokeGeometries[p][s]\n    }, strokeMeshProps), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", _extends({\n      color: path.userData.style.stroke,\n      opacity: path.userData.style.strokeOpacity,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false\n    }, strokeMaterial)))));\n  })));\n});\n\nexport { Svg };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useGLTF } from './useGLTF.js';\nimport { Clone } from './Clone.js';\n\nconst Gltf = /* @__PURE__ */React.forwardRef(({\n  src,\n  ...props\n}, ref) => {\n  const {\n    scene\n  } = useGLTF(src);\n  return /*#__PURE__*/React.createElement(Clone, _extends({\n    ref: ref\n  }, props, {\n    object: scene\n  }));\n});\n\nexport { Gltf };\n", "import { GLTFLoader, DRACOLoader, MeshoptDecoder } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\n\nlet dracoLoader = null;\nlet decoderPath = 'https://www.gstatic.com/draco/versioned/decoders/1.5.5/';\nfunction extensions(useDraco, useMeshopt, extendLoader) {\n  return loader => {\n    if (extendLoader) {\n      extendLoader(loader);\n    }\n    if (useDraco) {\n      if (!dracoLoader) {\n        dracoLoader = new DRACOLoader();\n      }\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : decoderPath);\n      loader.setDRACOLoader(dracoLoader);\n    }\n    if (useMeshopt) {\n      loader.setMeshoptDecoder(typeof MeshoptDecoder === 'function' ? MeshoptDecoder() : MeshoptDecoder);\n    }\n  };\n}\nfunction useGLTF(path, useDraco = true, useMeshOpt = true, extendLoader) {\n  return useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n}\nuseGLTF.preload = (path, useDraco = true, useMeshOpt = true, extendLoader) => useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\nuseGLTF.clear = input => useLoader.clear(GLTFLoader, input);\nuseGLTF.setDecoderPath = path => {\n  decoderPath = path;\n};\n\nexport { useGLTF };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { AsciiEffect } from 'three-stdlib';\n\nfunction AsciiRenderer({\n  renderIndex = 1,\n  bgColor = 'black',\n  fgColor = 'white',\n  characters = ' .:-+*=%@#',\n  invert = true,\n  color = false,\n  resolution = 0.15\n}) {\n  // Reactive state\n  const {\n    size,\n    gl,\n    scene,\n    camera\n  } = useThree();\n\n  // Create effect\n  const effect = React.useMemo(() => {\n    const effect = new AsciiEffect(gl, characters, {\n      invert,\n      color,\n      resolution\n    });\n    effect.domElement.style.position = 'absolute';\n    effect.domElement.style.top = '0px';\n    effect.domElement.style.left = '0px';\n    effect.domElement.style.pointerEvents = 'none';\n    return effect;\n  }, [characters, invert, color, resolution]);\n\n  // Styling\n  React.useLayoutEffect(() => {\n    effect.domElement.style.color = fgColor;\n    effect.domElement.style.backgroundColor = bgColor;\n  }, [fgColor, bgColor]);\n\n  // Append on mount, remove on unmount\n  React.useEffect(() => {\n    gl.domElement.style.opacity = '0';\n    gl.domElement.parentNode.appendChild(effect.domElement);\n    return () => {\n      gl.domElement.style.opacity = '1';\n      gl.domElement.parentNode.removeChild(effect.domElement);\n    };\n  }, [effect]);\n\n  // Set size\n  React.useEffect(() => {\n    effect.setSize(size.width, size.height);\n  }, [effect, size]);\n\n  // Take over render-loop (that is what the index is for)\n  useFrame(state => {\n    effect.render(scene, camera);\n  }, renderIndex);\n\n  // return something to not break type signatures\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport { AsciiRenderer };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useLoader, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\n\nconst SplatMaterial = /* @__PURE__ */shaderMaterial({\n  alphaTest: 0,\n  viewport: /* @__PURE__ */new THREE.Vector2(1980, 1080),\n  focal: 1000.0,\n  centerAndScaleTexture: null,\n  covAndColorTexture: null\n}, /*glsl*/`\n    precision highp sampler2D;\n    precision highp usampler2D;\n    out vec4 vColor;\n    out vec3 vPosition;\n    uniform vec2 resolution;\n    uniform vec2 viewport;\n    uniform float focal;\n    attribute uint splatIndex;\n    uniform sampler2D centerAndScaleTexture;\n    uniform usampler2D covAndColorTexture;    \n\n    vec2 unpackInt16(in uint value) {\n      int v = int(value);\n      int v0 = v >> 16;\n      int v1 = (v & 0xFFFF);\n      if((v & 0x8000) != 0)\n        v1 |= 0xFFFF0000;\n      return vec2(float(v1), float(v0));\n    }\n\n    void main () {\n      ivec2 texSize = textureSize(centerAndScaleTexture, 0);\n      ivec2 texPos = ivec2(splatIndex%uint(texSize.x), splatIndex/uint(texSize.x));\n      vec4 centerAndScaleData = texelFetch(centerAndScaleTexture, texPos, 0);\n      vec4 center = vec4(centerAndScaleData.xyz, 1);\n      vec4 camspace = modelViewMatrix * center;\n      vec4 pos2d = projectionMatrix * camspace;\n\n      float bounds = 1.2 * pos2d.w;\n      if (pos2d.z < -pos2d.w || pos2d.x < -bounds || pos2d.x > bounds\n        || pos2d.y < -bounds || pos2d.y > bounds) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n      }\n\n      uvec4 covAndColorData = texelFetch(covAndColorTexture, texPos, 0);\n      vec2 cov3D_M11_M12 = unpackInt16(covAndColorData.x) * centerAndScaleData.w;\n      vec2 cov3D_M13_M22 = unpackInt16(covAndColorData.y) * centerAndScaleData.w;\n      vec2 cov3D_M23_M33 = unpackInt16(covAndColorData.z) * centerAndScaleData.w;\n      mat3 Vrk = mat3(\n        cov3D_M11_M12.x, cov3D_M11_M12.y, cov3D_M13_M22.x,\n        cov3D_M11_M12.y, cov3D_M13_M22.y, cov3D_M23_M33.x,\n        cov3D_M13_M22.x, cov3D_M23_M33.x, cov3D_M23_M33.y\n      );\n\n      mat3 J = mat3(\n        focal / camspace.z, 0., -(focal * camspace.x) / (camspace.z * camspace.z),\n        0., focal / camspace.z, -(focal * camspace.y) / (camspace.z * camspace.z),\n        0., 0., 0.\n      );\n\n      mat3 W = transpose(mat3(modelViewMatrix));\n      mat3 T = W * J;\n      mat3 cov = transpose(T) * Vrk * T;\n      vec2 vCenter = vec2(pos2d) / pos2d.w;\n      float diagonal1 = cov[0][0] + 0.3;\n      float offDiagonal = cov[0][1];\n      float diagonal2 = cov[1][1] + 0.3;\n      float mid = 0.5 * (diagonal1 + diagonal2);\n      float radius = length(vec2((diagonal1 - diagonal2) / 2.0, offDiagonal));\n      float lambda1 = mid + radius;\n      float lambda2 = max(mid - radius, 0.1);\n      vec2 diagonalVector = normalize(vec2(offDiagonal, lambda1 - diagonal1));\n      vec2 v1 = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n      vec2 v2 = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n      uint colorUint = covAndColorData.w;\n      vColor = vec4(\n        float(colorUint & uint(0xFF)) / 255.0,\n        float((colorUint >> uint(8)) & uint(0xFF)) / 255.0,\n        float((colorUint >> uint(16)) & uint(0xFF)) / 255.0,\n        float(colorUint >> uint(24)) / 255.0\n      );\n      vPosition = position;\n\n      gl_Position = vec4(\n        vCenter \n          + position.x * v2 / viewport * 2.0 \n          + position.y * v1 / viewport * 2.0, pos2d.z / pos2d.w, 1.0);\n    }\n    `, /*glsl*/`\n    #include <alphatest_pars_fragment>\n    #include <alphahash_pars_fragment>\n    in vec4 vColor;\n    in vec3 vPosition;\n    void main () {\n      float A = -dot(vPosition.xy, vPosition.xy);\n      if (A < -4.0) discard;\n      float B = exp(A) * vColor.a;\n      vec4 diffuseColor = vec4(vColor.rgb, B);\n      #include <alphatest_fragment>\n      #include <alphahash_fragment>\n      gl_FragColor = diffuseColor;\n      #include <tonemapping_fragment>\n      #include <${parseInt(THREE.REVISION.replace(/\\D+/g, '')) >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n    }\n  `);\nfunction createWorker(self) {\n  let matrices = null;\n  let offset = 0;\n  function sortSplats(view, hashed = false) {\n    const vertexCount = matrices.length / 16;\n    const threshold = -0.0001;\n    let maxDepth = -Infinity;\n    let minDepth = Infinity;\n    const depthList = new Float32Array(vertexCount);\n    const sizeList = new Int32Array(depthList.buffer);\n    const validIndexList = new Int32Array(vertexCount);\n    let validCount = 0;\n    for (let i = 0; i < vertexCount; i++) {\n      // Sign of depth is reversed\n      const depth = view[0] * matrices[i * 16 + 12] + view[1] * matrices[i * 16 + 13] + view[2] * matrices[i * 16 + 14] + view[3];\n      // Skip behind of camera and small, transparent splat\n      if (hashed || depth < 0 && matrices[i * 16 + 15] > threshold * depth) {\n        depthList[validCount] = depth;\n        validIndexList[validCount] = i;\n        validCount++;\n        if (depth > maxDepth) maxDepth = depth;\n        if (depth < minDepth) minDepth = depth;\n      }\n    }\n\n    // This is a 16 bit single-pass counting sort\n    const depthInv = (256 * 256 - 1) / (maxDepth - minDepth);\n    const counts0 = new Uint32Array(256 * 256);\n    for (let i = 0; i < validCount; i++) {\n      sizeList[i] = (depthList[i] - minDepth) * depthInv | 0;\n      counts0[sizeList[i]]++;\n    }\n    const starts0 = new Uint32Array(256 * 256);\n    for (let i = 1; i < 256 * 256; i++) starts0[i] = starts0[i - 1] + counts0[i - 1];\n    const depthIndex = new Uint32Array(validCount);\n    for (let i = 0; i < validCount; i++) depthIndex[starts0[sizeList[i]]++] = validIndexList[i];\n    return depthIndex;\n  }\n  self.onmessage = e => {\n    if (e.data.method == 'push') {\n      if (offset === 0) matrices = new Float32Array(e.data.length);\n      const new_matrices = new Float32Array(e.data.matrices);\n      matrices.set(new_matrices, offset);\n      offset += new_matrices.length;\n    } else if (e.data.method == 'sort') {\n      if (matrices !== null) {\n        const indices = sortSplats(new Float32Array(e.data.view), e.data.hashed);\n        // @ts-ignore\n        self.postMessage({\n          indices,\n          key: e.data.key\n        }, [indices.buffer]);\n      }\n    }\n  };\n}\nclass SplatLoader extends THREE.Loader {\n  constructor(...args) {\n    super(...args);\n    // WebGLRenderer, needs to be filled out!\n    this.gl = null;\n    // Default chunk size for lazy loading\n    this.chunkSize = 25000;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const shared = {\n      gl: this.gl,\n      url: this.manager.resolveURL(url),\n      worker: new Worker(URL.createObjectURL(new Blob(['(', createWorker.toString(), ')(self)'], {\n        type: 'application/javascript'\n      }))),\n      manager: this.manager,\n      update: (target, camera, hashed) => update(camera, shared, target, hashed),\n      connect: target => connect(shared, target),\n      loading: false,\n      loaded: false,\n      loadedVertexCount: 0,\n      chunkSize: this.chunkSize,\n      totalDownloadBytes: 0,\n      numVertices: 0,\n      rowLength: 3 * 4 + 3 * 4 + 4 + 4,\n      maxVertexes: 0,\n      bufferTextureWidth: 0,\n      bufferTextureHeight: 0,\n      stream: null,\n      centerAndScaleData: null,\n      covAndColorData: null,\n      covAndColorTexture: null,\n      centerAndScaleTexture: null,\n      onProgress\n    };\n    load(shared).then(onLoad).catch(e => {\n      onError == null || onError(e);\n      shared.manager.itemError(shared.url);\n    });\n  }\n}\nasync function load(shared) {\n  shared.manager.itemStart(shared.url);\n  const data = await fetch(shared.url);\n  if (data.body === null) throw 'Failed to fetch file';\n  let _totalDownloadBytes = data.headers.get('Content-Length');\n  const totalDownloadBytes = _totalDownloadBytes ? parseInt(_totalDownloadBytes) : undefined;\n  if (totalDownloadBytes == undefined) throw 'Failed to get content length';\n  shared.stream = data.body.getReader();\n  shared.totalDownloadBytes = totalDownloadBytes;\n  shared.numVertices = Math.floor(shared.totalDownloadBytes / shared.rowLength);\n  const context = shared.gl.getContext();\n  let maxTextureSize = context.getParameter(context.MAX_TEXTURE_SIZE);\n  shared.maxVertexes = maxTextureSize * maxTextureSize;\n  if (shared.numVertices > shared.maxVertexes) shared.numVertices = shared.maxVertexes;\n  shared.bufferTextureWidth = maxTextureSize;\n  shared.bufferTextureHeight = Math.floor((shared.numVertices - 1) / maxTextureSize) + 1;\n  shared.centerAndScaleData = new Float32Array(shared.bufferTextureWidth * shared.bufferTextureHeight * 4);\n  shared.covAndColorData = new Uint32Array(shared.bufferTextureWidth * shared.bufferTextureHeight * 4);\n  shared.centerAndScaleTexture = new THREE.DataTexture(shared.centerAndScaleData, shared.bufferTextureWidth, shared.bufferTextureHeight, THREE.RGBAFormat, THREE.FloatType);\n  shared.centerAndScaleTexture.needsUpdate = true;\n  shared.covAndColorTexture = new THREE.DataTexture(shared.covAndColorData, shared.bufferTextureWidth, shared.bufferTextureHeight, THREE.RGBAIntegerFormat, THREE.UnsignedIntType);\n  shared.covAndColorTexture.internalFormat = 'RGBA32UI';\n  shared.covAndColorTexture.needsUpdate = true;\n  return shared;\n}\nasync function lazyLoad(shared) {\n  shared.loading = true;\n  let bytesDownloaded = 0;\n  let bytesProcessed = 0;\n  const chunks = [];\n  let lastReportedProgress = 0;\n  const lengthComputable = shared.totalDownloadBytes !== 0;\n  while (true) {\n    try {\n      const {\n        value,\n        done\n      } = await shared.stream.read();\n      if (done) break;\n      bytesDownloaded += value.length;\n      if (shared.totalDownloadBytes != undefined) {\n        const percent = bytesDownloaded / shared.totalDownloadBytes * 100;\n        if (shared.onProgress && percent - lastReportedProgress > 1) {\n          const event = new ProgressEvent('progress', {\n            lengthComputable,\n            loaded: bytesDownloaded,\n            total: shared.totalDownloadBytes\n          });\n          shared.onProgress(event);\n          lastReportedProgress = percent;\n        }\n      }\n      chunks.push(value);\n      const bytesRemains = bytesDownloaded - bytesProcessed;\n      if (shared.totalDownloadBytes != undefined && bytesRemains > shared.rowLength * shared.chunkSize) {\n        let vertexCount = Math.floor(bytesRemains / shared.rowLength);\n        const concatenatedChunksbuffer = new Uint8Array(bytesRemains);\n        let offset = 0;\n        for (const chunk of chunks) {\n          concatenatedChunksbuffer.set(chunk, offset);\n          offset += chunk.length;\n        }\n        chunks.length = 0;\n        if (bytesRemains > vertexCount * shared.rowLength) {\n          const extra_data = new Uint8Array(bytesRemains - vertexCount * shared.rowLength);\n          extra_data.set(concatenatedChunksbuffer.subarray(bytesRemains - extra_data.length, bytesRemains), 0);\n          chunks.push(extra_data);\n        }\n        const buffer = new Uint8Array(vertexCount * shared.rowLength);\n        buffer.set(concatenatedChunksbuffer.subarray(0, buffer.byteLength), 0);\n        const matrices = pushDataBuffer(shared, buffer.buffer, vertexCount);\n        shared.worker.postMessage({\n          method: 'push',\n          src: shared.url,\n          length: shared.numVertices * 16,\n          matrices: matrices.buffer\n        }, [matrices.buffer]);\n        bytesProcessed += vertexCount * shared.rowLength;\n        if (shared.onProgress) {\n          const event = new ProgressEvent('progress', {\n            lengthComputable,\n            loaded: shared.totalDownloadBytes,\n            total: shared.totalDownloadBytes\n          });\n          shared.onProgress(event);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n      break;\n    }\n  }\n  if (bytesDownloaded - bytesProcessed > 0) {\n    // Concatenate the chunks into a single Uint8Array\n    let concatenatedChunks = new Uint8Array(chunks.reduce((acc, chunk) => acc + chunk.length, 0));\n    let offset = 0;\n    for (const chunk of chunks) {\n      concatenatedChunks.set(chunk, offset);\n      offset += chunk.length;\n    }\n    let numVertices = Math.floor(concatenatedChunks.byteLength / shared.rowLength);\n    const matrices = pushDataBuffer(shared, concatenatedChunks.buffer, numVertices);\n    shared.worker.postMessage({\n      method: 'push',\n      src: shared.url,\n      length: numVertices * 16,\n      matrices: matrices.buffer\n    }, [matrices.buffer]);\n  }\n  shared.loaded = true;\n  shared.manager.itemEnd(shared.url);\n}\nfunction update(camera, shared, target, hashed) {\n  camera.updateMatrixWorld();\n  shared.gl.getCurrentViewport(target.viewport);\n  // @ts-ignore\n  target.material.viewport.x = target.viewport.z;\n  // @ts-ignore\n  target.material.viewport.y = target.viewport.w;\n  target.material.focal = target.viewport.w / 2.0 * Math.abs(camera.projectionMatrix.elements[5]);\n  if (target.ready) {\n    if (hashed && target.sorted) return;\n    target.ready = false;\n    const view = new Float32Array([target.modelViewMatrix.elements[2], -target.modelViewMatrix.elements[6], target.modelViewMatrix.elements[10], target.modelViewMatrix.elements[14]]);\n    shared.worker.postMessage({\n      method: 'sort',\n      src: shared.url,\n      key: target.uuid,\n      view: view.buffer,\n      hashed\n    }, [view.buffer]);\n    if (hashed && shared.loaded) target.sorted = true;\n  }\n}\nfunction connect(shared, target) {\n  if (!shared.loading) lazyLoad(shared);\n  target.ready = false;\n  target.pm = new THREE.Matrix4();\n  target.vm1 = new THREE.Matrix4();\n  target.vm2 = new THREE.Matrix4();\n  target.viewport = new THREE.Vector4();\n  let splatIndexArray = new Uint32Array(shared.bufferTextureWidth * shared.bufferTextureHeight);\n  const splatIndexes = new THREE.InstancedBufferAttribute(splatIndexArray, 1, false);\n  splatIndexes.setUsage(THREE.DynamicDrawUsage);\n  const geometry = target.geometry = new THREE.InstancedBufferGeometry();\n  const positionsArray = new Float32Array(6 * 3);\n  const positions = new THREE.BufferAttribute(positionsArray, 3);\n  geometry.setAttribute('position', positions);\n  positions.setXYZ(2, -2.0, 2.0, 0.0);\n  positions.setXYZ(1, 2.0, 2.0, 0.0);\n  positions.setXYZ(0, -2.0, -2.0, 0.0);\n  positions.setXYZ(5, -2.0, -2.0, 0.0);\n  positions.setXYZ(4, 2.0, 2.0, 0.0);\n  positions.setXYZ(3, 2.0, -2.0, 0.0);\n  positions.needsUpdate = true;\n  geometry.setAttribute('splatIndex', splatIndexes);\n  geometry.instanceCount = 1;\n  function listener(e) {\n    if (target && e.data.key === target.uuid) {\n      let indexes = new Uint32Array(e.data.indices);\n      // @ts-ignore\n      geometry.attributes.splatIndex.set(indexes);\n      geometry.attributes.splatIndex.needsUpdate = true;\n      geometry.instanceCount = indexes.length;\n      target.ready = true;\n    }\n  }\n  shared.worker.addEventListener('message', listener);\n  async function wait() {\n    while (true) {\n      const centerAndScaleTextureProperties = shared.gl.properties.get(shared.centerAndScaleTexture);\n      const covAndColorTextureProperties = shared.gl.properties.get(shared.covAndColorTexture);\n      if (centerAndScaleTextureProperties != null && centerAndScaleTextureProperties.__webglTexture && covAndColorTextureProperties != null && covAndColorTextureProperties.__webglTexture && shared.loadedVertexCount > 0) break;\n      await new Promise(resolve => setTimeout(resolve, 10));\n    }\n    target.ready = true;\n  }\n  wait();\n  return () => shared.worker.removeEventListener('message', listener);\n}\nfunction pushDataBuffer(shared, buffer, vertexCount) {\n  const context = shared.gl.getContext();\n  if (shared.loadedVertexCount + vertexCount > shared.maxVertexes) vertexCount = shared.maxVertexes - shared.loadedVertexCount;\n  if (vertexCount <= 0) throw 'Failed to parse file';\n  const u_buffer = new Uint8Array(buffer);\n  const f_buffer = new Float32Array(buffer);\n  const matrices = new Float32Array(vertexCount * 16);\n  const covAndColorData_uint8 = new Uint8Array(shared.covAndColorData.buffer);\n  const covAndColorData_int16 = new Int16Array(shared.covAndColorData.buffer);\n  for (let i = 0; i < vertexCount; i++) {\n    const quat = new THREE.Quaternion(-(u_buffer[32 * i + 28 + 1] - 128) / 128.0, (u_buffer[32 * i + 28 + 2] - 128) / 128.0, (u_buffer[32 * i + 28 + 3] - 128) / 128.0, -(u_buffer[32 * i + 28 + 0] - 128) / 128.0);\n    quat.invert();\n    const center = new THREE.Vector3(f_buffer[8 * i + 0], f_buffer[8 * i + 1], -f_buffer[8 * i + 2]);\n    const scale = new THREE.Vector3(f_buffer[8 * i + 3 + 0], f_buffer[8 * i + 3 + 1], f_buffer[8 * i + 3 + 2]);\n    const mtx = new THREE.Matrix4();\n    mtx.makeRotationFromQuaternion(quat);\n    mtx.transpose();\n    mtx.scale(scale);\n    const mtx_t = mtx.clone();\n    mtx.transpose();\n    mtx.premultiply(mtx_t);\n    mtx.setPosition(center);\n    const cov_indexes = [0, 1, 2, 5, 6, 10];\n    let max_value = 0.0;\n    for (let j = 0; j < cov_indexes.length; j++) if (Math.abs(mtx.elements[cov_indexes[j]]) > max_value) max_value = Math.abs(mtx.elements[cov_indexes[j]]);\n    let destOffset = shared.loadedVertexCount * 4 + i * 4;\n    shared.centerAndScaleData[destOffset + 0] = center.x;\n    shared.centerAndScaleData[destOffset + 1] = -center.y;\n    shared.centerAndScaleData[destOffset + 2] = center.z;\n    shared.centerAndScaleData[destOffset + 3] = max_value / 32767.0;\n    destOffset = shared.loadedVertexCount * 8 + i * 4 * 2;\n    for (let j = 0; j < cov_indexes.length; j++) covAndColorData_int16[destOffset + j] = mtx.elements[cov_indexes[j]] * 32767.0 / max_value;\n\n    // RGBA\n    destOffset = shared.loadedVertexCount * 16 + (i * 4 + 3) * 4;\n    const col = new THREE.Color(u_buffer[32 * i + 24 + 0] / 255, u_buffer[32 * i + 24 + 1] / 255, u_buffer[32 * i + 24 + 2] / 255);\n    col.convertSRGBToLinear();\n    covAndColorData_uint8[destOffset + 0] = col.r * 255;\n    covAndColorData_uint8[destOffset + 1] = col.g * 255;\n    covAndColorData_uint8[destOffset + 2] = col.b * 255;\n    covAndColorData_uint8[destOffset + 3] = u_buffer[32 * i + 24 + 3];\n\n    // Store scale and transparent to remove splat in sorting process\n    mtx.elements[15] = Math.max(scale.x, scale.y, scale.z) * u_buffer[32 * i + 24 + 3] / 255.0;\n    for (let j = 0; j < 16; j++) matrices[i * 16 + j] = mtx.elements[j];\n  }\n  while (vertexCount > 0) {\n    let width = 0;\n    let height = 0;\n    const xoffset = shared.loadedVertexCount % shared.bufferTextureWidth;\n    const yoffset = Math.floor(shared.loadedVertexCount / shared.bufferTextureWidth);\n    if (shared.loadedVertexCount % shared.bufferTextureWidth != 0) {\n      width = Math.min(shared.bufferTextureWidth, xoffset + vertexCount) - xoffset;\n      height = 1;\n    } else if (Math.floor(vertexCount / shared.bufferTextureWidth) > 0) {\n      width = shared.bufferTextureWidth;\n      height = Math.floor(vertexCount / shared.bufferTextureWidth);\n    } else {\n      width = vertexCount % shared.bufferTextureWidth;\n      height = 1;\n    }\n    const centerAndScaleTextureProperties = shared.gl.properties.get(shared.centerAndScaleTexture);\n    context.bindTexture(context.TEXTURE_2D, centerAndScaleTextureProperties.__webglTexture);\n    context.texSubImage2D(context.TEXTURE_2D, 0, xoffset, yoffset, width, height, context.RGBA, context.FLOAT, shared.centerAndScaleData, shared.loadedVertexCount * 4);\n    const covAndColorTextureProperties = shared.gl.properties.get(shared.covAndColorTexture);\n    context.bindTexture(context.TEXTURE_2D, covAndColorTextureProperties.__webglTexture);\n    context.texSubImage2D(context.TEXTURE_2D, 0, xoffset, yoffset, width, height,\n    // @ts-ignore\n    context.RGBA_INTEGER, context.UNSIGNED_INT, shared.covAndColorData, shared.loadedVertexCount * 4);\n    shared.gl.resetState();\n    shared.loadedVertexCount += width * height;\n    vertexCount -= width * height;\n  }\n  return matrices;\n}\nfunction Splat({\n  src,\n  toneMapped = false,\n  alphaTest = 0,\n  alphaHash = false,\n  chunkSize = 25000,\n  ...props\n}) {\n  extend({\n    SplatMaterial\n  });\n  const ref = React.useRef(null);\n  const gl = useThree(state => state.gl);\n  const camera = useThree(state => state.camera);\n\n  // Shared state, globally memoized, the same url re-uses the same daza\n  const shared = useLoader(SplatLoader, src, loader => {\n    loader.gl = gl;\n    loader.chunkSize = chunkSize;\n  });\n\n  // Listen to worker results, apply them to the target mesh\n  React.useLayoutEffect(() => shared.connect(ref.current), [src]);\n  // Update the worker\n  useFrame(() => shared.update(ref.current, camera, alphaHash));\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    frustumCulled: false\n  }, props), /*#__PURE__*/React.createElement(\"splatMaterial\", {\n    key: `${src}/${alphaTest}/${alphaHash}${SplatMaterial.key}`,\n    transparent: !alphaHash,\n    depthTest: true,\n    alphaTest: alphaHash ? 0 : alphaTest,\n    centerAndScaleTexture: shared.centerAndScaleTexture,\n    covAndColorTexture: shared.covAndColorTexture,\n    depthWrite: alphaHash ? true : alphaTest > 0,\n    blending: alphaHash ? THREE.NormalBlending : THREE.CustomBlending,\n    blendSrcAlpha: THREE.OneFactor,\n    alphaHash: !!alphaHash,\n    toneMapped: toneMapped\n  }));\n}\n\nexport { Splat };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\nconst OrthographicCamera = /* @__PURE__ */React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  children,\n  makeDefault,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => cameraRef.current, []);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set]);\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: cameraRef\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { OrthographicCamera };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\n\n// TODO: consume this from three >r154 when SemVer allows\n\n// 👇 uncomment when TS version supports function overloads\n// export function useFBO(settings?: FBOSettings)\nfunction useFBO( /** Width in pixels, or settings (will render fullscreen by default) */\nwidth, /** Height in pixels */\nheight, /**Settings */\nsettings) {\n  const size = useThree(state => state.size);\n  const viewport = useThree(state => state.viewport);\n  const _width = typeof width === 'number' ? width : size.width * viewport.dpr;\n  const _height = typeof height === 'number' ? height : size.height * viewport.dpr;\n  const _settings = (typeof width === 'number' ? settings : width) || {};\n  const {\n    samples = 0,\n    depth,\n    ...targetSettings\n  } = _settings;\n  const target = React.useMemo(() => {\n    const target = new THREE.WebGLRenderTarget(_width, _height, {\n      minFilter: THREE.LinearFilter,\n      magFilter: THREE.LinearFilter,\n      type: THREE.HalfFloatType,\n      ...targetSettings\n    });\n    if (depth) {\n      target.depthTexture = new THREE.DepthTexture(_width, _height, THREE.FloatType);\n    }\n    target.samples = samples;\n    return target;\n  }, []);\n  React.useLayoutEffect(() => {\n    target.setSize(_width, _height);\n    if (samples) target.samples = samples;\n  }, [samples, target, _width, _height]);\n  React.useEffect(() => {\n    return () => target.dispose();\n  }, []);\n  return target;\n}\n\nexport { useFBO };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\nconst PerspectiveCamera = /* @__PURE__ */React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  makeDefault,\n  children,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => cameraRef.current, []);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.aspect = size.width / size.height;\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: cameraRef\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { PerspectiveCamera };\n", "import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { useCubeCamera } from './useCubeCamera.js';\n\nfunction CubeCamera({\n  children,\n  frames = Infinity,\n  resolution,\n  near,\n  far,\n  envMap,\n  fog,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  const {\n    fbo,\n    camera,\n    update\n  } = useCubeCamera({\n    resolution,\n    near,\n    far,\n    envMap,\n    fog\n  });\n  let count = 0;\n  useFrame(() => {\n    if (ref.current && (frames === Infinity || count < frames)) {\n      ref.current.visible = false;\n      update();\n      ref.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: camera\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\n\nexport { CubeCamera };\n", "import * as THREE from 'three';\nimport { WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport * as React from 'react';\nimport { useMemo, useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction useCubeCamera({\n  resolution = 256,\n  near = 0.1,\n  far = 1000,\n  envMap,\n  fog\n} = {}) {\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const fbo = useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  useEffect(() => {\n    return () => {\n      fbo.dispose();\n    };\n  }, [fbo]);\n  const camera = useMemo(() => new THREE.CubeCamera(near, far, fbo), [near, far, fbo]);\n  let originalFog;\n  let originalBackground;\n  const update = React.useCallback(() => {\n    originalFog = scene.fog;\n    originalBackground = scene.background;\n    scene.background = envMap || originalBackground;\n    scene.fog = fog || originalFog;\n    camera.update(gl, scene);\n    scene.fog = originalFog;\n    scene.background = originalBackground;\n  }, [gl, scene, camera]);\n  return {\n    fbo,\n    camera,\n    update\n  };\n}\n\nexport { useCubeCamera };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { DeviceOrientationControls as DeviceOrientationControls$1 } from 'three-stdlib';\n\nconst DeviceOrientationControls = /* @__PURE__ */React.forwardRef((props, ref) => {\n  const {\n    camera,\n    onChange,\n    makeDefault,\n    ...rest\n  } = props;\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new DeviceOrientationControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls == null || controls.addEventListener == null || controls.addEventListener('change', callback);\n    return () => controls == null || controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\n  }, [onChange, controls, invalidate]);\n  useFrame(() => controls == null ? void 0 : controls.update(), -1);\n  React.useEffect(() => {\n    const current = controls;\n    current == null || current.connect();\n    return () => current == null ? void 0 : current.dispose();\n  }, [controls]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest)) : null;\n});\n\nexport { DeviceOrientationControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { FlyControls as FlyControls$1 } from 'three-stdlib';\n\nconst FlyControls = /* @__PURE__ */React.forwardRef(({\n  domElement,\n  ...props\n}, fref) => {\n  const {\n    onChange,\n    makeDefault,\n    ...rest\n  } = props;\n  const invalidate = useThree(state => state.invalidate);\n  const camera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new FlyControls$1(camera), [camera]);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener == null || controls.addEventListener('change', callback);\n    return () => controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\n  }, [onChange, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame((_, delta) => controls.update(delta));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: fref,\n    object: controls,\n    args: [camera, explDomElement]\n  }, rest));\n});\n\nexport { FlyControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\n\nconst MapControls = /* @__PURE__ */React.forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const {\n    domElement,\n    camera,\n    makeDefault,\n    onChange,\n    onStart,\n    onEnd,\n    ...rest\n  } = props;\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, explDomElement]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame(() => controls.update(), -1);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: true\n  }, rest));\n});\n\nexport { MapControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /* @__PURE__ */React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  keyEvents = false,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const setEvents = useThree(state => state.setEvents);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    if (keyEvents) {\n      controls.connect(keyEvents === true ? explDomElement : keyEvents);\n    }\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [keyEvents, explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    const onStartCb = e => {\n      if (onStart) onStart(e);\n    };\n    const onEndCb = e => {\n      if (onEnd) onEnd(e);\n    };\n    controls.addEventListener('change', callback);\n    controls.addEventListener('start', onStartCb);\n    controls.addEventListener('end', onEndCb);\n    return () => {\n      controls.removeEventListener('start', onStartCb);\n      controls.removeEventListener('end', onEndCb);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, setEvents]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { TrackballControls as TrackballControls$1 } from 'three-stdlib';\n\nconst TrackballControls = /* @__PURE__ */React.forwardRef(({\n  makeDefault,\n  camera,\n  domElement,\n  regress,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const {\n    invalidate,\n    camera: defaultCamera,\n    gl,\n    events,\n    set,\n    get,\n    performance,\n    viewport\n  } = useThree();\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new TrackballControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate]);\n  React.useEffect(() => {\n    controls.handleResize();\n  }, [viewport]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { TrackballControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { ArcballControls as ArcballControls$1 } from 'three-stdlib';\n\nconst ArcballControls = /* @__PURE__ */forwardRef(({\n  camera,\n  makeDefault,\n  regress,\n  domElement,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = useMemo(() => new ArcballControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd]);\n  useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { ArcballControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { TransformControls as TransformControls$1 } from 'three-stdlib';\n\nconst TransformControls = /* @__PURE__ */React.forwardRef(({\n  children,\n  domElement,\n  onChange,\n  onMouseDown,\n  onMouseUp,\n  onObjectChange,\n  object,\n  makeDefault,\n  camera,\n  // Transform\n  enabled,\n  axis,\n  mode,\n  translationSnap,\n  rotationSnap,\n  scaleSnap,\n  space,\n  size,\n  showX,\n  showY,\n  showZ,\n  ...props\n}, ref) => {\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const defaultControls = useThree(state => state.controls);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new TransformControls$1(explCamera, explDomElement), [explCamera, explDomElement]);\n  const group = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (object) {\n      controls.attach(object instanceof THREE.Object3D ? object : object.current);\n    } else if (group.current instanceof THREE.Object3D) {\n      controls.attach(group.current);\n    }\n    return () => void controls.detach();\n  }, [object, children, controls]);\n  React.useEffect(() => {\n    if (defaultControls) {\n      const callback = event => defaultControls.enabled = !event.value;\n      controls.addEventListener('dragging-changed', callback);\n      return () => controls.removeEventListener('dragging-changed', callback);\n    }\n  }, [controls, defaultControls]);\n  const onChangeRef = React.useRef();\n  const onMouseDownRef = React.useRef();\n  const onMouseUpRef = React.useRef();\n  const onObjectChangeRef = React.useRef();\n  React.useLayoutEffect(() => void (onChangeRef.current = onChange), [onChange]);\n  React.useLayoutEffect(() => void (onMouseDownRef.current = onMouseDown), [onMouseDown]);\n  React.useLayoutEffect(() => void (onMouseUpRef.current = onMouseUp), [onMouseUp]);\n  React.useLayoutEffect(() => void (onObjectChangeRef.current = onObjectChange), [onObjectChange]);\n  React.useEffect(() => {\n    const onChange = e => {\n      invalidate();\n      onChangeRef.current == null || onChangeRef.current(e);\n    };\n    const onMouseDown = e => onMouseDownRef.current == null ? void 0 : onMouseDownRef.current(e);\n    const onMouseUp = e => onMouseUpRef.current == null ? void 0 : onMouseUpRef.current(e);\n    const onObjectChange = e => onObjectChangeRef.current == null ? void 0 : onObjectChangeRef.current(e);\n    controls.addEventListener('change', onChange);\n    controls.addEventListener('mouseDown', onMouseDown);\n    controls.addEventListener('mouseUp', onMouseUp);\n    controls.addEventListener('objectChange', onObjectChange);\n    return () => {\n      controls.removeEventListener('change', onChange);\n      controls.removeEventListener('mouseDown', onMouseDown);\n      controls.removeEventListener('mouseUp', onMouseUp);\n      controls.removeEventListener('objectChange', onObjectChange);\n    };\n  }, [invalidate, controls]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: controls,\n    enabled: enabled,\n    axis: axis,\n    mode: mode,\n    translationSnap: translationSnap,\n    rotationSnap: rotationSnap,\n    scaleSnap: scaleSnap,\n    space: space,\n    size: size,\n    showX: showX,\n    showY: showY,\n    showZ: showZ\n  }), /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children));\n});\n\nexport { TransformControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { PointerLockControls as PointerLockControls$1 } from 'three-stdlib';\n\nconst PointerLockControls = /* @__PURE__ */React.forwardRef(({\n  domElement,\n  selector,\n  onChange,\n  onLock,\n  onUnlock,\n  enabled = true,\n  makeDefault,\n  ...props\n}, ref) => {\n  const {\n    camera,\n    ...rest\n  } = props;\n  const setEvents = useThree(state => state.setEvents);\n  const gl = useThree(state => state.gl);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new PointerLockControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    if (enabled) {\n      controls.connect(explDomElement);\n      // Force events to be centered while PLC is active\n      const oldComputeOffsets = get().events.compute;\n      setEvents({\n        compute(event, state) {\n          const offsetX = state.size.width / 2;\n          const offsetY = state.size.height / 2;\n          state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n          state.raycaster.setFromCamera(state.pointer, state.camera);\n        }\n      });\n      return () => {\n        controls.disconnect();\n        setEvents({\n          compute: oldComputeOffsets\n        });\n      };\n    }\n  }, [enabled, controls]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener('change', callback);\n    if (onLock) controls.addEventListener('lock', onLock);\n    if (onUnlock) controls.addEventListener('unlock', onUnlock);\n\n    // Enforce previous interaction\n    const handler = () => controls.lock();\n    const elements = selector ? Array.from(document.querySelectorAll(selector)) : [document];\n    elements.forEach(element => element && element.addEventListener('click', handler));\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onLock) controls.removeEventListener('lock', onLock);\n      if (onUnlock) controls.removeEventListener('unlock', onUnlock);\n      elements.forEach(element => element ? element.removeEventListener('click', handler) : undefined);\n    };\n  }, [onChange, onLock, onUnlock, selector, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest));\n});\n\nexport { PointerLockControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { FirstPersonControls as FirstPersonControls$1 } from 'three-stdlib';\n\nconst FirstPersonControls = /* @__PURE__ */React.forwardRef(({\n  domElement,\n  makeDefault,\n  ...props\n}, ref) => {\n  const camera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const [controls] = React.useState(() => new FirstPersonControls$1(camera, explDomElement));\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame((_, delta) => {\n    controls.update(delta);\n  }, -1);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, props)) : null;\n});\n\nexport { FirstPersonControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { Box3, MathUtils, Matrix4, Quaternion, Raycaster, Sphere, Spherical, Vector2, Vector3, Vector4 } from 'three';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport CameraControlsImpl from 'camera-controls';\n\nconst CameraControls = /* @__PURE__ */forwardRef((props, ref) => {\n  // useMemo is used here instead of useEffect, otherwise the useMemo below runs first and throws\n  useMemo(() => {\n    // to allow for tree shaking, we only import the subset of THREE that is used by camera-controls\n    // see https://github.com/yomotsu/camera-controls#important\n    const subsetOfTHREE = {\n      Box3,\n      MathUtils: {\n        clamp: MathUtils.clamp\n      },\n      Matrix4,\n      Quaternion,\n      Raycaster,\n      Sphere,\n      Spherical,\n      Vector2,\n      Vector3,\n      Vector4\n    };\n    CameraControlsImpl.install({\n      THREE: subsetOfTHREE\n    });\n    extend({\n      CameraControlsImpl\n    });\n  }, []);\n  const {\n    camera,\n    domElement,\n    makeDefault,\n    onStart,\n    onEnd,\n    onChange,\n    regress,\n    ...restProps\n  } = props;\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const setEvents = useThree(state => state.setEvents);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = useMemo(() => new CameraControlsImpl(explCamera), [explCamera]);\n  useFrame((state, delta) => {\n    if (controls.enabled) controls.update(delta);\n  }, -1);\n  useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.disconnect();\n  }, [explDomElement, controls]);\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    const onStartCb = e => {\n      if (onStart) onStart(e);\n    };\n    const onEndCb = e => {\n      if (onEnd) onEnd(e);\n    };\n    controls.addEventListener('update', callback);\n    controls.addEventListener('controlstart', onStartCb);\n    controls.addEventListener('controlend', onEndCb);\n    controls.addEventListener('control', callback);\n    controls.addEventListener('transitionstart', callback);\n    controls.addEventListener('wake', callback);\n    return () => {\n      controls.removeEventListener('update', callback);\n      controls.removeEventListener('controlstart', onStartCb);\n      controls.removeEventListener('controlend', onEndCb);\n      controls.removeEventListener('control', callback);\n      controls.removeEventListener('transitionstart', callback);\n      controls.removeEventListener('wake', callback);\n    };\n  }, [controls, onStart, onEnd, invalidate, setEvents, regress, onChange]);\n  useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls: controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { CameraControls };\n", "/*!\n * camera-controls\n * https://github.com/yomotsu/camera-controls\n * (c) 2017 @yomotsu\n * Released under the MIT License.\n */\n// see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#value\nconst MOUSE_BUTTON = {\n    LEFT: 1,\n    RIGHT: 2,\n    MIDDLE: 4,\n};\nconst ACTION = Object.freeze({\n    NONE: 0,\n    ROTATE: 1,\n    TRUCK: 2,\n    OFFSET: 4,\n    DOLLY: 8,\n    ZOOM: 16,\n    TOUCH_ROTATE: 32,\n    TOUCH_TRUCK: 64,\n    TOUCH_OFFSET: 128,\n    TOUCH_DOLLY: 256,\n    TOUCH_ZOOM: 512,\n    TOUCH_DOLLY_TRUCK: 1024,\n    TOUCH_DOLLY_OFFSET: 2048,\n    TOUCH_DOLLY_ROTATE: 4096,\n    TOUCH_ZOOM_TRUCK: 8192,\n    TOUCH_ZOOM_OFFSET: 16384,\n    TOUCH_ZOOM_ROTATE: 32768,\n});\nconst DOLLY_DIRECTION = {\n    NONE: 0,\n    IN: 1,\n    OUT: -1,\n};\nfunction isPerspectiveCamera(camera) {\n    return camera.isPerspectiveCamera;\n}\nfunction isOrthographicCamera(camera) {\n    return camera.isOrthographicCamera;\n}\n\nconst PI_2 = Math.PI * 2;\nconst PI_HALF = Math.PI / 2;\n\nconst EPSILON = 1e-5;\nconst DEG2RAD = Math.PI / 180;\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\nfunction approxZero(number, error = EPSILON) {\n    return Math.abs(number) < error;\n}\nfunction approxEquals(a, b, error = EPSILON) {\n    return approxZero(a - b, error);\n}\nfunction roundToStep(value, step) {\n    return Math.round(value / step) * step;\n}\nfunction infinityToMaxNumber(value) {\n    if (isFinite(value))\n        return value;\n    if (value < 0)\n        return -Number.MAX_VALUE;\n    return Number.MAX_VALUE;\n}\nfunction maxNumberToInfinity(value) {\n    if (Math.abs(value) < Number.MAX_VALUE)\n        return value;\n    return value * Infinity;\n}\n// https://docs.unity3d.com/ScriptReference/Mathf.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Mathf.cs#L308\nfunction smoothDamp(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let change = current - target;\n    const originalTo = target;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    change = clamp(change, -maxChange, maxChange);\n    target = current - change;\n    const temp = (currentVelocityRef.value + omega * change) * deltaTime;\n    currentVelocityRef.value = (currentVelocityRef.value - omega * temp) * exp;\n    let output = target + (change + temp) * exp;\n    // Prevent overshooting\n    if (originalTo - current > 0.0 === output > originalTo) {\n        output = originalTo;\n        currentVelocityRef.value = (output - originalTo) / deltaTime;\n    }\n    return output;\n}\n// https://docs.unity3d.com/ScriptReference/Vector3.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Vector3.cs#L97\nfunction smoothDampVec3(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime, out) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let targetX = target.x;\n    let targetY = target.y;\n    let targetZ = target.z;\n    let changeX = current.x - targetX;\n    let changeY = current.y - targetY;\n    let changeZ = current.z - targetZ;\n    const originalToX = targetX;\n    const originalToY = targetY;\n    const originalToZ = targetZ;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    const maxChangeSq = maxChange * maxChange;\n    const magnitudeSq = changeX * changeX + changeY * changeY + changeZ * changeZ;\n    if (magnitudeSq > maxChangeSq) {\n        const magnitude = Math.sqrt(magnitudeSq);\n        changeX = changeX / magnitude * maxChange;\n        changeY = changeY / magnitude * maxChange;\n        changeZ = changeZ / magnitude * maxChange;\n    }\n    targetX = current.x - changeX;\n    targetY = current.y - changeY;\n    targetZ = current.z - changeZ;\n    const tempX = (currentVelocityRef.x + omega * changeX) * deltaTime;\n    const tempY = (currentVelocityRef.y + omega * changeY) * deltaTime;\n    const tempZ = (currentVelocityRef.z + omega * changeZ) * deltaTime;\n    currentVelocityRef.x = (currentVelocityRef.x - omega * tempX) * exp;\n    currentVelocityRef.y = (currentVelocityRef.y - omega * tempY) * exp;\n    currentVelocityRef.z = (currentVelocityRef.z - omega * tempZ) * exp;\n    out.x = targetX + (changeX + tempX) * exp;\n    out.y = targetY + (changeY + tempY) * exp;\n    out.z = targetZ + (changeZ + tempZ) * exp;\n    // Prevent overshooting\n    const origMinusCurrentX = originalToX - current.x;\n    const origMinusCurrentY = originalToY - current.y;\n    const origMinusCurrentZ = originalToZ - current.z;\n    const outMinusOrigX = out.x - originalToX;\n    const outMinusOrigY = out.y - originalToY;\n    const outMinusOrigZ = out.z - originalToZ;\n    if (origMinusCurrentX * outMinusOrigX + origMinusCurrentY * outMinusOrigY + origMinusCurrentZ * outMinusOrigZ > 0) {\n        out.x = originalToX;\n        out.y = originalToY;\n        out.z = originalToZ;\n        currentVelocityRef.x = (out.x - originalToX) / deltaTime;\n        currentVelocityRef.y = (out.y - originalToY) / deltaTime;\n        currentVelocityRef.z = (out.z - originalToZ) / deltaTime;\n    }\n    return out;\n}\n\nfunction extractClientCoordFromEvent(pointers, out) {\n    out.set(0, 0);\n    pointers.forEach((pointer) => {\n        out.x += pointer.clientX;\n        out.y += pointer.clientY;\n    });\n    out.x /= pointers.length;\n    out.y /= pointers.length;\n}\n\nfunction notSupportedInOrthographicCamera(camera, message) {\n    if (isOrthographicCamera(camera)) {\n        console.warn(`${message} is not supported in OrthographicCamera`);\n        return true;\n    }\n    return false;\n}\n\nclass EventDispatcher {\n    constructor() {\n        this._listeners = {};\n    }\n    /**\n     * Adds the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        const listeners = this._listeners;\n        if (listeners[type] === undefined)\n            listeners[type] = [];\n        if (listeners[type].indexOf(listener) === -1)\n            listeners[type].push(listener);\n    }\n    /**\n     * Presence of the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    hasEventListener(type, listener) {\n        const listeners = this._listeners;\n        return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    }\n    /**\n     * Removes the specified event listener\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[type];\n        if (listenerArray !== undefined) {\n            const index = listenerArray.indexOf(listener);\n            if (index !== -1)\n                listenerArray.splice(index, 1);\n        }\n    }\n    /**\n     * Removes all event listeners\n     * @param type event name\n     * @category Methods\n     */\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = {};\n            return;\n        }\n        if (Array.isArray(this._listeners[type]))\n            this._listeners[type].length = 0;\n    }\n    /**\n     * Fire an event type.\n     * @param event DispatcherEvent\n     * @category Methods\n     */\n    dispatchEvent(event) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[event.type];\n        if (listenerArray !== undefined) {\n            event.target = this;\n            const array = listenerArray.slice(0);\n            for (let i = 0, l = array.length; i < l; i++) {\n                array[i].call(this, event);\n            }\n        }\n    }\n}\n\nvar _a;\nconst VERSION = '2.8.3'; // will be replaced with `version` in package.json during the build process.\nconst TOUCH_DOLLY_FACTOR = 1 / 8;\nconst isMac = /Mac/.test((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.platform);\nlet THREE;\nlet _ORIGIN;\nlet _AXIS_Y;\nlet _AXIS_Z;\nlet _v2;\nlet _v3A;\nlet _v3B;\nlet _v3C;\nlet _cameraDirection;\nlet _xColumn;\nlet _yColumn;\nlet _zColumn;\nlet _deltaTarget;\nlet _deltaOffset;\nlet _sphericalA;\nlet _sphericalB;\nlet _box3A;\nlet _box3B;\nlet _sphere;\nlet _quaternionA;\nlet _quaternionB;\nlet _rotationMatrix;\nlet _raycaster;\nclass CameraControls extends EventDispatcher {\n    /**\n     * Injects THREE as the dependency. You can then proceed to use CameraControls.\n     *\n     * e.g\n     * ```javascript\n     * CameraControls.install( { THREE: THREE } );\n     * ```\n     *\n     * Note: If you do not wish to use enter three.js to reduce file size(tree-shaking for example), make a subset to install.\n     *\n     * ```js\n     * import {\n     * \tVector2,\n     * \tVector3,\n     * \tVector4,\n     * \tQuaternion,\n     * \tMatrix4,\n     * \tSpherical,\n     * \tBox3,\n     * \tSphere,\n     * \tRaycaster,\n     * \tMathUtils,\n     * } from 'three';\n     *\n     * const subsetOfTHREE = {\n     * \tVector2   : Vector2,\n     * \tVector3   : Vector3,\n     * \tVector4   : Vector4,\n     * \tQuaternion: Quaternion,\n     * \tMatrix4   : Matrix4,\n     * \tSpherical : Spherical,\n     * \tBox3      : Box3,\n     * \tSphere    : Sphere,\n     * \tRaycaster : Raycaster,\n     * };\n\n     * CameraControls.install( { THREE: subsetOfTHREE } );\n     * ```\n     * @category Statics\n     */\n    static install(libs) {\n        THREE = libs.THREE;\n        _ORIGIN = Object.freeze(new THREE.Vector3(0, 0, 0));\n        _AXIS_Y = Object.freeze(new THREE.Vector3(0, 1, 0));\n        _AXIS_Z = Object.freeze(new THREE.Vector3(0, 0, 1));\n        _v2 = new THREE.Vector2();\n        _v3A = new THREE.Vector3();\n        _v3B = new THREE.Vector3();\n        _v3C = new THREE.Vector3();\n        _cameraDirection = new THREE.Vector3();\n        _xColumn = new THREE.Vector3();\n        _yColumn = new THREE.Vector3();\n        _zColumn = new THREE.Vector3();\n        _deltaTarget = new THREE.Vector3();\n        _deltaOffset = new THREE.Vector3();\n        _sphericalA = new THREE.Spherical();\n        _sphericalB = new THREE.Spherical();\n        _box3A = new THREE.Box3();\n        _box3B = new THREE.Box3();\n        _sphere = new THREE.Sphere();\n        _quaternionA = new THREE.Quaternion();\n        _quaternionB = new THREE.Quaternion();\n        _rotationMatrix = new THREE.Matrix4();\n        _raycaster = new THREE.Raycaster();\n    }\n    /**\n     * list all ACTIONs\n     * @category Statics\n     */\n    static get ACTION() {\n        return ACTION;\n    }\n    /**\n     * Creates a `CameraControls` instance.\n     *\n     * Note:\n     * You **must install** three.js before using camera-controls. see [#install](#install)\n     * Not doing so will lead to runtime errors (`undefined` references to THREE).\n     *\n     * e.g.\n     * ```\n     * CameraControls.install( { THREE } );\n     * const cameraControls = new CameraControls( camera, domElement );\n     * ```\n     *\n     * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.\n     * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.\n     * @category Constructor\n     */\n    constructor(camera, domElement) {\n        super();\n        /**\n         * Minimum vertical angle in radians.\n         * The angle has to be between `0` and `.maxPolarAngle` inclusive.\n         * The default value is `0`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxPolarAngle = 0;\n         * ```\n         * @category Properties\n         */\n        this.minPolarAngle = 0; // radians\n        /**\n         * Maximum vertical angle in radians.\n         * The angle has to be between `.maxPolarAngle` and `Math.PI` inclusive.\n         * The default value is `Math.PI`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxPolarAngle = Math.PI;\n         * ```\n         * @category Properties\n         */\n        this.maxPolarAngle = Math.PI; // radians\n        /**\n         * Minimum horizontal angle in radians.\n         * The angle has to be less than `.maxAzimuthAngle`.\n         * The default value is `- Infinity`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.minAzimuthAngle = - Infinity;\n         * ```\n         * @category Properties\n         */\n        this.minAzimuthAngle = -Infinity; // radians\n        /**\n         * Maximum horizontal angle in radians.\n         * The angle has to be greater than `.minAzimuthAngle`.\n         * The default value is `Infinity`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxAzimuthAngle = Infinity;\n         * ```\n         * @category Properties\n         */\n        this.maxAzimuthAngle = Infinity; // radians\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        /**\n         * Minimum distance for dolly. The value must be higher than `0`. Default is `Number.EPSILON`.\n         * PerspectiveCamera only.\n         * @category Properties\n         */\n        this.minDistance = Number.EPSILON;\n        /**\n         * Maximum distance for dolly. The value must be higher than `minDistance`. Default is `Infinity`.\n         * PerspectiveCamera only.\n         * @category Properties\n         */\n        this.maxDistance = Infinity;\n        /**\n         * `true` to enable Infinity Dolly for wheel and pinch. Use this with `minDistance` and `maxDistance`\n         * If the Dolly distance is less (or over) than the `minDistance` (or `maxDistance`), `infinityDolly` will keep the distance and pushes the target position instead.\n         * @category Properties\n         */\n        this.infinityDolly = false;\n        /**\n         * Minimum camera zoom.\n         * @category Properties\n         */\n        this.minZoom = 0.01;\n        /**\n         * Maximum camera zoom.\n         * @category Properties\n         */\n        this.maxZoom = Infinity;\n        /**\n         * Approximate time in seconds to reach the target. A smaller value will reach the target faster.\n         * @category Properties\n         */\n        this.smoothTime = 0.25;\n        /**\n         * the smoothTime while dragging\n         * @category Properties\n         */\n        this.draggingSmoothTime = 0.125;\n        /**\n         * Max transition speed in unit-per-seconds\n         * @category Properties\n         */\n        this.maxSpeed = Infinity;\n        /**\n         * Speed of azimuth (horizontal) rotation.\n         * @category Properties\n         */\n        this.azimuthRotateSpeed = 1.0;\n        /**\n         * Speed of polar (vertical) rotation.\n         * @category Properties\n         */\n        this.polarRotateSpeed = 1.0;\n        /**\n         * Speed of mouse-wheel dollying.\n         * @category Properties\n         */\n        this.dollySpeed = 1.0;\n        /**\n         * `true` to invert direction when dollying or zooming via drag\n         * @category Properties\n         */\n        this.dollyDragInverted = false;\n        /**\n         * Speed of drag for truck and pedestal.\n         * @category Properties\n         */\n        this.truckSpeed = 2.0;\n        /**\n         * `true` to enable Dolly-in to the mouse cursor coords.\n         * @category Properties\n         */\n        this.dollyToCursor = false;\n        /**\n         * @category Properties\n         */\n        this.dragToOffset = false;\n        /**\n         * The same as `.screenSpacePanning` in three.js's OrbitControls.\n         * @category Properties\n         */\n        this.verticalDragToForward = false;\n        /**\n         * Friction ratio of the boundary.\n         * @category Properties\n         */\n        this.boundaryFriction = 0.0;\n        /**\n         * Controls how soon the `rest` event fires as the camera slows.\n         * @category Properties\n         */\n        this.restThreshold = 0.01;\n        /**\n         * An array of Meshes to collide with camera.\n         * Be aware colliderMeshes may decrease performance. The collision test uses 4 raycasters from the camera since the near plane has 4 corners.\n         * @category Properties\n         */\n        this.colliderMeshes = [];\n        /**\n         * Force cancel user dragging.\n         * @category Methods\n         */\n        // cancel will be overwritten in the constructor.\n        this.cancel = () => { };\n        this._enabled = true;\n        this._state = ACTION.NONE;\n        this._viewport = null;\n        this._changedDolly = 0;\n        this._changedZoom = 0;\n        this._hasRested = true;\n        this._boundaryEnclosesCamera = false;\n        this._needsUpdate = true;\n        this._updatedLastTime = false;\n        this._elementRect = new DOMRect();\n        this._isDragging = false;\n        this._dragNeedsUpdate = true;\n        this._activePointers = [];\n        this._lockedPointer = null;\n        this._interactiveArea = new DOMRect(0, 0, 1, 1);\n        // Use draggingSmoothTime over smoothTime while true.\n        // set automatically true on user-dragging start.\n        // set automatically false on programmable methods call.\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._isUserControllingOffset = false;\n        this._isUserControllingZoom = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        // velocities for smoothDamp\n        this._thetaVelocity = { value: 0 };\n        this._phiVelocity = { value: 0 };\n        this._radiusVelocity = { value: 0 };\n        this._targetVelocity = new THREE.Vector3();\n        this._focalOffsetVelocity = new THREE.Vector3();\n        this._zoomVelocity = { value: 0 };\n        this._truckInternal = (deltaX, deltaY, dragToOffset) => {\n            let truckX;\n            let pedestalY;\n            if (isPerspectiveCamera(this._camera)) {\n                const offset = _v3A.copy(this._camera.position).sub(this._target);\n                // half of the fov is center to top of screen\n                const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n                const targetDistance = offset.length() * Math.tan(fov * 0.5);\n                truckX = (this.truckSpeed * deltaX * targetDistance / this._elementRect.height);\n                pedestalY = (this.truckSpeed * deltaY * targetDistance / this._elementRect.height);\n            }\n            else if (isOrthographicCamera(this._camera)) {\n                const camera = this._camera;\n                truckX = deltaX * (camera.right - camera.left) / camera.zoom / this._elementRect.width;\n                pedestalY = deltaY * (camera.top - camera.bottom) / camera.zoom / this._elementRect.height;\n            }\n            else {\n                return;\n            }\n            if (this.verticalDragToForward) {\n                dragToOffset ?\n                    this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y, this._focalOffsetEnd.z, true) :\n                    this.truck(truckX, 0, true);\n                this.forward(-pedestalY, true);\n            }\n            else {\n                dragToOffset ?\n                    this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y + pedestalY, this._focalOffsetEnd.z, true) :\n                    this.truck(truckX, pedestalY, true);\n            }\n        };\n        this._rotateInternal = (deltaX, deltaY) => {\n            const theta = PI_2 * this.azimuthRotateSpeed * deltaX / this._elementRect.height; // divide by *height* to refer the resolution\n            const phi = PI_2 * this.polarRotateSpeed * deltaY / this._elementRect.height;\n            this.rotate(theta, phi, true);\n        };\n        this._dollyInternal = (delta, x, y) => {\n            const dollyScale = Math.pow(0.95, -delta * this.dollySpeed);\n            const lastDistance = this._sphericalEnd.radius;\n            const distance = this._sphericalEnd.radius * dollyScale;\n            const clampedDistance = clamp(distance, this.minDistance, this.maxDistance);\n            const overflowedDistance = clampedDistance - distance;\n            if (this.infinityDolly && this.dollyToCursor) {\n                this._dollyToNoClamp(distance, true);\n            }\n            else if (this.infinityDolly && !this.dollyToCursor) {\n                this.dollyInFixed(overflowedDistance, true);\n                this._dollyToNoClamp(clampedDistance, true);\n            }\n            else {\n                this._dollyToNoClamp(clampedDistance, true);\n            }\n            if (this.dollyToCursor) {\n                this._changedDolly += (this.infinityDolly ? distance : clampedDistance) - lastDistance;\n                this._dollyControlCoord.set(x, y);\n            }\n            this._lastDollyDirection = Math.sign(-delta);\n        };\n        this._zoomInternal = (delta, x, y) => {\n            const zoomScale = Math.pow(0.95, delta * this.dollySpeed);\n            const lastZoom = this._zoom;\n            const zoom = this._zoom * zoomScale;\n            // for both PerspectiveCamera and OrthographicCamera\n            this.zoomTo(zoom, true);\n            if (this.dollyToCursor) {\n                this._changedZoom += zoom - lastZoom;\n                this._dollyControlCoord.set(x, y);\n            }\n        };\n        // Check if the user has installed THREE\n        if (typeof THREE === 'undefined') {\n            console.error('camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.');\n        }\n        this._camera = camera;\n        this._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert();\n        this._state = ACTION.NONE;\n        // the location\n        this._target = new THREE.Vector3();\n        this._targetEnd = this._target.clone();\n        this._focalOffset = new THREE.Vector3();\n        this._focalOffsetEnd = this._focalOffset.clone();\n        // rotation\n        this._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace));\n        this._sphericalEnd = this._spherical.clone();\n        this._lastDistance = this._spherical.radius;\n        this._zoom = this._camera.zoom;\n        this._zoomEnd = this._zoom;\n        this._lastZoom = this._zoom;\n        // collisionTest uses nearPlane.s\n        this._nearPlaneCorners = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n        ];\n        this._updateNearPlaneCorners();\n        // Target cannot move outside of this box\n        this._boundary = new THREE.Box3(new THREE.Vector3(-Infinity, -Infinity, -Infinity), new THREE.Vector3(Infinity, Infinity, Infinity));\n        // reset\n        this._cameraUp0 = this._camera.up.clone();\n        this._target0 = this._target.clone();\n        this._position0 = this._camera.position.clone();\n        this._zoom0 = this._zoom;\n        this._focalOffset0 = this._focalOffset.clone();\n        this._dollyControlCoord = new THREE.Vector2();\n        // configs\n        this.mouseButtons = {\n            left: ACTION.ROTATE,\n            middle: ACTION.DOLLY,\n            right: ACTION.TRUCK,\n            wheel: isPerspectiveCamera(this._camera) ? ACTION.DOLLY :\n                isOrthographicCamera(this._camera) ? ACTION.ZOOM :\n                    ACTION.NONE,\n        };\n        this.touches = {\n            one: ACTION.TOUCH_ROTATE,\n            two: isPerspectiveCamera(this._camera) ? ACTION.TOUCH_DOLLY_TRUCK :\n                isOrthographicCamera(this._camera) ? ACTION.TOUCH_ZOOM_TRUCK :\n                    ACTION.NONE,\n            three: ACTION.TOUCH_TRUCK,\n        };\n        const dragStartPosition = new THREE.Vector2();\n        const lastDragPosition = new THREE.Vector2();\n        const dollyStart = new THREE.Vector2();\n        const onPointerDown = (event) => {\n            if (!this._enabled || !this._domElement)\n                return;\n            if (this._interactiveArea.left !== 0 ||\n                this._interactiveArea.top !== 0 ||\n                this._interactiveArea.width !== 1 ||\n                this._interactiveArea.height !== 1) {\n                const elRect = this._domElement.getBoundingClientRect();\n                const left = event.clientX / elRect.width;\n                const top = event.clientY / elRect.height;\n                // check if the interactiveArea contains the drag start position.\n                if (left < this._interactiveArea.left ||\n                    left > this._interactiveArea.right ||\n                    top < this._interactiveArea.top ||\n                    top > this._interactiveArea.bottom)\n                    return;\n            }\n            // Don't call `event.preventDefault()` on the pointerdown event\n            // to keep receiving pointermove evens outside dragging iframe\n            // https://taye.me/blog/tips/2015/11/16/mouse-drag-outside-iframe/\n            const mouseButton = event.pointerType !== 'mouse' ? null :\n                (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\n                    (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE :\n                        (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT :\n                            null;\n            if (mouseButton !== null) {\n                const zombiePointer = this._findPointerByMouseButton(mouseButton);\n                zombiePointer && this._disposePointer(zombiePointer);\n            }\n            if ((event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT && this._lockedPointer)\n                return;\n            const pointer = {\n                pointerId: event.pointerId,\n                clientX: event.clientX,\n                clientY: event.clientY,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton,\n            };\n            this._activePointers.push(pointer);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            this._isDragging = true;\n            startDragging(event);\n        };\n        const onPointerMove = (event) => {\n            if (event.cancelable)\n                event.preventDefault();\n            const pointerId = event.pointerId;\n            const pointer = this._lockedPointer || this._findPointerById(pointerId);\n            if (!pointer)\n                return;\n            pointer.clientX = event.clientX;\n            pointer.clientY = event.clientY;\n            pointer.deltaX = event.movementX;\n            pointer.deltaY = event.movementY;\n            this._state = 0;\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if ((!this._isDragging && this._lockedPointer) ||\n                    this._isDragging && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            dragging();\n        };\n        const onPointerUp = (event) => {\n            const pointer = this._findPointerById(event.pointerId);\n            if (pointer && pointer === this._lockedPointer)\n                return;\n            pointer && this._disposePointer(pointer);\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 0:\n                        this._state = ACTION.NONE;\n                        break;\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                this._state = ACTION.NONE;\n            }\n            endDragging();\n        };\n        let lastScrollTimeStamp = -1;\n        const onMouseWheel = (event) => {\n            if (!this._domElement)\n                return;\n            if (!this._enabled || this.mouseButtons.wheel === ACTION.NONE)\n                return;\n            if (this._interactiveArea.left !== 0 ||\n                this._interactiveArea.top !== 0 ||\n                this._interactiveArea.width !== 1 ||\n                this._interactiveArea.height !== 1) {\n                const elRect = this._domElement.getBoundingClientRect();\n                const left = event.clientX / elRect.width;\n                const top = event.clientY / elRect.height;\n                // check if the interactiveArea contains the drag start position.\n                if (left < this._interactiveArea.left ||\n                    left > this._interactiveArea.right ||\n                    top < this._interactiveArea.top ||\n                    top > this._interactiveArea.bottom)\n                    return;\n            }\n            event.preventDefault();\n            if (this.dollyToCursor ||\n                this.mouseButtons.wheel === ACTION.ROTATE ||\n                this.mouseButtons.wheel === ACTION.TRUCK) {\n                const now = performance.now();\n                // only need to fire this at scroll start.\n                if (lastScrollTimeStamp - now < 1000)\n                    this._getClientRect(this._elementRect);\n                lastScrollTimeStamp = now;\n            }\n            // Ref: https://github.com/cedricpinson/osgjs/blob/00e5a7e9d9206c06fdde0436e1d62ab7cb5ce853/sources/osgViewer/input/source/InputSourceMouse.js#L89-L103\n            const deltaYFactor = isMac ? -1 : -3;\n            const delta = (event.deltaMode === 1) ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\n            const x = this.dollyToCursor ? (event.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n            const y = this.dollyToCursor ? (event.clientY - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n            switch (this.mouseButtons.wheel) {\n                case ACTION.ROTATE: {\n                    this._rotateInternal(event.deltaX, event.deltaY);\n                    this._isUserControllingRotate = true;\n                    break;\n                }\n                case ACTION.TRUCK: {\n                    this._truckInternal(event.deltaX, event.deltaY, false);\n                    this._isUserControllingTruck = true;\n                    break;\n                }\n                case ACTION.OFFSET: {\n                    this._truckInternal(event.deltaX, event.deltaY, true);\n                    this._isUserControllingOffset = true;\n                    break;\n                }\n                case ACTION.DOLLY: {\n                    this._dollyInternal(-delta, x, y);\n                    this._isUserControllingDolly = true;\n                    break;\n                }\n                case ACTION.ZOOM: {\n                    this._zoomInternal(-delta, x, y);\n                    this._isUserControllingZoom = true;\n                    break;\n                }\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const onContextMenu = (event) => {\n            if (!this._domElement || !this._enabled)\n                return;\n            // contextmenu event is fired right after pointerdown\n            // remove attached handlers and active pointer, if interrupted by contextmenu.\n            if (this.mouseButtons.right === CameraControls.ACTION.NONE) {\n                const pointerId = event instanceof PointerEvent ? event.pointerId : 0;\n                const pointer = this._findPointerById(pointerId);\n                pointer && this._disposePointer(pointer);\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                return;\n            }\n            event.preventDefault();\n        };\n        const startDragging = (event) => {\n            if (!this._enabled)\n                return;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            this._getClientRect(this._elementRect);\n            dragStartPosition.copy(_v2);\n            lastDragPosition.copy(_v2);\n            const isMultiTouch = this._activePointers.length >= 2;\n            if (isMultiTouch) {\n                // 2 finger pinch\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                dollyStart.set(0, distance);\n                // center coords of 2 finger truck\n                const x = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5;\n                const y = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;\n                lastDragPosition.set(x, y);\n            }\n            this._state = 0;\n            if (!event) {\n                if (this._lockedPointer)\n                    this._state = this._state | this.mouseButtons.left;\n            }\n            else if ('pointerType' in event && event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if (!this._lockedPointer && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            // stop current movement on drag start\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._sphericalEnd.theta = this._spherical.theta;\n                this._sphericalEnd.phi = this._spherical.phi;\n                this._thetaVelocity.value = 0;\n                this._phiVelocity.value = 0;\n            }\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n                this._targetEnd.copy(this._target);\n                this._targetVelocity.set(0, 0, 0);\n            }\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE) {\n                this._sphericalEnd.radius = this._spherical.radius;\n                this._radiusVelocity.value = 0;\n            }\n            if ((this._state & ACTION.ZOOM) === ACTION.ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._zoomEnd = this._zoom;\n                this._zoomVelocity.value = 0;\n            }\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._focalOffsetEnd.copy(this._focalOffset);\n                this._focalOffsetVelocity.set(0, 0, 0);\n            }\n            this.dispatchEvent({ type: 'controlstart' });\n        };\n        const dragging = () => {\n            if (!this._enabled || !this._dragNeedsUpdate)\n                return;\n            this._dragNeedsUpdate = false;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            // When pointer lock is enabled clientX, clientY, screenX, and screenY remain 0.\n            // If pointer lock is enabled, use the Delta directory, and assume active-pointer is not multiple.\n            const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n            const lockedPointer = isPointerLockActive ? this._lockedPointer || this._activePointers[0] : null;\n            const deltaX = lockedPointer ? -lockedPointer.deltaX : lastDragPosition.x - _v2.x;\n            const deltaY = lockedPointer ? -lockedPointer.deltaY : lastDragPosition.y - _v2.y;\n            lastDragPosition.copy(_v2);\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._rotateInternal(deltaX, deltaY);\n                this._isUserControllingRotate = true;\n            }\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.ZOOM) === ACTION.ZOOM) {\n                const dollyX = this.dollyToCursor ? (dragStartPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (dragStartPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                const dollyDirection = this.dollyDragInverted ? -1 : 1;\n                if ((this._state & ACTION.DOLLY) === ACTION.DOLLY) {\n                    this._dollyInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                const dollyDelta = dollyStart.y - distance;\n                dollyStart.set(0, distance);\n                const dollyX = this.dollyToCursor ? (lastDragPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (lastDragPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                    (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                    (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                    (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET) {\n                    this._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n                this._truckInternal(deltaX, deltaY, false);\n                this._isUserControllingTruck = true;\n            }\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._truckInternal(deltaX, deltaY, true);\n                this._isUserControllingOffset = true;\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const endDragging = () => {\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            lastDragPosition.copy(_v2);\n            this._dragNeedsUpdate = false;\n            if (this._activePointers.length === 0 ||\n                (this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer)) {\n                this._isDragging = false;\n            }\n            if (this._activePointers.length === 0 && this._domElement) {\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                this.dispatchEvent({ type: 'controlend' });\n            }\n        };\n        this.lockPointer = () => {\n            if (!this._enabled || !this._domElement)\n                return;\n            this.cancel();\n            // Element.requestPointerLock is allowed to happen without any pointer active - create a faux one for compatibility with controls\n            this._lockedPointer = {\n                pointerId: -1,\n                clientX: 0,\n                clientY: 0,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton: null,\n            };\n            this._activePointers.push(this._lockedPointer);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.requestPointerLock();\n            this._domElement.ownerDocument.addEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.addEventListener('pointerlockerror', onPointerLockError);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            startDragging();\n        };\n        this.unlockPointer = () => {\n            var _a, _b, _c;\n            if (this._lockedPointer !== null) {\n                this._disposePointer(this._lockedPointer);\n                this._lockedPointer = null;\n            }\n            (_a = this._domElement) === null || _a === void 0 ? void 0 : _a.ownerDocument.exitPointerLock();\n            (_b = this._domElement) === null || _b === void 0 ? void 0 : _b.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            (_c = this._domElement) === null || _c === void 0 ? void 0 : _c.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n            this.cancel();\n        };\n        const onPointerLockChange = () => {\n            const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n            if (!isPointerLockActive)\n                this.unlockPointer();\n        };\n        const onPointerLockError = () => {\n            this.unlockPointer();\n        };\n        this._addAllEventListeners = (domElement) => {\n            this._domElement = domElement;\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n            this._domElement.addEventListener('pointerdown', onPointerDown);\n            this._domElement.addEventListener('pointercancel', onPointerUp);\n            this._domElement.addEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.addEventListener('contextmenu', onContextMenu);\n        };\n        this._removeAllEventListeners = () => {\n            if (!this._domElement)\n                return;\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n            this._domElement.removeEventListener('pointerdown', onPointerDown);\n            this._domElement.removeEventListener('pointercancel', onPointerUp);\n            // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener#matching_event_listeners_for_removal\n            // > it's probably wise to use the same values used for the call to `addEventListener()` when calling `removeEventListener()`\n            // see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n            // eslint-disable-next-line no-undef\n            this._domElement.removeEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.removeEventListener('contextmenu', onContextMenu);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n        };\n        this.cancel = () => {\n            if (this._state === ACTION.NONE)\n                return;\n            this._state = ACTION.NONE;\n            this._activePointers.length = 0;\n            endDragging();\n        };\n        if (domElement)\n            this.connect(domElement);\n        this.update(0);\n    }\n    /**\n     * The camera to be controlled\n     * @category Properties\n     */\n    get camera() {\n        return this._camera;\n    }\n    set camera(camera) {\n        this._camera = camera;\n        this.updateCameraUp();\n        this._camera.updateProjectionMatrix();\n        this._updateNearPlaneCorners();\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether or not the controls are enabled.\n     * `false` to disable user dragging/touch-move, but all methods works.\n     * @category Properties\n     */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        this._enabled = enabled;\n        if (!this._domElement)\n            return;\n        if (enabled) {\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n        }\n        else {\n            this.cancel();\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n        }\n    }\n    /**\n     * Returns `true` if the controls are active updating.\n     * readonly value.\n     * @category Properties\n     */\n    get active() {\n        return !this._hasRested;\n    }\n    /**\n     * Getter for the current `ACTION`.\n     * readonly value.\n     * @category Properties\n     */\n    get currentAction() {\n        return this._state;\n    }\n    /**\n     * get/set Current distance.\n     * @category Properties\n     */\n    get distance() {\n        return this._spherical.radius;\n    }\n    set distance(distance) {\n        if (this._spherical.radius === distance &&\n            this._sphericalEnd.radius === distance)\n            return;\n        this._spherical.radius = distance;\n        this._sphericalEnd.radius = distance;\n        this._needsUpdate = true;\n    }\n    // horizontal angle\n    /**\n     * get/set the azimuth angle (horizontal) in radians.\n     * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.\n     * @category Properties\n     */\n    get azimuthAngle() {\n        return this._spherical.theta;\n    }\n    set azimuthAngle(azimuthAngle) {\n        if (this._spherical.theta === azimuthAngle &&\n            this._sphericalEnd.theta === azimuthAngle)\n            return;\n        this._spherical.theta = azimuthAngle;\n        this._sphericalEnd.theta = azimuthAngle;\n        this._needsUpdate = true;\n    }\n    // vertical angle\n    /**\n     * get/set the polar angle (vertical) in radians.\n     * @category Properties\n     */\n    get polarAngle() {\n        return this._spherical.phi;\n    }\n    set polarAngle(polarAngle) {\n        if (this._spherical.phi === polarAngle &&\n            this._sphericalEnd.phi === polarAngle)\n            return;\n        this._spherical.phi = polarAngle;\n        this._sphericalEnd.phi = polarAngle;\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether camera position should be enclosed in the boundary or not.\n     * @category Properties\n     */\n    get boundaryEnclosesCamera() {\n        return this._boundaryEnclosesCamera;\n    }\n    set boundaryEnclosesCamera(boundaryEnclosesCamera) {\n        this._boundaryEnclosesCamera = boundaryEnclosesCamera;\n        this._needsUpdate = true;\n    }\n    /**\n     * Set drag-start, touches and wheel enable area in the domElement.\n     * each values are between `0` and `1` inclusive, where `0` is left/top and `1` is right/bottom of the screen.\n     * e.g. `{ x: 0, y: 0, width: 1, height: 1 }` for entire area.\n     * @category Properties\n     */\n    set interactiveArea(interactiveArea) {\n        this._interactiveArea.width = clamp(interactiveArea.width, 0, 1);\n        this._interactiveArea.height = clamp(interactiveArea.height, 0, 1);\n        this._interactiveArea.x = clamp(interactiveArea.x, 0, 1 - this._interactiveArea.width);\n        this._interactiveArea.y = clamp(interactiveArea.y, 0, 1 - this._interactiveArea.height);\n    }\n    /**\n     * Adds the specified event listener.\n     * Applicable event types (which is `K`) are:\n     * | Event name          | Timing |\n     * | ------------------- | ------ |\n     * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. ¹ |\n     * | `'control'`         | When the user controls the camera (dragging). |\n     * | `'controlend'`      | When the user ends to control the camera. ¹ |\n     * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |\n     * | `'update'`          | When the camera position is updated. |\n     * | `'wake'`            | When the camera starts moving. |\n     * | `'rest'`            | When the camera movement is below `.restThreshold` ². |\n     * | `'sleep'`           | When the camera end moving. |\n     *\n     * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means \"start\" and \"end\" cannot be detected.\n     * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).\n     *\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        super.addEventListener(type, listener);\n    }\n    /**\n     * Removes the specified event listener\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        super.removeEventListener(type, listener);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical).\n     * Every value is added to the current value.\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotate(azimuthAngle, polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta + azimuthAngle, this._sphericalEnd.phi + polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateAzimuthTo(azimuthAngle, enableTransition = false) {\n        return this.rotateTo(azimuthAngle, this._sphericalEnd.phi, enableTransition);\n    }\n    /**\n     * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotatePolarTo(polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta, polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.\n     * Camera view will rotate over the orbit pivot absolutely:\n     *\n     * azimuthAngle\n     * ```\n     *       0º\n     *         \\\n     * 90º -----+----- -90º\n     *           \\\n     *           180º\n     * ```\n     * | direction | angle                  |\n     * | --------- | ---------------------- |\n     * | front     | 0º                     |\n     * | left      | 90º (`Math.PI / 2`)    |\n     * | right     | -90º (`- Math.PI / 2`) |\n     * | back      | 180º (`Math.PI`)       |\n     *\n     * polarAngle\n     * ```\n     *     180º\n     *      |\n     *      90º\n     *      |\n     *      0º\n     * ```\n     * | direction            | angle                  |\n     * | -------------------- | ---------------------- |\n     * | top/sky              | 180º (`Math.PI`)       |\n     * | horizontal from view | 90º (`Math.PI / 2`)    |\n     * | bottom/floor         | 0º                     |\n     *\n     * @param azimuthAngle Azimuth rotate angle to. In radian.\n     * @param polarAngle Polar rotate angle to. In radian.\n     * @param enableTransition  Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateTo(azimuthAngle, polarAngle, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        const theta = clamp(azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle);\n        const phi = clamp(polarAngle, this.minPolarAngle, this.maxPolarAngle);\n        this._sphericalEnd.theta = theta;\n        this._sphericalEnd.phi = phi;\n        this._sphericalEnd.makeSafe();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.theta = this._sphericalEnd.theta;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in/out camera position.\n     * @param distance Distance of dollyIn. Negative number for dollyOut.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dolly(distance, enableTransition = false) {\n        return this.dollyTo(this._sphericalEnd.radius - distance, enableTransition);\n    }\n    /**\n     * Dolly in/out camera position to given distance.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dollyTo(distance, enableTransition = false) {\n        this._isUserControllingDolly = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        return this._dollyToNoClamp(clamp(distance, this.minDistance, this.maxDistance), enableTransition);\n    }\n    _dollyToNoClamp(distance, enableTransition = false) {\n        const lastRadius = this._sphericalEnd.radius;\n        const hasCollider = this.colliderMeshes.length >= 1;\n        if (hasCollider) {\n            const maxDistanceByCollisionTest = this._collisionTest();\n            const isCollided = approxEquals(maxDistanceByCollisionTest, this._spherical.radius);\n            const isDollyIn = lastRadius > distance;\n            if (!isDollyIn && isCollided)\n                return Promise.resolve();\n            this._sphericalEnd.radius = Math.min(distance, maxDistanceByCollisionTest);\n        }\n        else {\n            this._sphericalEnd.radius = distance;\n        }\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in, but does not change the distance between the target and the camera, and moves the target position instead.\n     * Specify a negative value for dolly out.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dollyInFixed(distance, enableTransition = false) {\n        this._targetEnd.add(this._getCameraDirection(_cameraDirection).multiplyScalar(distance));\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Zoom in/out camera. The value is added to camera zoom.\n     * Limits set with `.minZoom` and `.maxZoom`\n     * @param zoomStep zoom scale\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    zoom(zoomStep, enableTransition = false) {\n        return this.zoomTo(this._zoomEnd + zoomStep, enableTransition);\n    }\n    /**\n     * Zoom in/out camera to given scale. The value overwrites camera zoom.\n     * Limits set with .minZoom and .maxZoom\n     * @param zoom\n     * @param enableTransition\n     * @category Methods\n     */\n    zoomTo(zoom, enableTransition = false) {\n        this._isUserControllingZoom = false;\n        this._zoomEnd = clamp(zoom, this.minZoom, this.maxZoom);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._zoom = this._zoomEnd;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._zoom, this._zoomEnd, this.restThreshold);\n        this._changedZoom = 0;\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * @deprecated `pan()` has been renamed to `truck()`\n     * @category Methods\n     */\n    pan(x, y, enableTransition = false) {\n        console.warn('`pan` has been renamed to `truck`');\n        return this.truck(x, y, enableTransition);\n    }\n    /**\n     * Truck and pedestal camera using current azimuthal angle\n     * @param x Horizontal translate amount\n     * @param y Vertical translate amount\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    truck(x, y, enableTransition = false) {\n        this._camera.updateMatrix();\n        _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n        _xColumn.multiplyScalar(x);\n        _yColumn.multiplyScalar(-y);\n        const offset = _v3A.copy(_xColumn).add(_yColumn);\n        const to = _v3B.copy(this._targetEnd).add(offset);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move forward / backward.\n     * @param distance Amount to move forward / backward. Negative value to move backward\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    forward(distance, enableTransition = false) {\n        _v3A.setFromMatrixColumn(this._camera.matrix, 0);\n        _v3A.crossVectors(this._camera.up, _v3A);\n        _v3A.multiplyScalar(distance);\n        const to = _v3B.copy(this._targetEnd).add(_v3A);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move up / down.\n     * @param height Amount to move up / down. Negative value to move down\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    elevate(height, enableTransition = false) {\n        _v3A.copy(this._camera.up).multiplyScalar(height);\n        return this.moveTo(this._targetEnd.x + _v3A.x, this._targetEnd.y + _v3A.y, this._targetEnd.z + _v3A.z, enableTransition);\n    }\n    /**\n     * Move target position to given point.\n     * @param x x coord to move center position\n     * @param y y coord to move center position\n     * @param z z coord to move center position\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    moveTo(x, y, z, enableTransition = false) {\n        this._isUserControllingTruck = false;\n        const offset = _v3A.set(x, y, z).sub(this._targetEnd);\n        this._encloseToBoundary(this._targetEnd, offset, this.boundaryFriction);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Look in the given point direction.\n     * @param x point x.\n     * @param y point y.\n     * @param z point z.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @returns Transition end promise\n     * @category Methods\n     */\n    lookInDirectionOf(x, y, z, enableTransition = false) {\n        const point = _v3A.set(x, y, z);\n        const direction = point.sub(this._targetEnd).normalize();\n        const position = direction.multiplyScalar(-this._sphericalEnd.radius).add(this._targetEnd);\n        return this.setPosition(position.x, position.y, position.z, enableTransition);\n    }\n    /**\n     * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.\n     * set `cover: true` to fill enter screen.\n     * e.g.\n     * ```\n     * cameraControls.fitToBox( myMesh );\n     * ```\n     * @param box3OrObject Axis aligned bounding box to fit the view.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @param options | `<object>` { cover: boolean, paddingTop: number, paddingLeft: number, paddingBottom: number, paddingRight: number }\n     * @returns Transition end promise\n     * @category Methods\n     */\n    fitToBox(box3OrObject, enableTransition, { cover = false, paddingLeft = 0, paddingRight = 0, paddingBottom = 0, paddingTop = 0 } = {}) {\n        const promises = [];\n        const aabb = box3OrObject.isBox3\n            ? _box3A.copy(box3OrObject)\n            : _box3A.setFromObject(box3OrObject);\n        if (aabb.isEmpty()) {\n            console.warn('camera-controls: fitTo() cannot be used with an empty box. Aborting');\n            Promise.resolve();\n        }\n        // round to closest axis ( forward | backward | right | left | top | bottom )\n        const theta = roundToStep(this._sphericalEnd.theta, PI_HALF);\n        const phi = roundToStep(this._sphericalEnd.phi, PI_HALF);\n        promises.push(this.rotateTo(theta, phi, enableTransition));\n        const normal = _v3A.setFromSpherical(this._sphericalEnd).normalize();\n        const rotation = _quaternionA.setFromUnitVectors(normal, _AXIS_Z);\n        const viewFromPolar = approxEquals(Math.abs(normal.y), 1);\n        if (viewFromPolar) {\n            rotation.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y, theta));\n        }\n        rotation.multiply(this._yAxisUpSpaceInverse);\n        // make oriented bounding box\n        const bb = _box3B.makeEmpty();\n        // left bottom back corner\n        _v3B.copy(aabb.min).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom back corner\n        _v3B.copy(aabb.min).setX(aabb.max.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top back corner\n        _v3B.copy(aabb.min).setY(aabb.max.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top back corner\n        _v3B.copy(aabb.max).setZ(aabb.min.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left bottom front corner\n        _v3B.copy(aabb.min).setZ(aabb.max.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom front corner\n        _v3B.copy(aabb.max).setY(aabb.min.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top front corner\n        _v3B.copy(aabb.max).setX(aabb.min.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top front corner\n        _v3B.copy(aabb.max).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // add padding\n        bb.min.x -= paddingLeft;\n        bb.min.y -= paddingBottom;\n        bb.max.x += paddingRight;\n        bb.max.y += paddingTop;\n        rotation.setFromUnitVectors(_AXIS_Z, normal);\n        if (viewFromPolar) {\n            rotation.premultiply(_quaternionB.invert());\n        }\n        rotation.premultiply(this._yAxisUpSpace);\n        const bbSize = bb.getSize(_v3A);\n        const center = bb.getCenter(_v3B).applyQuaternion(rotation);\n        if (isPerspectiveCamera(this._camera)) {\n            const distance = this.getDistanceToFitBox(bbSize.x, bbSize.y, bbSize.z, cover);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.dollyTo(distance, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const width = camera.right - camera.left;\n            const height = camera.top - camera.bottom;\n            const zoom = cover ? Math.max(width / bbSize.x, height / bbSize.y) : Math.min(width / bbSize.x, height / bbSize.y);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.zoomTo(zoom, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        return Promise.all(promises);\n    }\n    /**\n     * Fit the viewport to the sphere or the bounding sphere of the object.\n     * @param sphereOrMesh\n     * @param enableTransition\n     * @category Methods\n     */\n    fitToSphere(sphereOrMesh, enableTransition) {\n        const promises = [];\n        const isSphere = sphereOrMesh instanceof THREE.Sphere;\n        const boundingSphere = isSphere ?\n            _sphere.copy(sphereOrMesh) :\n            CameraControls.createBoundingSphere(sphereOrMesh, _sphere);\n        promises.push(this.moveTo(boundingSphere.center.x, boundingSphere.center.y, boundingSphere.center.z, enableTransition));\n        if (isPerspectiveCamera(this._camera)) {\n            const distanceToFit = this.getDistanceToFitSphere(boundingSphere.radius);\n            promises.push(this.dollyTo(distanceToFit, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const width = this._camera.right - this._camera.left;\n            const height = this._camera.top - this._camera.bottom;\n            const diameter = 2 * boundingSphere.radius;\n            const zoom = Math.min(width / diameter, height / diameter);\n            promises.push(this.zoomTo(zoom, enableTransition));\n        }\n        promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        return Promise.all(promises);\n    }\n    /**\n     * Look at the `target` from the `position`.\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setLookAt(positionX, positionY, positionZ, targetX, targetY, targetZ, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        const target = _v3B.set(targetX, targetY, targetZ);\n        const position = _v3A.set(positionX, positionY, positionZ);\n        this._targetEnd.copy(target);\n        this._sphericalEnd.setFromVector3(position.sub(target).applyQuaternion(this._yAxisUpSpace));\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Similar to setLookAt, but it interpolates between two states.\n     * @param positionAX\n     * @param positionAY\n     * @param positionAZ\n     * @param targetAX\n     * @param targetAY\n     * @param targetAZ\n     * @param positionBX\n     * @param positionBY\n     * @param positionBZ\n     * @param targetBX\n     * @param targetBY\n     * @param targetBZ\n     * @param t\n     * @param enableTransition\n     * @category Methods\n     */\n    lerpLookAt(positionAX, positionAY, positionAZ, targetAX, targetAY, targetAZ, positionBX, positionBY, positionBZ, targetBX, targetBY, targetBZ, t, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        const targetA = _v3A.set(targetAX, targetAY, targetAZ);\n        const positionA = _v3B.set(positionAX, positionAY, positionAZ);\n        _sphericalA.setFromVector3(positionA.sub(targetA).applyQuaternion(this._yAxisUpSpace));\n        const targetB = _v3C.set(targetBX, targetBY, targetBZ);\n        const positionB = _v3B.set(positionBX, positionBY, positionBZ);\n        _sphericalB.setFromVector3(positionB.sub(targetB).applyQuaternion(this._yAxisUpSpace));\n        this._targetEnd.copy(targetA.lerp(targetB, t)); // tricky\n        const deltaTheta = _sphericalB.theta - _sphericalA.theta;\n        const deltaPhi = _sphericalB.phi - _sphericalA.phi;\n        const deltaRadius = _sphericalB.radius - _sphericalA.radius;\n        this._sphericalEnd.set(_sphericalA.radius + deltaRadius * t, _sphericalA.phi + deltaPhi * t, _sphericalA.theta + deltaTheta * t);\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set angle and distance by given position.\n     * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setPosition(positionX, positionY, positionZ, enableTransition = false) {\n        return this.setLookAt(positionX, positionY, positionZ, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, enableTransition);\n    }\n    /**\n     * Set the target position where gaze at.\n     * An alias of `setLookAt()`, without position change. Thus keep the same position.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setTarget(targetX, targetY, targetZ, enableTransition = false) {\n        const pos = this.getPosition(_v3A);\n        const promise = this.setLookAt(pos.x, pos.y, pos.z, targetX, targetY, targetZ, enableTransition);\n        // see https://github.com/yomotsu/camera-controls/issues/335\n        this._sphericalEnd.phi = clamp(this._sphericalEnd.phi, this.minPolarAngle, this.maxPolarAngle);\n        return promise;\n    }\n    /**\n     * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.\n     * @param x\n     * @param y\n     * @param z\n     * @param enableTransition\n     * @category Methods\n     */\n    setFocalOffset(x, y, z, enableTransition = false) {\n        this._isUserControllingOffset = false;\n        this._focalOffsetEnd.set(x, y, z);\n        this._needsUpdate = true;\n        if (!enableTransition)\n            this._focalOffset.copy(this._focalOffsetEnd);\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) &&\n                approxEquals(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) &&\n                approxEquals(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set orbit point without moving the camera.\n     * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @category Methods\n     */\n    setOrbitPoint(targetX, targetY, targetZ) {\n        this._camera.updateMatrixWorld();\n        _xColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 1);\n        _zColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);\n        const position = _v3A.set(targetX, targetY, targetZ);\n        const distance = position.distanceTo(this._camera.position);\n        const cameraToPoint = position.sub(this._camera.position);\n        _xColumn.multiplyScalar(cameraToPoint.x);\n        _yColumn.multiplyScalar(cameraToPoint.y);\n        _zColumn.multiplyScalar(cameraToPoint.z);\n        _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n        _v3A.z = _v3A.z + distance;\n        this.dollyTo(distance, false);\n        this.setFocalOffset(-_v3A.x, _v3A.y, -_v3A.z, false);\n        this.moveTo(targetX, targetY, targetZ, false);\n    }\n    /**\n     * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3\n     * @param box3\n     * @category Methods\n     */\n    setBoundary(box3) {\n        if (!box3) {\n            this._boundary.min.set(-Infinity, -Infinity, -Infinity);\n            this._boundary.max.set(Infinity, Infinity, Infinity);\n            this._needsUpdate = true;\n            return;\n        }\n        this._boundary.copy(box3);\n        this._boundary.clampPoint(this._targetEnd, this._targetEnd);\n        this._needsUpdate = true;\n    }\n    /**\n     * Set (or unset) the current viewport.\n     * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.\n     * @param viewportOrX\n     * @param y\n     * @param width\n     * @param height\n     * @category Methods\n     */\n    setViewport(viewportOrX, y, width, height) {\n        if (viewportOrX === null) { // null\n            this._viewport = null;\n            return;\n        }\n        this._viewport = this._viewport || new THREE.Vector4();\n        if (typeof viewportOrX === 'number') { // number\n            this._viewport.set(viewportOrX, y, width, height);\n        }\n        else { // Vector4\n            this._viewport.copy(viewportOrX);\n        }\n    }\n    /**\n     * Calculate the distance to fit the box.\n     * @param width box width\n     * @param height box height\n     * @param depth box depth\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitBox(width, height, depth, cover = false) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitBox'))\n            return this._spherical.radius;\n        const boundingRectAspect = width / height;\n        const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n        const aspect = this._camera.aspect;\n        const heightToFit = (cover ? boundingRectAspect > aspect : boundingRectAspect < aspect) ? height : width / aspect;\n        return heightToFit * 0.5 / Math.tan(fov * 0.5) + depth * 0.5;\n    }\n    /**\n     * Calculate the distance to fit the sphere.\n     * @param radius sphere radius\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitSphere(radius) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitSphere'))\n            return this._spherical.radius;\n        // https://stackoverflow.com/a/44849975\n        const vFOV = this._camera.getEffectiveFOV() * DEG2RAD;\n        const hFOV = Math.atan(Math.tan(vFOV * 0.5) * this._camera.aspect) * 2;\n        const fov = 1 < this._camera.aspect ? vFOV : hFOV;\n        return radius / (Math.sin(fov * 0.5));\n    }\n    /**\n     * Returns the orbit center position, where the camera looking at.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getTarget(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(receiveEndValue ? this._targetEnd : this._target);\n    }\n    /**\n     * Returns the camera position.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getPosition(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.setFromSpherical(receiveEndValue ? this._sphericalEnd : this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(receiveEndValue ? this._targetEnd : this._target);\n    }\n    /**\n     * Returns the spherical coordinates of the orbit.\n     * @param out The receiving Spherical instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getSpherical(out, receiveEndValue = true) {\n        const _out = !!out && out instanceof THREE.Spherical ? out : new THREE.Spherical();\n        return _out.copy(receiveEndValue ? this._sphericalEnd : this._spherical);\n    }\n    /**\n     * Returns the focal offset, which is how much the camera appears to be translated in screen parallel coordinates.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getFocalOffset(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(receiveEndValue ? this._focalOffsetEnd : this._focalOffset);\n    }\n    /**\n     * Normalize camera azimuth angle rotation between 0 and 360 degrees.\n     * @category Methods\n     */\n    normalizeRotations() {\n        this._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;\n        if (this._sphericalEnd.theta < 0)\n            this._sphericalEnd.theta += PI_2;\n        this._spherical.theta += PI_2 * Math.round((this._sphericalEnd.theta - this._spherical.theta) / PI_2);\n    }\n    /**\n     * Reset all rotation and position to defaults.\n     * @param enableTransition\n     * @category Methods\n     */\n    reset(enableTransition = false) {\n        if (!approxEquals(this._camera.up.x, this._cameraUp0.x) ||\n            !approxEquals(this._camera.up.y, this._cameraUp0.y) ||\n            !approxEquals(this._camera.up.z, this._cameraUp0.z)) {\n            this._camera.up.copy(this._cameraUp0);\n            const position = this.getPosition(_v3A);\n            this.updateCameraUp();\n            this.setPosition(position.x, position.y, position.z);\n        }\n        const promises = [\n            this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, enableTransition),\n            this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, enableTransition),\n            this.zoomTo(this._zoom0, enableTransition),\n        ];\n        return Promise.all(promises);\n    }\n    /**\n     * Set current camera position as the default position.\n     * @category Methods\n     */\n    saveState() {\n        this._cameraUp0.copy(this._camera.up);\n        this.getTarget(this._target0);\n        this.getPosition(this._position0);\n        this._zoom0 = this._zoom;\n        this._focalOffset0.copy(this._focalOffset);\n    }\n    /**\n     * Sync camera-up direction.\n     * When camera-up vector is changed, `.updateCameraUp()` must be called.\n     * @category Methods\n     */\n    updateCameraUp() {\n        this._yAxisUpSpace.setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();\n    }\n    /**\n     * Apply current camera-up direction to the camera.\n     * The orbit system will be re-initialized with the current position.\n     * @category Methods\n     */\n    applyCameraUp() {\n        const cameraDirection = _v3A.subVectors(this._target, this._camera.position).normalize();\n        // So first find the vector off to the side, orthogonal to both this.object.up and\n        // the \"view\" vector.\n        const side = _v3B.crossVectors(cameraDirection, this._camera.up);\n        // Then find the vector orthogonal to both this \"side\" vector and the \"view\" vector.\n        // This vector will be the new \"up\" vector.\n        this._camera.up.crossVectors(side, cameraDirection).normalize();\n        this._camera.updateMatrixWorld();\n        const position = this.getPosition(_v3A);\n        this.updateCameraUp();\n        this.setPosition(position.x, position.y, position.z);\n    }\n    /**\n     * Update camera position and directions.\n     * This should be called in your tick loop every time, and returns true if re-rendering is needed.\n     * @param delta\n     * @returns updated\n     * @category Methods\n     */\n    update(delta) {\n        const deltaTheta = this._sphericalEnd.theta - this._spherical.theta;\n        const deltaPhi = this._sphericalEnd.phi - this._spherical.phi;\n        const deltaRadius = this._sphericalEnd.radius - this._spherical.radius;\n        const deltaTarget = _deltaTarget.subVectors(this._targetEnd, this._target);\n        const deltaOffset = _deltaOffset.subVectors(this._focalOffsetEnd, this._focalOffset);\n        const deltaZoom = this._zoomEnd - this._zoom;\n        // update theta\n        if (approxZero(deltaTheta)) {\n            this._thetaVelocity.value = 0;\n            this._spherical.theta = this._sphericalEnd.theta;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.theta = smoothDamp(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update phi\n        if (approxZero(deltaPhi)) {\n            this._phiVelocity.value = 0;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.phi = smoothDamp(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update distance\n        if (approxZero(deltaRadius)) {\n            this._radiusVelocity.value = 0;\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        else {\n            const smoothTime = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.radius = smoothDamp(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, smoothTime, this.maxSpeed, delta);\n            this._needsUpdate = true;\n        }\n        // update target position\n        if (approxZero(deltaTarget.x) && approxZero(deltaTarget.y) && approxZero(deltaTarget.z)) {\n            this._targetVelocity.set(0, 0, 0);\n            this._target.copy(this._targetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._target, this._targetEnd, this._targetVelocity, smoothTime, this.maxSpeed, delta, this._target);\n            this._needsUpdate = true;\n        }\n        // update focalOffset\n        if (approxZero(deltaOffset.x) && approxZero(deltaOffset.y) && approxZero(deltaOffset.z)) {\n            this._focalOffsetVelocity.set(0, 0, 0);\n            this._focalOffset.copy(this._focalOffsetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, smoothTime, this.maxSpeed, delta, this._focalOffset);\n            this._needsUpdate = true;\n        }\n        // update zoom\n        if (approxZero(deltaZoom)) {\n            this._zoomVelocity.value = 0;\n            this._zoom = this._zoomEnd;\n        }\n        else {\n            const smoothTime = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;\n            this._zoom = smoothDamp(this._zoom, this._zoomEnd, this._zoomVelocity, smoothTime, Infinity, delta);\n        }\n        if (this.dollyToCursor) {\n            if (isPerspectiveCamera(this._camera) && this._changedDolly !== 0) {\n                const dollyControlAmount = this._spherical.radius - this._lastDistance;\n                const camera = this._camera;\n                const cameraDirection = this._getCameraDirection(_cameraDirection);\n                const planeX = _v3A.copy(cameraDirection).cross(camera.up).normalize();\n                if (planeX.lengthSq() === 0)\n                    planeX.x = 1.0;\n                const planeY = _v3B.crossVectors(planeX, cameraDirection);\n                const worldToScreen = this._sphericalEnd.radius * Math.tan(camera.getEffectiveFOV() * DEG2RAD * 0.5);\n                const prevRadius = this._sphericalEnd.radius - dollyControlAmount;\n                const lerpRatio = (prevRadius - this._sphericalEnd.radius) / this._sphericalEnd.radius;\n                const cursor = _v3C.copy(this._targetEnd)\n                    .add(planeX.multiplyScalar(this._dollyControlCoord.x * worldToScreen * camera.aspect))\n                    .add(planeY.multiplyScalar(this._dollyControlCoord.y * worldToScreen));\n                const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n                const isMin = this._lastDollyDirection === DOLLY_DIRECTION.IN && this._spherical.radius <= this.minDistance;\n                const isMax = this._lastDollyDirection === DOLLY_DIRECTION.OUT && this.maxDistance <= this._spherical.radius;\n                if (this.infinityDolly && (isMin || isMax)) {\n                    this._sphericalEnd.radius -= dollyControlAmount;\n                    this._spherical.radius -= dollyControlAmount;\n                    const dollyAmount = _v3B.copy(cameraDirection).multiplyScalar(-dollyControlAmount);\n                    newTargetEnd.add(dollyAmount);\n                }\n                // target position may be moved beyond boundary.\n                this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n                const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n                this._targetEnd.copy(newTargetEnd);\n                this._target.add(targetEndDiff);\n                this._changedDolly -= dollyControlAmount;\n                if (approxZero(this._changedDolly))\n                    this._changedDolly = 0;\n            }\n            else if (isOrthographicCamera(this._camera) && this._changedZoom !== 0) {\n                const dollyControlAmount = this._zoom - this._lastZoom;\n                const camera = this._camera;\n                const worldCursorPosition = _v3A.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera);\n                const quaternion = _v3B.set(0, 0, -1).applyQuaternion(camera.quaternion);\n                const cursor = _v3C.copy(worldCursorPosition).add(quaternion.multiplyScalar(-worldCursorPosition.dot(camera.up)));\n                const prevZoom = this._zoom - dollyControlAmount;\n                const lerpRatio = -(prevZoom - this._zoom) / this._zoom;\n                // find the \"distance\" (aka plane constant in three.js) of Plane\n                // from a given position (this._targetEnd) and normal vector (cameraDirection)\n                // https://www.maplesoft.com/support/help/maple/view.aspx?path=MathApps%2FEquationOfAPlaneNormal#bkmrk0\n                const cameraDirection = this._getCameraDirection(_cameraDirection);\n                const prevPlaneConstant = this._targetEnd.dot(cameraDirection);\n                const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n                const newPlaneConstant = newTargetEnd.dot(cameraDirection);\n                // Pull back the camera depth that has moved, to be the camera stationary as zoom\n                const pullBack = cameraDirection.multiplyScalar(newPlaneConstant - prevPlaneConstant);\n                newTargetEnd.sub(pullBack);\n                // target position may be moved beyond boundary.\n                this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n                const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n                this._targetEnd.copy(newTargetEnd);\n                this._target.add(targetEndDiff);\n                // this._target.copy( this._targetEnd );\n                this._changedZoom -= dollyControlAmount;\n                if (approxZero(this._changedZoom))\n                    this._changedZoom = 0;\n            }\n        }\n        if (this._camera.zoom !== this._zoom) {\n            this._camera.zoom = this._zoom;\n            this._camera.updateProjectionMatrix();\n            this._updateNearPlaneCorners();\n            this._needsUpdate = true;\n        }\n        this._dragNeedsUpdate = true;\n        // collision detection\n        const maxDistance = this._collisionTest();\n        this._spherical.radius = Math.min(this._spherical.radius, maxDistance);\n        // decompose spherical to the camera position\n        this._spherical.makeSafe();\n        this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target);\n        this._camera.lookAt(this._target);\n        // set offset after the orbit movement\n        const affectOffset = !approxZero(this._focalOffset.x) ||\n            !approxZero(this._focalOffset.y) ||\n            !approxZero(this._focalOffset.z);\n        if (affectOffset) {\n            this._camera.updateMatrixWorld();\n            _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n            _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n            _zColumn.setFromMatrixColumn(this._camera.matrix, 2);\n            _xColumn.multiplyScalar(this._focalOffset.x);\n            _yColumn.multiplyScalar(-this._focalOffset.y);\n            _zColumn.multiplyScalar(this._focalOffset.z); // notice: z-offset will not affect in Orthographic.\n            _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n            this._camera.position.add(_v3A);\n        }\n        if (this._boundaryEnclosesCamera) {\n            this._encloseToBoundary(this._camera.position.copy(this._target), _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1.0);\n        }\n        const updated = this._needsUpdate;\n        if (updated && !this._updatedLastTime) {\n            this._hasRested = false;\n            this.dispatchEvent({ type: 'wake' });\n            this.dispatchEvent({ type: 'update' });\n        }\n        else if (updated) {\n            this.dispatchEvent({ type: 'update' });\n            if (approxZero(deltaTheta, this.restThreshold) &&\n                approxZero(deltaPhi, this.restThreshold) &&\n                approxZero(deltaRadius, this.restThreshold) &&\n                approxZero(deltaTarget.x, this.restThreshold) &&\n                approxZero(deltaTarget.y, this.restThreshold) &&\n                approxZero(deltaTarget.z, this.restThreshold) &&\n                approxZero(deltaOffset.x, this.restThreshold) &&\n                approxZero(deltaOffset.y, this.restThreshold) &&\n                approxZero(deltaOffset.z, this.restThreshold) &&\n                approxZero(deltaZoom, this.restThreshold) &&\n                !this._hasRested) {\n                this._hasRested = true;\n                this.dispatchEvent({ type: 'rest' });\n            }\n        }\n        else if (!updated && this._updatedLastTime) {\n            this.dispatchEvent({ type: 'sleep' });\n        }\n        this._lastDistance = this._spherical.radius;\n        this._lastZoom = this._zoom;\n        this._updatedLastTime = updated;\n        this._needsUpdate = false;\n        return updated;\n    }\n    /**\n     * Get all state in JSON string\n     * @category Methods\n     */\n    toJSON() {\n        return JSON.stringify({\n            enabled: this._enabled,\n            minDistance: this.minDistance,\n            maxDistance: infinityToMaxNumber(this.maxDistance),\n            minZoom: this.minZoom,\n            maxZoom: infinityToMaxNumber(this.maxZoom),\n            minPolarAngle: this.minPolarAngle,\n            maxPolarAngle: infinityToMaxNumber(this.maxPolarAngle),\n            minAzimuthAngle: infinityToMaxNumber(this.minAzimuthAngle),\n            maxAzimuthAngle: infinityToMaxNumber(this.maxAzimuthAngle),\n            smoothTime: this.smoothTime,\n            draggingSmoothTime: this.draggingSmoothTime,\n            dollySpeed: this.dollySpeed,\n            truckSpeed: this.truckSpeed,\n            dollyToCursor: this.dollyToCursor,\n            verticalDragToForward: this.verticalDragToForward,\n            target: this._targetEnd.toArray(),\n            position: _v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),\n            zoom: this._zoomEnd,\n            focalOffset: this._focalOffsetEnd.toArray(),\n            target0: this._target0.toArray(),\n            position0: this._position0.toArray(),\n            zoom0: this._zoom0,\n            focalOffset0: this._focalOffset0.toArray(),\n        });\n    }\n    /**\n     * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.\n     * @param json\n     * @param enableTransition\n     * @category Methods\n     */\n    fromJSON(json, enableTransition = false) {\n        const obj = JSON.parse(json);\n        this.enabled = obj.enabled;\n        this.minDistance = obj.minDistance;\n        this.maxDistance = maxNumberToInfinity(obj.maxDistance);\n        this.minZoom = obj.minZoom;\n        this.maxZoom = maxNumberToInfinity(obj.maxZoom);\n        this.minPolarAngle = obj.minPolarAngle;\n        this.maxPolarAngle = maxNumberToInfinity(obj.maxPolarAngle);\n        this.minAzimuthAngle = maxNumberToInfinity(obj.minAzimuthAngle);\n        this.maxAzimuthAngle = maxNumberToInfinity(obj.maxAzimuthAngle);\n        this.smoothTime = obj.smoothTime;\n        this.draggingSmoothTime = obj.draggingSmoothTime;\n        this.dollySpeed = obj.dollySpeed;\n        this.truckSpeed = obj.truckSpeed;\n        this.dollyToCursor = obj.dollyToCursor;\n        this.verticalDragToForward = obj.verticalDragToForward;\n        this._target0.fromArray(obj.target0);\n        this._position0.fromArray(obj.position0);\n        this._zoom0 = obj.zoom0;\n        this._focalOffset0.fromArray(obj.focalOffset0);\n        this.moveTo(obj.target[0], obj.target[1], obj.target[2], enableTransition);\n        _sphericalA.setFromVector3(_v3A.fromArray(obj.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace));\n        this.rotateTo(_sphericalA.theta, _sphericalA.phi, enableTransition);\n        this.dollyTo(_sphericalA.radius, enableTransition);\n        this.zoomTo(obj.zoom, enableTransition);\n        this.setFocalOffset(obj.focalOffset[0], obj.focalOffset[1], obj.focalOffset[2], enableTransition);\n        this._needsUpdate = true;\n    }\n    /**\n     * Attach all internal event handlers to enable drag control.\n     * @category Methods\n     */\n    connect(domElement) {\n        if (this._domElement) {\n            console.warn('camera-controls is already connected.');\n            return;\n        }\n        domElement.setAttribute('data-camera-controls-version', VERSION);\n        this._addAllEventListeners(domElement);\n        this._getClientRect(this._elementRect);\n    }\n    /**\n     * Detach all internal event handlers to disable drag control.\n     */\n    disconnect() {\n        this.cancel();\n        this._removeAllEventListeners();\n        if (this._domElement) {\n            this._domElement.removeAttribute('data-camera-controls-version');\n            this._domElement = undefined;\n        }\n    }\n    /**\n     * Dispose the cameraControls instance itself, remove all eventListeners.\n     * @category Methods\n     */\n    dispose() {\n        // remove all user event listeners\n        this.removeAllEventListeners();\n        // remove all internal event listeners\n        this.disconnect();\n    }\n    // it's okay to expose public though\n    _getTargetDirection(out) {\n        // divide by distance to normalize, lighter than `Vector3.prototype.normalize()`\n        return out.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse);\n    }\n    // it's okay to expose public though\n    _getCameraDirection(out) {\n        return this._getTargetDirection(out).negate();\n    }\n    _findPointerById(pointerId) {\n        return this._activePointers.find((activePointer) => activePointer.pointerId === pointerId);\n    }\n    _findPointerByMouseButton(mouseButton) {\n        return this._activePointers.find((activePointer) => activePointer.mouseButton === mouseButton);\n    }\n    _disposePointer(pointer) {\n        this._activePointers.splice(this._activePointers.indexOf(pointer), 1);\n    }\n    _encloseToBoundary(position, offset, friction) {\n        const offsetLength2 = offset.lengthSq();\n        if (offsetLength2 === 0.0) { // sanity check\n            return position;\n        }\n        // See: https://twitter.com/FMS_Cat/status/1106508958640988161\n        const newTarget = _v3B.copy(offset).add(position); // target\n        const clampedTarget = this._boundary.clampPoint(newTarget, _v3C); // clamped target\n        const deltaClampedTarget = clampedTarget.sub(newTarget); // newTarget -> clampedTarget\n        const deltaClampedTargetLength2 = deltaClampedTarget.lengthSq(); // squared length of deltaClampedTarget\n        if (deltaClampedTargetLength2 === 0.0) { // when the position doesn't have to be clamped\n            return position.add(offset);\n        }\n        else if (deltaClampedTargetLength2 === offsetLength2) { // when the position is completely stuck\n            return position;\n        }\n        else if (friction === 0.0) {\n            return position.add(offset).add(deltaClampedTarget);\n        }\n        else {\n            const offsetFactor = 1.0 + friction * deltaClampedTargetLength2 / offset.dot(deltaClampedTarget);\n            return position\n                .add(_v3B.copy(offset).multiplyScalar(offsetFactor))\n                .add(deltaClampedTarget.multiplyScalar(1.0 - friction));\n        }\n    }\n    _updateNearPlaneCorners() {\n        if (isPerspectiveCamera(this._camera)) {\n            const camera = this._camera;\n            const near = camera.near;\n            const fov = camera.getEffectiveFOV() * DEG2RAD;\n            const heightHalf = Math.tan(fov * 0.5) * near; // near plain half height\n            const widthHalf = heightHalf * camera.aspect; // near plain half width\n            this._nearPlaneCorners[0].set(-widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[1].set(widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[2].set(widthHalf, heightHalf, 0);\n            this._nearPlaneCorners[3].set(-widthHalf, heightHalf, 0);\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const zoomInv = 1 / camera.zoom;\n            const left = camera.left * zoomInv;\n            const right = camera.right * zoomInv;\n            const top = camera.top * zoomInv;\n            const bottom = camera.bottom * zoomInv;\n            this._nearPlaneCorners[0].set(left, top, 0);\n            this._nearPlaneCorners[1].set(right, top, 0);\n            this._nearPlaneCorners[2].set(right, bottom, 0);\n            this._nearPlaneCorners[3].set(left, bottom, 0);\n        }\n    }\n    // lateUpdate\n    _collisionTest() {\n        let distance = Infinity;\n        const hasCollider = this.colliderMeshes.length >= 1;\n        if (!hasCollider)\n            return distance;\n        if (notSupportedInOrthographicCamera(this._camera, '_collisionTest'))\n            return distance;\n        const rayDirection = this._getTargetDirection(_cameraDirection);\n        _rotationMatrix.lookAt(_ORIGIN, rayDirection, this._camera.up);\n        for (let i = 0; i < 4; i++) {\n            const nearPlaneCorner = _v3B.copy(this._nearPlaneCorners[i]);\n            nearPlaneCorner.applyMatrix4(_rotationMatrix);\n            const origin = _v3C.addVectors(this._target, nearPlaneCorner);\n            _raycaster.set(origin, rayDirection);\n            _raycaster.far = this._spherical.radius + 1;\n            const intersects = _raycaster.intersectObjects(this.colliderMeshes);\n            if (intersects.length !== 0 && intersects[0].distance < distance) {\n                distance = intersects[0].distance;\n            }\n        }\n        return distance;\n    }\n    /**\n     * Get its client rect and package into given `DOMRect` .\n     */\n    _getClientRect(target) {\n        if (!this._domElement)\n            return;\n        const rect = this._domElement.getBoundingClientRect();\n        target.x = rect.left;\n        target.y = rect.top;\n        if (this._viewport) {\n            target.x += this._viewport.x;\n            target.y += rect.height - this._viewport.w - this._viewport.y;\n            target.width = this._viewport.z;\n            target.height = this._viewport.w;\n        }\n        else {\n            target.width = rect.width;\n            target.height = rect.height;\n        }\n        return target;\n    }\n    _createOnRestPromise(resolveImmediately) {\n        if (resolveImmediately)\n            return Promise.resolve();\n        this._hasRested = false;\n        this.dispatchEvent({ type: 'transitionstart' });\n        return new Promise((resolve) => {\n            const onResolve = () => {\n                this.removeEventListener('rest', onResolve);\n                resolve();\n            };\n            this.addEventListener('rest', onResolve);\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _addAllEventListeners(_domElement) { }\n    _removeAllEventListeners() { }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    get dampingFactor() {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    set dampingFactor(_) {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    get draggingDampingFactor() {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    set draggingDampingFactor(_) {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n    }\n    static createBoundingSphere(object3d, out = new THREE.Sphere()) {\n        const boundingSphere = out;\n        const center = boundingSphere.center;\n        _box3A.makeEmpty();\n        // find the center\n        object3d.traverseVisible((object) => {\n            if (!object.isMesh)\n                return;\n            _box3A.expandByObject(object);\n        });\n        _box3A.getCenter(center);\n        // find the radius\n        let maxRadiusSq = 0;\n        object3d.traverseVisible((object) => {\n            if (!object.isMesh)\n                return;\n            const mesh = object;\n            const geometry = mesh.geometry.clone();\n            geometry.applyMatrix4(mesh.matrixWorld);\n            const bufferGeometry = geometry;\n            const position = bufferGeometry.attributes.position;\n            for (let i = 0, l = position.count; i < l; i++) {\n                _v3A.fromBufferAttribute(position, i);\n                maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_v3A));\n            }\n        });\n        boundingSphere.radius = Math.sqrt(maxRadiusSq);\n        return boundingSphere;\n    }\n}\n\nexport { EventDispatcher, CameraControls as default };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { misc, easing } from 'maath';\n\nconst isObject3DRef = ref => (ref == null ? void 0 : ref.current) instanceof THREE.Object3D;\nconst context = /* @__PURE__ */React.createContext(null);\nfunction useMotion() {\n  return React.useContext(context);\n}\nfunction Debug({\n  points = 50\n}) {\n  const {\n    path\n  } = useMotion();\n  const [dots, setDots] = React.useState([]);\n  const [material] = React.useState(() => new THREE.MeshBasicMaterial({\n    color: 'black'\n  }));\n  const [geometry] = React.useState(() => new THREE.SphereGeometry(0.025, 16, 16));\n  const last = React.useRef([]);\n  React.useEffect(() => {\n    if (path.curves !== last.current) {\n      setDots(path.getPoints(points));\n      last.current = path.curves;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dots.map((item, index) => /*#__PURE__*/React.createElement(\"mesh\", {\n    key: index,\n    material: material,\n    geometry: geometry,\n    position: [item.x, item.y, item.z]\n  })));\n}\nconst MotionPathControls = /* @__PURE__ */React.forwardRef(({\n  children,\n  curves = [],\n  object,\n  debug = false,\n  smooth = false,\n  focus,\n  offset = undefined,\n  eps = 0.00001,\n  damping = 0.1,\n  focusDamping = 0.1,\n  maxSpeed = Infinity,\n  ...props\n}, fref) => {\n  const {\n    camera\n  } = useThree();\n  const ref = React.useRef();\n  const [path] = React.useState(() => new THREE.CurvePath());\n  const pos = React.useRef(offset !== null && offset !== void 0 ? offset : 0);\n  const state = React.useMemo(() => ({\n    focus,\n    object: (object == null ? void 0 : object.current) instanceof THREE.Object3D ? object : {\n      current: camera\n    },\n    path,\n    current: pos.current,\n    offset: pos.current,\n    point: new THREE.Vector3(),\n    tangent: new THREE.Vector3(),\n    next: new THREE.Vector3()\n  }), [focus, object]);\n  React.useLayoutEffect(() => {\n    var _ref$current;\n    path.curves = [];\n    const _curves = curves.length > 0 ? curves : (_ref$current = ref.current) == null ? void 0 : _ref$current.__r3f.objects;\n    for (var i = 0; i < _curves.length; i++) path.add(_curves[i]);\n\n    //Smoothen curve\n    if (smooth) {\n      const points = path.getPoints(typeof smooth === 'number' ? smooth : 1);\n      const catmull = new THREE.CatmullRomCurve3(points);\n      path.curves = [catmull];\n    }\n    path.updateArcLengths();\n  });\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    // When offset changes, normalise pos to avoid overshoot spinning\n    pos.current = misc.repeat(pos.current, 1);\n  }, [offset]);\n  let last = 0;\n  const [vec] = React.useState(() => new THREE.Vector3());\n  useFrame((_state, delta) => {\n    last = state.offset;\n    easing.damp(pos, 'current', offset !== undefined ? offset : state.current, damping, delta, maxSpeed, undefined, eps);\n    state.offset = misc.repeat(pos.current, 1);\n    if (path.getCurveLengths().length > 0) {\n      path.getPointAt(state.offset, state.point);\n      path.getTangentAt(state.offset, state.tangent).normalize();\n      path.getPointAt(misc.repeat(pos.current - (last - state.offset), 1), state.next);\n      const target = (object == null ? void 0 : object.current) instanceof THREE.Object3D ? object.current : camera;\n      target.position.copy(state.point);\n      //@ts-ignore\n      if (focus) {\n        easing.dampLookAt(target, isObject3DRef(focus) ? focus.current.getWorldPosition(vec) : focus, focusDamping, delta, maxSpeed, undefined, eps);\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, children, debug && /*#__PURE__*/React.createElement(Debug, null)));\n});\n\nexport { MotionPathControls, useMotion };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { Vector3, Object3D, Matrix4, Quaternion } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { Hud } from './Hud.js';\n\nconst Context = /* @__PURE__ */React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\nconst dummy = /* @__PURE__ */new Object3D();\nconst matrix = /* @__PURE__ */new Matrix4();\nconst [q1, q2] = [/* @__PURE__ */new Quaternion(), /* @__PURE__ */new Quaternion()];\nconst target = /* @__PURE__ */new Vector3();\nconst targetPosition = /* @__PURE__ */new Vector3();\nconst isOrbitControls = controls => {\n  return 'minPolarAngle' in controls;\n};\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  renderPriority = 1,\n  onUpdate,\n  onTarget,\n  children\n}) => {\n  const size = useThree(state => state.size);\n  const mainCamera = useThree(state => state.camera);\n  // @ts-ignore\n  const defaultControls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n  const gizmoRef = React.useRef(null);\n  const virtualCam = React.useRef(null);\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const defaultUp = React.useRef(new Vector3(0, 0, 0));\n  React.useEffect(() => {\n    defaultUp.current.copy(mainCamera.up);\n  }, [mainCamera]);\n  const tweenCamera = React.useCallback(direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target);\n\n    // Rotate from current camera orientation\n    q1.copy(mainCamera.quaternion);\n\n    // To new current camera orientation\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    dummy.up.copy(mainCamera.up);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current;\n      // Animate step\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false;\n          // Orbit controls uses UP vector as the orbit axes,\n          // so we need to reset it after the animation is done\n          // moving it around for the controls to work correctly\n          if (isOrbitControls(defaultControls)) {\n            mainCamera.up.copy(defaultUp.current);\n          }\n        } else {\n          const step = delta * turnRate;\n          // animate position by doing a slerp and then scaling the position on the unit sphere\n          q1.rotateTowards(q2, step);\n          // animate orientation\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n          invalidate();\n        }\n      }\n\n      // Sync Gizmo with main camera orientation\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null || _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n    }\n  });\n  const gizmoHelperContext = React.useMemo(() => ({\n    tweenCamera\n  }), [tweenCamera]);\n\n  // Position gizmo component within scene\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-center') ? 0 : alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('center-') ? 0 : alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return /*#__PURE__*/React.createElement(Hud, {\n    renderPriority: renderPriority\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    makeDefault: true,\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, children)));\n};\n\nexport { GizmoHelper, useGizmoContext };\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nfunction RenderHud({\n  defaultScene,\n  defaultCamera,\n  renderPriority = 1\n}) {\n  const {\n    gl,\n    scene,\n    camera\n  } = useThree();\n  let oldCLear;\n  useFrame(() => {\n    oldCLear = gl.autoClear;\n    if (renderPriority === 1) {\n      // Clear scene and render the default scene\n      gl.autoClear = true;\n      gl.render(defaultScene, defaultCamera);\n    }\n    // Disable cleaning and render the portal with its own camera\n    gl.autoClear = false;\n    gl.clearDepth();\n    gl.render(scene, camera);\n    // Restore default\n    gl.autoClear = oldCLear;\n  }, renderPriority);\n  // Without an element that receives pointer events state.pointer will always be 0/0\n  return /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  });\n}\nfunction Hud({\n  children,\n  renderPriority = 1\n}) {\n  const {\n    scene: defaultScene,\n    camera: defaultCamera\n  } = useThree();\n  const [hudScene] = React.useState(() => new THREE.Scene());\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(RenderHud, {\n    defaultScene: defaultScene,\n    defaultCamera: defaultCamera,\n    renderPriority: renderPriority\n  })), hudScene, {\n    events: {\n      priority: renderPriority + 1\n    }\n  }));\n}\n\nexport { Hud };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { useGizmoContext } from './GizmoHelper.js';\nimport { Vector3, CanvasTexture } from 'three';\n\nconst colors = {\n  bg: '#f0f0f0',\n  hover: '#999',\n  text: 'black',\n  stroke: 'black'\n};\nconst defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\nconst corners = /* @__PURE__ */[[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nconst cornerDimensions = [0.25, 0.25, 0.25];\nconst edges = /* @__PURE__ */[[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nconst edgeDimensions = /* @__PURE__ */edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\nconst FaceMaterial = ({\n  hover,\n  index,\n  font = '20px Inter var, Arial, sans-serif',\n  faces = defaultFaces,\n  color = colors.bg,\n  hoverColor = colors.hover,\n  textColor = colors.text,\n  strokeColor = colors.stroke,\n  opacity = 1\n}) => {\n  const gl = useThree(state => state.gl);\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    context.fillStyle = color;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = strokeColor;\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = font;\n    context.textAlign = 'center';\n    context.fillStyle = textColor;\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index, faces, font, color, textColor, strokeColor]);\n  return /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: texture,\n    \"map-anisotropy\": gl.capabilities.getMaxAnisotropy() || 1,\n    attach: `material-${index}`,\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: opacity\n  });\n};\nconst FaceCube = props => {\n  const {\n    tweenCamera\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(null);\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(null);\n  };\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(e.face.normal);\n  };\n  const handlePointerMove = e => {\n    e.stopPropagation();\n    setHover(Math.floor(e.faceIndex / 2));\n  };\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onClick: props.onClick || handleClick\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\n    key: index,\n    index: index,\n    hover: hover === index\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\n};\nconst EdgeCube = ({\n  onClick,\n  dimensions,\n  position,\n  hoverColor = colors.hover\n}) => {\n  const {\n    tweenCamera\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(false);\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(false);\n  };\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setHover(true);\n  };\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(position);\n  };\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    scale: 1.01,\n    position: position,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onClick: onClick || handleClick\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: 0.6,\n    visible: hover\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: dimensions\n  }));\n};\nconst GizmoViewcube = props => {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: edge,\n    dimensions: edgeDimensions[index]\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: corner,\n    dimensions: cornerDimensions\n  }, props))));\n};\n\nexport { GizmoViewcube };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { CanvasTexture } from 'three';\nimport { useGizmoContext } from './GizmoHelper.js';\n\nfunction Axis({\n  scale = [0.8, 0.05, 0.05],\n  color,\n  rotation\n}) {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    rotation: rotation\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0.4, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: scale\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: color,\n    toneMapped: false\n  })));\n}\nfunction AxisHead({\n  onClick,\n  font,\n  disabled,\n  arcStyle,\n  label,\n  labelColor,\n  axisHeadScale = 1,\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 64;\n    canvas.height = 64;\n    const context = canvas.getContext('2d');\n    context.beginPath();\n    context.arc(32, 32, 16, 0, 2 * Math.PI);\n    context.closePath();\n    context.fillStyle = arcStyle;\n    context.fill();\n    if (label) {\n      context.font = font;\n      context.textAlign = 'center';\n      context.fillStyle = labelColor;\n      context.fillText(label, 32, 41);\n    }\n    return new CanvasTexture(canvas);\n  }, [arcStyle, label, labelColor, font]);\n  const [active, setActive] = React.useState(false);\n  const scale = (label ? 1 : 0.75) * (active ? 1.2 : 1) * axisHeadScale;\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setActive(true);\n  };\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setActive(false);\n  };\n  return /*#__PURE__*/React.createElement(\"sprite\", _extends({\n    scale: scale,\n    onPointerOver: !disabled ? handlePointerOver : undefined,\n    onPointerOut: !disabled ? onClick || handlePointerOut : undefined\n  }, props), /*#__PURE__*/React.createElement(\"spriteMaterial\", {\n    map: texture,\n    \"map-anisotropy\": gl.capabilities.getMaxAnisotropy() || 1,\n    alphaTest: 0.3,\n    opacity: label ? 1 : 0.75,\n    toneMapped: false\n  }));\n}\nconst GizmoViewport = ({\n  hideNegativeAxes,\n  hideAxisHeads,\n  disabled,\n  font = '18px Inter var, Arial, sans-serif',\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  axisHeadScale = 1,\n  axisScale,\n  labels = ['X', 'Y', 'Z'],\n  labelColor = '#000',\n  onClick,\n  ...props\n}) => {\n  const [colorX, colorY, colorZ] = axisColors;\n  const {\n    tweenCamera\n  } = useGizmoContext();\n  const axisHeadProps = {\n    font,\n    disabled,\n    labelColor,\n    onClick,\n    axisHeadScale,\n    onPointerDown: !disabled ? e => {\n      tweenCamera(e.object.position);\n      e.stopPropagation();\n    } : undefined\n  };\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    scale: 40\n  }, props), /*#__PURE__*/React.createElement(Axis, {\n    color: colorX,\n    rotation: [0, 0, 0],\n    scale: axisScale\n  }), /*#__PURE__*/React.createElement(Axis, {\n    color: colorY,\n    rotation: [0, 0, Math.PI / 2],\n    scale: axisScale\n  }), /*#__PURE__*/React.createElement(Axis, {\n    color: colorZ,\n    rotation: [0, -Math.PI / 2, 0],\n    scale: axisScale\n  }), !hideAxisHeads && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorX,\n    position: [1, 0, 0],\n    label: labels[0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorY,\n    position: [0, 1, 0],\n    label: labels[1]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorZ,\n    position: [0, 0, 1],\n    label: labels[2]\n  }, axisHeadProps)), !hideNegativeAxes && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorX,\n    position: [-1, 0, 0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorY,\n    position: [0, -1, 0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorZ,\n    position: [0, 0, -1]\n  }, axisHeadProps)))));\n};\n\nexport { GizmoViewport };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { version } from '../helpers/constants.js';\n\nconst GridMaterial = /* @__PURE__ */shaderMaterial({\n  cellSize: 0.5,\n  sectionSize: 1,\n  fadeDistance: 100,\n  fadeStrength: 1,\n  fadeFrom: 1,\n  cellThickness: 0.5,\n  sectionThickness: 1,\n  cellColor: /* @__PURE__ */new THREE.Color(),\n  sectionColor: /* @__PURE__ */new THREE.Color(),\n  infiniteGrid: false,\n  followCamera: false,\n  worldCamProjPosition: /* @__PURE__ */new THREE.Vector3(),\n  worldPlanePosition: /* @__PURE__ */new THREE.Vector3()\n}, /* glsl */`\n    varying vec3 localPosition;\n    varying vec4 worldPosition;\n\n    uniform vec3 worldCamProjPosition;\n    uniform vec3 worldPlanePosition;\n    uniform float fadeDistance;\n    uniform bool infiniteGrid;\n    uniform bool followCamera;\n\n    void main() {\n      localPosition = position.xzy;\n      if (infiniteGrid) localPosition *= 1.0 + fadeDistance;\n      \n      worldPosition = modelMatrix * vec4(localPosition, 1.0);\n      if (followCamera) {\n        worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);\n        localPosition = (inverse(modelMatrix) * worldPosition).xyz;\n      }\n\n      gl_Position = projectionMatrix * viewMatrix * worldPosition;\n    }\n  `, /* glsl */`\n    varying vec3 localPosition;\n    varying vec4 worldPosition;\n\n    uniform vec3 worldCamProjPosition;\n    uniform float cellSize;\n    uniform float sectionSize;\n    uniform vec3 cellColor;\n    uniform vec3 sectionColor;\n    uniform float fadeDistance;\n    uniform float fadeStrength;\n    uniform float fadeFrom;\n    uniform float cellThickness;\n    uniform float sectionThickness;\n\n    float getGrid(float size, float thickness) {\n      vec2 r = localPosition.xz / size;\n      vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);\n      float line = min(grid.x, grid.y) + 1.0 - thickness;\n      return 1.0 - min(line, 1.0);\n    }\n\n    void main() {\n      float g1 = getGrid(cellSize, cellThickness);\n      float g2 = getGrid(sectionSize, sectionThickness);\n\n      vec3 from = worldCamProjPosition*vec3(fadeFrom);\n      float dist = distance(from, worldPosition.xyz);\n      float d = 1.0 - min(dist / fadeDistance, 1.0);\n      vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));\n\n      gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));\n      gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);\n      if (gl_FragColor.a <= 0.0) discard;\n\n      #include <tonemapping_fragment>\n      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n    }\n  `);\nconst Grid = /* @__PURE__ */React.forwardRef(({\n  args,\n  cellColor = '#000000',\n  sectionColor = '#2080ff',\n  cellSize = 0.5,\n  sectionSize = 1,\n  followCamera = false,\n  infiniteGrid = false,\n  fadeDistance = 100,\n  fadeStrength = 1,\n  fadeFrom = 1,\n  cellThickness = 0.5,\n  sectionThickness = 1,\n  side = THREE.BackSide,\n  ...props\n}, fRef) => {\n  extend({\n    GridMaterial\n  });\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  const plane = new THREE.Plane();\n  const upVector = new THREE.Vector3(0, 1, 0);\n  const zeroVector = new THREE.Vector3(0, 0, 0);\n  useFrame(state => {\n    plane.setFromNormalAndCoplanarPoint(upVector, zeroVector).applyMatrix4(ref.current.matrixWorld);\n    const gridMaterial = ref.current.material;\n    const worldCamProjPosition = gridMaterial.uniforms.worldCamProjPosition;\n    const worldPlanePosition = gridMaterial.uniforms.worldPlanePosition;\n    plane.projectPoint(state.camera.position, worldCamProjPosition.value);\n    worldPlanePosition.value.set(0, 0, 0).applyMatrix4(ref.current.matrixWorld);\n  });\n  const uniforms1 = {\n    cellSize,\n    sectionSize,\n    cellColor,\n    sectionColor,\n    cellThickness,\n    sectionThickness\n  };\n  const uniforms2 = {\n    fadeDistance,\n    fadeStrength,\n    fadeFrom,\n    infiniteGrid,\n    followCamera\n  };\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    frustumCulled: false\n  }, props), /*#__PURE__*/React.createElement(\"gridMaterial\", _extends({\n    transparent: true,\n    \"extensions-derivatives\": true,\n    side: side\n  }, uniforms1, uniforms2)), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }));\n});\n\nexport { Grid };\n", "import { CubeTextureLoader } from 'three';\nimport { useLoader } from '@react-three/fiber';\n\nfunction useCubeTexture(files, {\n  path\n}) {\n  // @ts-ignore\n  const [cubeTexture] = useLoader(\n  // @ts-ignore\n  CubeTextureLoader, [files], loader => loader.setPath(path));\n  return cubeTexture;\n}\nuseCubeTexture.preload = (files, {\n  path\n}) => useLoader.preload(\n// @ts-ignore\nCubeTextureLoader, [files], loader => loader.setPath(path));\n\nexport { useCubeTexture };\n", "import { FBXLoader } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\n\nfunction useFBX(path) {\n  return useLoader(FBXLoader, path);\n}\nuseFBX.preload = path => useLoader.preload(FBXLoader, path);\nuseFBX.clear = input => useLoader.clear(FBXLoader, input);\n\nexport { useFBX };\n", "import { useThree, useLoader } from '@react-three/fiber';\nimport { useEffect } from 'react';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './useTexture.js';\n\nconst cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\nfunction useKTX2(input, basisPath = `${cdn}/basis/`) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, loader => {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  });\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  useEffect(() => {\n    const array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\nuseKTX2.preload = (url, basisPath = `${cdn}/basis/`) => useLoader.preload(KTX2Loader, url, loader => {\n  loader.setTranscoderPath(basisPath);\n});\nuseKTX2.clear = input => useLoader.clear(KTX2Loader, input);\n\nexport { useKTX2 };\n", "import * as THREE from 'three';\nimport { useRef, useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport Hls from 'hls.js';\n\nfunction useVideoTexture(src, props) {\n  const {\n    unsuspend,\n    start,\n    crossOrigin,\n    muted,\n    loop,\n    hls,\n    ...rest\n  } = {\n    unsuspend: 'loadedmetadata',\n    crossOrigin: 'Anonymous',\n    muted: true,\n    loop: true,\n    start: true,\n    playsInline: true,\n    hls: {},\n    ...props\n  };\n  const url = new URL(typeof src === 'string' ? src : '', window.location.href);\n  const shouldUseHLS = url.pathname.endsWith('.m3u8') && Hls.isSupported();\n  const hlsRef = useRef(shouldUseHLS ? new Hls({\n    ...hls\n  }) : null);\n  const videoRef = useRef(null);\n  const gl = useThree(state => state.gl);\n  const texture = suspend(() => new Promise((res, rej) => {\n    const video = Object.assign(document.createElement('video'), {\n      src: typeof src === 'string' && src || undefined,\n      srcObject: src instanceof MediaStream && src || undefined,\n      crossOrigin,\n      loop,\n      muted,\n      ...rest\n    });\n    videoRef.current = video;\n\n    // hlsjs extension\n    if (typeof src === 'string') {\n      if (shouldUseHLS) {\n        const _hls = hlsRef.current;\n        if (_hls) {\n          _hls.attachMedia(video);\n          _hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n            _hls.loadSource(src);\n          });\n        }\n      } else {\n        video.src = src;\n      }\n    } else if (src instanceof MediaStream) {\n      video.srcObject = src;\n    }\n    const texture = new THREE.VideoTexture(video);\n    if ('colorSpace' in texture) texture.colorSpace = gl.outputColorSpace;else texture.encoding = gl.outputEncoding;\n    video.addEventListener(unsuspend, () => res(texture));\n  }), [src]);\n  useEffect(() => {\n    start && texture.image.play();\n    return () => {\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [texture, start]);\n  return texture;\n}\n\nexport { useVideoTexture };\n", "import * as THREE from 'three';\nimport { TextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport * as React from 'react';\nimport { useState } from 'react';\n\n// utils\nconst getFirstItem = param => {\n  if (Array.isArray(param)) {\n    return param[0];\n  } else if (typeof param === 'object' && param !== null) {\n    const keys = Object.keys(param);\n    return param[keys[0]][0];\n  } else {\n    return {\n      w: 0,\n      h: 0\n    };\n  }\n};\nconst calculateAspectRatio = (width, height, factor, v) => {\n  const adaptedHeight = height * (v.aspect > width / height ? v.width / width : v.height / height);\n  const adaptedWidth = width * (v.aspect > width / height ? v.width / width : v.height / height);\n  const scaleX = adaptedWidth * factor;\n  const scaleY = adaptedHeight * factor;\n  const currentMaxScale = 1;\n  // Calculate the maximum scale based on the aspect ratio and max scale limit\n  let finalMaxScaleW = Math.min(currentMaxScale, scaleX);\n  let finalMaxScaleH = Math.min(currentMaxScale, scaleY);\n\n  // Ensure that scaleX and scaleY do not exceed the max scale while maintaining aspect ratio\n  if (scaleX > currentMaxScale) {\n    finalMaxScaleW = currentMaxScale;\n    finalMaxScaleH = scaleY / scaleX * currentMaxScale;\n  }\n  return new THREE.Vector3(finalMaxScaleW, finalMaxScaleH, 1);\n};\nfunction useSpriteLoader(input, json, animationNames, numberOfFrames, onLoad) {\n  const v = useThree(state => state.viewport);\n  const spriteDataRef = React.useRef(null);\n  const totalFrames = React.useRef(0);\n  const aspectFactor = 0.1;\n  const [spriteData, setSpriteData] = useState(null);\n  const [spriteTexture, setSpriteTexture] = React.useState(new THREE.Texture());\n  const textureLoader = new THREE.TextureLoader();\n  const [spriteObj, setSpriteObj] = useState(null);\n  React.useLayoutEffect(() => {\n    if (json && input) {\n      loadJsonAndTextureAndExecuteCallback(json, input, parseSpriteData);\n    } else if (input) {\n      // only load the texture, this is an image sprite only\n      loadStandaloneSprite();\n    }\n    return () => {\n      if (input) {\n        useLoader.clear(TextureLoader, input);\n      }\n    };\n  }, []);\n  function loadJsonAndTexture(textureUrl, jsonUrl) {\n    if (jsonUrl && textureUrl) {\n      loadJsonAndTextureAndExecuteCallback(jsonUrl, textureUrl, parseSpriteData);\n    } else {\n      loadStandaloneSprite(textureUrl);\n    }\n  }\n  function loadStandaloneSprite(textureUrl) {\n    if (textureUrl || input) {\n      new Promise(resolve => {\n        textureLoader.load(textureUrl !== null && textureUrl !== void 0 ? textureUrl : input, resolve);\n      }).then(texture => {\n        parseSpriteData(null, texture);\n      });\n    }\n  }\n\n  /**\r\n   *\r\n   */\n  function loadJsonAndTextureAndExecuteCallback(jsonUrl, textureUrl, callback) {\n    const jsonPromise = fetch(jsonUrl).then(response => response.json());\n    const texturePromise = new Promise(resolve => {\n      textureLoader.load(textureUrl, resolve);\n    });\n    Promise.all([jsonPromise, texturePromise]).then(response => {\n      callback(response[0], response[1]);\n    });\n  }\n  const parseSpriteData = (json, _spriteTexture) => {\n    let aspect = new THREE.Vector3(1, 1, 1);\n    // sprite only case\n    if (json === null) {\n      if (_spriteTexture && numberOfFrames) {\n        //get size from texture\n        const width = _spriteTexture.image.width;\n        const height = _spriteTexture.image.height;\n        const frameWidth = width / numberOfFrames;\n        const frameHeight = height;\n        totalFrames.current = numberOfFrames;\n        spriteDataRef.current = {\n          frames: [],\n          meta: {\n            version: '1.0',\n            size: {\n              w: width,\n              h: height\n            },\n            scale: '1'\n          }\n        };\n        if (parseInt(frameWidth.toString(), 10) === frameWidth) {\n          // if it fits\n          for (let i = 0; i < numberOfFrames; i++) {\n            spriteDataRef.current.frames.push({\n              frame: {\n                x: i * frameWidth,\n                y: 0,\n                w: frameWidth,\n                h: frameHeight\n              },\n              rotated: false,\n              trimmed: false,\n              spriteSourceSize: {\n                x: 0,\n                y: 0,\n                w: frameWidth,\n                h: frameHeight\n              },\n              sourceSize: {\n                w: frameWidth,\n                h: height\n              }\n            });\n          }\n        }\n        aspect = calculateAspectRatio(frameWidth, frameHeight, aspectFactor, v);\n      }\n    } else if (_spriteTexture) {\n      spriteDataRef.current = json;\n      spriteDataRef.current.frames = parseFrames();\n      totalFrames.current = Array.isArray(json.frames) ? json.frames.length : Object.keys(json.frames).length;\n      const {\n        w,\n        h\n      } = getFirstItem(json.frames).sourceSize;\n      aspect = calculateAspectRatio(w, h, aspectFactor, v);\n    }\n    setSpriteData(spriteDataRef.current);\n    // @ts-ignore\n    if ('encoding' in _spriteTexture) _spriteTexture.encoding = 3001; // sRGBEncoding\n    // @ts-ignore\n    else _spriteTexture.colorSpace = 'srgb';\n    setSpriteTexture(_spriteTexture);\n    setSpriteObj({\n      spriteTexture: _spriteTexture,\n      spriteData: spriteDataRef.current,\n      aspect: aspect\n    });\n  };\n\n  // for frame based JSON Hash sprite data\n  const parseFrames = () => {\n    const sprites = {};\n    const data = spriteDataRef.current;\n    const delimiters = animationNames;\n    if (delimiters && Array.isArray(data['frames'])) {\n      for (let i = 0; i < delimiters.length; i++) {\n        // we convert each named animation group into an array\n        sprites[delimiters[i]] = [];\n        for (const value of data['frames']) {\n          const frameData = value['frame'];\n          const x = frameData['x'];\n          const y = frameData['y'];\n          const width = frameData['w'];\n          const height = frameData['h'];\n          const sourceWidth = value['sourceSize']['w'];\n          const sourceHeight = value['sourceSize']['h'];\n          if (typeof value['filename'] === 'string' && value['filename'].toLowerCase().indexOf(delimiters[i].toLowerCase()) !== -1) {\n            sprites[delimiters[i]].push({\n              x: x,\n              y: y,\n              w: width,\n              h: height,\n              frame: frameData,\n              sourceSize: {\n                w: sourceWidth,\n                h: sourceHeight\n              }\n            });\n          }\n        }\n      }\n      return sprites;\n    } else if (delimiters && typeof data['frames'] === 'object') {\n      for (let i = 0; i < delimiters.length; i++) {\n        // we convert each named animation group into an array\n        sprites[delimiters[i]] = [];\n        for (const innerKey in data['frames']) {\n          const value = data['frames'][innerKey];\n          const frameData = value['frame'];\n          const x = frameData['x'];\n          const y = frameData['y'];\n          const width = frameData['w'];\n          const height = frameData['h'];\n          const sourceWidth = value['sourceSize']['w'];\n          const sourceHeight = value['sourceSize']['h'];\n          if (typeof innerKey === 'string' && innerKey.toLowerCase().indexOf(delimiters[i].toLowerCase()) !== -1) {\n            sprites[delimiters[i]].push({\n              x: x,\n              y: y,\n              w: width,\n              h: height,\n              frame: frameData,\n              sourceSize: {\n                w: sourceWidth,\n                h: sourceHeight\n              }\n            });\n          }\n        }\n      }\n      return sprites;\n    } else {\n      // we need to convert it into an array\n      const spritesArr = [];\n      for (const key in data.frames) {\n        spritesArr.push(data.frames[key]);\n      }\n      return spritesArr;\n    }\n  };\n  React.useLayoutEffect(() => {\n    onLoad == null || onLoad(spriteTexture, spriteData);\n  }, [spriteTexture, spriteData]);\n  return {\n    spriteObj,\n    loadJsonAndTexture\n  };\n}\nuseSpriteLoader.preload = url => useLoader.preload(TextureLoader, url);\nuseSpriteLoader.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { calculateAspectRatio, getFirstItem, useSpriteLoader };\n", "import { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\n\nconst Helper = ({\n  type: helperConstructor,\n  args = []\n}) => {\n  const objectRef = React.useRef(null);\n  const helperRef = React.useRef();\n  const scene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    var _objectRef$current;\n    const parent = (_objectRef$current = objectRef.current) == null ? void 0 : _objectRef$current.parent;\n    if (!helperConstructor || !parent) return;\n    const helper = new helperConstructor(parent, ...args);\n    helperRef.current = helper;\n\n    // Prevent the helpers from blocking rays\n    helper.traverse(child => child.raycast = () => null);\n    scene.add(helper);\n    return () => {\n      helperRef.current = undefined;\n      scene.remove(helper);\n      helper.dispose == null || helper.dispose();\n    };\n  }, [scene, helperConstructor, ...args]);\n  useFrame(() => {\n    var _helperRef$current;\n    return void ((_helperRef$current = helperRef.current) == null || _helperRef$current.update == null ? void 0 : _helperRef$current.update());\n  });\n  return /*#__PURE__*/React.createElement(\"object3D\", {\n    ref: objectRef\n  });\n};\n\nexport { Helper };\n", "import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\nimport StatsImpl from 'stats.js';\nimport { useEffectfulState } from '../helpers/useEffectfulState.js';\n\nfunction Stats({\n  showPanel = 0,\n  className,\n  parent\n}) {\n  const stats = useEffectfulState(() => new StatsImpl(), []);\n  React.useEffect(() => {\n    if (stats) {\n      const node = parent && parent.current || document.body;\n      stats.showPanel(showPanel);\n      node == null || node.appendChild(stats.dom);\n      if (className) stats.dom.classList.add(...className.split(' ').filter(cls => cls));\n      const begin = addEffect(() => stats.begin());\n      const end = addAfterEffect(() => stats.end());\n      return () => {\n        node == null || node.removeChild(stats.dom);\n        begin();\n        end();\n      };\n    }\n  }, [parent, stats, className, showPanel]);\n  return null;\n}\n\nexport { Stats };\n", "import * as React from 'react';\n\nfunction call(ref, value) {\n  if (typeof ref === 'function') ref(value);else if (ref != null) ref.current = value;\n}\nfunction useEffectfulState(fn, deps = [], cb) {\n  const [state, set] = React.useState();\n  React.useLayoutEffect(() => {\n    const value = fn();\n    set(value);\n    call(cb, value);\n    return () => call(cb, null);\n  }, deps);\n  return state;\n}\n\nexport { useEffectfulState };\n", "import * as React from 'react';\nimport { useThree, addAfterEffect } from '@react-three/fiber';\nimport Stats from 'stats-gl';\n\nfunction StatsGl({\n  className,\n  parent,\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const stats = React.useMemo(() => {\n    const stats = new Stats({\n      ...props\n    });\n    stats.init(gl);\n    return stats;\n  }, [gl]);\n  React.useEffect(() => {\n    if (stats) {\n      const node = parent && parent.current || document.body;\n      node == null || node.appendChild(stats.dom);\n      if (className) stats.container.classList.add(...className.split(' ').filter(cls => cls));\n      const end = addAfterEffect(() => stats.update());\n      return () => {\n        node == null || node.removeChild(stats.dom);\n        end();\n      };\n    }\n  }, [parent, stats, className]);\n  return null;\n}\n\nexport { StatsGl };\n", "class Panel {\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D | null;\n    name: string;\n    fg: string;\n    bg: string;\n    PR: number;\n    WIDTH: number;\n    HEIGHT: number;\n    TEXT_X: number;\n    TEXT_Y: number;\n    GRAPH_X: number;\n    GRAPH_Y: number;\n    GRAPH_WIDTH: number;\n    GRAPH_HEIGHT: number;\n\n    constructor(name: string, fg: string, bg: string) {\n\n        this.name = name;\n        this.fg = fg;\n        this.bg = bg;\n        this.PR = Math.round( window.devicePixelRatio || 1 );\n        \n        this.WIDTH = 90 * this.PR;\n        this.HEIGHT = 48 * this.PR;\n        this.TEXT_X = 3 * this.PR;\n        this.TEXT_Y = 2 * this.PR;\n        this.GRAPH_X = 3 * this.PR;\n        this.GRAPH_Y = 15 * this.PR;\n        this.GRAPH_WIDTH = 84 * this.PR;\n        this.GRAPH_HEIGHT = 30 * this.PR;\n\n        this.canvas = document.createElement('canvas');\n        this.canvas.width = 90 * this.PR;\n        this.canvas.height = 48 * this.PR;\n        this.canvas.style.width = '90px';\n        this.canvas.style.position = 'absolute';\n        this.canvas.style.height = '48px';\n        this.canvas.style.cssText = 'width:90px;height:48px';\n\n        this.context = this.canvas.getContext('2d');\n\n        if (this.context) {\n            this.context.font = 'bold ' + (9 * this.PR) + 'px Helvetica,Arial,sans-serif';\n            this.context.textBaseline = 'top';\n\n            this.context.fillStyle = this.bg;\n            this.context.fillRect(0, 0, this.WIDTH, this.HEIGHT);\n\n            this.context.fillStyle = this.fg;\n            this.context.fillText(this.name, this.TEXT_X, this.TEXT_Y);\n            this.context.fillRect(this.GRAPH_X, this.GRAPH_Y, this.GRAPH_WIDTH, this.GRAPH_HEIGHT);\n\n            this.context.fillStyle = this.bg;\n            this.context.globalAlpha = 0.9;\n            this.context.fillRect(this.GRAPH_X, this.GRAPH_Y, this.GRAPH_WIDTH, this.GRAPH_HEIGHT);\n        }\n\n    }\n\n    update(value: number, valueGraph: number, maxValue: number, maxGraph: number, decimals = 0) {\n        let min = Infinity, max = 0;\n\n        if (!this.context) return;\n\n        min = Math.min(min, value);\n        max = Math.max(maxValue, value);\n        maxGraph = Math.max(maxGraph, valueGraph);\n\n        this.context.fillStyle = this.bg;\n        this.context.globalAlpha = 1;\n        this.context.fillRect(0, 0, this.WIDTH, this.GRAPH_Y);\n        this.context.fillStyle = this.fg;\n        this.context.fillText(value.toFixed(decimals) + ' ' + this.name + ' (' + min.toFixed(decimals) + '-' + parseFloat(max.toFixed(decimals)) + ')', this.TEXT_X, this.TEXT_Y);\n\n        this.context.drawImage(this.canvas, this.GRAPH_X + this.PR, this.GRAPH_Y, this.GRAPH_WIDTH - this.PR, this.GRAPH_HEIGHT, this.GRAPH_X, this.GRAPH_Y, this.GRAPH_WIDTH - this.PR, this.GRAPH_HEIGHT);\n\n        this.context.fillRect(this.GRAPH_X + this.GRAPH_WIDTH - this.PR, this.GRAPH_Y, this.PR, this.GRAPH_HEIGHT);\n\n        this.context.fillStyle = this.bg;\n        this.context.globalAlpha = 0.9;\n\n        this.context.fillRect(this.GRAPH_X + this.GRAPH_WIDTH - this.PR, this.GRAPH_Y, this.PR, ((1 - (valueGraph / maxGraph))) * this.GRAPH_HEIGHT);\n    }\n};\n\nexport default Panel;", "import Panel from \"./panel\";\nimport * as THREE from 'three';\nexport interface AverageArray {\n  logs: number[];\n  graph: number[];\n}\n\n\nclass Stats {\n  totalCpuDuration: number = 0;\n  totalGpuDuration: number = 0;\n  totalGpuDurationCompute: number = 0;\n  totalFps: number = 0;\n  mode: number;\n  info: any;\n  dom: HTMLDivElement;\n  minimal: boolean;\n  horizontal: boolean;\n  beginTime: number;\n  prevTime: number;\n  prevCpuTime: number;\n  frames: number;\n  averageCpu: AverageArray;\n  averageGpu: AverageArray;\n  averageGpuCompute: AverageArray;\n  queryCreated: boolean;\n  isRunningCPUProfiling: boolean;\n  fpsPanel: Panel;\n  static Panel: typeof Panel = Panel;\n  msPanel: Panel;\n  gpuPanel: Panel | null;\n  gpuPanelCompute: Panel | null;\n  samplesLog: number;\n  samplesGraph: number;\n  logsPerSecond: number;\n  activeQuery: WebGLQuery | null = null;\n\n  precision: number;\n  gl: WebGL2RenderingContext | null;\n  ext: any;\n  query: WebGLQuery | null;\n  disjoint: any;\n  ns: any;\n  threeRendererPatched: boolean;\n  gpuQueries: { query: WebGLQuery }[] = [];\n  renderCount: number = 0;\n\n  constructor({ logsPerSecond = 20, samplesLog = 100, samplesGraph = 10, precision = 2, minimal = false, horizontal = true, mode = 0 } = {}) {\n\n    this.mode = mode;\n    this.horizontal = horizontal;\n    this.dom = document.createElement('div');\n    this.dom.style.cssText = 'position:fixed;top:0;left:0;opacity:0.9;z-index:10000;';\n\n    if (minimal) {\n\n      this.dom.style.cssText += 'cursor:pointer';\n\n    }\n\n    this.gl = null;\n    this.query = null;\n\n    this.isRunningCPUProfiling = false;\n    this.minimal = minimal;\n\n    this.beginTime = (performance || Date).now();\n    this.prevTime = this.beginTime;\n    this.prevCpuTime = this.beginTime;\n    this.frames = 0;\n    this.renderCount = 0;\n    this.threeRendererPatched = false;\n    this.averageCpu = {\n      logs: [],\n      graph: []\n    };\n    this.averageGpu = {\n      logs: [],\n      graph: []\n    };\n    this.averageGpuCompute = {\n      logs: [],\n      graph: []\n    };\n\n    this.queryCreated = false;\n\n    this.fpsPanel = this.addPanel(new Stats.Panel('FPS', '#0ff', '#002'), 0);\n    this.msPanel = this.addPanel(new Stats.Panel('CPU', '#0f0', '#020'), 1);\n    this.gpuPanel = null;\n    this.gpuPanelCompute = null;\n\n    this.samplesLog = samplesLog;\n    this.samplesGraph = samplesGraph;\n    this.precision = precision;\n    this.logsPerSecond = logsPerSecond;\n\n    if (this.minimal) {\n\n      this.dom.addEventListener('click', (event) => {\n\n        event.preventDefault();\n        this.showPanel(++this.mode % this.dom.children.length);\n\n      }, false);\n\n      this.mode = mode;\n      this.showPanel(this.mode);\n\n    } else {\n\n      window.addEventListener('resize', () => {\n\n        this.resizePanel(this.fpsPanel, 0);\n        this.resizePanel(this.msPanel, 1);\n\n        if (this.gpuPanel) {\n          this.resizePanel(this.gpuPanel, 2);\n        }\n        if (this.gpuPanelCompute) {\n          this.resizePanel(this.gpuPanelCompute, 3);\n        }\n      })\n    }\n\n\n  }\n\n  patchThreeRenderer(renderer: any) {\n\n    // Store the original render method\n    const originalRenderMethod = renderer.render;\n\n    // Reference to the stats instance\n    const statsInstance = this;\n\n    // Override the render method on the prototype\n    renderer.render = function (scene: THREE.Scene, camera: THREE.Camera) {\n\n\n      statsInstance.begin(); // Start tracking for this render call\n\n      // Call the original render method\n      originalRenderMethod.call(this, scene, camera);\n\n      statsInstance.end(); // End tracking for this render call\n    };\n\n\n    this.threeRendererPatched = true;\n\n  }\n\n  resizePanel(panel: Panel, offset: number) {\n\n    panel.canvas.style.position = 'absolute';\n\n    if (this.minimal) {\n\n      panel.canvas.style.display = 'none';\n\n    } else {\n\n      panel.canvas.style.display = 'block';\n      if (this.horizontal) {\n        panel.canvas.style.top = '0px';\n        panel.canvas.style.left = offset * panel.WIDTH / panel.PR + 'px';\n      } else {\n        panel.canvas.style.left = '0px';\n        panel.canvas.style.top = offset * panel.HEIGHT / panel.PR + 'px';\n\n      }\n    }\n  }\n\n  addPanel(panel: Panel, offset: number) {\n\n    if (panel.canvas) {\n\n      this.dom.appendChild(panel.canvas);\n\n      this.resizePanel(panel, offset);\n\n    }\n\n    return panel;\n\n  }\n\n  showPanel(id: number) {\n\n    for (let i = 0; i < this.dom.children.length; i++) {\n      const child = this.dom.children[i] as HTMLElement;\n\n      child.style.display = i === id ? 'block' : 'none';\n\n    }\n\n    this.mode = id;\n\n  }\n\n  async init(canvasOrGL: any) {\n    if (!canvasOrGL) {\n      console.error('Stats: The \"canvas\" parameter is undefined.');\n      return;\n    }\n\n\n    // if ((canvasOrGL as any).isWebGPURenderer && !this.threeRendererPatched) {\n    // TODO Color GPU Analytic in another color than yellow to know webgpu or webgl context (blue)\n    //   const canvas: any = canvasOrGL\n    //   this.patchThreeRenderer(canvas as any);\n    //   this.gl = canvas.getContext();\n    // } else \n    if ((canvasOrGL as any).isWebGLRenderer && !this.threeRendererPatched) {\n      const canvas: any = canvasOrGL\n      this.patchThreeRenderer(canvas as any);\n      this.gl = canvas.getContext();\n    } else if (!this.gl && canvasOrGL instanceof WebGL2RenderingContext) {\n      this.gl = canvasOrGL;\n    }\n\n    if (canvasOrGL.isWebGPURenderer) {\n\n      canvasOrGL.backend.trackTimestamp = true\n\n      if (await canvasOrGL.hasFeatureAsync('timestamp-query')) {\n        this.gpuPanel = this.addPanel(new Stats.Panel('GPU', '#ff0', '#220'), 2);\n        this.gpuPanelCompute = this.addPanel(new Stats.Panel('CPT', '#e1e1e1', '#212121'), 3);\n        this.info = canvasOrGL.info\n      }\n      return;\n    }\n    // Check if canvasOrGL is already a WebGL2RenderingContext\n\n\n    // Handle HTMLCanvasElement and OffscreenCanvas\n    else if (!this.gl && canvasOrGL instanceof HTMLCanvasElement || canvasOrGL instanceof OffscreenCanvas) {\n      this.gl = canvasOrGL.getContext('webgl2') as WebGL2RenderingContext;\n      if (!this.gl) {\n        console.error('Stats: Unable to obtain WebGL2 context.');\n        return;\n      }\n    } else if (!this.gl) {\n      console.error('Stats: Invalid input type. Expected WebGL2RenderingContext, HTMLCanvasElement, or OffscreenCanvas.');\n      return;\n    }\n\n    // Get the extension\n    this.ext = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    if (this.ext) {\n      this.gpuPanel = this.addPanel(new Stats.Panel('GPU', '#ff0', '#220'), 2);\n    }\n  }\n\n\n  begin() {\n\n    if (!this.isRunningCPUProfiling) {\n      this.beginProfiling('cpu-started');\n    }\n\n    if (!this.gl || !this.ext) return;\n\n    if (this.gl && this.ext) {\n      if (this.activeQuery) {\n        // End the previous query if it's still active\n        this.gl.endQuery(this.ext.TIME_ELAPSED_EXT);\n      }\n\n      this.activeQuery = this.gl.createQuery();\n      if (this.activeQuery !== null) {\n        this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT, this.activeQuery);\n      }\n    }\n  }\n\n\n\n  end() {\n\n    // Increase render count\n    this.renderCount++;\n\n    if (this.gl && this.ext && this.activeQuery) {\n      this.gl.endQuery(this.ext.TIME_ELAPSED_EXT);\n      // Add the active query to the gpuQueries array and reset it\n      this.gpuQueries.push({ query: this.activeQuery });\n      this.activeQuery = null;\n    }\n\n  }\n\n  processGpuQueries() {\n\n\n    if (!this.gl || !this.ext) return;\n\n    this.totalGpuDuration = 0;\n\n    this.gpuQueries.forEach((queryInfo, index) => {\n      if (this.gl) {\n        const available = this.gl.getQueryParameter(queryInfo.query, this.gl.QUERY_RESULT_AVAILABLE);\n        const disjoint = this.gl.getParameter(this.ext.GPU_DISJOINT_EXT);\n\n        if (available && !disjoint) {\n          const elapsed = this.gl.getQueryParameter(queryInfo.query, this.gl.QUERY_RESULT);\n          const duration = elapsed * 1e-6;  // Convert nanoseconds to milliseconds\n          this.totalGpuDuration += duration;\n          this.gl.deleteQuery(queryInfo.query);\n          this.gpuQueries.splice(index, 1);  // Remove the processed query\n        }\n      }\n    });\n\n  }\n\n  update() {\n\n    if (this.info === undefined) {\n      this.processGpuQueries();\n    } else {\n\n      this.totalGpuDuration = this.info.render.timestamp\n      this.totalGpuDurationCompute = this.info.compute.timestamp\n      this.addToAverage(this.totalGpuDurationCompute, this.averageGpuCompute);\n\n    }\n\n    this.endProfiling('cpu-started', 'cpu-finished', 'cpu-duration');\n\n    // Calculate the total duration of CPU and GPU work for this frame\n    this.addToAverage(this.totalCpuDuration, this.averageCpu);\n    this.addToAverage(this.totalGpuDuration, this.averageGpu);\n\n    this.renderCount = 0;\n\n    // If this.totalCpuDuration is 0, it means that the CPU query was not created and stats.begin() never called/overrided\n    if (this.totalCpuDuration === 0) {\n      this.beginProfiling('cpu-started');\n    }\n\n    this.totalCpuDuration = 0;\n\n    this.totalFps = 0;\n\n    this.beginTime = this.endInternal()\n\n  }\n\n  endInternal() {\n\n    this.frames++;\n    const time = (performance || Date).now();\n\n    if (time >= this.prevCpuTime + 1000 / this.logsPerSecond) {\n      this.updatePanel(this.msPanel, this.averageCpu);\n      this.updatePanel(this.gpuPanel, this.averageGpu);\n\n      if (this.gpuPanelCompute) {\n        this.updatePanel(this.gpuPanelCompute, this.averageGpuCompute);\n      }\n\n      this.prevCpuTime = time;\n    }\n\n    if (time >= this.prevTime + 1000) {\n\n      const fps = (this.frames * 1000) / (time - this.prevTime);\n\n      this.fpsPanel.update(fps, fps, 100, 100, 0);\n\n      this.prevTime = time;\n      this.frames = 0;\n\n    }\n\n    return time;\n\n  }\n\n  addToAverage(value: number, averageArray: { logs: any; graph: any; }) {\n\n    averageArray.logs.push(value);\n    if (averageArray.logs.length > this.samplesLog) {\n\n      averageArray.logs.shift();\n\n    }\n\n    averageArray.graph.push(value);\n    if (averageArray.graph.length > this.samplesGraph) {\n\n      averageArray.graph.shift();\n\n    }\n\n  }\n\n  beginProfiling(marker: string) {\n\n    if (window.performance) {\n\n      window.performance.mark(marker);\n      this.isRunningCPUProfiling = true\n\n    }\n\n  }\n\n  endProfiling(startMarker: string | PerformanceMeasureOptions | undefined, endMarker: string | undefined, measureName: string) {\n\n    if (window.performance && endMarker && this.isRunningCPUProfiling) {\n\n      window.performance.mark(endMarker);\n      const cpuMeasure = performance.measure(measureName, startMarker, endMarker);\n      this.totalCpuDuration += cpuMeasure.duration;\n      this.isRunningCPUProfiling = false\n\n    }\n\n  }\n\n  updatePanel(panel: { update: any; } | null, averageArray: { logs: number[], graph: number[] }) {\n\n    if (averageArray.logs.length > 0) {\n\n      let sumLog = 0;\n      let max = 0.01;\n\n      for (let i = 0; i < averageArray.logs.length; i++) {\n\n        sumLog += averageArray.logs[i];\n\n        if (averageArray.logs[i] > max) {\n          max = averageArray.logs[i];\n        }\n\n      }\n\n      let sumGraph = 0;\n      let maxGraph = 0.01;\n      for (let i = 0; i < averageArray.graph.length; i++) {\n\n        sumGraph += averageArray.graph[i];\n\n        if (averageArray.graph[i] > maxGraph) {\n          maxGraph = averageArray.graph[i];\n        }\n\n      }\n\n      if (panel) {\n        panel.update(sumLog / Math.min(averageArray.logs.length, this.samplesLog), sumGraph / Math.min(averageArray.graph.length, this.samplesGraph), max, maxGraph, this.precision);\n      }\n\n    }\n  }\n\n  get domElement() {\n    // patch for some use case in threejs\n    return this.dom;\n\n  }\n\n  get container() { // @deprecated\n\n    console.warn('Stats: Deprecated! this.container as been replaced to this.dom ')\n    return this.dom;\n\n  }\n\n}\n\n\nexport default Stats;", "import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nfunction useDepthBuffer({\n  size = 256,\n  frames = Infinity\n} = {}) {\n  const dpr = useThree(state => state.viewport.dpr);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const w = size || width * dpr;\n  const h = size || height * dpr;\n  const depthConfig = React.useMemo(() => {\n    const depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture\n    };\n  }, [w, h]);\n  let count = 0;\n  const depthFBO = useFBO(w, h, depthConfig);\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      state.gl.setRenderTarget(depthFBO);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(null);\n      count++;\n    }\n  });\n  return depthFBO.depthTexture;\n}\n\nexport { useDepthBuffer };\n", "import { useThree } from '@react-three/fiber';\n\nfunction useAspect(width, height, factor = 1) {\n  const v = useThree(state => state.viewport);\n  const adaptedHeight = height * (v.aspect > width / height ? v.width / width : v.height / height);\n  const adaptedWidth = width * (v.aspect > width / height ? v.width / width : v.height / height);\n  return [adaptedWidth * factor, adaptedHeight * factor, 1];\n}\n\nexport { useAspect };\n", "import * as React from 'react';\nimport { Raycaster, Camera } from 'three';\nimport { useThree, applyProps } from '@react-three/fiber';\n\nfunction useCamera(camera, props) {\n  const pointer = useThree(state => state.pointer);\n  const [raycast] = React.useState(() => {\n    const raycaster = new Raycaster();\n    /**\n     * applyProps is an internal method of r3f and\n     * therefore requires its first arg to be an\n     * \"Instance\" a term used with the Reconciler\n     * so we have an expect error to mask this\n     */\n    // @ts-expect-error\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(pointer, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nexport { useCamera };\n", "// GPU blocklist\n// SEE: https://chromium.googlesource.com/chromium/src/+/master/gpu/config/software_rendering_list.json\n// SEE: https://hg.mozilla.org/mozilla-central/raw-file/tip/services/settings/dumps/blocklists/gfx.json\nexport const BLOCKLISTED_GPUS = [\n  'geforce 320m',\n  'geforce 8600',\n  'geforce 8600m gt',\n  'geforce 8800 gs',\n  'geforce 8800 gt',\n  'geforce 9400',\n  'geforce 9400m g',\n  'geforce 9400m',\n  'geforce 9600m gt',\n  'geforce 9600m',\n  'geforce fx go5200',\n  'geforce gt 120',\n  'geforce gt 130',\n  'geforce gt 330m',\n  'geforce gtx 285',\n  'google swiftshader',\n  'intel g41',\n  'intel g45',\n  'intel gma 4500mhd',\n  'intel gma x3100',\n  'intel hd 3000',\n  'intel q45',\n  'legacy',\n  'mali-2',\n  'mali-3',\n  'mali-4',\n  'quadro fx 1500',\n  'quadro fx 4',\n  'quadro fx 5',\n  'radeon hd 2400',\n  'radeon hd 2600',\n  'radeon hd 4670',\n  'radeon hd 4850',\n  'radeon hd 4870',\n  'radeon hd 5670',\n  'radeon hd 5750',\n  'radeon hd 6290',\n  'radeon hd 6300',\n  'radeon hd 6310',\n  'radeon hd 6320',\n  'radeon hd 6490m',\n  'radeon hd 6630m',\n  'radeon hd 6750m',\n  'radeon hd 6770m',\n  'radeon hd 6970m',\n  'sgx 543',\n  'sgx543',\n];\n", "const debug = false ? console.log : undefined;\n\nexport function cleanRenderer(renderer: string) {\n  debug?.('cleanRenderer', { renderer });\n\n  renderer = renderer\n    .toLowerCase()\n    // Strip off ANGLE() - for example:\n    // 'ANGLE (NVIDIA TITAN Xp)' becomes 'NVIDIA TITAN Xp',\n    // 'Samsung Electronics Co., Ltd. ANGLE (Samsung Xclipse 920) on Vulkan 1.1.179' becomes 'Samsung Xclipse 920':\n    .replace(/.*angle ?\\((.+)\\)(?: on vulkan [0-9.]+)?$/i, '$1')\n    // Strip off [number]gb & strip off direct3d and after - for example:\n    // 'Radeon (TM) RX 470 Series Direct3D11 vs_5_0 ps_5_0' becomes\n    // 'Radeon (TM) RX 470 Series'\n    .replace(/\\s(\\d{1,2}gb|direct3d.+$)|\\(r\\)| \\([^)]+\\)$/g, '')\n    // Strip out graphics API. The one Vulkan example we've seen includes\n    // the GPU in parens after the Vulkan version so this also keeps that\n    // eg. 'vulkan 1.2.175 (nvidia nvidia geforce gtx 970 (0x000013c2))'\n    // becomes 'nvidia nvidia geforce gtx 970 (0x000013c2)'\n    // `OpenGL 4.5.0` gets removed all together\n    .replace(/(?:vulkan|opengl) \\d+\\.\\d+(?:\\.\\d+)?(?: \\((.*)\\))?/, '$1')\n\n  debug?.('cleanRenderer - renderer cleaned to', { renderer });\n\n  return renderer;\n};\n", "/**\r\n * The following defined constants and descriptions are directly ported from https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\r\n *\r\n * Any copyright is dedicated to the Public Domain. http://creativecommons.org/publicdomain/zero/1.0/\r\n *\r\n * Contributors\r\n *\r\n * See: https://developer.mozilla.org/en-US/profiles/Sheppy\r\n * See: https://developer.mozilla.org/en-US/profiles/fscholz\r\n * See: https://developer.mozilla.org/en-US/profiles/AtiX\r\n * See: https://developer.mozilla.org/en-US/profiles/Sebastianz\r\n *\r\n * These constants are defined on the WebGLRenderingContext / WebGL2RenderingContext interface\r\n */\r\n// Clearing buffers\r\n// Constants passed to WebGLRenderingContext.clear() to clear buffer masks\r\n/**\r\n * Passed to clear to clear the current depth buffer\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_BUFFER_BIT = 0x00000100;\r\n/**\r\n * Passed to clear to clear the current stencil buffer\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BUFFER_BIT = 0x00000400;\r\n/**\r\n * Passed to clear to clear the current color buffer\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_BUFFER_BIT = 0x00004000;\r\n// Rendering primitives\r\n// Constants passed to WebGLRenderingContext.drawElements() or WebGLRenderingContext.drawArrays() to specify what kind of primitive to render\r\n/**\r\n * Passed to drawElements or drawArrays to draw single points\r\n * @constant {number}\r\n */\r\nconst GL_POINTS = 0x0000;\r\n/**\r\n * Passed to drawElements or drawArrays to draw lines. Each vertex connects to the one after it\r\n * @constant {number}\r\n */\r\nconst GL_LINES = 0x0001;\r\n/**\r\n * Passed to drawElements or drawArrays to draw lines. Each set of two vertices is treated as a separate line segment\r\n * @constant {number}\r\n */\r\nconst GL_LINE_LOOP = 0x0002;\r\n/**\r\n * Passed to drawElements or drawArrays to draw a connected group of line segments from the first vertex to the last\r\n * @constant {number}\r\n */\r\nconst GL_LINE_STRIP = 0x0003;\r\n/**\r\n * Passed to drawElements or drawArrays to draw triangles. Each set of three vertices creates a separate triangle\r\n * @constant {number}\r\n */\r\nconst GL_TRIANGLES = 0x0004;\r\n/**\r\n * Passed to drawElements or drawArrays to draw a connected group of triangles\r\n * @constant {number}\r\n */\r\nconst GL_TRIANGLE_STRIP = 0x0005;\r\n/**\r\n * Passed to drawElements or drawArrays to draw a connected group of triangles. Each vertex connects to the previous and the first vertex in the fan\r\n * @constant {number}\r\n */\r\nconst GL_TRIANGLE_FAN = 0x0006;\r\n// Blending modes\r\n// Constants passed to WebGLRenderingContext.blendFunc() or WebGLRenderingContext.blendFuncSeparate() to specify the blending mode (for both, RBG and alpha, or separately)\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to turn off a component\r\n * @constant {number}\r\n */\r\nconst GL_ZERO = 0;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to turn on a component\r\n * @constant {number}\r\n */\r\nconst GL_ONE = 1;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the source elements color\r\n * @constant {number}\r\n */\r\nconst GL_SRC_COLOR = 0x0300;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source elements color\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_SRC_COLOR = 0x0301;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the source's alpha\r\n * @constant {number}\r\n */\r\nconst GL_SRC_ALPHA = 0x0302;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source's alpha\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_SRC_ALPHA = 0x0303;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's alpha\r\n * @constant {number}\r\n */\r\nconst GL_DST_ALPHA = 0x0304;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's alpha\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_DST_ALPHA = 0x0305;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's color\r\n * @constant {number}\r\n */\r\nconst GL_DST_COLOR = 0x0306;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's color\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_DST_COLOR = 0x0307;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to multiply a component by the minimum of source's alpha or one minus the destination's alpha\r\n * @constant {number}\r\n */\r\nconst GL_SRC_ALPHA_SATURATE = 0x0308;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to specify a constant color blend function\r\n * @constant {number}\r\n */\r\nconst GL_CONSTANT_COLOR = 0x8001;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to specify one minus a constant color blend function\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to specify a constant alpha blend function\r\n * @constant {number}\r\n */\r\nconst GL_CONSTANT_ALPHA = 0x8003;\r\n/**\r\n * Passed to blendFunc or blendFuncSeparate to specify one minus a constant alpha blend function\r\n * @constant {number}\r\n */\r\nconst GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;\r\n// Blending equations\r\n// Constants passed to WebGLRenderingContext.blendEquation() or WebGLRenderingContext.blendEquationSeparate() to control how the blending is calculated (for both, RBG and alpha, or separately)\r\n/**\r\n * Passed to blendEquation or blendEquationSeparate to set an addition blend function\r\n * @constant {number}\r\n */\r\nconst GL_FUNC_ADD = 0x8006;\r\n/**\r\n * Passed to blendEquation or blendEquationSeparate to specify a subtraction blend function (source - destination)\r\n * @constant {number}\r\n */\r\nconst GL_FUNC_SUBSTRACT = 0x800a;\r\n/**\r\n * Passed to blendEquation or blendEquationSeparate to specify a reverse subtraction blend function (destination - source)\r\n * @constant {number}\r\n */\r\nconst GL_FUNC_REVERSE_SUBTRACT = 0x800b;\r\n// Getting GL parameter information\r\n// Constants passed to WebGLRenderingContext.getParameter() to specify what information to return\r\n/**\r\n * Passed to getParameter to get the current RGB blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_EQUATION = 0x8009;\r\n/**\r\n * Passed to getParameter to get the current RGB blend function. Same as BLEND_EQUATION\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_EQUATION_RGB = 0x8009;\r\n/**\r\n * Passed to getParameter to get the current alpha blend function. Same as BLEND_EQUATION\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_EQUATION_ALPHA = 0x883d;\r\n/**\r\n * Passed to getParameter to get the current destination RGB blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_DST_RGB = 0x80c8;\r\n/**\r\n * Passed to getParameter to get the current source RGB blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_SRC_RGB = 0x80c9;\r\n/**\r\n * Passed to getParameter to get the current destination alpha blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_DST_ALPHA = 0x80ca;\r\n/**\r\n * Passed to getParameter to get the current source alpha blend function\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_SRC_ALPHA = 0x80cb;\r\n/**\r\n * Passed to getParameter to return a the current blend color\r\n * @constant {number}\r\n */\r\nconst GL_BLEND_COLOR = 0x8005;\r\n/**\r\n * Passed to getParameter to get the array buffer binding\r\n * @constant {number}\r\n */\r\nconst GL_ARRAY_BUFFER_BINDING = 0x8894;\r\n/**\r\n * Passed to getParameter to get the current element array buffer\r\n * @constant {number}\r\n */\r\nconst GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;\r\n/**\r\n * Passed to getParameter to get the current lineWidth (set by the lineWidth method)\r\n * @constant {number}\r\n */\r\nconst GL_LINE_WIDTH = 0x0b21;\r\n/**\r\n * Passed to getParameter to get the current size of a point drawn with gl.POINTS\r\n * @constant {number}\r\n */\r\nconst GL_ALIASED_POINT_SIZE_RANGE = 0x846d;\r\n/**\r\n * Passed to getParameter to get the range of available widths for a line. Returns a length-2 array with the lo value at 0, and hight at 1\r\n * @constant {number}\r\n */\r\nconst GL_ALIASED_LINE_WIDTH_RANGE = 0x846e;\r\n/**\r\n * Passed to getParameter to get the current value of cullFace. Should return FRONT, BACK, or FRONT_AND_BACK\r\n * @constant {number}\r\n */\r\nconst GL_CULL_FACE_MODE = 0x0b45;\r\n/**\r\n * Passed to getParameter to determine the current value of frontFace. Should return CW or CCW\r\n * @constant {number}\r\n */\r\nconst GL_FRONT_FACE = 0x0b46;\r\n/**\r\n * Passed to getParameter to return a length-2 array of floats giving the current depth range\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_RANGE = 0x0b70;\r\n/**\r\n * Passed to getParameter to determine if the depth write mask is enabled\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_WRITEMASK = 0x0b72;\r\n/**\r\n * Passed to getParameter to determine the current depth clear value\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_CLEAR_VALUE = 0x0b73;\r\n/**\r\n * Passed to getParameter to get the current depth function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_FUNC = 0x0b74;\r\n/**\r\n * Passed to getParameter to get the value the stencil will be cleared to\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_CLEAR_VALUE = 0x0b91;\r\n/**\r\n * Passed to getParameter to get the current stencil function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_FUNC = 0x0b92;\r\n/**\r\n * Passed to getParameter to get the current stencil fail function. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_FAIL = 0x0b94;\r\n/**\r\n * Passed to getParameter to get the current stencil fail function should the depth buffer test fail. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_PASS_DEPTH_FAIL = 0x0b95;\r\n/**\r\n * Passed to getParameter to get the current stencil fail function should the depth buffer test pass. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_PASS_DEPTH_PASS = 0x0b96;\r\n/**\r\n * Passed to getParameter to get the reference value used for stencil tests\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_REF = 0x0b97;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_VALUE_MASK = 0x0b93;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_WRITEMASK = 0x0b98;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_FUNC = 0x8800;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_FAIL = 0x8801;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_REF = 0x8ca3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_VALUE_MASK = 0x8ca4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BACK_WRITEMASK = 0x8ca5;\r\n/**\r\n * Returns an Int32Array with four elements for the current viewport dimensions\r\n * @constant {number}\r\n */\r\nconst GL_VIEWPORT = 0x0ba2;\r\n/**\r\n * Returns an Int32Array with four elements for the current scissor box dimensions\r\n * @constant {number}\r\n */\r\nconst GL_SCISSOR_BOX = 0x0c10;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_CLEAR_VALUE = 0x0c22;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_WRITEMASK = 0x0c23;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_ALIGNMENT = 0x0cf5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PACK_ALIGNMENT = 0x0d05;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TEXTURE_SIZE = 0x0d33;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VIEWPORT_DIMS = 0x0d3a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SUBPIXEL_BITS = 0x0d50;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RED_BITS = 0x0d52;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_GREEN_BITS = 0x0d53;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BLUE_BITS = 0x0d54;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ALPHA_BITS = 0x0d55;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_BITS = 0x0d56;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_BITS = 0x0d57;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_POLYGON_OFFSET_UNITS = 0x2a00;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_POLYGON_OFFSET_FACTOR = 0x8038;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BINDING_2D = 0x8069;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_BUFFERS = 0x80a8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLES = 0x80a9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_COVERAGE_VALUE = 0x80aa;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_COVERAGE_INVERT = 0x80ab;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_TEXTURE_FORMATS = 0x86a3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VENDOR = 0x1f00;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERER = 0x1f01;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERSION = 0x1f02;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8b9a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8b9b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BROWSER_DEFAULT_WEBGL = 0x9244;\r\n// Buffers\r\n// Constants passed to WebGLRenderingContext.bufferData(), WebGLRenderingContext.bufferSubData(), WebGLRenderingContext.bindBuffer(), or WebGLRenderingContext.getBufferParameter()\r\n/**\r\n * Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and not change often\r\n * @constant {number}\r\n */\r\nconst GL_STATIC_DRAW = 0x88e4;\r\n/**\r\n * Passed to bufferData as a hint about whether the contents of the buffer are likely to not be used often\r\n * @constant {number}\r\n */\r\nconst GL_STREAM_DRAW = 0x88e0;\r\n/**\r\n * Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and change often\r\n * @constant {number}\r\n */\r\nconst GL_DYNAMIC_DRAW = 0x88e8;\r\n/**\r\n * Passed to bindBuffer or bufferData to specify the type of buffer being used\r\n * @constant {number}\r\n */\r\nconst GL_ARRAY_BUFFER = 0x8892;\r\n/**\r\n * Passed to bindBuffer or bufferData to specify the type of buffer being used\r\n * @constant {number}\r\n */\r\nconst GL_ELEMENT_ARRAY_BUFFER = 0x8893;\r\n/**\r\n * Passed to getBufferParameter to get a buffer's size\r\n * @constant {number}\r\n */\r\nconst GL_BUFFER_SIZE = 0x8764;\r\n/**\r\n * Passed to getBufferParameter to get the hint for the buffer passed in when it was created\r\n * @constant {number}\r\n */\r\nconst GL_BUFFER_USAGE = 0x8765;\r\n// Vertex attributes\r\n// Constants passed to WebGLRenderingContext.getVertexAttrib()\r\n/**\r\n * Passed to getVertexAttrib to read back the current vertex attribute\r\n * @constant {number}\r\n */\r\nconst GL_CURRENT_VERTEX_ATTRIB = 0x8626;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889f;\r\n// Culling\r\n// Constants passed to WebGLRenderingContext.cullFace()\r\n/**\r\n * Passed to enable/disable to turn on/off culling. Can also be used with getParameter to find the current culling method\r\n * @constant {number}\r\n */\r\nconst GL_CULL_FACE = 0x0b44;\r\n/**\r\n * Passed to cullFace to specify that only front faces should be culled\r\n * @constant {number}\r\n */\r\nconst GL_FRONT = 0x0404;\r\n/**\r\n * Passed to cullFace to specify that only back faces should be culled\r\n * @constant {number}\r\n */\r\nconst GL_BACK = 0x0405;\r\n/**\r\n * Passed to cullFace to specify that front and back faces should be culled\r\n * @constant {number}\r\n */\r\nconst GL_FRONT_AND_BACK = 0x0408;\r\n// Enabling and disabling\r\n// Constants passed to WebGLRenderingContext.enable() or WebGLRenderingContext.disable()\r\n/**\r\n * Passed to enable/disable to turn on/off blending. Can also be used with getParameter to find the current blending method\r\n * @constant {number}\r\n */\r\nconst GL_BLEND = 0x0be2;\r\n/**\r\n * Passed to enable/disable to turn on/off the depth test. Can also be used with getParameter to query the depth test\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_TEST = 0x0b71;\r\n/**\r\n * Passed to enable/disable to turn on/off dithering. Can also be used with getParameter to find the current dithering method\r\n * @constant {number}\r\n */\r\nconst GL_DITHER = 0x0bd0;\r\n/**\r\n * Passed to enable/disable to turn on/off the polygon offset. Useful for rendering hidden-line images, decals, and or solids with highlighted edges. Can also be used with getParameter to query the scissor test\r\n * @constant {number}\r\n */\r\nconst GL_POLYGON_OFFSET_FILL = 0x8037;\r\n/**\r\n * Passed to enable/disable to turn on/off the alpha to coverage. Used in multi-sampling alpha channels\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809e;\r\n/**\r\n * Passed to enable/disable to turn on/off the sample coverage. Used in multi-sampling\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLE_COVERAGE = 0x80a0;\r\n/**\r\n * Passed to enable/disable to turn on/off the scissor test. Can also be used with getParameter to query the scissor test\r\n * @constant {number}\r\n */\r\nconst GL_SCISSOR_TEST = 0x0c11;\r\n/**\r\n * Passed to enable/disable to turn on/off the stencil test. Can also be used with getParameter to query the stencil test\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_TEST = 0x0b90;\r\n// Errors\r\n// Constants returned from WebGLRenderingContext.getError()\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_NO_ERROR = 0;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_ENUM = 0x0500;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_VALUE = 0x0501;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_OPERATION = 0x0502;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_OUT_OF_MEMORY = 0x0505;\r\n/**\r\n * Returned from getError\r\n * @constant {number}\r\n */\r\nconst GL_CONTEXT_LOST_WEBGL = 0x9242;\r\n// Front face directions\r\n// Constants passed to WebGLRenderingContext.frontFace()\r\n/**\r\n * Passed to frontFace to specify the front face of a polygon is drawn in the clockwise direction,\r\n * @constant {number}\r\n */\r\nconst GL_CW = 0x0900;\r\n/**\r\n * Passed to frontFace to specify the front face of a polygon is drawn in the counter clockwise direction\r\n * @constant {number}\r\n */\r\nconst GL_CCW = 0x0901;\r\n// Hints\r\n// Constants passed to WebGLRenderingContext.hint()\r\n/**\r\n * There is no preference for this behavior\r\n * @constant {number}\r\n */\r\nconst GL_DONT_CARE = 0x1100;\r\n/**\r\n * The most efficient behavior should be used\r\n * @constant {number}\r\n */\r\nconst GL_FASTEST = 0x1101;\r\n/**\r\n * The most correct or the highest quality option should be used\r\n * @constant {number}\r\n */\r\nconst GL_NICEST = 0x1102;\r\n/**\r\n * Hint for the quality of filtering when generating mipmap images with WebGLRenderingContext.generateMipmap()\r\n * @constant {number}\r\n */\r\nconst GL_GENERATE_MIPMAP_HINT = 0x8192;\r\n// Data types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BYTE = 0x1400;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_BYTE = 0x1401;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SHORT = 0x1402;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_SHORT = 0x1403;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT = 0x1404;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT = 0x1405;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT = 0x1406;\r\n// Pixel formats\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_COMPONENT = 0x1902;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ALPHA = 0x1906;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB = 0x1907;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA = 0x1908;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LUMINANCE = 0x1909;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LUMINANCE_ALPHA = 0x190a;\r\n// Pixel types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_SHORT_5_6_5 = 0x8363;\r\n// Shaders\r\n// Constants passed to WebGLRenderingContext.getShaderParameter()\r\n/**\r\n * Passed to createShader to define a fragment shader\r\n * @constant {number}\r\n */\r\nconst GL_FRAGMENT_SHADER = 0x8b30;\r\n/**\r\n * Passed to createShader to define a vertex shader\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_SHADER = 0x8b31;\r\n/**\r\n * Passed to getShaderParamter to get the status of the compilation. Returns false if the shader was not compiled. You can then query getShaderInfoLog to find the exact error\r\n * @constant {number}\r\n */\r\nconst GL_COMPILE_STATUS = 0x8b81;\r\n/**\r\n * Passed to getShaderParamter to determine if a shader was deleted via deleteShader. Returns true if it was, false otherwise\r\n * @constant {number}\r\n */\r\nconst GL_DELETE_STATUS = 0x8b80;\r\n/**\r\n * Passed to getProgramParameter after calling linkProgram to determine if a program was linked correctly. Returns false if there were errors. Use getProgramInfoLog to find the exact error\r\n * @constant {number}\r\n */\r\nconst GL_LINK_STATUS = 0x8b82;\r\n/**\r\n * Passed to getProgramParameter after calling validateProgram to determine if it is valid. Returns false if errors were found\r\n * @constant {number}\r\n */\r\nconst GL_VALIDATE_STATUS = 0x8b83;\r\n/**\r\n * Passed to getProgramParameter after calling attachShader to determine if the shader was attached correctly. Returns false if errors occurred\r\n * @constant {number}\r\n */\r\nconst GL_ATTACHED_SHADERS = 0x8b85;\r\n/**\r\n * Passed to getProgramParameter to get the number of attributes active in a program\r\n * @constant {number}\r\n */\r\nconst GL_ACTIVE_ATTRIBUTES = 0x8b89;\r\n/**\r\n * Passed to getProgramParamter to get the number of uniforms active in a program\r\n * @constant {number}\r\n */\r\nconst GL_ACTIVE_UNIFORMS = 0x8b86;\r\n/**\r\n * The maximum number of entries possible in the vertex attribute list\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_ATTRIBS = 0x8869;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8dfb;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VARYING_VECTORS = 0x8dfc;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8b4d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8b4c;\r\n/**\r\n * Implementation dependent number of maximum texture units. At least 8\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8dfd;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SHADER_TYPE = 0x8b4f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SHADING_LANGUAGE_VERSION = 0x8b8c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_CURRENT_PROGRAM = 0x8b8d;\r\n// Depth or stencil tests\r\n// Constants passed to WebGLRenderingContext.stencilFunc()\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn\r\n * @constant {number}\r\n */\r\nconst GL_NEVER = 0x0200;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn\r\n * @constant {number}\r\n */\r\nconst GL_ALWAYS = 0x0207;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value\r\n * @constant {number}\r\n */\r\nconst GL_LESS = 0x0201;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value\r\n * @constant {number}\r\n */\r\nconst GL_EQUAL = 0x0202;\r\n/**\r\n *  Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value\r\n * @constant {number}\r\n */\r\nconst GL_LEQUAL = 0x0203;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value\r\n * @constant {number}\r\n */\r\nconst GL_GREATER = 0x0204;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value\r\n * @constant {number}\r\n */\r\nconst GL_GEQUAL = 0x0206;\r\n/**\r\n * Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value\r\n * @constant {number}\r\n */\r\nconst GL_NOTEQUAL = 0x0205;\r\n// Stencil actions\r\n// Constants passed to WebGLRenderingContext.stencilOp()\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_KEEP = 0x1e00;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_REPLACE = 0x1e01;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INCR = 0x1e02;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DECR = 0x1e03;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INVERT = 0x150a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INCR_WRAP = 0x8507;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DECR_WRAP = 0x8508;\r\n// Textures\r\n// Constants passed to WebGLRenderingContext.texParameteri(), WebGLRenderingContext.texParameterf(), WebGLRenderingContext.bindTexture(), WebGLRenderingContext.texImage2D(), and others\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_NEAREST = 0x2600;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LINEAR = 0x2601;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_NEAREST_MIPMAP_NEAREST = 0x2700;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LINEAR_MIPMAP_NEAREST = 0x2701;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_NEAREST_MIPMAP_LINEAR = 0x2702;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LINEAR_MIPMAP_LINEAR = 0x2703;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MAG_FILTER = 0x2800;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MIN_FILTER = 0x2801;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_WRAP_S = 0x2802;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_WRAP_T = 0x2803;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_2D = 0x0de1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE = 0x1702;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP = 0x8513;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BINDING_CUBE_MAP = 0x8514;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851c;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE0 = 0x84c0;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE1 = 0x84c1;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE2 = 0x84c2;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE3 = 0x84c3;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE4 = 0x84c4;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE5 = 0x84c5;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE6 = 0x84c6;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE7 = 0x84c7;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE8 = 0x84c8;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE9 = 0x84c9;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE10 = 0x84ca;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE11 = 0x84cb;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE12 = 0x84cc;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE13 = 0x84cd;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE14 = 0x84ce;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE15 = 0x84cf;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE16 = 0x84d0;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE17 = 0x84d1;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE18 = 0x84d2;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE19 = 0x84d3;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE20 = 0x84d4;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE21 = 0x84d5;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE22 = 0x84d6;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE23 = 0x84d7;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE24 = 0x84d8;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE25 = 0x84d9;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE26 = 0x84da;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE27 = 0x84db;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE28 = 0x84dc;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE29 = 0x84dd;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE30 = 0x84de;\r\n/**\r\n * A texture unit\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE31 = 0x84df;\r\n/**\r\n * The current active texture unit\r\n * @constant {number}\r\n */\r\nconst GL_ACTIVE_TEXTURE = 0x84e0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_REPEAT = 0x2901;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_CLAMP_TO_EDGE = 0x812f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MIRRORED_REPEAT = 0x8370;\r\n// Uniform types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_VEC2 = 0x8b50;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_VEC3 = 0x8b51;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_VEC4 = 0x8b52;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_VEC2 = 0x8b53;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_VEC3 = 0x8b54;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_VEC4 = 0x8b55;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BOOL = 0x8b56;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BOOL_VEC2 = 0x8b57;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BOOL_VEC3 = 0x8b58;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_BOOL_VEC4 = 0x8b59;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT2 = 0x8b5a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT3 = 0x8b5b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT4 = 0x8b5c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_2D = 0x8b5e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_CUBE = 0x8b60;\r\n// Shader precision-specified types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LOW_FLOAT = 0x8df0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MEDIUM_FLOAT = 0x8df1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_HIGH_FLOAT = 0x8df2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_LOW_INT = 0x8df3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MEDIUM_INT = 0x8df4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_HIGH_INT = 0x8df5;\r\n// Framebuffers and renderbuffers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER = 0x8d40;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER = 0x8d41;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA4 = 0x8056;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB5_A1 = 0x8057;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB565 = 0x8d62;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_COMPONENT16 = 0x81a5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_INDEX = 0x1901;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_INDEX8 = 0x8d48;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_STENCIL = 0x84f9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_WIDTH = 0x8d42;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_HEIGHT = 0x8d43;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8d44;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_RED_SIZE = 0x8d50;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_GREEN_SIZE = 0x8d51;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_BLUE_SIZE = 0x8d52;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_ALPHA_SIZE = 0x8d53;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_DEPTH_SIZE = 0x8d54;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_STENCIL_SIZE = 0x8d55;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8cd0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8cd1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8cd2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8cd3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT0 = 0x8ce0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_ATTACHMENT = 0x8d00;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL_ATTACHMENT = 0x8d20;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_STENCIL_ATTACHMENT = 0x821a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_NONE = 0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_COMPLETE = 0x8cd5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8cd6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8cd7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8cd9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_UNSUPPORTED = 0x8cdd;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_BINDING = 0x8ca6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_BINDING = 0x8ca7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_RENDERBUFFER_SIZE = 0x84e8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506;\r\n// Pixel storage modes\r\n// Constants passed to WebGLRenderingContext.pixelStorei()\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_FLIP_Y_WEBGL = 0x9240;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\r\n// Additional constants defined WebGL 2\r\n// These constants are defined on the WebGL2RenderingContext interface. All WebGL 1 constants are also available in a WebGL 2 context\r\n// Getting GL parameter information\r\n// Constants passed to WebGLRenderingContext.getParameter() to specify what information to return\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_READ_BUFFER = 0x0c02;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_ROW_LENGTH = 0x0cf2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_SKIP_ROWS = 0x0cf3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_SKIP_PIXELS = 0x0cf4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PACK_ROW_LENGTH = 0x0d02;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PACK_SKIP_ROWS = 0x0d03;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PACK_SKIP_PIXELS = 0x0d04;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BINDING_3D = 0x806a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_SKIP_IMAGES = 0x806d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNPACK_IMAGE_HEIGHT = 0x806e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_3D_TEXTURE_SIZE = 0x8073;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_ELEMENTS_VERTICES = 0x80e8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_ELEMENTS_INDICES = 0x80e9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TEXTURE_LOD_BIAS = 0x84fd;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8b49;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8b4a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88ff;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VARYING_COMPONENTS = 0x8b4b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RASTERIZER_DISCARD = 0x8c89;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ARRAY_BINDING = 0x85b5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_ELEMENT_INDEX = 0x8d6b;\r\n// Textures\r\n// Constants passed to WebGLRenderingContext.texParameteri(), WebGLRenderingContext.texParameterf(), WebGLRenderingContext.bindTexture(), WebGLRenderingContext.texImage2D(), and others\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RED = 0x1903;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB8 = 0x8051;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA8 = 0x8058;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB10_A2 = 0x8059;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_3D = 0x806f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_WRAP_R = 0x8072;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MIN_LOD = 0x813a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MAX_LOD = 0x813b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BASE_LEVEL = 0x813c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MAX_LEVEL = 0x813d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_COMPARE_MODE = 0x884c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_COMPARE_FUNC = 0x884d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SRGB = 0x8c40;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SRGB8 = 0x8c41;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SRGB8_ALPHA8 = 0x8c43;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COMPARE_REF_TO_TEXTURE = 0x884e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA32F = 0x8814;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB32F = 0x8815;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA16F = 0x881a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB16F = 0x881b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_2D_ARRAY = 0x8c1a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_BINDING_2D_ARRAY = 0x8c1d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R11F_G11F_B10F = 0x8c3a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB9_E5 = 0x8c3d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA32UI = 0x8d70;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB32UI = 0x8d71;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA16UI = 0x8d76;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB16UI = 0x8d77;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA8UI = 0x8d7c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB8UI = 0x8d7d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA32I = 0x8d82;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB32I = 0x8d83;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA16I = 0x8d88;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB16I = 0x8d89;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA8I = 0x8d8e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB8I = 0x8d8f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RED_INTEGER = 0x8d94;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB_INTEGER = 0x8d98;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA_INTEGER = 0x8d99;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R8 = 0x8229;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG8 = 0x822b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R16F = 0x822d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R32F = 0x822e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG16F = 0x822f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG32F = 0x8230;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R8I = 0x8231;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R8UI = 0x8232;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R16I = 0x8233;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R16UI = 0x8234;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R32I = 0x8235;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R32UI = 0x8236;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG8I = 0x8237;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG8UI = 0x8238;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG16I = 0x8239;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG16UI = 0x823a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG32I = 0x823b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG32UI = 0x823c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_R8_SNORM = 0x8f94;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG8_SNORM = 0x8f95;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB8_SNORM = 0x8f96;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGBA8_SNORM = 0x8f97;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RGB10_A2UI = 0x906f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_IMMUTABLE_FORMAT = 0x912f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_IMMUTABLE_LEVELS = 0x82df;\r\n// Pixel types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_5_9_9_9_REV = 0x8c3e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_24_8 = 0x84fa;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_HALF_FLOAT = 0x140b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG = 0x8227;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RG_INTEGER = 0x8228;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_2_10_10_10_REV = 0x8d9f;\r\n// Queries\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_CURRENT_QUERY = 0x8865;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_RESULT = 0x8866;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_RESULT_AVAILABLE = 0x8867;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ANY_SAMPLES_PASSED = 0x8c2f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8d6a;\r\n// Draw buffers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_DRAW_BUFFERS = 0x8824;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER0 = 0x8825;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER1 = 0x8826;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER2 = 0x8827;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER3 = 0x8828;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER4 = 0x8829;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER5 = 0x882a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER6 = 0x882b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER7 = 0x882c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER8 = 0x882d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER9 = 0x882e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER10 = 0x882f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER11 = 0x8830;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER12 = 0x8831;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER13 = 0x8832;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER14 = 0x8833;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER15 = 0x8834;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COLOR_ATTACHMENTS = 0x8cdf;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT1 = 0x8ce1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT2 = 0x8ce2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT3 = 0x8ce3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT4 = 0x8ce4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT5 = 0x8ce5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT6 = 0x8ce6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT7 = 0x8ce7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT8 = 0x8ce8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT9 = 0x8ce9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT10 = 0x8cea;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT11 = 0x8ceb;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT12 = 0x8cec;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT13 = 0x8ced;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT14 = 0x8cee;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT15 = 0x8cef;\r\n// Samplers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_3D = 0x8b5f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_2D_SHADOW = 0x8b62;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_2D_ARRAY = 0x8dc1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_2D_ARRAY_SHADOW = 0x8dc4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_CUBE_SHADOW = 0x8dc5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_SAMPLER_2D = 0x8dca;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_SAMPLER_3D = 0x8dcb;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_SAMPLER_CUBE = 0x8dcc;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INT_SAMPLER_2D_ARRAY = 0x8dcf;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_SAMPLER_2D = 0x8dd2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_SAMPLER_3D = 0x8dd3;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8dd4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8dd7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_SAMPLES = 0x8d57;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SAMPLER_BINDING = 0x8919;\r\n// Buffers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PIXEL_PACK_BUFFER = 0x88eb;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PIXEL_UNPACK_BUFFER = 0x88ec;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PIXEL_PACK_BUFFER_BINDING = 0x88ed;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88ef;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COPY_READ_BUFFER = 0x8f36;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COPY_WRITE_BUFFER = 0x8f37;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COPY_READ_BUFFER_BINDING = 0x8f36;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COPY_WRITE_BUFFER_BINDING = 0x8f37;\r\n// Data types\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT2X3 = 0x8b65;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT2X4 = 0x8b66;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT3X2 = 0x8b67;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT3X4 = 0x8b68;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT4X2 = 0x8b69;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FLOAT_MAT4X3 = 0x8b6a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_VEC2 = 0x8dc6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_VEC3 = 0x8dc7;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_VEC4 = 0x8dc8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_NORMALIZED = 0x8c17;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SIGNED_NORMALIZED = 0x8f9c;\r\n// Vertex attributes\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88fd;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88fe;\r\n// Transform feedback\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8c7f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8c80;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8c83;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8c84;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8c85;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8c8a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8c8b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INTERLEAVED_ATTRIBS = 0x8c8c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SEPARATE_ATTRIBS = 0x8c8d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER = 0x8c8e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8c8f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK = 0x8e22;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_PAUSED = 0x8e23;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8e24;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TRANSFORM_FEEDBACK_BINDING = 0x8e25;\r\n// Framebuffers and renderbuffers\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_DEFAULT = 0x8218;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH24_STENCIL8 = 0x88f0;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_FRAMEBUFFER_BINDING = 0x8ca6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_READ_FRAMEBUFFER = 0x8ca8;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_FRAMEBUFFER = 0x8ca9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_READ_FRAMEBUFFER_BINDING = 0x8caa;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_RENDERBUFFER_SAMPLES = 0x8cab;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8cd4;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8d56;\r\n// Uniforms\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER = 0x8a11;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER_BINDING = 0x8a28;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER_START = 0x8a29;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER_SIZE = 0x8a2a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8a2b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8a2d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8a2e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8a2f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_UNIFORM_BLOCK_SIZE = 0x8a30;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8a31;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8a33;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8a34;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ACTIVE_UNIFORM_BLOCKS = 0x8a36;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_TYPE = 0x8a37;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_SIZE = 0x8a38;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_INDEX = 0x8a3a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_OFFSET = 0x8a3b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_ARRAY_STRIDE = 0x8a3c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_MATRIX_STRIDE = 0x8a3d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_IS_ROW_MAJOR = 0x8a3e;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_BINDING = 0x8a3f;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_DATA_SIZE = 0x8a40;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8a42;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8a43;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8a44;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\r\n// Sync objects\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_OBJECT_TYPE = 0x9112;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_CONDITION = 0x9113;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_STATUS = 0x9114;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_FLAGS = 0x9115;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_FENCE = 0x9116;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNALED = 0x9118;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SIGNALED = 0x9119;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_ALREADY_SIGNALED = 0x911a;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TIMEOUT_EXPIRED = 0x911b;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_CONDITION_SATISFIED = 0x911c;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_WAIT_FAILED = 0x911d;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001;\r\n// Miscellaneous constants\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_COLOR = 0x1800;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH = 0x1801;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STENCIL = 0x1802;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MIN = 0x8007;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX = 0x8008;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_COMPONENT24 = 0x81a6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STREAM_READ = 0x88e1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STREAM_COPY = 0x88e2;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STATIC_READ = 0x88e5;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_STATIC_COPY = 0x88e6;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DYNAMIC_READ = 0x88e9;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DYNAMIC_COPY = 0x88ea;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH_COMPONENT32F = 0x8cac;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_DEPTH32F_STENCIL8 = 0x8cad;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_INVALID_INDEX = 0xffffffff;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_TIMEOUT_IGNORED = -1;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247;\r\n// Constants defined in WebGL extensions\r\n// ANGLE_instanced_arrays\r\n// The ANGLE_instanced_arrays extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type\r\n/**\r\n * Describes the frequency divisor used for instanced rendering\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = 0x88fe;\r\n// WEBGL_debug_renderer_info\r\n// The WEBGL_debug_renderer_info extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes\r\n/**\r\n * Passed to getParameter to get the vendor string of the graphics driver\r\n * @constant {number}\r\n */\r\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245;\r\n/**\r\n * Passed to getParameter to get the renderer string of the graphics driver\r\n * @constant {number}\r\n */\r\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246;\r\n// EXT_texture_filter_anisotropic\r\n// The EXT_texture_filter_anisotropic extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF)\r\n/**\r\n * Returns the maximum available anisotropy\r\n * @constant {number}\r\n */\r\nconst GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84ff;\r\n/**\r\n * Passed to texParameter to set the desired maximum anisotropy for a texture\r\n * @constant {number}\r\n */\r\nconst GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84fe;\r\n// WEBGL_compressed_texture_s3tc\r\n// The WEBGL_compressed_texture_s3tc extension is part of the WebGL API and exposes four S3TC compressed texture formats\r\n/**\r\n * A DXT1-compressed image in an RGB image format\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83f0;\r\n/**\r\n * A DXT1-compressed image in an RGB image format with a simple on/off alpha value\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83f1;\r\n/**\r\n * A DXT3-compressed image in an RGBA image format. Compared to a 32-bit RGBA texture, it offers 4:1 compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83f2;\r\n/**\r\n * A DXT5-compressed image in an RGBA image format. It also provides a 4:1 compression, but differs to the DXT3 compression in how the alpha compression is done\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83f3;\r\n// WEBGL_compressed_texture_s3tc_srgb\r\n// The WEBGL_compressed_texture_s3tc_srgb extension is part of the WebGL API and exposes four S3TC compressed texture formats for the sRGB colorspace\r\n/**\r\n * A DXT1-compressed image in an sRGB image format\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8c4c;\r\n/**\r\n * A DXT1-compressed image in an sRGB image format with a simple on/off alpha value\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8c4d;\r\n/**\r\n * A DXT3-compressed image in an sRGBA image format\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8c4e;\r\n/**\r\n * A DXT5-compressed image in an sRGBA image format\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8c4f;\r\n// WEBGL_compressed_texture_etc\r\n// The WEBGL_compressed_texture_etc extension is part of the WebGL API and exposes 10 ETC/EAC compressed texture formats\r\n/**\r\n * One-channel (red) unsigned format compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_R11_EAC = 0x9270;\r\n/**\r\n * One-channel (red) signed format compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SIGNED_R11_EAC = 0x9271;\r\n/**\r\n * Two-channel (red and green) unsigned format compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RG11_EAC = 0x9272;\r\n/**\r\n * Two-channel (red and green) signed format compression\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SIGNED_RG11_EAC = 0x9273;\r\n/**\r\n * Compresses RBG8 data with no alpha channel\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB8_ETC2 = 0x9274;\r\n/**\r\n * Compresses RGBA8 data. The RGB part is encoded the same as RGB_ETC2, but the alpha part is encoded separately\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA8_ETC2_EAC = 0x9275;\r\n/**\r\n * Compresses sRBG8 data with no alpha channel\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ETC2 = 0x9276;\r\n/**\r\n * Compresses sRGBA8 data. The sRGB part is encoded the same as SRGB_ETC2, but the alpha part is encoded separately\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9277;\r\n/**\r\n * Similar to RGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9278;\r\n/**\r\n * Similar to SRGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9279;\r\n// WEBGL_compressed_texture_pvrtc\r\n// The WEBGL_compressed_texture_pvrtc extension is part of the WebGL API and exposes four PVRTC compressed texture formats\r\n/**\r\n * RGB compression in 4-bit mode. One block for each 4×4 pixels\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8c00;\r\n/**\r\n * RGBA compression in 4-bit mode. One block for each 4×4 pixels\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8c02;\r\n/**\r\n * RGB compression in 2-bit mode. One block for each 8×4 pixels\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8c01;\r\n/**\r\n * RGBA compression in 2-bit mode. One block for each 8×4 pixels\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8c03;\r\n// WEBGL_compressed_texture_etc1\r\n// The WEBGL_compressed_texture_etc1 extension is part of the WebGL API and exposes the ETC1 compressed texture format\r\n/**\r\n * Compresses 24-bit RGB data with no alpha channel\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_ETC1_WEBGL = 0x8d64;\r\n// WEBGL_compressed_texture_atc\r\n// The WEBGL_compressed_texture_atc extension is part of the WebGL API and exposes 3 ATC compressed texture formats. ATC is a proprietary compression algorithm for compressing textures on handheld devices\r\n/**\r\n * Compresses RGB textures with no alpha channel\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGB_ATC_WEBGL = 0x8c92;\r\n/**\r\n * Compresses RGBA textures using explicit alpha encoding (useful when alpha transitions are sharp)\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8c92;\r\n/**\r\n * Compresses RGBA textures using interpolated alpha encoding (useful when alpha transitions are gradient)\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87ee;\r\n// WEBGL_compressed_texture_astc\r\n// The WEBGL_compressed_texture_astc extension is part of the WebGL API and exposes Adaptive Scalable Texture Compression (ASTC) compressed texture formats to WebGL\r\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\r\n// https://developer.nvidia.com/astc-texture-compression-for-game-assets\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 4x4\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_4X4_KHR = 0x93b0;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 5x4\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_5X4_KHR = 0x93b1;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 5x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_5X5_KHR = 0x93b2;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 6x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_6X5_KHR = 0x93b3;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 6x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_6X6_KHR = 0x93b4;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 8x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_8X5_KHR = 0x93b5;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 8x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_8X6_KHR = 0x93b6;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 8x8\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_8X8_KHR = 0x93b7;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 10x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_10X5_KHR = 0x93b8;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 10x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_10X6_KHR = 0x93b9;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 10x8\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_10X8_KHR = 0x93ba;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 10x10\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_10X10_KHR = 0x93bb;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 12x10\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_12X10_KHR = 0x93bc;\r\n/**\r\n * Compresses RGBA textures using ASTC compression in a blocksize of 12x12\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_RGBA_ASTC_12X12_KHR = 0x93bd;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 4x4\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR = 0x93d0;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 5x4\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR = 0x93d1;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 5x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR = 0x93d2;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 6x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR = 0x93d3;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 6x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR = 0x93d4;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 8x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR = 0x93d5;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 8x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR = 0x93d6;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 8x8\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR = 0x93d7;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 10x5\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR = 0x93d8;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 10x6\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR = 0x93d9;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 10x8\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR = 0x93da;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 10x10\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR = 0x93db;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 12x10\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR = 0x93dc;\r\n/**\r\n * Compresses SRGB8 textures using ASTC compression in a blocksize of 12x12\r\n * @constant {number}\r\n */\r\nconst GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR = 0x93dd;\r\n// WEBGL_depth_texture\r\n// The WEBGL_depth_texture extension is part of the WebGL API and defines 2D depth and depth-stencil textures\r\n/**\r\n * Unsigned integer type for 24-bit depth texture data\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_INT_24_8_WEBGL = 0x84fa;\r\n// OES_texture_half_float\r\n// The OES_texture_half_float extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components\r\n/**\r\n * Half floating-point type (16-bit)\r\n * @constant {number}\r\n */\r\nconst GL_HALF_FLOAT_OES = 0x8d61;\r\n// WEBGL_color_buffer_float\r\n// The WEBGL_color_buffer_float extension is part of the WebGL API and adds the ability to render to 32-bit floating-point color buffers\r\n/**\r\n * RGBA 32-bit floating-point color-renderable format\r\n * @constant {number}\r\n */\r\nconst GL_RGBA32F_EXT = 0x8814;\r\n/**\r\n * RGB 32-bit floating-point color-renderable format\r\n * @constant {number}\r\n */\r\nconst GL_RGB32F_EXT = 0x8815;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 0x8211;\r\n/**\r\n * @constant {number}\r\n */\r\nconst GL_UNSIGNED_NORMALIZED_EXT = 0x8c17;\r\n// EXT_blend_minmax\r\n// The EXT_blend_minmax extension is part of the WebGL API and extends blending capabilities by adding two new blend equations: the minimum or maximum color components of the source and destination colors\r\n/**\r\n * Produces the minimum color components of the source and destination colors\r\n * @constant {number}\r\n */\r\nconst GL_MIN_EXT = 0x8007;\r\n/**\r\n * Produces the maximum color components of the source and destination colors\r\n * @constant {number}\r\n */\r\nconst GL_MAX_EXT = 0x8008;\r\n// EXT_sRGB\r\n// The EXT_sRGB extension is part of the WebGL API and adds sRGB support to textures and framebuffer objects\r\n/**\r\n * Unsized sRGB format that leaves the precision up to the driver\r\n * @constant {number}\r\n */\r\nconst GL_SRGB_EXT = 0x8c40;\r\n/**\r\n * Unsized sRGB format with unsized alpha component\r\n * @constant {number}\r\n */\r\nconst GL_SRGB_ALPHA_EXT = 0x8c42;\r\n/**\r\n * Sized (8-bit) sRGB and alpha formats\r\n * @constant {number}\r\n */\r\nconst GL_SRGB8_ALPHA8_EXT = 0x8c43;\r\n/**\r\n * Returns the framebuffer color encoding\r\n * @constant {number}\r\n */\r\nconst GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = 0x8210;\r\n// OES_standard_derivatives\r\n// The OES_standard_derivatives extension is part of the WebGL API and adds the GLSL derivative functions dFdx, dFdy, and fwidth\r\n/**\r\n * Indicates the accuracy of the derivative calculation for the GLSL built-in functions: dFdx, dFdy, and fwidth\r\n * @constant {number}\r\n */\r\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8b8b;\r\n// WEBGL_draw_buffers\r\n// The WEBGL_draw_buffers extension is part of the WebGL API and enables a fragment shader to write to several textures, which is useful for deferred shading, for example\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT0_WEBGL = 0x8ce0;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT1_WEBGL = 0x8ce1;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT2_WEBGL = 0x8ce2;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT3_WEBGL = 0x8ce3;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT4_WEBGL = 0x8ce4;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT5_WEBGL = 0x8ce5;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT6_WEBGL = 0x8ce6;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT7_WEBGL = 0x8ce7;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT8_WEBGL = 0x8ce8;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT9_WEBGL = 0x8ce9;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT10_WEBGL = 0x8cea;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT11_WEBGL = 0x8ceb;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT12_WEBGL = 0x8cec;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT13_WEBGL = 0x8ced;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT14_WEBGL = 0x8cee;\r\n/**\r\n * Framebuffer color attachment point\r\n * @constant {number}\r\n */\r\nconst GL_COLOR_ATTACHMENT15_WEBGL = 0x8cef;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER0_WEBGL = 0x8825;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER1_WEBGL = 0x8826;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER2_WEBGL = 0x8827;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER3_WEBGL = 0x8828;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER4_WEBGL = 0x8829;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER5_WEBGL = 0x882a;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER6_WEBGL = 0x882b;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER7_WEBGL = 0x882c;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER8_WEBGL = 0x882d;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER9_WEBGL = 0x882e;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER10_WEBGL = 0x882f;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER11_WEBGL = 0x8830;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER12_WEBGL = 0x8831;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER13_WEBGL = 0x8832;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER14_WEBGL = 0x8833;\r\n/**\r\n * Draw buffer\r\n * @constant {number}\r\n */\r\nconst GL_DRAW_BUFFER15_WEBGL = 0x8834;\r\n/**\r\n * Maximum number of framebuffer color attachment points\r\n * @constant {number}\r\n */\r\nconst GL_MAX_COLOR_ATTACHMENTS_WEBGL = 0x8cdf;\r\n/**\r\n * Maximum number of draw buffers\r\n * @constant {number}\r\n */\r\nconst GL_MAX_DRAW_BUFFERS_WEBGL = 0x8824;\r\n// OES_vertex_array_object\r\n// The OES_vertex_array_object extension is part of the WebGL API and provides vertex array objects (VAOs) which encapsulate vertex array states. These objects keep pointers to vertex data and provide names for different sets of vertex data\r\n/**\r\n * The bound vertex array object (VAO)\r\n * @constant {number}\r\n */\r\nconst GL_VERTEX_ARRAY_BINDING_OES = 0x85b5;\r\n// EXT_disjoint_timer_query\r\n// The EXT_disjoint_timer_query extension is part of the WebGL API and provides a way to measure the duration of a set of GL commands, without stalling the rendering pipeline\r\n/**\r\n * The number of bits used to hold the query result for the given target\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_COUNTER_BITS_EXT = 0x8864;\r\n/**\r\n * The currently active query\r\n * @constant {number}\r\n */\r\nconst GL_CURRENT_QUERY_EXT = 0x8865;\r\n/**\r\n * The query result\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_RESULT_EXT = 0x8866;\r\n/**\r\n * A Boolean indicating whether or not a query result is available\r\n * @constant {number}\r\n */\r\nconst GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867;\r\n/**\r\n * Elapsed time (in nanoseconds)\r\n * @constant {number}\r\n */\r\nconst GL_TIME_ELAPSED_EXT = 0x88bf;\r\n/**\r\n * The current time\r\n * @constant {number}\r\n */\r\nconst GL_TIMESTAMP_EXT = 0x8e28;\r\n/**\r\n * A Boolean indicating whether or not the GPU performed any disjoint operation\r\n * @constant {number}\r\n */\r\nconst GL_GPU_DISJOINT_EXT = 0x8fbb;\r\n// Constants defined in WebGL draft extensions\r\n// KHR_parallel_shader_compile\r\n// The KHR_parallel_shader_compile extension is part of the WebGL draft API and provides multithreaded asynchronous shader compilation\r\n/**\r\n * Query to determine if the compilation process is complete\r\n * @constant {number}\r\n */\r\nconst GL_COMPLETION_STATUS_KHR = 0x91b1;\n\nexport { GL_ACTIVE_ATTRIBUTES, GL_ACTIVE_TEXTURE, GL_ACTIVE_UNIFORMS, GL_ACTIVE_UNIFORM_BLOCKS, GL_ALIASED_LINE_WIDTH_RANGE, GL_ALIASED_POINT_SIZE_RANGE, GL_ALPHA, GL_ALPHA_BITS, GL_ALREADY_SIGNALED, GL_ALWAYS, GL_ANY_SAMPLES_PASSED, GL_ANY_SAMPLES_PASSED_CONSERVATIVE, GL_ARRAY_BUFFER, GL_ARRAY_BUFFER_BINDING, GL_ATTACHED_SHADERS, GL_BACK, GL_BLEND, GL_BLEND_COLOR, GL_BLEND_DST_ALPHA, GL_BLEND_DST_RGB, GL_BLEND_EQUATION, GL_BLEND_EQUATION_ALPHA, GL_BLEND_EQUATION_RGB, GL_BLEND_SRC_ALPHA, GL_BLEND_SRC_RGB, GL_BLUE_BITS, GL_BOOL, GL_BOOL_VEC2, GL_BOOL_VEC3, GL_BOOL_VEC4, GL_BROWSER_DEFAULT_WEBGL, GL_BUFFER_SIZE, GL_BUFFER_USAGE, GL_BYTE, GL_CCW, GL_CLAMP_TO_EDGE, GL_COLOR, GL_COLOR_ATTACHMENT0, GL_COLOR_ATTACHMENT0_WEBGL, GL_COLOR_ATTACHMENT1, GL_COLOR_ATTACHMENT10, GL_COLOR_ATTACHMENT10_WEBGL, GL_COLOR_ATTACHMENT11, GL_COLOR_ATTACHMENT11_WEBGL, GL_COLOR_ATTACHMENT12, GL_COLOR_ATTACHMENT12_WEBGL, GL_COLOR_ATTACHMENT13, GL_COLOR_ATTACHMENT13_WEBGL, GL_COLOR_ATTACHMENT14, GL_COLOR_ATTACHMENT14_WEBGL, GL_COLOR_ATTACHMENT15, GL_COLOR_ATTACHMENT15_WEBGL, GL_COLOR_ATTACHMENT1_WEBGL, GL_COLOR_ATTACHMENT2, GL_COLOR_ATTACHMENT2_WEBGL, GL_COLOR_ATTACHMENT3, GL_COLOR_ATTACHMENT3_WEBGL, GL_COLOR_ATTACHMENT4, GL_COLOR_ATTACHMENT4_WEBGL, GL_COLOR_ATTACHMENT5, GL_COLOR_ATTACHMENT5_WEBGL, GL_COLOR_ATTACHMENT6, GL_COLOR_ATTACHMENT6_WEBGL, GL_COLOR_ATTACHMENT7, GL_COLOR_ATTACHMENT7_WEBGL, GL_COLOR_ATTACHMENT8, GL_COLOR_ATTACHMENT8_WEBGL, GL_COLOR_ATTACHMENT9, GL_COLOR_ATTACHMENT9_WEBGL, GL_COLOR_BUFFER_BIT, GL_COLOR_CLEAR_VALUE, GL_COLOR_WRITEMASK, GL_COMPARE_REF_TO_TEXTURE, GL_COMPILE_STATUS, GL_COMPLETION_STATUS_KHR, GL_COMPRESSED_R11_EAC, GL_COMPRESSED_RG11_EAC, GL_COMPRESSED_RGB8_ETC2, GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, GL_COMPRESSED_RGBA8_ETC2_EAC, GL_COMPRESSED_RGBA_ASTC_10X10_KHR, GL_COMPRESSED_RGBA_ASTC_10X5_KHR, GL_COMPRESSED_RGBA_ASTC_10X6_KHR, GL_COMPRESSED_RGBA_ASTC_10X8_KHR, GL_COMPRESSED_RGBA_ASTC_12X10_KHR, GL_COMPRESSED_RGBA_ASTC_12X12_KHR, GL_COMPRESSED_RGBA_ASTC_4X4_KHR, GL_COMPRESSED_RGBA_ASTC_5X4_KHR, GL_COMPRESSED_RGBA_ASTC_5X5_KHR, GL_COMPRESSED_RGBA_ASTC_6X5_KHR, GL_COMPRESSED_RGBA_ASTC_6X6_KHR, GL_COMPRESSED_RGBA_ASTC_8X5_KHR, GL_COMPRESSED_RGBA_ASTC_8X6_KHR, GL_COMPRESSED_RGBA_ASTC_8X8_KHR, GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL, GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL, GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG, GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG, GL_COMPRESSED_RGBA_S3TC_DXT1_EXT, GL_COMPRESSED_RGBA_S3TC_DXT3_EXT, GL_COMPRESSED_RGBA_S3TC_DXT5_EXT, GL_COMPRESSED_RGB_ATC_WEBGL, GL_COMPRESSED_RGB_ETC1_WEBGL, GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG, GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG, GL_COMPRESSED_RGB_S3TC_DXT1_EXT, GL_COMPRESSED_SIGNED_R11_EAC, GL_COMPRESSED_SIGNED_RG11_EAC, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR, GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC, GL_COMPRESSED_SRGB8_ETC2, GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT, GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, GL_COMPRESSED_SRGB_S3TC_DXT1_EXT, GL_COMPRESSED_TEXTURE_FORMATS, GL_CONDITION_SATISFIED, GL_CONSTANT_ALPHA, GL_CONSTANT_COLOR, GL_CONTEXT_LOST_WEBGL, GL_COPY_READ_BUFFER, GL_COPY_READ_BUFFER_BINDING, GL_COPY_WRITE_BUFFER, GL_COPY_WRITE_BUFFER_BINDING, GL_CULL_FACE, GL_CULL_FACE_MODE, GL_CURRENT_PROGRAM, GL_CURRENT_QUERY, GL_CURRENT_QUERY_EXT, GL_CURRENT_VERTEX_ATTRIB, GL_CW, GL_DECR, GL_DECR_WRAP, GL_DELETE_STATUS, GL_DEPTH, GL_DEPTH24_STENCIL8, GL_DEPTH32F_STENCIL8, GL_DEPTH_ATTACHMENT, GL_DEPTH_BITS, GL_DEPTH_BUFFER_BIT, GL_DEPTH_CLEAR_VALUE, GL_DEPTH_COMPONENT, GL_DEPTH_COMPONENT16, GL_DEPTH_COMPONENT24, GL_DEPTH_COMPONENT32F, GL_DEPTH_FUNC, GL_DEPTH_RANGE, GL_DEPTH_STENCIL, GL_DEPTH_STENCIL_ATTACHMENT, GL_DEPTH_TEST, GL_DEPTH_WRITEMASK, GL_DITHER, GL_DONT_CARE, GL_DRAW_BUFFER0, GL_DRAW_BUFFER0_WEBGL, GL_DRAW_BUFFER1, GL_DRAW_BUFFER10, GL_DRAW_BUFFER10_WEBGL, GL_DRAW_BUFFER11, GL_DRAW_BUFFER11_WEBGL, GL_DRAW_BUFFER12, GL_DRAW_BUFFER12_WEBGL, GL_DRAW_BUFFER13, GL_DRAW_BUFFER13_WEBGL, GL_DRAW_BUFFER14, GL_DRAW_BUFFER14_WEBGL, GL_DRAW_BUFFER15, GL_DRAW_BUFFER15_WEBGL, GL_DRAW_BUFFER1_WEBGL, GL_DRAW_BUFFER2, GL_DRAW_BUFFER2_WEBGL, GL_DRAW_BUFFER3, GL_DRAW_BUFFER3_WEBGL, GL_DRAW_BUFFER4, GL_DRAW_BUFFER4_WEBGL, GL_DRAW_BUFFER5, GL_DRAW_BUFFER5_WEBGL, GL_DRAW_BUFFER6, GL_DRAW_BUFFER6_WEBGL, GL_DRAW_BUFFER7, GL_DRAW_BUFFER7_WEBGL, GL_DRAW_BUFFER8, GL_DRAW_BUFFER8_WEBGL, GL_DRAW_BUFFER9, GL_DRAW_BUFFER9_WEBGL, GL_DRAW_FRAMEBUFFER, GL_DRAW_FRAMEBUFFER_BINDING, GL_DST_ALPHA, GL_DST_COLOR, GL_DYNAMIC_COPY, GL_DYNAMIC_DRAW, GL_DYNAMIC_READ, GL_ELEMENT_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER_BINDING, GL_EQUAL, GL_FASTEST, GL_FLOAT, GL_FLOAT_32_UNSIGNED_INT_24_8_REV, GL_FLOAT_MAT2, GL_FLOAT_MAT2X3, GL_FLOAT_MAT2X4, GL_FLOAT_MAT3, GL_FLOAT_MAT3X2, GL_FLOAT_MAT3X4, GL_FLOAT_MAT4, GL_FLOAT_MAT4X2, GL_FLOAT_MAT4X3, GL_FLOAT_VEC2, GL_FLOAT_VEC3, GL_FLOAT_VEC4, GL_FRAGMENT_SHADER, GL_FRAGMENT_SHADER_DERIVATIVE_HINT, GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES, GL_FRAMEBUFFER, GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE, GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE, GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING, GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT, GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE, GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT, GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE, GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE, GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE, GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE, GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER, GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, GL_FRAMEBUFFER_BINDING, GL_FRAMEBUFFER_COMPLETE, GL_FRAMEBUFFER_DEFAULT, GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT, GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS, GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE, GL_FRAMEBUFFER_UNSUPPORTED, GL_FRONT, GL_FRONT_AND_BACK, GL_FRONT_FACE, GL_FUNC_ADD, GL_FUNC_REVERSE_SUBTRACT, GL_FUNC_SUBSTRACT, GL_GENERATE_MIPMAP_HINT, GL_GEQUAL, GL_GPU_DISJOINT_EXT, GL_GREATER, GL_GREEN_BITS, GL_HALF_FLOAT, GL_HALF_FLOAT_OES, GL_HIGH_FLOAT, GL_HIGH_INT, GL_IMPLEMENTATION_COLOR_READ_FORMAT, GL_IMPLEMENTATION_COLOR_READ_TYPE, GL_INCR, GL_INCR_WRAP, GL_INT, GL_INTERLEAVED_ATTRIBS, GL_INT_2_10_10_10_REV, GL_INT_SAMPLER_2D, GL_INT_SAMPLER_2D_ARRAY, GL_INT_SAMPLER_3D, GL_INT_SAMPLER_CUBE, GL_INT_VEC2, GL_INT_VEC3, GL_INT_VEC4, GL_INVALID_ENUM, GL_INVALID_FRAMEBUFFER_OPERATION, GL_INVALID_INDEX, GL_INVALID_OPERATION, GL_INVALID_VALUE, GL_INVERT, GL_KEEP, GL_LEQUAL, GL_LESS, GL_LINEAR, GL_LINEAR_MIPMAP_LINEAR, GL_LINEAR_MIPMAP_NEAREST, GL_LINES, GL_LINE_LOOP, GL_LINE_STRIP, GL_LINE_WIDTH, GL_LINK_STATUS, GL_LOW_FLOAT, GL_LOW_INT, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_MAX, GL_MAX_3D_TEXTURE_SIZE, GL_MAX_ARRAY_TEXTURE_LAYERS, GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL, GL_MAX_COLOR_ATTACHMENTS, GL_MAX_COLOR_ATTACHMENTS_WEBGL, GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS, GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS, GL_MAX_COMBINED_UNIFORM_BLOCKS, GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS, GL_MAX_CUBE_MAP_TEXTURE_SIZE, GL_MAX_DRAW_BUFFERS, GL_MAX_DRAW_BUFFERS_WEBGL, GL_MAX_ELEMENTS_INDICES, GL_MAX_ELEMENTS_VERTICES, GL_MAX_ELEMENT_INDEX, GL_MAX_EXT, GL_MAX_FRAGMENT_INPUT_COMPONENTS, GL_MAX_FRAGMENT_UNIFORM_BLOCKS, GL_MAX_FRAGMENT_UNIFORM_COMPONENTS, GL_MAX_FRAGMENT_UNIFORM_VECTORS, GL_MAX_PROGRAM_TEXEL_OFFSET, GL_MAX_RENDERBUFFER_SIZE, GL_MAX_SAMPLES, GL_MAX_SERVER_WAIT_TIMEOUT, GL_MAX_TEXTURE_IMAGE_UNITS, GL_MAX_TEXTURE_LOD_BIAS, GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT, GL_MAX_TEXTURE_SIZE, GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS, GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS, GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS, GL_MAX_UNIFORM_BLOCK_SIZE, GL_MAX_UNIFORM_BUFFER_BINDINGS, GL_MAX_VARYING_COMPONENTS, GL_MAX_VARYING_VECTORS, GL_MAX_VERTEX_ATTRIBS, GL_MAX_VERTEX_OUTPUT_COMPONENTS, GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS, GL_MAX_VERTEX_UNIFORM_BLOCKS, GL_MAX_VERTEX_UNIFORM_COMPONENTS, GL_MAX_VERTEX_UNIFORM_VECTORS, GL_MAX_VIEWPORT_DIMS, GL_MEDIUM_FLOAT, GL_MEDIUM_INT, GL_MIN, GL_MIN_EXT, GL_MIN_PROGRAM_TEXEL_OFFSET, GL_MIRRORED_REPEAT, GL_NEAREST, GL_NEAREST_MIPMAP_LINEAR, GL_NEAREST_MIPMAP_NEAREST, GL_NEVER, GL_NICEST, GL_NONE, GL_NOTEQUAL, GL_NO_ERROR, GL_OBJECT_TYPE, GL_ONE, GL_ONE_MINUS_CONSTANT_ALPHA, GL_ONE_MINUS_CONSTANT_COLOR, GL_ONE_MINUS_DST_ALPHA, GL_ONE_MINUS_DST_COLOR, GL_ONE_MINUS_SRC_ALPHA, GL_ONE_MINUS_SRC_COLOR, GL_OUT_OF_MEMORY, GL_PACK_ALIGNMENT, GL_PACK_ROW_LENGTH, GL_PACK_SKIP_PIXELS, GL_PACK_SKIP_ROWS, GL_PIXEL_PACK_BUFFER, GL_PIXEL_PACK_BUFFER_BINDING, GL_PIXEL_UNPACK_BUFFER, GL_PIXEL_UNPACK_BUFFER_BINDING, GL_POINTS, GL_POLYGON_OFFSET_FACTOR, GL_POLYGON_OFFSET_FILL, GL_POLYGON_OFFSET_UNITS, GL_QUERY_COUNTER_BITS_EXT, GL_QUERY_RESULT, GL_QUERY_RESULT_AVAILABLE, GL_QUERY_RESULT_AVAILABLE_EXT, GL_QUERY_RESULT_EXT, GL_R11F_G11F_B10F, GL_R16F, GL_R16I, GL_R16UI, GL_R32F, GL_R32I, GL_R32UI, GL_R8, GL_R8I, GL_R8UI, GL_R8_SNORM, GL_RASTERIZER_DISCARD, GL_READ_BUFFER, GL_READ_FRAMEBUFFER, GL_READ_FRAMEBUFFER_BINDING, GL_RED, GL_RED_BITS, GL_RED_INTEGER, GL_RENDERBUFFER, GL_RENDERBUFFER_ALPHA_SIZE, GL_RENDERBUFFER_BINDING, GL_RENDERBUFFER_BLUE_SIZE, GL_RENDERBUFFER_DEPTH_SIZE, GL_RENDERBUFFER_GREEN_SIZE, GL_RENDERBUFFER_HEIGHT, GL_RENDERBUFFER_INTERNAL_FORMAT, GL_RENDERBUFFER_RED_SIZE, GL_RENDERBUFFER_SAMPLES, GL_RENDERBUFFER_STENCIL_SIZE, GL_RENDERBUFFER_WIDTH, GL_RENDERER, GL_REPEAT, GL_REPLACE, GL_RG, GL_RG16F, GL_RG16I, GL_RG16UI, GL_RG32F, GL_RG32I, GL_RG32UI, GL_RG8, GL_RG8I, GL_RG8UI, GL_RG8_SNORM, GL_RGB, GL_RGB10_A2, GL_RGB10_A2UI, GL_RGB16F, GL_RGB16I, GL_RGB16UI, GL_RGB32F, GL_RGB32F_EXT, GL_RGB32I, GL_RGB32UI, GL_RGB565, GL_RGB5_A1, GL_RGB8, GL_RGB8I, GL_RGB8UI, GL_RGB8_SNORM, GL_RGB9_E5, GL_RGBA, GL_RGBA16F, GL_RGBA16I, GL_RGBA16UI, GL_RGBA32F, GL_RGBA32F_EXT, GL_RGBA32I, GL_RGBA32UI, GL_RGBA4, GL_RGBA8, GL_RGBA8I, GL_RGBA8UI, GL_RGBA8_SNORM, GL_RGBA_INTEGER, GL_RGB_INTEGER, GL_RG_INTEGER, GL_SAMPLER_2D, GL_SAMPLER_2D_ARRAY, GL_SAMPLER_2D_ARRAY_SHADOW, GL_SAMPLER_2D_SHADOW, GL_SAMPLER_3D, GL_SAMPLER_BINDING, GL_SAMPLER_CUBE, GL_SAMPLER_CUBE_SHADOW, GL_SAMPLES, GL_SAMPLE_ALPHA_TO_COVERAGE, GL_SAMPLE_BUFFERS, GL_SAMPLE_COVERAGE, GL_SAMPLE_COVERAGE_INVERT, GL_SAMPLE_COVERAGE_VALUE, GL_SCISSOR_BOX, GL_SCISSOR_TEST, GL_SEPARATE_ATTRIBS, GL_SHADER_TYPE, GL_SHADING_LANGUAGE_VERSION, GL_SHORT, GL_SIGNALED, GL_SIGNED_NORMALIZED, GL_SRC_ALPHA, GL_SRC_ALPHA_SATURATE, GL_SRC_COLOR, GL_SRGB, GL_SRGB8, GL_SRGB8_ALPHA8, GL_SRGB8_ALPHA8_EXT, GL_SRGB_ALPHA_EXT, GL_SRGB_EXT, GL_STATIC_COPY, GL_STATIC_DRAW, GL_STATIC_READ, GL_STENCIL, GL_STENCIL_ATTACHMENT, GL_STENCIL_BACK_FAIL, GL_STENCIL_BACK_FUNC, GL_STENCIL_BACK_PASS_DEPTH_FAIL, GL_STENCIL_BACK_PASS_DEPTH_PASS, GL_STENCIL_BACK_REF, GL_STENCIL_BACK_VALUE_MASK, GL_STENCIL_BACK_WRITEMASK, GL_STENCIL_BITS, GL_STENCIL_BUFFER_BIT, GL_STENCIL_CLEAR_VALUE, GL_STENCIL_FAIL, GL_STENCIL_FUNC, GL_STENCIL_INDEX, GL_STENCIL_INDEX8, GL_STENCIL_PASS_DEPTH_FAIL, GL_STENCIL_PASS_DEPTH_PASS, GL_STENCIL_REF, GL_STENCIL_TEST, GL_STENCIL_VALUE_MASK, GL_STENCIL_WRITEMASK, GL_STREAM_COPY, GL_STREAM_DRAW, GL_STREAM_READ, GL_SUBPIXEL_BITS, GL_SYNC_CONDITION, GL_SYNC_FENCE, GL_SYNC_FLAGS, GL_SYNC_FLUSH_COMMANDS_BIT, GL_SYNC_GPU_COMMANDS_COMPLETE, GL_SYNC_STATUS, GL_TEXTURE, GL_TEXTURE0, GL_TEXTURE1, GL_TEXTURE10, GL_TEXTURE11, GL_TEXTURE12, GL_TEXTURE13, GL_TEXTURE14, GL_TEXTURE15, GL_TEXTURE16, GL_TEXTURE17, GL_TEXTURE18, GL_TEXTURE19, GL_TEXTURE2, GL_TEXTURE20, GL_TEXTURE21, GL_TEXTURE22, GL_TEXTURE23, GL_TEXTURE24, GL_TEXTURE25, GL_TEXTURE26, GL_TEXTURE27, GL_TEXTURE28, GL_TEXTURE29, GL_TEXTURE3, GL_TEXTURE30, GL_TEXTURE31, GL_TEXTURE4, GL_TEXTURE5, GL_TEXTURE6, GL_TEXTURE7, GL_TEXTURE8, GL_TEXTURE9, GL_TEXTURE_2D, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_3D, GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_BINDING_2D, GL_TEXTURE_BINDING_2D_ARRAY, GL_TEXTURE_BINDING_3D, GL_TEXTURE_BINDING_CUBE_MAP, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_CUBE_MAP, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_IMMUTABLE_FORMAT, GL_TEXTURE_IMMUTABLE_LEVELS, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MAX_ANISOTROPY_EXT, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_WRAP_R, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, GL_TIMEOUT_EXPIRED, GL_TIMEOUT_IGNORED, GL_TIMESTAMP_EXT, GL_TIME_ELAPSED_EXT, GL_TRANSFORM_FEEDBACK, GL_TRANSFORM_FEEDBACK_ACTIVE, GL_TRANSFORM_FEEDBACK_BINDING, GL_TRANSFORM_FEEDBACK_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, GL_TRANSFORM_FEEDBACK_BUFFER_MODE, GL_TRANSFORM_FEEDBACK_BUFFER_SIZE, GL_TRANSFORM_FEEDBACK_BUFFER_START, GL_TRANSFORM_FEEDBACK_PAUSED, GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, GL_TRANSFORM_FEEDBACK_VARYINGS, GL_TRIANGLES, GL_TRIANGLE_FAN, GL_TRIANGLE_STRIP, GL_UNIFORM_ARRAY_STRIDE, GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS, GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, GL_UNIFORM_BLOCK_BINDING, GL_UNIFORM_BLOCK_DATA_SIZE, GL_UNIFORM_BLOCK_INDEX, GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER, GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER, GL_UNIFORM_BUFFER, GL_UNIFORM_BUFFER_BINDING, GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT, GL_UNIFORM_BUFFER_SIZE, GL_UNIFORM_BUFFER_START, GL_UNIFORM_IS_ROW_MAJOR, GL_UNIFORM_MATRIX_STRIDE, GL_UNIFORM_OFFSET, GL_UNIFORM_SIZE, GL_UNIFORM_TYPE, GL_UNMASKED_RENDERER_WEBGL, GL_UNMASKED_VENDOR_WEBGL, GL_UNPACK_ALIGNMENT, GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, GL_UNPACK_FLIP_Y_WEBGL, GL_UNPACK_IMAGE_HEIGHT, GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, GL_UNPACK_ROW_LENGTH, GL_UNPACK_SKIP_IMAGES, GL_UNPACK_SKIP_PIXELS, GL_UNPACK_SKIP_ROWS, GL_UNSIGNALED, GL_UNSIGNED_BYTE, GL_UNSIGNED_INT, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_24_8_WEBGL, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_5_9_9_9_REV, GL_UNSIGNED_INT_SAMPLER_2D, GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, GL_UNSIGNED_INT_SAMPLER_3D, GL_UNSIGNED_INT_SAMPLER_CUBE, GL_UNSIGNED_INT_VEC2, GL_UNSIGNED_INT_VEC3, GL_UNSIGNED_INT_VEC4, GL_UNSIGNED_NORMALIZED, GL_UNSIGNED_NORMALIZED_EXT, GL_UNSIGNED_SHORT, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_5_6_5, GL_VALIDATE_STATUS, GL_VENDOR, GL_VERSION, GL_VERTEX_ARRAY_BINDING, GL_VERTEX_ARRAY_BINDING_OES, GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_POINTER, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_SHADER, GL_VIEWPORT, GL_WAIT_FAILED, GL_ZERO };\n", "export const isSSR = typeof window === 'undefined';\n", "import { isSSR } from './ssr';\n\nexport const deviceInfo = (() => {\n  if (isSSR) {\n    return;\n  }\n\n  const { userAgent, platform, maxTouchPoints } = window.navigator;\n\n  const isIOS = /(iphone|ipod|ipad)/i.test(userAgent);\n\n  // Workaround for ipadOS, force detection as tablet\n  // SEE: https://github.com/lancedikson/bowser/issues/329\n  // SEE: https://stackoverflow.com/questions/58019463/how-to-detect-device-name-in-safari-on-ios-13-while-it-doesnt-show-the-correct\n  const isIpad =\n    platform === 'iPad' ||\n    // @ts-expect-error window.MSStream is non standard\n    (platform === 'MacIntel' && maxTouchPoints > 0 && !window.MSStream);\n\n  const isAndroid = /android/i.test(userAgent);\n\n  return {\n    isIpad,\n    isMobile: isAndroid || isIOS || isIpad,\n    isSafari12: /Version\\/12.+Safari/.test(userAgent),\n    isFirefox: /Firefox/.test(userAgent)\n  };\n})();\n", "// Vendor\nimport {\n  GL_ARRAY_BUFFER,\n  GL_COLOR_BUFFER_BIT,\n  GL_FLOAT,\n  GL_FRAGMENT_SHADER,\n  GL_RGBA,\n  GL_STATIC_DRAW,\n  GL_TRIANGLES,\n  GL_UNSIGNED_BYTE,\n  GL_VERTEX_SHADER,\n} from 'webgl-constants';\n\n// Internal\nimport { deviceInfo } from './deviceInfo';\n\nconst debug = false ? console.warn : undefined;\n\nexport function deobfuscateAppleGPU(\n  gl: WebGLRenderingContext,\n  renderer: string,\n  isMobileTier: boolean\n) {\n  if (!isMobileTier) {\n    debug?.('Safari 14+ obfuscates its GPU type and version, using fallback');\n    return [renderer];\n  }\n  const pixelId = calculateMagicPixelId(gl);\n  const codeA = '801621810' as const;\n  const codeB = '8016218135' as const;\n  const codeC = '80162181161' as const;\n  const codeFB = '80162181255';\n\n  // All chipsets that support at least iOS 12:\n  const possibleChipsets: [\n    string,\n    typeof codeA | typeof codeB | typeof codeC,\n    number,\n  ][] = deviceInfo?.isIpad\n    ? [\n        // ['a4', 5], // ipad 1st gen\n        // ['a5', 9], // ipad 2 / ipad mini 1st gen\n        // ['a5x', 9], // ipad 3rd gen\n        // ['a6x', 10], // ipad 4th gen\n        ['a7', codeC, 12], // ipad air / ipad mini 2 / ipad mini 3\n        ['a8', codeB, 15], // pad mini 4\n        ['a8x', codeB, 15], // ipad air 2\n        ['a9', codeB, 15], // ipad 5th gen\n        ['a9x', codeB, 15], // pro 9.7 2016 / pro 12.9 2015\n        ['a10', codeB, 15], // ipad 7th gen / ipad 6th gen\n        ['a10x', codeB, 15], // pro 10.5 2017 / pro 12.9 2nd gen, 2017\n        ['a12', codeA, 15], // ipad 8th gen / ipad air 3rd gen / ipad mini 5th gen\n        ['a12x', codeA, 15], // pro 11 1st gen / pro 12.9 3rd gen\n        ['a12z', codeA, 15], // pro 12.9 4th gen / pro 11 2nd gen\n        ['a14', codeA, 15], // ipad air 4th gen\n        ['m1', codeA, 15], // ipad pro 11 2nd gen / 12.9 5th gen\n      ]\n    : [\n        // ['a4', 7], // 4 / ipod touch 4th gen\n        // ['a5', 9], // 4S / ipod touch 5th gen\n        // ['a6', 10], // 5 / 5C\n        ['a7', codeC, 12], // 5S\n        ['a8', codeB, 12], // 6 / 6 plus / ipod touch 6th gen\n        ['a9', codeB, 15], // 6s / 6s plus/ se 1st gen\n        ['a10', codeB, 15], // 7 / 7 plus / iPod Touch 7th gen\n        ['a11', codeA, 15], // 8 / 8 plus / X\n        ['a12', codeA, 15], // XS / XS Max / XR\n        ['a13', codeA, 15], // 11 / 11 pro / 11 pro max / se 2nd gen\n        ['a14', codeA, 15], // 12 / 12 mini / 12 pro / 12 pro max\n        ['a15', codeA, 15], // 13 / 13 mini / 13 pro / 13 pro max / se 3rd gen / 14 / 14 plus\n        ['a16', codeA, 15], // 14 pro / 14 pro max / 15 / 15 plus\n        ['a17', codeA, 15], // 15 pro / 15 pro max\n      ];\n  let chipsets: typeof possibleChipsets;\n\n  // In iOS 14.x Apple started normalizing the outcome of this hack,\n  // we use this fact to limit the list to devices that support ios 14+\n  if (pixelId === codeFB) {\n    chipsets = possibleChipsets.filter(([, , iosVersion]) => iosVersion >= 14);\n  } else {\n    chipsets = possibleChipsets.filter(([, id]) => id === pixelId);\n    // If nothing was found to match the pixel id, include all chipsets:\n    if (!chipsets.length) {\n      chipsets = possibleChipsets;\n    }\n  }\n  const renderers = chipsets.map(([gpu]) => `apple ${gpu} gpu`);\n  debug?.(\n    `iOS 12.2+ obfuscates its GPU type and version, using closest matches: ${JSON.stringify(\n      renderers\n    )}`\n  );\n  return renderers;\n}\n\n// Apple GPU (iOS 12.2+, Safari 14+)\n// SEE: https://github.com/pmndrs/detect-gpu/issues/7\n// CREDIT: https://medium.com/@Samsy/detecting-apple-a10-iphone-7-to-a11-iphone-8-and-b019b8f0eb87\n// CREDIT: https://github.com/Samsy/appleGPUDetection/blob/master/index.js\nfunction calculateMagicPixelId(gl: WebGLRenderingContext) {\n  const vertexShaderSource = /* glsl */ `\n    precision highp float;\n    attribute vec3 aPosition;\n    varying float vvv;\n    void main() {\n      vvv = 0.31622776601683794;\n      gl_Position = vec4(aPosition, 1.0);\n    }\n  `;\n\n  const fragmentShaderSource = /* glsl */ `\n    precision highp float;\n    varying float vvv;\n    void main() {\n      vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * vvv;\n      enc = fract(enc);\n      enc -= enc.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n      gl_FragColor = enc;\n    }\n  `;\n\n  const vertexShader = gl.createShader(GL_VERTEX_SHADER);\n  const fragmentShader = gl.createShader(GL_FRAGMENT_SHADER);\n  const program = gl.createProgram();\n  if (!(fragmentShader && vertexShader && program)) return;\n  gl.shaderSource(vertexShader, vertexShaderSource);\n  gl.shaderSource(fragmentShader, fragmentShaderSource);\n  gl.compileShader(vertexShader);\n  gl.compileShader(fragmentShader);\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n\n  gl.detachShader(program, vertexShader);\n  gl.detachShader(program, fragmentShader);\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n\n  gl.useProgram(program);\n\n  const vertexArray = gl.createBuffer();\n  gl.bindBuffer(GL_ARRAY_BUFFER, vertexArray);\n  gl.bufferData(\n    GL_ARRAY_BUFFER,\n    new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]),\n    GL_STATIC_DRAW\n  );\n\n  const aPosition = gl.getAttribLocation(program, 'aPosition');\n  gl.vertexAttribPointer(aPosition, 3, GL_FLOAT, false, 0, 0);\n  gl.enableVertexAttribArray(aPosition);\n\n  gl.clearColor(1, 1, 1, 1);\n  gl.clear(GL_COLOR_BUFFER_BIT);\n  gl.viewport(0, 0, 1, 1);\n  gl.drawArrays(GL_TRIANGLES, 0, 3);\n\n  const pixels = new Uint8Array(4);\n  gl.readPixels(0, 0, 1, 1, GL_RGBA, GL_UNSIGNED_BYTE, pixels);\n\n  gl.deleteProgram(program);\n  gl.deleteBuffer(vertexArray);\n  return pixels.join('');\n}\n", "export class OutdatedBenchmarksError extends Error {\n  constructor(message?: string) {\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n", "// Caches\nconst array: number[] = [];\nconst charCodeCache: number[] = [];\n\n// Compute the difference (distance) between two strings\n// SEE: https://en.wikipedia.org/wiki/Levenshtein_distance\n// CREDIT: https://github.com/sindresorhus/leven (version 3.1.0)\nexport function getLevenshteinDistance(left: string, right: string): number {\n  if (left === right) {\n    return 0;\n  }\n\n  const swap = left;\n\n  // Swapping the strings if `a` is longer than `b` so we know which one is the\n  // shortest & which one is the longest\n  if (left.length > right.length) {\n    left = right;\n    right = swap;\n  }\n\n  let leftLength = left.length;\n  let rightLength = right.length;\n\n  // Performing suffix trimming:\n  // We can linearly drop suffix common to both strings since they\n  // don't increase distance at all\n  // Note: `~-` is the bitwise way to perform a `- 1` operation\n  while (leftLength > 0 &&\n    left.charCodeAt(~-leftLength) === right.charCodeAt(~-rightLength)) {\n    leftLength--;\n    rightLength--;\n  }\n\n  // Performing prefix trimming\n  // We can linearly drop prefix common to both strings since they\n  // don't increase distance at all\n  let start = 0;\n\n  while (start < leftLength &&\n    left.charCodeAt(start) === right.charCodeAt(start)) {\n    start++;\n  }\n\n  leftLength -= start;\n  rightLength -= start;\n\n  if (leftLength === 0) {\n    return rightLength;\n  }\n\n  let bCharCode;\n  let result = 0;\n  let temp;\n  let temp2;\n  let i = 0;\n  let j = 0;\n\n  while (i < leftLength) {\n    charCodeCache[i] = left.charCodeAt(start + i);\n    array[i] = ++i;\n  }\n\n  while (j < rightLength) {\n    bCharCode = right.charCodeAt(start + j);\n    temp = j++;\n    result = j;\n\n    for (i = 0; i < leftLength; i++) {\n      temp2 = bCharCode === charCodeCache[i] ? temp : temp + 1;\n      temp = array[i];\n      // eslint-disable-next-line no-multi-assign\n      result = array[i] =\n        temp > result\n          ? temp2 > result\n            ? result + 1\n            : temp2\n          : temp2 > temp\n            ? temp + 1\n            : temp2;\n    }\n  }\n\n  return result;\n}\n\nexport function tokenizeForLevenshteinDistance(str: string): string {\n  return str\n    .split(/[.,()\\[\\]/\\s]/g)\n    .sort()\n    // Remove duplicates\n    .filter((item, pos, arr) => pos === 0 || item !== arr[pos - 1])\n    .join(' ');\n}\n", "export function isDefined<T>(val: T | undefined | null | void): val is T {\n  return val !== undefined && val !== null;\n}\n", "// Data\nimport { version } from '../package.json';\n\n// Internal\nimport { BLOCKLISTED_GPUS } from './internal/blocklistedGPUS';\nimport { cleanRenderer } from './internal/cleanRenderer';\nimport { deobfuscateRenderer } from './internal/deobfuscateRenderer';\nimport { deviceInfo } from './internal/deviceInfo';\nimport { OutdatedBenchmarksError } from './internal/error';\nimport { getGPUVersion } from './internal/getGPUVersion';\nimport {\n  getLevenshteinDistance,\n  tokenizeForLevenshteinDistance,\n} from './internal/getLevenshteinDistance';\nimport { getWebGLContext } from './internal/getWebGLContext';\nimport { isSSR } from './internal/ssr';\nimport { isDefined } from './internal/util';\n\n// Types\nexport interface GetGPUTier {\n  /**\n   * URL of directory where benchmark data is hosted.\n   *\n   * @default https://unpkg.com/detect-gpu@{version}/dist/benchmarks\n   */\n  benchmarksURL?: string;\n  /**\n   * Optionally pass in a WebGL context to avoid creating a temporary one\n   * internally.\n   */\n  glContext?: WebGLRenderingContext | WebGL2RenderingContext;\n  /**\n   * Whether to fail if the system performance is low or if no hardware GPU is\n   * available.\n   *\n   * @default false\n   */\n  failIfMajorPerformanceCaveat?: boolean;\n  /**\n   * Framerate per tier for mobile devices.\n   *\n   * @defaultValue [0, 15, 30, 60]\n   */\n  mobileTiers?: number[];\n  /**\n   * Framerate per tier for desktop devices.\n   *\n   * @defaultValue [0, 15, 30, 60]\n   */\n  desktopTiers?: number[];\n  /**\n   * Optionally override specific parameters. Used mainly for testing.\n   */\n  override?: {\n    renderer?: string;\n    /**\n     * Override whether device is an iPad.\n     */\n    isIpad?: boolean;\n    /**\n     * Override whether device is a mobile device.\n     */\n    isMobile?: boolean;\n    /**\n     * Override device screen size.\n     */\n    screenSize?: { width: number; height: number };\n    /**\n     * Override how benchmark data is loaded\n     */\n    loadBenchmarks?: (file: string) => Promise<ModelEntry[]>;\n  };\n}\n\nexport type TierType =\n  | 'SSR'\n  | 'WEBGL_UNSUPPORTED'\n  | 'BLOCKLISTED'\n  | 'FALLBACK'\n  | 'BENCHMARK';\n\nexport type TierResult = {\n  tier: number;\n  type: TierType;\n  isMobile?: boolean;\n  fps?: number;\n  gpu?: string;\n  device?: string;\n};\n\nexport type ModelEntryScreen = [number, number, number, string | undefined];\n\nexport type ModelEntry = [string, string, string, 0 | 1, ModelEntryScreen[]];\n\nconst debug = false ? console.log : undefined;\n\nexport const getGPUTier = async ({\n  mobileTiers = [0, 15, 30, 60],\n  desktopTiers = [0, 15, 30, 60],\n  override = {},\n  glContext,\n  failIfMajorPerformanceCaveat = false,\n  benchmarksURL = `https://unpkg.com/detect-gpu@${version}/dist/benchmarks`,\n}: GetGPUTier = {}): Promise<TierResult> => {\n  const queryCache: { [k: string]: Promise<ModelEntry[]> } = {};\n  if (isSSR) {\n    return {\n      tier: 0,\n      type: 'SSR',\n    };\n  }\n\n  const {\n    isIpad = !!deviceInfo?.isIpad,\n    isMobile = !!deviceInfo?.isMobile,\n    screenSize = window.screen,\n    loadBenchmarks = async (file: string) => {\n      const data: ModelEntry[] = await fetch(`${benchmarksURL}/${file}`).then(\n        (response) => response.json()\n      );\n\n      // Remove version tag and check version is supported\n      const version = parseInt(\n        (data.shift() as unknown as string).split('.')[0],\n        10\n      );\n      if (version < 4) {\n        throw new OutdatedBenchmarksError(\n          'Detect GPU benchmark data is out of date. Please update to version 4x'\n        );\n      }\n      return data;\n    },\n  } = override;\n  let { renderer } = override;\n  const getGpuType = (renderer: string) => {\n    const types = isMobile\n      ? ([\n          'adreno',\n          'apple',\n          'mali-t',\n          'mali',\n          'nvidia',\n          'powervr',\n          'samsung',\n        ] as const)\n      : ([\n          'intel',\n          'apple',\n          'amd',\n          'radeon',\n          'nvidia',\n          'geforce',\n          'adreno',\n        ] as const);\n    for (const type of types) {\n      if (renderer.includes(type)) {\n        return type;\n      }\n    }\n  };\n\n  async function queryBenchmarks(renderer: string) {\n    const type = getGpuType(renderer);\n    if (!type) {\n      return;\n    }\n\n    debug?.('queryBenchmarks - found type:', { type });\n\n    const benchmarkFile = `${isMobile ? 'm' : 'd'}-${type}${\n      isIpad ? '-ipad' : ''\n    }.json`;\n\n    const benchmark = (queryCache[benchmarkFile] =\n      queryCache[benchmarkFile] ?? loadBenchmarks(benchmarkFile));\n    let benchmarks: ModelEntry[];\n    try {\n      benchmarks = await benchmark;\n    } catch (error) {\n      if (error instanceof OutdatedBenchmarksError) {\n        throw error;\n      }\n      debug?.(\"queryBenchmarks - couldn't load benchmark:\", { error });\n      return;\n    }\n\n    const version = getGPUVersion(renderer);\n\n    let matched = benchmarks.filter(\n      ([, modelVersion]) => modelVersion === version\n    );\n\n    debug?.(\n      `found ${matched.length} matching entries using version '${version}':`,\n\n      matched.map(([model]) => model)\n    );\n\n    // If nothing matched, try comparing model names:\n    if (!matched.length) {\n      matched = benchmarks.filter(([model]) => model.includes(renderer));\n\n      debug?.(\n        `found ${matched.length} matching entries comparing model names`,\n        {\n          matched,\n        }\n      );\n    }\n\n    const matchCount = matched.length;\n\n    if (matchCount === 0) {\n      return;\n    }\n\n    const tokenizedRenderer = tokenizeForLevenshteinDistance(renderer);\n    // eslint-disable-next-line prefer-const\n    let [gpu, , , , fpsesByPixelCount] =\n      matchCount > 1\n        ? matched\n            .map(\n              (match) =>\n                [\n                  match,\n                  getLevenshteinDistance(tokenizedRenderer, match[2]),\n                ] as const\n            )\n            .sort(([, a], [, b]) => a - b)[0][0]\n        : matched[0];\n\n    debug?.(\n      `${renderer} matched closest to ${gpu} with the following screen sizes`,\n      JSON.stringify(fpsesByPixelCount)\n    );\n\n    let minDistance = Number.MAX_VALUE;\n    let closest: ModelEntryScreen | undefined;\n    const { devicePixelRatio } = window;\n    const pixelCount =\n      screenSize.width *\n      devicePixelRatio *\n      screenSize.height *\n      devicePixelRatio;\n\n    for (const match of fpsesByPixelCount) {\n      const [width, height] = match;\n      const entryPixelCount = width * height;\n      const distance = Math.abs(pixelCount - entryPixelCount);\n\n      if (distance < minDistance) {\n        minDistance = distance;\n        closest = match;\n      }\n    }\n\n    if (!closest) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const [, , fps, device] = closest!;\n\n    return [minDistance, fps, gpu, device] as const;\n  }\n\n  const toResult = (\n    tier: number,\n    type: TierType,\n    gpu?: string,\n    fps?: number,\n    device?: string\n  ) => ({\n    device,\n    fps,\n    gpu,\n    isMobile,\n    tier,\n    type,\n  });\n\n  let renderers: string[];\n  let rawRenderer = '';\n\n  if (!renderer) {\n    const gl =\n      glContext ||\n      getWebGLContext(deviceInfo?.isSafari12, failIfMajorPerformanceCaveat);\n\n    if (!gl) {\n      return toResult(0, 'WEBGL_UNSUPPORTED');\n    }\n\n    const debugRendererInfo = deviceInfo?.isFirefox\n      ? null\n      : gl.getExtension('WEBGL_debug_renderer_info');\n\n    renderer = debugRendererInfo\n      ? gl.getParameter(debugRendererInfo.UNMASKED_RENDERER_WEBGL)\n      : gl.getParameter(gl.RENDERER);\n\n    if (!renderer) {\n      return toResult(1, 'FALLBACK');\n    }\n\n    rawRenderer = renderer;\n    renderer = cleanRenderer(renderer);\n    renderers = deobfuscateRenderer(gl, renderer, isMobile);\n  } else {\n    renderer = cleanRenderer(renderer);\n    renderers = [renderer];\n  }\n\n  const results = (await Promise.all(renderers.map(queryBenchmarks)))\n    .filter(isDefined)\n    .sort(([aDis = Number.MAX_VALUE, aFps], [bDis = Number.MAX_VALUE, bFps]) =>\n      aDis === bDis ? aFps - bFps : aDis - bDis\n    );\n  if (!results.length) {\n    const blocklistedModel: string | undefined = BLOCKLISTED_GPUS.find(\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      (blocklistedModel) => renderer!.includes(blocklistedModel)\n    );\n    return blocklistedModel\n      ? toResult(0, 'BLOCKLISTED', blocklistedModel)\n      : toResult(1, 'FALLBACK', `${renderer} (${rawRenderer})`);\n  }\n\n  const [, fps, model, device] = results[0];\n\n  if (fps === -1) {\n    return toResult(0, 'BLOCKLISTED', model, fps, device);\n  }\n\n  const tiers = isMobile ? mobileTiers : desktopTiers;\n  let tier = 0;\n\n  for (let i = 0; i < tiers.length; i++) {\n    if (fps >= tiers[i]) {\n      tier = i;\n    }\n  }\n\n  return toResult(tier, 'BENCHMARK', model, fps, device);\n};\n", "export function getWebGLContext(isSafari12?: boolean,\n  failIfMajorPerformanceCaveat = false) {\n  const attributes: {\n    alpha: boolean;\n    antialias: boolean;\n    depth: boolean;\n    failIfMajorPerformanceCaveat: boolean;\n    powerPreference?: string;\n    stencil: boolean;\n  } = {\n    alpha: false,\n    antialias: false,\n    depth: false,\n    failIfMajorPerformanceCaveat,\n    powerPreference: 'high-performance',\n    stencil: false,\n  };\n\n  // Workaround for Safari 12, which otherwise crashes with powerPreference set\n  // to high-performance: https://github.com/pmndrs/detect-gpu/issues/5\n  if (isSafari12) {\n    delete attributes.powerPreference;\n  }\n\n  const canvas = window.document.createElement('canvas');\n\n  const gl = (canvas.getContext('webgl', attributes) ||\n    canvas.getContext(\n      'experimental-webgl',\n      attributes\n    )) as WebGLRenderingContext | null;\n\n  return gl ?? undefined;\n}\n", "// Internal\nimport { deobfuscateAppleGPU } from './deobfuscateAppleGPU';\n\nexport function deobfuscateRenderer(\n  gl: WebGLRenderingContext | WebGL2RenderingContext,\n  renderer: string,\n  isMobileTier: boolean\n) {\n  return renderer === 'apple gpu'\n    ? deobfuscateAppleGPU(gl, renderer, isMobileTier)\n    : [renderer];\n}\n", "export function getGPUVersion(model: string) {\n  model = model.replace(/\\([^)]+\\)/, '');\n\n  const matches =\n    // First set of digits\n    model.match(/\\d+/) ||\n    // If the renderer did not contain any numbers, match letters\n    model.match(/(\\W|^)([A-Za-z]{1,3})(\\W|$)/g);\n\n  // Remove any non-word characters and also remove 'amd' which could be matched\n  // in the clause above\n  return matches?.join('').replace(/\\W|amd/g, '') ?? '';\n}\n", "import { getGPUTier } from 'detect-gpu';\nimport { suspend } from 'suspend-react';\n\nconst useDetectGPU = props => suspend(() => getGPUTier(props), ['useDetectGPU']);\n\nexport { useDetectGPU };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction useHelper(object3D, helperConstructor, ...args) {\n  const helper = React.useRef();\n  const scene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    let currentHelper = undefined;\n    if (object3D && object3D != null && object3D.current && helperConstructor) {\n      helper.current = currentHelper = new helperConstructor(object3D.current, ...args);\n    }\n    if (currentHelper) {\n      // Prevent the helpers from blocking rays\n      currentHelper.traverse(child => child.raycast = () => null);\n      scene.add(currentHelper);\n      return () => {\n        helper.current = undefined;\n        scene.remove(currentHelper);\n        currentHelper.dispose == null || currentHelper.dispose();\n      };\n    }\n  }, [scene, helperConstructor, object3D, ...args]);\n  useFrame(() => {\n    var _helper$current;\n    return void ((_helper$current = helper.current) == null || _helper$current.update == null ? void 0 : _helper$current.update());\n  });\n  return helper;\n}\n\nexport { useHelper };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { Mesh } from 'three';\nimport { SAH, acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from 'three-mesh-bvh';\n\nconst isMesh = child => child.isMesh;\n\n/**\n * @deprecated Use the Bvh component instead\n */\nfunction useBVH(mesh, options) {\n  options = {\n    strategy: SAH,\n    verbose: false,\n    setBoundingBox: true,\n    maxDepth: 40,\n    maxLeafTris: 10,\n    indirect: false,\n    ...options\n  };\n  React.useEffect(() => {\n    if (mesh.current) {\n      mesh.current.raycast = acceleratedRaycast;\n      const geometry = mesh.current.geometry;\n      geometry.computeBoundsTree = computeBoundsTree;\n      geometry.disposeBoundsTree = disposeBoundsTree;\n      geometry.computeBoundsTree(options);\n      return () => {\n        if (geometry.boundsTree) {\n          geometry.disposeBoundsTree();\n        }\n      };\n    }\n  }, [mesh, JSON.stringify(options)]);\n}\nconst Bvh = /* @__PURE__ */React.forwardRef(({\n  enabled = true,\n  firstHitOnly = false,\n  children,\n  strategy = SAH,\n  verbose = false,\n  setBoundingBox = true,\n  maxDepth = 40,\n  maxLeafTris = 10,\n  indirect = false,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  const raycaster = useThree(state => state.raycaster);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useEffect(() => {\n    if (enabled) {\n      const options = {\n        strategy,\n        verbose,\n        setBoundingBox,\n        maxDepth,\n        maxLeafTris,\n        indirect\n      };\n      const group = ref.current;\n      // This can only safely work if the component is used once, but there is no alternative.\n      // Hijacking the raycast method to do it for individual meshes is not an option as it would\n      // cost too much memory ...\n      raycaster.firstHitOnly = firstHitOnly;\n      group.traverse(child => {\n        // Only include meshes that do not yet have a boundsTree and whose raycast is standard issue\n        if (isMesh(child) && !child.geometry.boundsTree && child.raycast === Mesh.prototype.raycast) {\n          child.raycast = acceleratedRaycast;\n          child.geometry.computeBoundsTree = computeBoundsTree;\n          child.geometry.disposeBoundsTree = disposeBoundsTree;\n          child.geometry.computeBoundsTree(options);\n        }\n      });\n      return () => {\n        delete raycaster.firstHitOnly;\n        group.traverse(child => {\n          if (isMesh(child) && child.geometry.boundsTree) {\n            child.geometry.disposeBoundsTree();\n            child.raycast = Mesh.prototype.raycast;\n          }\n        });\n      };\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), children);\n});\n\nexport { Bvh, useBVH };\n", "// Split strategy constants\nexport const CENTER = 0;\nexport const AVERAGE = 1;\nexport const SAH = 2;\n\n// Traversal constants\nexport const NOT_INTERSECTED = 0;\nexport const INTERSECTED = 1;\nexport const CONTAINED = 2;\n\n// SAH cost constants\n// TODO: hone these costs more. The relative difference between them should be the\n// difference in measured time to perform a triangle intersection vs traversing\n// bounds.\nexport const TRIANGLE_INTERSECT_COST = 1.25;\nexport const TRAVERSAL_COST = 1;\n\n\n// Build constants\nexport const BYTES_PER_NODE = 6 * 4 + 4 + 4;\nexport const IS_LEAFNODE_FLAG = 0xFFFF;\n\n// EPSILON for computing floating point error during build\n// https://en.wikipedia.org/wiki/Machine_epsilon#Values_for_standard_hardware_floating_point_arithmetics\nexport const FLOAT32_EPSILON = Math.pow( 2, - 24 );\n\nexport const SKIP_GENERATION = Symbol( 'SKIP_GENERATION' );\n", "import { BufferAttribute } from 'three';\n\nexport function getVertexCount( geo ) {\n\n\treturn geo.index ? geo.index.count : geo.attributes.position.count;\n\n}\n\nexport function getTriCount( geo ) {\n\n\treturn getVertexCount( geo ) / 3;\n\n}\n\nexport function getIndexArray( vertexCount, BufferConstructor = ArrayBuffer ) {\n\n\tif ( vertexCount > 65535 ) {\n\n\t\treturn new Uint32Array( new BufferConstructor( 4 * vertexCount ) );\n\n\t} else {\n\n\t\treturn new Uint16Array( new BufferConstructor( 2 * vertexCount ) );\n\n\t}\n\n}\n\n// ensures that an index is present on the geometry\nexport function ensureIndex( geo, options ) {\n\n\tif ( ! geo.index ) {\n\n\t\tconst vertexCount = geo.attributes.position.count;\n\t\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n\t\tconst index = getIndexArray( vertexCount, BufferConstructor );\n\t\tgeo.setIndex( new BufferAttribute( index, 1 ) );\n\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tindex[ i ] = i;\n\n\t\t}\n\n\t}\n\n}\n\n// Computes the set of { offset, count } ranges which need independent BVH roots. Each\n// region in the geometry index that belongs to a different set of material groups requires\n// a separate BVH root, so that triangles indices belonging to one group never get swapped\n// with triangle indices belongs to another group. For example, if the groups were like this:\n//\n// [-------------------------------------------------------------]\n// |__________________|\n//   g0 = [0, 20]  |______________________||_____________________|\n//                      g1 = [16, 40]           g2 = [41, 60]\n//\n// we would need four BVH roots: [0, 15], [16, 20], [21, 40], [41, 60].\nexport function getFullGeometryRange( geo ) {\n\n\tconst triCount = getTriCount( geo );\n\tconst drawRange = geo.drawRange;\n\tconst start = drawRange.start / 3;\n\tconst end = ( drawRange.start + drawRange.count ) / 3;\n\n\tconst offset = Math.max( 0, start );\n\tconst count = Math.min( triCount, end ) - offset;\n\treturn [ {\n\t\toffset: Math.floor( offset ),\n\t\tcount: Math.floor( count ),\n\t} ];\n\n}\n\nexport function getRootIndexRanges( geo ) {\n\n\tif ( ! geo.groups || ! geo.groups.length ) {\n\n\t\treturn getFullGeometryRange( geo );\n\n\t}\n\n\tconst ranges = [];\n\tconst rangeBoundaries = new Set();\n\n\tconst drawRange = geo.drawRange;\n\tconst drawRangeStart = drawRange.start / 3;\n\tconst drawRangeEnd = ( drawRange.start + drawRange.count ) / 3;\n\tfor ( const group of geo.groups ) {\n\n\t\tconst groupStart = group.start / 3;\n\t\tconst groupEnd = ( group.start + group.count ) / 3;\n\t\trangeBoundaries.add( Math.max( drawRangeStart, groupStart ) );\n\t\trangeBoundaries.add( Math.min( drawRangeEnd, groupEnd ) );\n\n\t}\n\n\n\t// note that if you don't pass in a comparator, it sorts them lexicographically as strings :-(\n\tconst sortedBoundaries = Array.from( rangeBoundaries.values() ).sort( ( a, b ) => a - b );\n\tfor ( let i = 0; i < sortedBoundaries.length - 1; i ++ ) {\n\n\t\tconst start = sortedBoundaries[ i ];\n\t\tconst end = sortedBoundaries[ i + 1 ];\n\n\t\tranges.push( {\n\t\t\toffset: Math.floor( start ),\n\t\t\tcount: Math.floor( end - start ),\n\t\t} );\n\n\t}\n\n\treturn ranges;\n\n}\n\nexport function hasGroupGaps( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\treturn false;\n\n\t}\n\n\tconst vertexCount = getTriCount( geometry );\n\tconst groups = getRootIndexRanges( geometry )\n\t\t.sort( ( a, b ) => a.offset - b.offset );\n\n\tconst finalGroup = groups[ groups.length - 1 ];\n\tfinalGroup.count = Math.min( vertexCount - finalGroup.offset, finalGroup.count );\n\n\tlet total = 0;\n\tgroups.forEach( ( { count } ) => total += count );\n\treturn vertexCount !== total;\n\n}\n", "import { FLOAT32_EPSILON } from '../Constants.js';\nimport { getTriCount } from './geometryUtils.js';\n\n// computes the union of the bounds of all of the given triangles and puts the resulting box in \"target\".\n// A bounding box is computed for the centroids of the triangles, as well, and placed in \"centroidTarget\".\n// These are computed together to avoid redundant accesses to bounds array.\nexport function getBounds( triangleBounds, offset, count, target, centroidTarget ) {\n\n\tlet minx = Infinity;\n\tlet miny = Infinity;\n\tlet minz = Infinity;\n\tlet maxx = - Infinity;\n\tlet maxy = - Infinity;\n\tlet maxz = - Infinity;\n\n\tlet cminx = Infinity;\n\tlet cminy = Infinity;\n\tlet cminz = Infinity;\n\tlet cmaxx = - Infinity;\n\tlet cmaxy = - Infinity;\n\tlet cmaxz = - Infinity;\n\n\tfor ( let i = offset * 6, end = ( offset + count ) * 6; i < end; i += 6 ) {\n\n\t\tconst cx = triangleBounds[ i + 0 ];\n\t\tconst hx = triangleBounds[ i + 1 ];\n\t\tconst lx = cx - hx;\n\t\tconst rx = cx + hx;\n\t\tif ( lx < minx ) minx = lx;\n\t\tif ( rx > maxx ) maxx = rx;\n\t\tif ( cx < cminx ) cminx = cx;\n\t\tif ( cx > cmaxx ) cmaxx = cx;\n\n\t\tconst cy = triangleBounds[ i + 2 ];\n\t\tconst hy = triangleBounds[ i + 3 ];\n\t\tconst ly = cy - hy;\n\t\tconst ry = cy + hy;\n\t\tif ( ly < miny ) miny = ly;\n\t\tif ( ry > maxy ) maxy = ry;\n\t\tif ( cy < cminy ) cminy = cy;\n\t\tif ( cy > cmaxy ) cmaxy = cy;\n\n\t\tconst cz = triangleBounds[ i + 4 ];\n\t\tconst hz = triangleBounds[ i + 5 ];\n\t\tconst lz = cz - hz;\n\t\tconst rz = cz + hz;\n\t\tif ( lz < minz ) minz = lz;\n\t\tif ( rz > maxz ) maxz = rz;\n\t\tif ( cz < cminz ) cminz = cz;\n\t\tif ( cz > cmaxz ) cmaxz = cz;\n\n\t}\n\n\ttarget[ 0 ] = minx;\n\ttarget[ 1 ] = miny;\n\ttarget[ 2 ] = minz;\n\n\ttarget[ 3 ] = maxx;\n\ttarget[ 4 ] = maxy;\n\ttarget[ 5 ] = maxz;\n\n\tcentroidTarget[ 0 ] = cminx;\n\tcentroidTarget[ 1 ] = cminy;\n\tcentroidTarget[ 2 ] = cminz;\n\n\tcentroidTarget[ 3 ] = cmaxx;\n\tcentroidTarget[ 4 ] = cmaxy;\n\tcentroidTarget[ 5 ] = cmaxz;\n\n}\n\n// precomputes the bounding box for each triangle; required for quickly calculating tree splits.\n// result is an array of size tris.length * 6 where triangle i maps to a\n// [x_center, x_delta, y_center, y_delta, z_center, z_delta] tuple starting at index i * 6,\n// representing the center and half-extent in each dimension of triangle i\nexport function computeTriangleBounds( geo, target = null, offset = null, count = null ) {\n\n\tconst posAttr = geo.attributes.position;\n\tconst index = geo.index ? geo.index.array : null;\n\tconst triCount = getTriCount( geo );\n\tconst normalized = posAttr.normalized;\n\tlet triangleBounds;\n\tif ( target === null ) {\n\n\t\ttriangleBounds = new Float32Array( triCount * 6 * 4 );\n\t\toffset = 0;\n\t\tcount = triCount;\n\n\t} else {\n\n\t\ttriangleBounds = target;\n\t\toffset = offset || 0;\n\t\tcount = count || triCount;\n\n\t}\n\n\t// used for non-normalized positions\n\tconst posArr = posAttr.array;\n\n\t// support for an interleaved position buffer\n\tconst bufferOffset = posAttr.offset || 0;\n\tlet stride = 3;\n\tif ( posAttr.isInterleavedBufferAttribute ) {\n\n\t\tstride = posAttr.data.stride;\n\n\t}\n\n\t// used for normalized positions\n\tconst getters = [ 'getX', 'getY', 'getZ' ];\n\n\tfor ( let tri = offset; tri < offset + count; tri ++ ) {\n\n\t\tconst tri3 = tri * 3;\n\t\tconst tri6 = tri * 6;\n\n\t\tlet ai = tri3 + 0;\n\t\tlet bi = tri3 + 1;\n\t\tlet ci = tri3 + 2;\n\n\t\tif ( index ) {\n\n\t\t\tai = index[ ai ];\n\t\t\tbi = index[ bi ];\n\t\t\tci = index[ ci ];\n\n\t\t}\n\n\t\t// we add the stride and offset here since we access the array directly\n\t\t// below for the sake of performance\n\t\tif ( ! normalized ) {\n\n\t\t\tai = ai * stride + bufferOffset;\n\t\t\tbi = bi * stride + bufferOffset;\n\t\t\tci = ci * stride + bufferOffset;\n\n\t\t}\n\n\t\tfor ( let el = 0; el < 3; el ++ ) {\n\n\t\t\tlet a, b, c;\n\n\t\t\tif ( normalized ) {\n\n\t\t\t\ta = posAttr[ getters[ el ] ]( ai );\n\t\t\t\tb = posAttr[ getters[ el ] ]( bi );\n\t\t\t\tc = posAttr[ getters[ el ] ]( ci );\n\n\t\t\t} else {\n\n\t\t\t\ta = posArr[ ai + el ];\n\t\t\t\tb = posArr[ bi + el ];\n\t\t\t\tc = posArr[ ci + el ];\n\n\t\t\t}\n\n\t\t\tlet min = a;\n\t\t\tif ( b < min ) min = b;\n\t\t\tif ( c < min ) min = c;\n\n\t\t\tlet max = a;\n\t\t\tif ( b > max ) max = b;\n\t\t\tif ( c > max ) max = c;\n\n\t\t\t// Increase the bounds size by float32 epsilon to avoid precision errors when\n\t\t\t// converting to 32 bit float. Scale the epsilon by the size of the numbers being\n\t\t\t// worked with.\n\t\t\tconst halfExtents = ( max - min ) / 2;\n\t\t\tconst el2 = el * 2;\n\t\t\ttriangleBounds[ tri6 + el2 + 0 ] = min + halfExtents;\n\t\t\ttriangleBounds[ tri6 + el2 + 1 ] = halfExtents + ( Math.abs( min ) + halfExtents ) * FLOAT32_EPSILON;\n\n\t\t}\n\n\t}\n\n\treturn triangleBounds;\n\n}\n", "export function arrayToBox( nodeIndex32, array, target ) {\n\n\ttarget.min.x = array[ nodeIndex32 ];\n\ttarget.min.y = array[ nodeIndex32 + 1 ];\n\ttarget.min.z = array[ nodeIndex32 + 2 ];\n\n\ttarget.max.x = array[ nodeIndex32 + 3 ];\n\ttarget.max.y = array[ nodeIndex32 + 4 ];\n\ttarget.max.z = array[ nodeIndex32 + 5 ];\n\n\treturn target;\n\n}\n\nexport function makeEmptyBounds( target ) {\n\n\ttarget[ 0 ] = target[ 1 ] = target[ 2 ] = Infinity;\n\ttarget[ 3 ] = target[ 4 ] = target[ 5 ] = - Infinity;\n\n}\n\nexport function getLongestEdgeIndex( bounds ) {\n\n\tlet splitDimIdx = - 1;\n\tlet splitDist = - Infinity;\n\n\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\tconst dist = bounds[ i + 3 ] - bounds[ i ];\n\t\tif ( dist > splitDist ) {\n\n\t\t\tsplitDist = dist;\n\t\t\tsplitDimIdx = i;\n\n\t\t}\n\n\t}\n\n\treturn splitDimIdx;\n\n}\n\n// copies bounds a into bounds b\nexport function copyBounds( source, target ) {\n\n\ttarget.set( source );\n\n}\n\n// sets bounds target to the union of bounds a and b\nexport function unionBounds( a, b, target ) {\n\n\tlet aVal, bVal;\n\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\tconst d3 = d + 3;\n\n\t\t// set the minimum values\n\t\taVal = a[ d ];\n\t\tbVal = b[ d ];\n\t\ttarget[ d ] = aVal < bVal ? aVal : bVal;\n\n\t\t// set the max values\n\t\taVal = a[ d3 ];\n\t\tbVal = b[ d3 ];\n\t\ttarget[ d3 ] = aVal > bVal ? aVal : bVal;\n\n\t}\n\n}\n\n// expands the given bounds by the provided triangle bounds\nexport function expandByTriangleBounds( startIndex, triangleBounds, bounds ) {\n\n\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\tconst tCenter = triangleBounds[ startIndex + 2 * d ];\n\t\tconst tHalf = triangleBounds[ startIndex + 2 * d + 1 ];\n\n\t\tconst tMin = tCenter - tHalf;\n\t\tconst tMax = tCenter + tHalf;\n\n\t\tif ( tMin < bounds[ d ] ) {\n\n\t\t\tbounds[ d ] = tMin;\n\n\t\t}\n\n\t\tif ( tMax > bounds[ d + 3 ] ) {\n\n\t\t\tbounds[ d + 3 ] = tMax;\n\n\t\t}\n\n\t}\n\n}\n\n// compute bounds surface area\nexport function computeSurfaceArea( bounds ) {\n\n\tconst d0 = bounds[ 3 ] - bounds[ 0 ];\n\tconst d1 = bounds[ 4 ] - bounds[ 1 ];\n\tconst d2 = bounds[ 5 ] - bounds[ 2 ];\n\n\treturn 2 * ( d0 * d1 + d1 * d2 + d2 * d0 );\n\n}\n", "import { getLongestEdgeIndex, computeSurfaceArea, copyBounds, unionBounds, expandByTriangleBounds } from '../../utils/ArrayBoxUtilities.js';\nimport { CENTER, AVERAGE, SAH, TRIANGLE_INTERSECT_COST, TRAVERSAL_COST } from '../Constants.js';\n\nconst BIN_COUNT = 32;\nconst binsSort = ( a, b ) => a.candidate - b.candidate;\nconst sahBins = new Array( BIN_COUNT ).fill().map( () => {\n\n\treturn {\n\n\t\tcount: 0,\n\t\tbounds: new Float32Array( 6 ),\n\t\trightCacheBounds: new Float32Array( 6 ),\n\t\tleftCacheBounds: new Float32Array( 6 ),\n\t\tcandidate: 0,\n\n\t};\n\n} );\nconst leftBounds = new Float32Array( 6 );\n\nexport function getOptimalSplit( nodeBoundingData, centroidBoundingData, triangleBounds, offset, count, strategy ) {\n\n\tlet axis = - 1;\n\tlet pos = 0;\n\n\t// Center\n\tif ( strategy === CENTER ) {\n\n\t\taxis = getLongestEdgeIndex( centroidBoundingData );\n\t\tif ( axis !== - 1 ) {\n\n\t\t\tpos = ( centroidBoundingData[ axis ] + centroidBoundingData[ axis + 3 ] ) / 2;\n\n\t\t}\n\n\t} else if ( strategy === AVERAGE ) {\n\n\t\taxis = getLongestEdgeIndex( nodeBoundingData );\n\t\tif ( axis !== - 1 ) {\n\n\t\t\tpos = getAverage( triangleBounds, offset, count, axis );\n\n\t\t}\n\n\t} else if ( strategy === SAH ) {\n\n\t\tconst rootSurfaceArea = computeSurfaceArea( nodeBoundingData );\n\t\tlet bestCost = TRIANGLE_INTERSECT_COST * count;\n\n\t\t// iterate over all axes\n\t\tconst cStart = offset * 6;\n\t\tconst cEnd = ( offset + count ) * 6;\n\t\tfor ( let a = 0; a < 3; a ++ ) {\n\n\t\t\tconst axisLeft = centroidBoundingData[ a ];\n\t\t\tconst axisRight = centroidBoundingData[ a + 3 ];\n\t\t\tconst axisLength = axisRight - axisLeft;\n\t\t\tconst binWidth = axisLength / BIN_COUNT;\n\n\t\t\t// If we have fewer triangles than we're planning to split then just check all\n\t\t\t// the triangle positions because it will be faster.\n\t\t\tif ( count < BIN_COUNT / 4 ) {\n\n\t\t\t\t// initialize the bin candidates\n\t\t\t\tconst truncatedBins = [ ...sahBins ];\n\t\t\t\ttruncatedBins.length = count;\n\n\t\t\t\t// set the candidates\n\t\t\t\tlet b = 0;\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6, b ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ b ];\n\t\t\t\t\tbin.candidate = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tbin.count = 0;\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tbounds,\n\t\t\t\t\t\tleftCacheBounds,\n\t\t\t\t\t\trightCacheBounds,\n\t\t\t\t\t} = bin;\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\t\t\t\t\trightCacheBounds[ d ] = Infinity;\n\t\t\t\t\t\trightCacheBounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t\tleftCacheBounds[ d ] = Infinity;\n\t\t\t\t\t\tleftCacheBounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t\tbounds[ d ] = Infinity;\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t}\n\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bounds );\n\n\t\t\t\t}\n\n\t\t\t\ttruncatedBins.sort( binsSort );\n\n\t\t\t\t// remove redundant splits\n\t\t\t\tlet splitCount = count;\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\twhile ( bi + 1 < splitCount && truncatedBins[ bi + 1 ].candidate === bin.candidate ) {\n\n\t\t\t\t\t\ttruncatedBins.splice( bi + 1, 1 );\n\t\t\t\t\t\tsplitCount --;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// find the appropriate bin for each triangle and expand the bounds.\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\n\n\t\t\t\t\tconst center = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\t\tif ( center >= bin.candidate ) {\n\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.rightCacheBounds );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.leftCacheBounds );\n\t\t\t\t\t\t\tbin.count ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// expand all the bounds\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\tconst leftCount = bin.count;\n\t\t\t\t\tconst rightCount = count - bin.count;\n\n\t\t\t\t\t// check the cost of this split\n\t\t\t\t\tconst leftBounds = bin.leftCacheBounds;\n\t\t\t\t\tconst rightBounds = bin.rightCacheBounds;\n\n\t\t\t\t\tlet leftProb = 0;\n\t\t\t\t\tif ( leftCount !== 0 ) {\n\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet rightProb = 0;\n\t\t\t\t\tif ( rightCount !== 0 ) {\n\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( cost < bestCost ) {\n\n\t\t\t\t\t\taxis = a;\n\t\t\t\t\t\tbestCost = cost;\n\t\t\t\t\t\tpos = bin.candidate;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// reset the bins\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT; i ++ ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tbin.count = 0;\n\t\t\t\t\tbin.candidate = axisLeft + binWidth + i * binWidth;\n\n\t\t\t\t\tconst bounds = bin.bounds;\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\t\t\t\t\tbounds[ d ] = Infinity;\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over all center positions\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\n\n\t\t\t\t\tconst triCenter = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tconst relativeCenter = triCenter - axisLeft;\n\n\t\t\t\t\t// in the partition function if the centroid lies on the split plane then it is\n\t\t\t\t\t// considered to be on the right side of the split\n\t\t\t\t\tlet binIndex = ~ ~ ( relativeCenter / binWidth );\n\t\t\t\t\tif ( binIndex >= BIN_COUNT ) binIndex = BIN_COUNT - 1;\n\n\t\t\t\t\tconst bin = sahBins[ binIndex ];\n\t\t\t\t\tbin.count ++;\n\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.bounds );\n\n\t\t\t\t}\n\n\t\t\t\t// cache the unioned bounds from right to left so we don't have to regenerate them each time\n\t\t\t\tconst lastBin = sahBins[ BIN_COUNT - 1 ];\n\t\t\t\tcopyBounds( lastBin.bounds, lastBin.rightCacheBounds );\n\t\t\t\tfor ( let i = BIN_COUNT - 2; i >= 0; i -- ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\n\t\t\t\t\tunionBounds( bin.bounds, nextBin.rightCacheBounds, bin.rightCacheBounds );\n\n\t\t\t\t}\n\n\t\t\t\tlet leftCount = 0;\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT - 1; i ++ ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tconst binCount = bin.count;\n\t\t\t\t\tconst bounds = bin.bounds;\n\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\n\t\t\t\t\tconst rightBounds = nextBin.rightCacheBounds;\n\n\t\t\t\t\t// don't do anything with the bounds if the new bounds have no triangles\n\t\t\t\t\tif ( binCount !== 0 ) {\n\n\t\t\t\t\t\tif ( leftCount === 0 ) {\n\n\t\t\t\t\t\t\tcopyBounds( bounds, leftBounds );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tunionBounds( bounds, leftBounds, leftBounds );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tleftCount += binCount;\n\n\t\t\t\t\t// check the cost of this split\n\t\t\t\t\tlet leftProb = 0;\n\t\t\t\t\tlet rightProb = 0;\n\n\t\t\t\t\tif ( leftCount !== 0 ) {\n\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rightCount = count - leftCount;\n\t\t\t\t\tif ( rightCount !== 0 ) {\n\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( cost < bestCost ) {\n\n\t\t\t\t\t\taxis = a;\n\t\t\t\t\t\tbestCost = cost;\n\t\t\t\t\t\tpos = bin.candidate;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\tconsole.warn( `MeshBVH: Invalid build strategy value ${ strategy } used.` );\n\n\t}\n\n\treturn { axis, pos };\n\n}\n\n// returns the average coordinate on the specified axis of the all the provided triangles\nfunction getAverage( triangleBounds, offset, count, axis ) {\n\n\tlet avg = 0;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tavg += triangleBounds[ i * 6 + axis * 2 ];\n\n\t}\n\n\treturn avg / count;\n\n}\n", "export class MeshBVHNode {\n\n\tconstructor() {\n\n\t\t// internal nodes have boundingData, left, right, and splitAxis\n\t\t// leaf nodes have offset and count (referring to primitives in the mesh geometry)\n\n\t\tthis.boundingData = new Float32Array( 6 );\n\n\t}\n\n}\n", "/********************************************************/\n/* This file is generated from \"sortUtils.template.js\". */\n/********************************************************/\n// reorders `tris` such that for `count` elements after `offset`, elements on the left side of the split\n// will be on the left and elements on the right side of the split will be on the right. returns the index\n// of the first element on the right side, or offset + count if there are no elements on the right side.\nfunction partition( indirectBuffer, index, triangleBounds, offset, count, split ) {\n\n\tlet left = offset;\n\tlet right = offset + count - 1;\n\tconst pos = split.pos;\n\tconst axisOffset = split.axis * 2;\n\n\t// hoare partitioning, see e.g. https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\n\twhile ( true ) {\n\n\t\twhile ( left <= right && triangleBounds[ left * 6 + axisOffset ] < pos ) {\n\n\t\t\tleft ++;\n\n\t\t}\n\n\t\t// if a triangle center lies on the partition plane it is considered to be on the right side\n\t\twhile ( left <= right && triangleBounds[ right * 6 + axisOffset ] >= pos ) {\n\n\t\t\tright --;\n\n\t\t}\n\n\t\tif ( left < right ) {\n\n\t\t\t// we need to swap all of the information associated with the triangles at index\n\t\t\t// left and right; that's the verts in the geometry index, the bounds,\n\t\t\t// and perhaps the SAH planes\n\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\tlet t0 = index[ left * 3 + i ];\n\t\t\t\tindex[ left * 3 + i ] = index[ right * 3 + i ];\n\t\t\t\tindex[ right * 3 + i ] = t0;\n\n\t\t\t}\n\n\n\t\t\t// swap bounds\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tlet tb = triangleBounds[ left * 6 + i ];\n\t\t\t\ttriangleBounds[ left * 6 + i ] = triangleBounds[ right * 6 + i ];\n\t\t\t\ttriangleBounds[ right * 6 + i ] = tb;\n\n\t\t\t}\n\n\t\t\tleft ++;\n\t\t\tright --;\n\n\t\t} else {\n\n\t\t\treturn left;\n\n\t\t}\n\n\t}\n\n}\n\nexport { partition };\n", "/********************************************************/\n/* This file is generated from \"sortUtils.template.js\". */\n/********************************************************/\n// reorders `tris` such that for `count` elements after `offset`, elements on the left side of the split\n// will be on the left and elements on the right side of the split will be on the right. returns the index\n// of the first element on the right side, or offset + count if there are no elements on the right side.\nfunction partition_indirect( indirectBuffer, index, triangleBounds, offset, count, split ) {\n\n\tlet left = offset;\n\tlet right = offset + count - 1;\n\tconst pos = split.pos;\n\tconst axisOffset = split.axis * 2;\n\n\t// hoare partitioning, see e.g. https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\n\twhile ( true ) {\n\n\t\twhile ( left <= right && triangleBounds[ left * 6 + axisOffset ] < pos ) {\n\n\t\t\tleft ++;\n\n\t\t}\n\n\t\t// if a triangle center lies on the partition plane it is considered to be on the right side\n\t\twhile ( left <= right && triangleBounds[ right * 6 + axisOffset ] >= pos ) {\n\n\t\t\tright --;\n\n\t\t}\n\n\t\tif ( left < right ) {\n\n\t\t\t// we need to swap all of the information associated with the triangles at index\n\t\t\t// left and right; that's the verts in the geometry index, the bounds,\n\t\t\t// and perhaps the SAH planes\n\t\t\tlet t = indirectBuffer[ left ];\n\t\t\tindirectBuffer[ left ] = indirectBuffer[ right ];\n\t\t\tindirectBuffer[ right ] = t;\n\n\n\t\t\t// swap bounds\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tlet tb = triangleBounds[ left * 6 + i ];\n\t\t\t\ttriangleBounds[ left * 6 + i ] = triangleBounds[ right * 6 + i ];\n\t\t\t\ttriangleBounds[ right * 6 + i ] = tb;\n\n\t\t\t}\n\n\t\t\tleft ++;\n\t\t\tright --;\n\n\t\t} else {\n\n\t\t\treturn left;\n\n\t\t}\n\n\t}\n\n}\n\nexport { partition_indirect };\n", "export function IS_LEAF( n16, uint16Array ) {\n\n\treturn uint16Array[ n16 + 15 ] === 0xFFFF;\n\n}\n\nexport function OFFSET( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 6 ];\n\n}\n\nexport function COUNT( n16, uint16Array ) {\n\n\treturn uint16Array[ n16 + 14 ];\n\n}\n\nexport function LEFT_NODE( n32 ) {\n\n\treturn n32 + 8;\n\n}\n\nexport function RIGHT_NODE( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 6 ];\n\n}\n\nexport function SPLIT_AXIS( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 7 ];\n\n}\n\nexport function BOUNDING_DATA_INDEX( n32 ) {\n\n\treturn n32;\n\n}\n", "import { BYTES_PER_NODE, IS_LEAFNODE_FLAG } from '../Constants.js';\nimport { IS_LEAF } from '../utils/nodeBufferUtils.js';\n\nlet float32Array, uint32Array, uint16Array, uint8Array;\nconst MAX_POINTER = Math.pow( 2, 32 );\n\nexport function countNodes( node ) {\n\n\tif ( 'count' in node ) {\n\n\t\treturn 1;\n\n\t} else {\n\n\t\treturn 1 + countNodes( node.left ) + countNodes( node.right );\n\n\t}\n\n}\n\nexport function populateBuffer( byteOffset, node, buffer ) {\n\n\tfloat32Array = new Float32Array( buffer );\n\tuint32Array = new Uint32Array( buffer );\n\tuint16Array = new Uint16Array( buffer );\n\tuint8Array = new Uint8Array( buffer );\n\n\treturn _populateBuffer( byteOffset, node );\n\n}\n\n// pack structure\n// boundingData  \t\t\t\t: 6 float32\n// right / offset \t\t\t\t: 1 uint32\n// splitAxis / isLeaf + count \t: 1 uint32 / 2 uint16\nfunction _populateBuffer( byteOffset, node ) {\n\n\tconst stride4Offset = byteOffset / 4;\n\tconst stride2Offset = byteOffset / 2;\n\tconst isLeaf = 'count' in node;\n\tconst boundingData = node.boundingData;\n\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\tfloat32Array[ stride4Offset + i ] = boundingData[ i ];\n\n\t}\n\n\tif ( isLeaf ) {\n\n\t\tif ( node.buffer ) {\n\n\t\t\tconst buffer = node.buffer;\n\t\t\tuint8Array.set( new Uint8Array( buffer ), byteOffset );\n\n\t\t\tfor ( let offset = byteOffset, l = byteOffset + buffer.byteLength; offset < l; offset += BYTES_PER_NODE ) {\n\n\t\t\t\tconst offset2 = offset / 2;\n\t\t\t\tif ( ! IS_LEAF( offset2, uint16Array ) ) {\n\n\t\t\t\t\tuint32Array[ ( offset / 4 ) + 6 ] += stride4Offset;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn byteOffset + buffer.byteLength;\n\n\t\t} else {\n\n\t\t\tconst offset = node.offset;\n\t\t\tconst count = node.count;\n\t\t\tuint32Array[ stride4Offset + 6 ] = offset;\n\t\t\tuint16Array[ stride2Offset + 14 ] = count;\n\t\t\tuint16Array[ stride2Offset + 15 ] = IS_LEAFNODE_FLAG;\n\t\t\treturn byteOffset + BYTES_PER_NODE;\n\n\t\t}\n\n\t} else {\n\n\t\tconst left = node.left;\n\t\tconst right = node.right;\n\t\tconst splitAxis = node.splitAxis;\n\n\t\tlet nextUnusedPointer;\n\t\tnextUnusedPointer = _populateBuffer( byteOffset + BYTES_PER_NODE, left );\n\n\t\tif ( ( nextUnusedPointer / 4 ) > MAX_POINTER ) {\n\n\t\t\tthrow new Error( 'MeshBVH: Cannot store child pointer greater than 32 bits.' );\n\n\t\t}\n\n\t\tuint32Array[ stride4Offset + 6 ] = nextUnusedPointer / 4;\n\t\tnextUnusedPointer = _populateBuffer( nextUnusedPointer, right );\n\n\t\tuint32Array[ stride4Offset + 7 ] = splitAxis;\n\t\treturn nextUnusedPointer;\n\n\t}\n\n}\n", "import { ensureIndex, getFullGeometryRange, getRootIndexRanges, getTriCount, hasGroupGaps, } from './geometryUtils.js';\nimport { getBounds, computeTriangleBounds } from './computeBoundsUtils.js';\nimport { getOptimalSplit } from './splitUtils.js';\nimport { MeshBVHNode } from '../MeshBVHNode.js';\nimport { BYTES_PER_NODE } from '../Constants.js';\n\nimport { partition } from './sortUtils.generated.js';\nimport { partition_indirect } from './sortUtils_indirect.generated.js';\nimport { countNodes, populateBuffer } from './buildUtils.js';\n\nexport function generateIndirectBuffer( geometry, useSharedArrayBuffer ) {\n\n\tconst triCount = ( geometry.index ? geometry.index.count : geometry.attributes.position.count ) / 3;\n\tconst useUint32 = triCount > 2 ** 16;\n\tconst byteCount = useUint32 ? 4 : 2;\n\n\tconst buffer = useSharedArrayBuffer ? new SharedArrayBuffer( triCount * byteCount ) : new ArrayBuffer( triCount * byteCount );\n\tconst indirectBuffer = useUint32 ? new Uint32Array( buffer ) : new Uint16Array( buffer );\n\tfor ( let i = 0, l = indirectBuffer.length; i < l; i ++ ) {\n\n\t\tindirectBuffer[ i ] = i;\n\n\t}\n\n\treturn indirectBuffer;\n\n}\n\nexport function buildTree( bvh, triangleBounds, offset, count, options ) {\n\n\t// epxand variables\n\tconst {\n\t\tmaxDepth,\n\t\tverbose,\n\t\tmaxLeafTris,\n\t\tstrategy,\n\t\tonProgress,\n\t\tindirect,\n\t} = options;\n\tconst indirectBuffer = bvh._indirectBuffer;\n\tconst geometry = bvh.geometry;\n\tconst indexArray = geometry.index ? geometry.index.array : null;\n\tconst partionFunc = indirect ? partition_indirect : partition;\n\n\t// generate intermediate variables\n\tconst totalTriangles = getTriCount( geometry );\n\tconst cacheCentroidBoundingData = new Float32Array( 6 );\n\tlet reachedMaxDepth = false;\n\n\tconst root = new MeshBVHNode();\n\tgetBounds( triangleBounds, offset, count, root.boundingData, cacheCentroidBoundingData );\n\tsplitNode( root, offset, count, cacheCentroidBoundingData );\n\treturn root;\n\n\tfunction triggerProgress( trianglesProcessed ) {\n\n\t\tif ( onProgress ) {\n\n\t\t\tonProgress( trianglesProcessed / totalTriangles );\n\n\t\t}\n\n\t}\n\n\t// either recursively splits the given node, creating left and right subtrees for it, or makes it a leaf node,\n\t// recording the offset and count of its triangles and writing them into the reordered geometry index.\n\tfunction splitNode( node, offset, count, centroidBoundingData = null, depth = 0 ) {\n\n\t\tif ( ! reachedMaxDepth && depth >= maxDepth ) {\n\n\t\t\treachedMaxDepth = true;\n\t\t\tif ( verbose ) {\n\n\t\t\t\tconsole.warn( `MeshBVH: Max depth of ${ maxDepth } reached when generating BVH. Consider increasing maxDepth.` );\n\t\t\t\tconsole.warn( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// early out if we've met our capacity\n\t\tif ( count <= maxLeafTris || depth >= maxDepth ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\t\t\treturn node;\n\n\t\t}\n\n\t\t// Find where to split the volume\n\t\tconst split = getOptimalSplit( node.boundingData, centroidBoundingData, triangleBounds, offset, count, strategy );\n\t\tif ( split.axis === - 1 ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\t\t\treturn node;\n\n\t\t}\n\n\t\tconst splitOffset = partionFunc( indirectBuffer, indexArray, triangleBounds, offset, count, split );\n\n\t\t// create the two new child nodes\n\t\tif ( splitOffset === offset || splitOffset === offset + count ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\n\t\t} else {\n\n\t\t\tnode.splitAxis = split.axis;\n\n\t\t\t// create the left child and compute its bounding box\n\t\t\tconst left = new MeshBVHNode();\n\t\t\tconst lstart = offset;\n\t\t\tconst lcount = splitOffset - offset;\n\t\t\tnode.left = left;\n\n\t\t\tgetBounds( triangleBounds, lstart, lcount, left.boundingData, cacheCentroidBoundingData );\n\t\t\tsplitNode( left, lstart, lcount, cacheCentroidBoundingData, depth + 1 );\n\n\t\t\t// repeat for right\n\t\t\tconst right = new MeshBVHNode();\n\t\t\tconst rstart = splitOffset;\n\t\t\tconst rcount = count - lcount;\n\t\t\tnode.right = right;\n\n\t\t\tgetBounds( triangleBounds, rstart, rcount, right.boundingData, cacheCentroidBoundingData );\n\t\t\tsplitNode( right, rstart, rcount, cacheCentroidBoundingData, depth + 1 );\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n}\n\nexport function buildPackedTree( bvh, options ) {\n\n\tconst geometry = bvh.geometry;\n\tif ( options.indirect ) {\n\n\t\tbvh._indirectBuffer = generateIndirectBuffer( geometry, options.useSharedArrayBuffer );\n\n\t\tif ( hasGroupGaps( geometry ) && ! options.verbose ) {\n\n\t\t\tconsole.warn(\n\t\t\t\t'MeshBVH: Provided geometry contains groups that do not fully span the vertex contents while using the \"indirect\" option. ' +\n\t\t\t\t'BVH may incorrectly report intersections on unrendered portions of the geometry.'\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\tif ( ! bvh._indirectBuffer ) {\n\n\t\tensureIndex( geometry, options );\n\n\t}\n\n\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n\n\tconst triangleBounds = computeTriangleBounds( geometry );\n\tconst geometryRanges = options.indirect ? getFullGeometryRange( geometry ) : getRootIndexRanges( geometry );\n\tbvh._roots = geometryRanges.map( range => {\n\n\t\tconst root = buildTree( bvh, triangleBounds, range.offset, range.count, options );\n\t\tconst nodeCount = countNodes( root );\n\t\tconst buffer = new BufferConstructor( BYTES_PER_NODE * nodeCount );\n\t\tpopulateBuffer( 0, root, buffer );\n\t\treturn buffer;\n\n\t} );\n\n}\n", "import { Vector3 } from 'three';\n\nexport class SeparatingAxisBounds {\n\n\tconstructor() {\n\n\t\tthis.min = Infinity;\n\t\tthis.max = - Infinity;\n\n\t}\n\n\tsetFromPointsField( points, field ) {\n\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tconst val = p[ field ];\n\t\t\tmin = val < min ? val : min;\n\t\t\tmax = val > max ? val : max;\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tsetFromPoints( axis, points ) {\n\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tconst val = axis.dot( p );\n\t\t\tmin = val < min ? val : min;\n\t\t\tmax = val > max ? val : max;\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tisSeparated( other ) {\n\n\t\treturn this.min > other.max || other.min > this.max;\n\n\t}\n\n}\n\nSeparatingAxisBounds.prototype.setFromBox = ( function () {\n\n\tconst p = new Vector3();\n\treturn function setFromBox( axis, box ) {\n\n\t\tconst boxMin = box.min;\n\t\tconst boxMax = box.max;\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tp.x = boxMin.x * x + boxMax.x * ( 1 - x );\n\t\t\t\t\tp.y = boxMin.y * y + boxMax.y * ( 1 - y );\n\t\t\t\t\tp.z = boxMin.z * z + boxMax.z * ( 1 - z );\n\n\t\t\t\t\tconst val = axis.dot( p );\n\t\t\t\t\tmin = Math.min( val, min );\n\t\t\t\t\tmax = Math.max( val, max );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t};\n\n} )();\n\nexport const areIntersecting = ( function () {\n\n\tconst cacheSatBounds = new SeparatingAxisBounds();\n\treturn function areIntersecting( shape1, shape2 ) {\n\n\t\tconst points1 = shape1.points;\n\t\tconst satAxes1 = shape1.satAxes;\n\t\tconst satBounds1 = shape1.satBounds;\n\n\t\tconst points2 = shape2.points;\n\t\tconst satAxes2 = shape2.satAxes;\n\t\tconst satBounds2 = shape2.satBounds;\n\n\t\t// check axes of the first shape\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds1[ i ];\n\t\t\tconst sa = satAxes1[ i ];\n\t\t\tcacheSatBounds.setFromPoints( sa, points2 );\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\n\n\t\t}\n\n\t\t// check axes of the second shape\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds2[ i ];\n\t\t\tconst sa = satAxes2[ i ];\n\t\t\tcacheSatBounds.setFromPoints( sa, points1 );\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\n\n\t\t}\n\n\t};\n\n} )();\n", "import { Vector3, Vector2, Plane, Line3 } from 'three';\n\nexport const closestPointLineToLine = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/Line.cpp#L56\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst v02 = new Vector3();\n\treturn function closestPointLineToLine( l1, l2, result ) {\n\n\t\tconst v0 = l1.start;\n\t\tconst v10 = dir1;\n\t\tconst v2 = l2.start;\n\t\tconst v32 = dir2;\n\n\t\tv02.subVectors( v0, v2 );\n\t\tdir1.subVectors( l1.end, l1.start );\n\t\tdir2.subVectors( l2.end, l2.start );\n\n\t\t// float d0232 = v02.Dot(v32);\n\t\tconst d0232 = v02.dot( v32 );\n\n\t\t// float d3210 = v32.Dot(v10);\n\t\tconst d3210 = v32.dot( v10 );\n\n\t\t// float d3232 = v32.Dot(v32);\n\t\tconst d3232 = v32.dot( v32 );\n\n\t\t// float d0210 = v02.Dot(v10);\n\t\tconst d0210 = v02.dot( v10 );\n\n\t\t// float d1010 = v10.Dot(v10);\n\t\tconst d1010 = v10.dot( v10 );\n\n\t\t// float denom = d1010*d3232 - d3210*d3210;\n\t\tconst denom = d1010 * d3232 - d3210 * d3210;\n\n\t\tlet d, d2;\n\t\tif ( denom !== 0 ) {\n\n\t\t\td = ( d0232 * d3210 - d0210 * d3232 ) / denom;\n\n\t\t} else {\n\n\t\t\td = 0;\n\n\t\t}\n\n\t\td2 = ( d0232 + d * d3210 ) / d3232;\n\n\t\tresult.x = d;\n\t\tresult.y = d2;\n\n\t};\n\n} )();\n\nexport const closestPointsSegmentToSegment = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/LineSegment.cpp#L187\n\tconst paramResult = new Vector2();\n\tconst temp1 = new Vector3();\n\tconst temp2 = new Vector3();\n\treturn function closestPointsSegmentToSegment( l1, l2, target1, target2 ) {\n\n\t\tclosestPointLineToLine( l1, l2, paramResult );\n\n\t\tlet d = paramResult.x;\n\t\tlet d2 = paramResult.y;\n\t\tif ( d >= 0 && d <= 1 && d2 >= 0 && d2 <= 1 ) {\n\n\t\t\tl1.at( d, target1 );\n\t\t\tl2.at( d2, target2 );\n\n\t\t\treturn;\n\n\t\t} else if ( d >= 0 && d <= 1 ) {\n\n\t\t\t// Only d2 is out of bounds.\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tl2.at( 0, target2 );\n\n\t\t\t} else {\n\n\t\t\t\tl2.at( 1, target2 );\n\n\t\t\t}\n\n\t\t\tl1.closestPointToPoint( target2, true, target1 );\n\t\t\treturn;\n\n\t\t} else if ( d2 >= 0 && d2 <= 1 ) {\n\n\t\t\t// Only d is out of bounds.\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tl1.at( 0, target1 );\n\n\t\t\t} else {\n\n\t\t\t\tl1.at( 1, target1 );\n\n\t\t\t}\n\n\t\t\tl2.closestPointToPoint( target1, true, target2 );\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// Both u and u2 are out of bounds.\n\t\t\tlet p;\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tp = l1.start;\n\n\t\t\t} else {\n\n\t\t\t\tp = l1.end;\n\n\t\t\t}\n\n\t\t\tlet p2;\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tp2 = l2.start;\n\n\t\t\t} else {\n\n\t\t\t\tp2 = l2.end;\n\n\t\t\t}\n\n\t\t\tconst closestPoint = temp1;\n\t\t\tconst closestPoint2 = temp2;\n\t\t\tl1.closestPointToPoint( p2, true, temp1 );\n\t\t\tl2.closestPointToPoint( p, true, temp2 );\n\n\t\t\tif ( closestPoint.distanceToSquared( p2 ) <= closestPoint2.distanceToSquared( p ) ) {\n\n\t\t\t\ttarget1.copy( closestPoint );\n\t\t\t\ttarget2.copy( p2 );\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\ttarget1.copy( p );\n\t\t\t\ttarget2.copy( closestPoint2 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n} )();\n\n\nexport const sphereIntersectTriangle = ( function () {\n\n\t// https://stackoverflow.com/questions/34043955/detect-collision-between-sphere-and-triangle-in-three-js\n\tconst closestPointTemp = new Vector3();\n\tconst projectedPointTemp = new Vector3();\n\tconst planeTemp = new Plane();\n\tconst lineTemp = new Line3();\n\treturn function sphereIntersectTriangle( sphere, triangle ) {\n\n\t\tconst { radius, center } = sphere;\n\t\tconst { a, b, c } = triangle;\n\n\t\t// phase 1\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = b;\n\t\tconst closestPoint1 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint1.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint2 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint2.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = b;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint3 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint3.distanceTo( center ) <= radius ) return true;\n\n\t\t// phase 2\n\t\tconst plane = triangle.getPlane( planeTemp );\n\t\tconst dp = Math.abs( plane.distanceToPoint( center ) );\n\t\tif ( dp <= radius ) {\n\n\t\t\tconst pp = plane.projectPoint( center, projectedPointTemp );\n\t\t\tconst cp = triangle.containsPoint( pp );\n\t\t\tif ( cp ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t};\n\n} )();\n", "import { Triangle, Vector3, Line3, Sphere, Plane } from 'three';\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\nimport { closestPointsSegmentToSegment, sphereIntersectTriangle } from './MathUtilities.js';\n\nconst ZERO_EPSILON = 1e-15;\nfunction isNearZero( value ) {\n\n\treturn Math.abs( value ) < ZERO_EPSILON;\n\n}\n\nexport class ExtendedTriangle extends Triangle {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tthis.isExtendedTriangle = true;\n\t\tthis.satAxes = new Array( 4 ).fill().map( () => new Vector3() );\n\t\tthis.satBounds = new Array( 4 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.points = [ this.a, this.b, this.c ];\n\t\tthis.sphere = new Sphere();\n\t\tthis.plane = new Plane();\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphereIntersectTriangle( sphere, this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst a = this.a;\n\t\tconst b = this.b;\n\t\tconst c = this.c;\n\t\tconst points = this.points;\n\n\t\tconst satAxes = this.satAxes;\n\t\tconst satBounds = this.satBounds;\n\n\t\tconst axis0 = satAxes[ 0 ];\n\t\tconst sab0 = satBounds[ 0 ];\n\t\tthis.getNormal( axis0 );\n\t\tsab0.setFromPoints( axis0, points );\n\n\t\tconst axis1 = satAxes[ 1 ];\n\t\tconst sab1 = satBounds[ 1 ];\n\t\taxis1.subVectors( a, b );\n\t\tsab1.setFromPoints( axis1, points );\n\n\t\tconst axis2 = satAxes[ 2 ];\n\t\tconst sab2 = satBounds[ 2 ];\n\t\taxis2.subVectors( b, c );\n\t\tsab2.setFromPoints( axis2, points );\n\n\t\tconst axis3 = satAxes[ 3 ];\n\t\tconst sab3 = satBounds[ 3 ];\n\t\taxis3.subVectors( c, a );\n\t\tsab3.setFromPoints( axis3, points );\n\n\t\tthis.sphere.setFromPoints( this.points );\n\t\tthis.plane.setFromNormalAndCoplanarPoint( axis0, a );\n\t\tthis.needsUpdate = false;\n\n\t}\n\n}\n\nExtendedTriangle.prototype.closestPointToSegment = ( function () {\n\n\tconst point1 = new Vector3();\n\tconst point2 = new Vector3();\n\tconst edge = new Line3();\n\n\treturn function distanceToSegment( segment, target1 = null, target2 = null ) {\n\n\t\tconst { start, end } = segment;\n\t\tconst points = this.points;\n\t\tlet distSq;\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check the triangle edges\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst nexti = ( i + 1 ) % 3;\n\t\t\tedge.start.copy( points[ i ] );\n\t\t\tedge.end.copy( points[ nexti ] );\n\n\t\t\tclosestPointsSegmentToSegment( edge, segment, point1, point2 );\n\n\t\t\tdistSq = point1.distanceToSquared( point2 );\n\t\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = distSq;\n\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// check end points\n\t\tthis.closestPointToPoint( start, point1 );\n\t\tdistSq = start.distanceToSquared( point1 );\n\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\tclosestDistanceSq = distSq;\n\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\tif ( target2 ) target2.copy( start );\n\n\t\t}\n\n\t\tthis.closestPointToPoint( end, point1 );\n\t\tdistSq = end.distanceToSquared( point1 );\n\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\tclosestDistanceSq = distSq;\n\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\tif ( target2 ) target2.copy( end );\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n\nExtendedTriangle.prototype.intersectsTriangle = ( function () {\n\n\tconst saTri2 = new ExtendedTriangle();\n\tconst arr1 = new Array( 3 );\n\tconst arr2 = new Array( 3 );\n\tconst cachedSatBounds = new SeparatingAxisBounds();\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\n\tconst cachedAxis = new Vector3();\n\tconst dir = new Vector3();\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst tempDir = new Vector3();\n\tconst edge = new Line3();\n\tconst edge1 = new Line3();\n\tconst edge2 = new Line3();\n\tconst tempPoint = new Vector3();\n\n\tfunction triIntersectPlane( tri, plane, targetEdge ) {\n\n\t\t// find the edge that intersects the other triangle plane\n\t\tconst points = tri.points;\n\t\tlet count = 0;\n\t\tlet startPointIntersection = - 1;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst { start, end } = edge;\n\t\t\tstart.copy( points[ i ] );\n\t\t\tend.copy( points[ ( i + 1 ) % 3 ] );\n\t\t\tedge.delta( dir );\n\n\t\t\tconst startIntersects = isNearZero( plane.distanceToPoint( start ) );\n\t\t\tif ( isNearZero( plane.normal.dot( dir ) ) && startIntersects ) {\n\n\t\t\t\t// if the edge lies on the plane then take the line\n\t\t\t\ttargetEdge.copy( edge );\n\t\t\t\tcount = 2;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// check if the start point is near the plane because \"intersectLine\" is not robust to that case\n\t\t\tconst doesIntersect = plane.intersectLine( edge, tempPoint );\n\t\t\tif ( ! doesIntersect && startIntersects ) {\n\n\t\t\t\ttempPoint.copy( start );\n\n\t\t\t}\n\n\t\t\t// ignore the end point\n\t\t\tif ( ( doesIntersect || startIntersects ) && ! isNearZero( tempPoint.distanceTo( end ) ) ) {\n\n\t\t\t\tif ( count <= 1 ) {\n\n\t\t\t\t\t// assign to the start or end point and save which index was snapped to\n\t\t\t\t\t// the start point if necessary\n\t\t\t\t\tconst point = count === 1 ? targetEdge.start : targetEdge.end;\n\t\t\t\t\tpoint.copy( tempPoint );\n\t\t\t\t\tif ( startIntersects ) {\n\n\t\t\t\t\t\tstartPointIntersection = count;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( count >= 2 ) {\n\n\t\t\t\t\t// if we're here that means that there must have been one point that had\n\t\t\t\t\t// snapped to the start point so replace it here\n\t\t\t\t\tconst point = startPointIntersection === 1 ? targetEdge.start : targetEdge.end;\n\t\t\t\t\tpoint.copy( tempPoint );\n\t\t\t\t\tcount = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcount ++;\n\t\t\t\tif ( count === 2 && startPointIntersection === - 1 ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn count;\n\n\t}\n\n\t// TODO: If the triangles are coplanar and intersecting the target is nonsensical. It should at least\n\t// be a line contained by both triangles if not a different special case somehow represented in the return result.\n\treturn function intersectsTriangle( other, target = null, suppressLog = false ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( ! other.isExtendedTriangle ) {\n\n\t\t\tsaTri2.copy( other );\n\t\t\tsaTri2.update();\n\t\t\tother = saTri2;\n\n\t\t} else if ( other.needsUpdate ) {\n\n\t\t\tother.update();\n\n\t\t}\n\n\t\tconst plane1 = this.plane;\n\t\tconst plane2 = other.plane;\n\n\t\tif ( Math.abs( plane1.normal.dot( plane2.normal ) ) > 1.0 - 1e-10 ) {\n\n\t\t\t// perform separating axis intersection test only for coplanar triangles\n\t\t\tconst satBounds1 = this.satBounds;\n\t\t\tconst satAxes1 = this.satAxes;\n\t\t\tarr2[ 0 ] = other.a;\n\t\t\tarr2[ 1 ] = other.b;\n\t\t\tarr2[ 2 ] = other.c;\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sb = satBounds1[ i ];\n\t\t\t\tconst sa = satAxes1[ i ];\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr2 );\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t\t}\n\n\t\t\tconst satBounds2 = other.satBounds;\n\t\t\tconst satAxes2 = other.satAxes;\n\t\t\tarr1[ 0 ] = this.a;\n\t\t\tarr1[ 1 ] = this.b;\n\t\t\tarr1[ 2 ] = this.c;\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sb = satBounds2[ i ];\n\t\t\t\tconst sa = satAxes2[ i ];\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr1 );\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t\t}\n\n\t\t\t// check crossed axes\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sa1 = satAxes1[ i ];\n\t\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\n\n\t\t\t\t\tconst sa2 = satAxes2[ i2 ];\n\t\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\n\t\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, arr1 );\n\t\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, arr2 );\n\t\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( target ) {\n\n\t\t\t\t// TODO find two points that intersect on the edges and make that the result\n\t\t\t\tif ( ! suppressLog ) {\n\n\t\t\t\t\tconsole.warn( 'ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0.' );\n\n\t\t\t\t}\n\n\t\t\t\ttarget.start.set( 0, 0, 0 );\n\t\t\t\ttarget.end.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// find the edge that intersects the other triangle plane\n\t\t\tconst count1 = triIntersectPlane( this, plane2, edge1 );\n\t\t\tif ( count1 === 1 && other.containsPoint( edge1.end ) ) {\n\n\t\t\t\tif ( target ) {\n\n\t\t\t\t\ttarget.start.copy( edge1.end );\n\t\t\t\t\ttarget.end.copy( edge1.end );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else if ( count1 !== 2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// find the other triangles edge that intersects this plane\n\t\t\tconst count2 = triIntersectPlane( other, plane1, edge2 );\n\t\t\tif ( count2 === 1 && this.containsPoint( edge2.end ) ) {\n\n\t\t\t\tif ( target ) {\n\n\t\t\t\t\ttarget.start.copy( edge2.end );\n\t\t\t\t\ttarget.end.copy( edge2.end );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else if ( count2 !== 2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// find swap the second edge so both lines are running the same direction\n\t\t\tedge1.delta( dir1 );\n\t\t\tedge2.delta( dir2 );\n\n\t\t\tif ( dir1.dot( dir2 ) < 0 ) {\n\n\t\t\t\tlet tmp = edge2.start;\n\t\t\t\tedge2.start = edge2.end;\n\t\t\t\tedge2.end = tmp;\n\n\t\t\t}\n\n\t\t\t// check if the edges are overlapping\n\t\t\tconst s1 = edge1.start.dot( dir1 );\n\t\t\tconst e1 = edge1.end.dot( dir1 );\n\t\t\tconst s2 = edge2.start.dot( dir1 );\n\t\t\tconst e2 = edge2.end.dot( dir1 );\n\t\t\tconst separated1 = e1 < s2;\n\t\t\tconst separated2 = s1 < e2;\n\n\t\t\tif ( s1 !== e2 && s2 !== e1 && separated1 === separated2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// assign the target output\n\t\t\tif ( target ) {\n\n\t\t\t\ttempDir.subVectors( edge1.start, edge2.start );\n\t\t\t\tif ( tempDir.dot( dir1 ) > 0 ) {\n\n\t\t\t\t\ttarget.start.copy( edge1.start );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget.start.copy( edge2.start );\n\n\t\t\t\t}\n\n\t\t\t\ttempDir.subVectors( edge1.end, edge2.end );\n\t\t\t\tif ( tempDir.dot( dir1 ) < 0 ) {\n\n\t\t\t\t\ttarget.end.copy( edge1.end );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget.end.copy( edge2.end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t};\n\n} )();\n\n\nExtendedTriangle.prototype.distanceToPoint = ( function () {\n\n\tconst target = new Vector3();\n\treturn function distanceToPoint( point ) {\n\n\t\tthis.closestPointToPoint( point, target );\n\t\treturn point.distanceTo( target );\n\n\t};\n\n} )();\n\n\nExtendedTriangle.prototype.distanceToTriangle = ( function () {\n\n\tconst point = new Vector3();\n\tconst point2 = new Vector3();\n\tconst cornerFields = [ 'a', 'b', 'c' ];\n\tconst line1 = new Line3();\n\tconst line2 = new Line3();\n\n\treturn function distanceToTriangle( other, target1 = null, target2 = null ) {\n\n\t\tconst lineTarget = target1 || target2 ? line1 : null;\n\t\tif ( this.intersectsTriangle( other, lineTarget ) ) {\n\n\t\t\tif ( target1 || target2 ) {\n\n\t\t\t\tif ( target1 ) lineTarget.getCenter( target1 );\n\t\t\t\tif ( target2 ) lineTarget.getCenter( target2 );\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check all point distances\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tlet dist;\n\t\t\tconst field = cornerFields[ i ];\n\t\t\tconst otherVec = other[ field ];\n\t\t\tthis.closestPointToPoint( otherVec, point );\n\n\t\t\tdist = otherVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\tif ( target2 ) target2.copy( otherVec );\n\n\t\t\t}\n\n\n\t\t\tconst thisVec = this[ field ];\n\t\t\tother.closestPointToPoint( thisVec, point );\n\n\t\t\tdist = thisVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( thisVec );\n\t\t\t\tif ( target2 ) target2.copy( point );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst f11 = cornerFields[ i ];\n\t\t\tconst f12 = cornerFields[ ( i + 1 ) % 3 ];\n\t\t\tline1.set( this[ f11 ], this[ f12 ] );\n\t\t\tfor ( let i2 = 0; i2 < 3; i2 ++ ) {\n\n\t\t\t\tconst f21 = cornerFields[ i2 ];\n\t\t\t\tconst f22 = cornerFields[ ( i2 + 1 ) % 3 ];\n\t\t\t\tline2.set( other[ f21 ], other[ f22 ] );\n\n\t\t\t\tclosestPointsSegmentToSegment( line1, line2, point, point2 );\n\n\t\t\t\tconst dist = point.distanceToSquared( point2 );\n\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n", "import { Vector3, Matrix4, Line3 } from 'three';\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\nimport { ExtendedTriangle } from './ExtendedTriangle.js';\nimport { closestPointsSegmentToSegment } from './MathUtilities.js';\n\nexport class OrientedBox {\n\n\tconstructor( min, max, matrix ) {\n\n\t\tthis.isOrientedBox = true;\n\t\tthis.min = new Vector3();\n\t\tthis.max = new Vector3();\n\t\tthis.matrix = new Matrix4();\n\t\tthis.invMatrix = new Matrix4();\n\t\tthis.points = new Array( 8 ).fill().map( () => new Vector3() );\n\t\tthis.satAxes = new Array( 3 ).fill().map( () => new Vector3() );\n\t\tthis.satBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.alignedSatBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.needsUpdate = false;\n\n\t\tif ( min ) this.min.copy( min );\n\t\tif ( max ) this.max.copy( max );\n\t\tif ( matrix ) this.matrix.copy( matrix );\n\n\t}\n\n\tset( min, max, matrix ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\t\tthis.matrix.copy( matrix );\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.min.copy( other.min );\n\t\tthis.max.copy( other.max );\n\t\tthis.matrix.copy( other.matrix );\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nOrientedBox.prototype.update = ( function () {\n\n\treturn function update() {\n\n\t\tconst matrix = this.matrix;\n\t\tconst min = this.min;\n\t\tconst max = this.max;\n\n\t\tconst points = this.points;\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tconst i = ( ( 1 << 0 ) * x ) | ( ( 1 << 1 ) * y ) | ( ( 1 << 2 ) * z );\n\t\t\t\t\tconst v = points[ i ];\n\t\t\t\t\tv.x = x ? max.x : min.x;\n\t\t\t\t\tv.y = y ? max.y : min.y;\n\t\t\t\t\tv.z = z ? max.z : min.z;\n\n\t\t\t\t\tv.applyMatrix4( matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\t\tconst minVec = points[ 0 ];\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst axis = satAxes[ i ];\n\t\t\tconst sb = satBounds[ i ];\n\t\t\tconst index = 1 << i;\n\t\t\tconst pi = points[ index ];\n\n\t\t\taxis.subVectors( minVec, pi );\n\t\t\tsb.setFromPoints( axis, points );\n\n\t\t}\n\n\t\tconst alignedSatBounds = this.alignedSatBounds;\n\t\talignedSatBounds[ 0 ].setFromPointsField( points, 'x' );\n\t\talignedSatBounds[ 1 ].setFromPointsField( points, 'y' );\n\t\talignedSatBounds[ 2 ].setFromPointsField( points, 'z' );\n\n\t\tthis.invMatrix.copy( this.matrix ).invert();\n\t\tthis.needsUpdate = false;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.intersectsBox = ( function () {\n\n\tconst aabbBounds = new SeparatingAxisBounds();\n\treturn function intersectsBox( box ) {\n\n\t\t// TODO: should this be doing SAT against the AABB?\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tconst min = box.min;\n\t\tconst max = box.max;\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\t\tconst alignedSatBounds = this.alignedSatBounds;\n\n\t\taabbBounds.min = min.x;\n\t\taabbBounds.max = max.x;\n\t\tif ( alignedSatBounds[ 0 ].isSeparated( aabbBounds ) ) return false;\n\n\t\taabbBounds.min = min.y;\n\t\taabbBounds.max = max.y;\n\t\tif ( alignedSatBounds[ 1 ].isSeparated( aabbBounds ) ) return false;\n\n\t\taabbBounds.min = min.z;\n\t\taabbBounds.max = max.z;\n\t\tif ( alignedSatBounds[ 2 ].isSeparated( aabbBounds ) ) return false;\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst axis = satAxes[ i ];\n\t\t\tconst sb = satBounds[ i ];\n\t\t\taabbBounds.setFromBox( axis, box );\n\t\t\tif ( sb.isSeparated( aabbBounds ) ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.intersectsTriangle = ( function () {\n\n\tconst saTri = new ExtendedTriangle();\n\tconst pointsArr = new Array( 3 );\n\tconst cachedSatBounds = new SeparatingAxisBounds();\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\n\tconst cachedAxis = new Vector3();\n\treturn function intersectsTriangle( triangle ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( ! triangle.isExtendedTriangle ) {\n\n\t\t\tsaTri.copy( triangle );\n\t\t\tsaTri.update();\n\t\t\ttriangle = saTri;\n\n\t\t} else if ( triangle.needsUpdate ) {\n\n\t\t\ttriangle.update();\n\n\t\t}\n\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\n\t\tpointsArr[ 0 ] = triangle.a;\n\t\tpointsArr[ 1 ] = triangle.b;\n\t\tpointsArr[ 2 ] = triangle.c;\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds[ i ];\n\t\t\tconst sa = satAxes[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, pointsArr );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\tconst triSatBounds = triangle.satBounds;\n\t\tconst triSatAxes = triangle.satAxes;\n\t\tconst points = this.points;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = triSatBounds[ i ];\n\t\t\tconst sa = triSatAxes[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, points );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\t// check crossed axes\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sa1 = satAxes[ i ];\n\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\n\n\t\t\t\tconst sa2 = triSatAxes[ i2 ];\n\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\n\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, pointsArr );\n\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, points );\n\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.closestPointToPoint = ( function () {\n\n\treturn function closestPointToPoint( point, target1 ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\ttarget1\n\t\t\t.copy( point )\n\t\t\t.applyMatrix4( this.invMatrix )\n\t\t\t.clamp( this.min, this.max )\n\t\t\t.applyMatrix4( this.matrix );\n\n\t\treturn target1;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.distanceToPoint = ( function () {\n\n\tconst target = new Vector3();\n\treturn function distanceToPoint( point ) {\n\n\t\tthis.closestPointToPoint( point, target );\n\t\treturn point.distanceTo( target );\n\n\t};\n\n} )();\n\nOrientedBox.prototype.distanceToBox = ( function () {\n\n\tconst xyzFields = [ 'x', 'y', 'z' ];\n\tconst segments1 = new Array( 12 ).fill().map( () => new Line3() );\n\tconst segments2 = new Array( 12 ).fill().map( () => new Line3() );\n\n\tconst point1 = new Vector3();\n\tconst point2 = new Vector3();\n\n\t// early out if we find a value below threshold\n\treturn function distanceToBox( box, threshold = 0, target1 = null, target2 = null ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( this.intersectsBox( box ) ) {\n\n\t\t\tif ( target1 || target2 ) {\n\n\t\t\t\tbox.getCenter( point2 );\n\t\t\t\tthis.closestPointToPoint( point2, point1 );\n\t\t\t\tbox.closestPointToPoint( point1, point2 );\n\n\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tconst threshold2 = threshold * threshold;\n\t\tconst min = box.min;\n\t\tconst max = box.max;\n\t\tconst points = this.points;\n\n\n\t\t// iterate over every edge and compare distances\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check over all these points\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tpoint2.copy( p ).clamp( min, max );\n\n\t\t\tconst dist = p.distanceToSquared( point2 );\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( p );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate and check all line segment distances\n\t\tlet count = 0;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tfor ( let i1 = 0; i1 <= 1; i1 ++ ) {\n\n\t\t\t\tfor ( let i2 = 0; i2 <= 1; i2 ++ ) {\n\n\t\t\t\t\tconst nextIndex = ( i + 1 ) % 3;\n\t\t\t\t\tconst nextIndex2 = ( i + 2 ) % 3;\n\n\t\t\t\t\t// get obb line segments\n\t\t\t\t\tconst index = i1 << nextIndex | i2 << nextIndex2;\n\t\t\t\t\tconst index2 = 1 << i | i1 << nextIndex | i2 << nextIndex2;\n\t\t\t\t\tconst p1 = points[ index ];\n\t\t\t\t\tconst p2 = points[ index2 ];\n\t\t\t\t\tconst line1 = segments1[ count ];\n\t\t\t\t\tline1.set( p1, p2 );\n\n\n\t\t\t\t\t// get aabb line segments\n\t\t\t\t\tconst f1 = xyzFields[ i ];\n\t\t\t\t\tconst f2 = xyzFields[ nextIndex ];\n\t\t\t\t\tconst f3 = xyzFields[ nextIndex2 ];\n\t\t\t\t\tconst line2 = segments2[ count ];\n\t\t\t\t\tconst start = line2.start;\n\t\t\t\t\tconst end = line2.end;\n\n\t\t\t\t\tstart[ f1 ] = min[ f1 ];\n\t\t\t\t\tstart[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\n\t\t\t\t\tstart[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\n\n\t\t\t\t\tend[ f1 ] = max[ f1 ];\n\t\t\t\t\tend[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\n\t\t\t\t\tend[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\n\n\t\t\t\t\tcount ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// check all the other boxes point\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tpoint2.x = x ? max.x : min.x;\n\t\t\t\t\tpoint2.y = y ? max.y : min.y;\n\t\t\t\t\tpoint2.z = z ? max.z : min.z;\n\n\t\t\t\t\tthis.closestPointToPoint( point2, point1 );\n\t\t\t\t\tconst dist = point2.distanceToSquared( point1 );\n\t\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 12; i ++ ) {\n\n\t\t\tconst l1 = segments1[ i ];\n\t\t\tfor ( let i2 = 0; i2 < 12; i2 ++ ) {\n\n\t\t\t\tconst l2 = segments2[ i2 ];\n\t\t\t\tclosestPointsSegmentToSegment( l1, l2, point1, point2 );\n\t\t\t\tconst dist = point1.distanceToSquared( point2 );\n\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n", "export class PrimitivePool {\n\n\tconstructor( getNewPrimitive ) {\n\n\t\tthis._getNewPrimitive = getNewPrimitive;\n\t\tthis._primitives = [];\n\n\t}\n\n\tgetPrimitive() {\n\n\t\tconst primitives = this._primitives;\n\t\tif ( primitives.length === 0 ) {\n\n\t\t\treturn this._getNewPrimitive();\n\n\t\t} else {\n\n\t\t\treturn primitives.pop();\n\n\t\t}\n\n\t}\n\n\treleasePrimitive( primitive ) {\n\n\t\tthis._primitives.push( primitive );\n\n\t}\n\n}\n", "import { ExtendedTriangle } from '../math/ExtendedTriangle.js';\nimport { PrimitivePool } from './PrimitivePool.js';\n\nclass ExtendedTrianglePoolBase extends PrimitivePool {\n\n\tconstructor() {\n\n\t\tsuper( () => new ExtendedTriangle() );\n\n\t}\n\n}\n\nexport const ExtendedTrianglePool = /* @__PURE__ */ new ExtendedTrianglePoolBase();\n", "class _BufferStack {\n\n\tconstructor() {\n\n\t\tthis.float32Array = null;\n\t\tthis.uint16Array = null;\n\t\tthis.uint32Array = null;\n\n\t\tconst stack = [];\n\t\tlet prevBuffer = null;\n\t\tthis.setBuffer = buffer => {\n\n\t\t\tif ( prevBuffer ) {\n\n\t\t\t\tstack.push( prevBuffer );\n\n\t\t\t}\n\n\t\t\tprevBuffer = buffer;\n\t\t\tthis.float32Array = new Float32Array( buffer );\n\t\t\tthis.uint16Array = new Uint16Array( buffer );\n\t\t\tthis.uint32Array = new Uint32Array( buffer );\n\n\t\t};\n\n\t\tthis.clearBuffer = () => {\n\n\t\t\tprevBuffer = null;\n\t\t\tthis.float32Array = null;\n\t\t\tthis.uint16Array = null;\n\t\t\tthis.uint32Array = null;\n\n\t\t\tif ( stack.length !== 0 ) {\n\n\t\t\t\tthis.setBuffer( stack.pop() );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n}\n\nexport const BufferStack = new _BufferStack();\n", "import { Box3 } from 'three';\nimport { CONTAINED } from '../Constants.js';\nimport { arrayToBox } from '../../utils/ArrayBoxUtilities.js';\nimport { PrimitivePool } from '../../utils/PrimitivePool.js';\nimport { COUNT, OFFSET, LEFT_NODE, RIGHT_NODE, IS_LEAF, BOUNDING_DATA_INDEX } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\n\nlet _box1, _box2;\nconst boxStack = [];\nconst boxPool = /* @__PURE__ */ new PrimitivePool( () => new Box3() );\n\nexport function shapecast( bvh, root, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset ) {\n\n\t// setup\n\t_box1 = boxPool.getPrimitive();\n\t_box2 = boxPool.getPrimitive();\n\tboxStack.push( _box1, _box2 );\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\n\tconst result = shapecastTraverse( 0, bvh.geometry, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset );\n\n\t// cleanup\n\tBufferStack.clearBuffer();\n\tboxPool.releasePrimitive( _box1 );\n\tboxPool.releasePrimitive( _box2 );\n\tboxStack.pop();\n\tboxStack.pop();\n\n\tconst length = boxStack.length;\n\tif ( length > 0 ) {\n\n\t\t_box2 = boxStack[ length - 1 ];\n\t\t_box1 = boxStack[ length - 2 ];\n\n\t}\n\n\treturn result;\n\n}\n\nfunction shapecastTraverse(\n\tnodeIndex32,\n\tgeometry,\n\tintersectsBoundsFunc,\n\tintersectsRangeFunc,\n\tnodeScoreFunc = null,\n\tnodeIndexByteOffset = 0, // offset for unique node identifier\n\tdepth = 0\n) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, _box1 );\n\t\treturn intersectsRangeFunc( offset, count, false, depth, nodeIndexByteOffset + nodeIndex32, _box1 );\n\n\t} else {\n\n\t\tconst left = LEFT_NODE( nodeIndex32 );\n\t\tconst right = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\tlet c1 = left;\n\t\tlet c2 = right;\n\n\t\tlet score1, score2;\n\t\tlet box1, box2;\n\t\tif ( nodeScoreFunc ) {\n\n\t\t\tbox1 = _box1;\n\t\t\tbox2 = _box2;\n\n\t\t\t// bounding data is not offset\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\n\n\t\t\tscore1 = nodeScoreFunc( box1 );\n\t\t\tscore2 = nodeScoreFunc( box2 );\n\n\t\t\tif ( score2 < score1 ) {\n\n\t\t\t\tc1 = right;\n\t\t\t\tc2 = left;\n\n\t\t\t\tconst temp = score1;\n\t\t\t\tscore1 = score2;\n\t\t\t\tscore2 = temp;\n\n\t\t\t\tbox1 = box2;\n\t\t\t\t// box2 is always set before use below\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Check box 1 intersection\n\t\tif ( ! box1 ) {\n\n\t\t\tbox1 = _box1;\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\n\n\t\t}\n\n\t\tconst isC1Leaf = IS_LEAF( c1 * 2, uint16Array );\n\t\tconst c1Intersection = intersectsBoundsFunc( box1, isC1Leaf, score1, depth + 1, nodeIndexByteOffset + c1 );\n\n\t\tlet c1StopTraversal;\n\t\tif ( c1Intersection === CONTAINED ) {\n\n\t\t\tconst offset = getLeftOffset( c1 );\n\t\t\tconst end = getRightEndOffset( c1 );\n\t\t\tconst count = end - offset;\n\n\t\t\tc1StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c1, box1 );\n\n\t\t} else {\n\n\t\t\tc1StopTraversal =\n\t\t\t\tc1Intersection &&\n\t\t\t\tshapecastTraverse(\n\t\t\t\t\tc1,\n\t\t\t\t\tgeometry,\n\t\t\t\t\tintersectsBoundsFunc,\n\t\t\t\t\tintersectsRangeFunc,\n\t\t\t\t\tnodeScoreFunc,\n\t\t\t\t\tnodeIndexByteOffset,\n\t\t\t\t\tdepth + 1\n\t\t\t\t);\n\n\t\t}\n\n\t\tif ( c1StopTraversal ) return true;\n\n\t\t// Check box 2 intersection\n\t\t// cached box2 will have been overwritten by previous traversal\n\t\tbox2 = _box2;\n\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\n\n\t\tconst isC2Leaf = IS_LEAF( c2 * 2, uint16Array );\n\t\tconst c2Intersection = intersectsBoundsFunc( box2, isC2Leaf, score2, depth + 1, nodeIndexByteOffset + c2 );\n\n\t\tlet c2StopTraversal;\n\t\tif ( c2Intersection === CONTAINED ) {\n\n\t\t\tconst offset = getLeftOffset( c2 );\n\t\t\tconst end = getRightEndOffset( c2 );\n\t\t\tconst count = end - offset;\n\n\t\t\tc2StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c2, box2 );\n\n\t\t} else {\n\n\t\t\tc2StopTraversal =\n\t\t\t\tc2Intersection &&\n\t\t\t\tshapecastTraverse(\n\t\t\t\t\tc2,\n\t\t\t\t\tgeometry,\n\t\t\t\t\tintersectsBoundsFunc,\n\t\t\t\t\tintersectsRangeFunc,\n\t\t\t\t\tnodeScoreFunc,\n\t\t\t\t\tnodeIndexByteOffset,\n\t\t\t\t\tdepth + 1\n\t\t\t\t);\n\n\t\t}\n\n\t\tif ( c2StopTraversal ) return true;\n\n\t\treturn false;\n\n\t\t// Define these inside the function so it has access to the local variables needed\n\t\t// when converting to the buffer equivalents\n\t\tfunction getLeftOffset( nodeIndex32 ) {\n\n\t\t\tconst { uint16Array, uint32Array } = BufferStack;\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t// traverse until we find a leaf\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\t\tnodeIndex32 = LEFT_NODE( nodeIndex32 );\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t}\n\n\t\t\treturn OFFSET( nodeIndex32, uint32Array );\n\n\t\t}\n\n\t\tfunction getRightEndOffset( nodeIndex32 ) {\n\n\t\t\tconst { uint16Array, uint32Array } = BufferStack;\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t// traverse until we find a leaf\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\t\t// adjust offset to point to the right node\n\t\t\t\tnodeIndex32 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t}\n\n\t\t\t// return the end offset of the triangle range\n\t\t\treturn OFFSET( nodeIndex32, uint32Array ) + COUNT( nodeIndex16, uint16Array );\n\n\t\t}\n\n\t}\n\n}\n", "import { Vector3 } from 'three';\n\nconst temp = /* @__PURE__ */ new Vector3();\nconst temp1 = /* @__PURE__ */ new Vector3();\n\nexport function closestPointToPoint(\n\tbvh,\n\tpoint,\n\ttarget = { },\n\tminThreshold = 0,\n\tmaxThreshold = Infinity,\n) {\n\n\t// early out if under minThreshold\n\t// skip checking if over maxThreshold\n\t// set minThreshold = maxThreshold to quickly check if a point is within a threshold\n\t// returns Infinity if no value found\n\tconst minThresholdSq = minThreshold * minThreshold;\n\tconst maxThresholdSq = maxThreshold * maxThreshold;\n\tlet closestDistanceSq = Infinity;\n\tlet closestDistanceTriIndex = null;\n\tbvh.shapecast(\n\n\t\t{\n\n\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\ttemp.copy( point ).clamp( box.min, box.max );\n\t\t\t\treturn temp.distanceToSquared( point );\n\n\t\t\t},\n\n\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\treturn score < closestDistanceSq && score < maxThresholdSq;\n\n\t\t\t},\n\n\t\t\tintersectsTriangle: ( tri, triIndex ) => {\n\n\t\t\t\ttri.closestPointToPoint( point, temp );\n\t\t\t\tconst distSq = point.distanceToSquared( temp );\n\t\t\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\t\t\ttemp1.copy( temp );\n\t\t\t\t\tclosestDistanceSq = distSq;\n\t\t\t\t\tclosestDistanceTriIndex = triIndex;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distSq < minThresholdSq ) {\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t}\n\n\t);\n\n\tif ( closestDistanceSq === Infinity ) return null;\n\n\tconst closestDistance = Math.sqrt( closestDistanceSq );\n\n\tif ( ! target.point ) target.point = temp1.clone();\n\telse target.point.copy( temp1 );\n\ttarget.distance = closestDistance,\n\ttarget.faceIndex = closestDistanceTriIndex;\n\n\treturn target;\n\n}\n", "import { Vector3, Vector2, Triangle, DoubleSide, BackSide } from 'three';\n\n// Ripped and modified From THREE.js Mesh raycast\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L115\nconst _vA = /* @__PURE__ */ new Vector3();\nconst _vB = /* @__PURE__ */ new Vector3();\nconst _vC = /* @__PURE__ */ new Vector3();\n\nconst _uvA = /* @__PURE__ */ new Vector2();\nconst _uvB = /* @__PURE__ */ new Vector2();\nconst _uvC = /* @__PURE__ */ new Vector2();\n\nconst _normalA = /* @__PURE__ */ new Vector3();\nconst _normalB = /* @__PURE__ */ new Vector3();\nconst _normalC = /* @__PURE__ */ new Vector3();\n\nconst _intersectionPoint = /* @__PURE__ */ new Vector3();\nfunction checkIntersection( ray, pA, pB, pC, point, side ) {\n\n\tlet intersect;\n\tif ( side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\tconst distance = ray.origin.distanceTo( point );\n\n\treturn {\n\n\t\tdistance: distance,\n\t\tpoint: point.clone(),\n\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( ray, position, normal, uv, uv1, a, b, c, side ) {\n\n\t_vA.fromBufferAttribute( position, a );\n\t_vB.fromBufferAttribute( position, b );\n\t_vC.fromBufferAttribute( position, c );\n\n\tconst intersection = checkIntersection( ray, _vA, _vB, _vC, _intersectionPoint, side );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv1, a );\n\t\t\t_uvB.fromBufferAttribute( uv1, b );\n\t\t\t_uvC.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA, _vB, _vC, _normalA, _normalB, _normalC, new Vector3() );\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.faceIndex = a;\n\n\t}\n\n\treturn intersection;\n\n}\n\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L258\nfunction intersectTri( geo, side, ray, tri, intersections ) {\n\n\tconst triOffset = tri * 3;\n\tlet a = triOffset + 0;\n\tlet b = triOffset + 1;\n\tlet c = triOffset + 2;\n\n\tconst index = geo.index;\n\tif ( geo.index ) {\n\n\t\ta = index.getX( a );\n\t\tb = index.getX( b );\n\t\tc = index.getX( c );\n\n\t}\n\n\tconst { position, normal, uv, uv1 } = geo.attributes;\n\tconst intersection = checkBufferGeometryIntersection( ray, position, normal, uv, uv1, a, b, c, side );\n\n\tif ( intersection ) {\n\n\t\tintersection.faceIndex = tri;\n\t\tif ( intersections ) intersections.push( intersection );\n\t\treturn intersection;\n\n\t}\n\n\treturn null;\n\n}\n\nexport { intersectTri };\n", "\nimport { Vector2, Vector3, Triangle } from 'three';\n\n// sets the vertices of triangle `tri` with the 3 vertices after i\nexport function setTriangle( tri, i, index, pos ) {\n\n\tconst ta = tri.a;\n\tconst tb = tri.b;\n\tconst tc = tri.c;\n\n\tlet i0 = i;\n\tlet i1 = i + 1;\n\tlet i2 = i + 2;\n\tif ( index ) {\n\n\t\ti0 = index.getX( i0 );\n\t\ti1 = index.getX( i1 );\n\t\ti2 = index.getX( i2 );\n\n\t}\n\n\tta.x = pos.getX( i0 );\n\tta.y = pos.getY( i0 );\n\tta.z = pos.getZ( i0 );\n\n\ttb.x = pos.getX( i1 );\n\ttb.y = pos.getY( i1 );\n\ttb.z = pos.getZ( i1 );\n\n\ttc.x = pos.getX( i2 );\n\ttc.y = pos.getY( i2 );\n\ttc.z = pos.getZ( i2 );\n\n}\n\nconst tempV1 = /* @__PURE__ */ new Vector3();\nconst tempV2 = /* @__PURE__ */ new Vector3();\nconst tempV3 = /* @__PURE__ */ new Vector3();\nconst tempUV1 = /* @__PURE__ */ new Vector2();\nconst tempUV2 = /* @__PURE__ */ new Vector2();\nconst tempUV3 = /* @__PURE__ */ new Vector2();\n\nexport function getTriangleHitPointInfo( point, geometry, triangleIndex, target ) {\n\n\tconst indices = geometry.getIndex().array;\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst uvs = geometry.getAttribute( 'uv' );\n\n\tconst a = indices[ triangleIndex * 3 ];\n\tconst b = indices[ triangleIndex * 3 + 1 ];\n\tconst c = indices[ triangleIndex * 3 + 2 ];\n\n\ttempV1.fromBufferAttribute( positions, a );\n\ttempV2.fromBufferAttribute( positions, b );\n\ttempV3.fromBufferAttribute( positions, c );\n\n\t// find the associated material index\n\tlet materialIndex = 0;\n\tconst groups = geometry.groups;\n\tconst firstVertexIndex = triangleIndex * 3;\n\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\t\tconst { start, count } = group;\n\t\tif ( firstVertexIndex >= start && firstVertexIndex < start + count ) {\n\n\t\t\tmaterialIndex = group.materialIndex;\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// extract uvs\n\tlet uv = null;\n\tif ( uvs ) {\n\n\t\ttempUV1.fromBufferAttribute( uvs, a );\n\t\ttempUV2.fromBufferAttribute( uvs, b );\n\t\ttempUV3.fromBufferAttribute( uvs, c );\n\n\t\tif ( target && target.uv ) uv = target.uv;\n\t\telse uv = new Vector2();\n\n\t\tTriangle.getInterpolation( point, tempV1, tempV2, tempV3, tempUV1, tempUV2, tempUV3, uv );\n\n\t}\n\n\t// adjust the provided target or create a new one\n\tif ( target ) {\n\n\t\tif ( ! target.face ) target.face = { };\n\t\ttarget.face.a = a;\n\t\ttarget.face.b = b;\n\t\ttarget.face.c = c;\n\t\ttarget.face.materialIndex = materialIndex;\n\t\tif ( ! target.face.normal ) target.face.normal = new Vector3();\n\t\tTriangle.getNormal( tempV1, tempV2, tempV3, target.face.normal );\n\n\t\tif ( uv ) target.uv = uv;\n\n\t\treturn target;\n\n\t} else {\n\n\t\treturn {\n\t\t\tface: {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tmaterialIndex: materialIndex,\n\t\t\t\tnormal: Triangle.getNormal( tempV1, tempV2, tempV3, new Vector3() )\n\t\t\t},\n\t\t\tuv: uv\n\t\t};\n\n\t}\n\n}\n", "import { intersectTri } from '../../utils/ThreeRayIntersectUtilities.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\n\n/*************************************************************/\n/* This file is generated from \"iterationUtils.template.js\". */\n/*************************************************************/\n/* eslint-disable indent */\n\nfunction intersectTris( bvh, side, ray, offset, count, intersections ) {\n\n\tconst { geometry, _indirectBuffer } = bvh;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\n\t\tintersectTri( geometry, side, ray, i, intersections );\n\n\n\t}\n\n}\n\nfunction intersectClosestTri( bvh, side, ray, offset, count ) {\n\n\tconst { geometry, _indirectBuffer } = bvh;\n\tlet dist = Infinity;\n\tlet res = null;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tlet intersection;\n\n\t\tintersection = intersectTri( geometry, side, ray, i );\n\n\n\t\tif ( intersection && intersection.distance < dist ) {\n\n\t\t\tres = intersection;\n\t\t\tdist = intersection.distance;\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\nfunction iterateOverTriangles(\n\toffset,\n\tcount,\n\tbvh,\n\tintersectsTriangleFunc,\n\tcontained,\n\tdepth,\n\ttriangle\n) {\n\n\tconst { geometry } = bvh;\n\tconst { index } = geometry;\n\tconst pos = geometry.attributes.position;\n\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\tlet tri;\n\n\t\ttri = i;\n\n\t\tsetTriangle( triangle, tri * 3, index, pos );\n\t\ttriangle.needsUpdate = true;\n\n\t\tif ( intersectsTriangleFunc( triangle, tri, contained, depth ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\nexport { intersectClosestTri, intersectTris, iterateOverTriangles };\n", "import { IS_LEAFNODE_FLAG } from '../Constants.js';\n\n/****************************************************/\n/* This file is generated from \"refit.template.js\". */\n/****************************************************/\n\nfunction refit( bvh, nodeIndices = null ) {\n\n\tif ( nodeIndices && Array.isArray( nodeIndices ) ) {\n\n\t\tnodeIndices = new Set( nodeIndices );\n\n\t}\n\n\tconst geometry = bvh.geometry;\n\tconst indexArr = geometry.index ? geometry.index.array : null;\n\tconst posAttr = geometry.attributes.position;\n\n\tlet buffer, uint32Array, uint16Array, float32Array;\n\tlet byteOffset = 0;\n\tconst roots = bvh._roots;\n\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\tbuffer = roots[ i ];\n\t\tuint32Array = new Uint32Array( buffer );\n\t\tuint16Array = new Uint16Array( buffer );\n\t\tfloat32Array = new Float32Array( buffer );\n\n\t\t_traverse( 0, byteOffset );\n\t\tbyteOffset += buffer.byteLength;\n\n\t}\n\n\tfunction _traverse( node32Index, byteOffset, force = false ) {\n\n\t\tconst node16Index = node32Index * 2;\n\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\tif ( isLeaf ) {\n\n\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\n\t\t\tlet minx = Infinity;\n\t\t\tlet miny = Infinity;\n\t\t\tlet minz = Infinity;\n\t\t\tlet maxx = - Infinity;\n\t\t\tlet maxy = - Infinity;\n\t\t\tlet maxz = - Infinity;\n\n\n\t\t\tfor ( let i = 3 * offset, l = 3 * ( offset + count ); i < l; i ++ ) {\n\n\t\t\t\tlet index = indexArr[ i ];\n\t\t\t\tconst x = posAttr.getX( index );\n\t\t\t\tconst y = posAttr.getY( index );\n\t\t\t\tconst z = posAttr.getZ( index );\n\n\t\t\t\tif ( x < minx ) minx = x;\n\t\t\t\tif ( x > maxx ) maxx = x;\n\n\t\t\t\tif ( y < miny ) miny = y;\n\t\t\t\tif ( y > maxy ) maxy = y;\n\n\t\t\t\tif ( z < minz ) minz = z;\n\t\t\t\tif ( z > maxz ) maxz = z;\n\n\t\t\t}\n\n\n\t\t\tif (\n\t\t\t\tfloat32Array[ node32Index + 0 ] !== minx ||\n\t\t\t\tfloat32Array[ node32Index + 1 ] !== miny ||\n\t\t\t\tfloat32Array[ node32Index + 2 ] !== minz ||\n\n\t\t\t\tfloat32Array[ node32Index + 3 ] !== maxx ||\n\t\t\t\tfloat32Array[ node32Index + 4 ] !== maxy ||\n\t\t\t\tfloat32Array[ node32Index + 5 ] !== maxz\n\t\t\t) {\n\n\t\t\t\tfloat32Array[ node32Index + 0 ] = minx;\n\t\t\t\tfloat32Array[ node32Index + 1 ] = miny;\n\t\t\t\tfloat32Array[ node32Index + 2 ] = minz;\n\n\t\t\t\tfloat32Array[ node32Index + 3 ] = maxx;\n\t\t\t\tfloat32Array[ node32Index + 4 ] = maxy;\n\t\t\t\tfloat32Array[ node32Index + 5 ] = maxz;\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst left = node32Index + 8;\n\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\n\t\t\t// the identifying node indices provided by the shapecast function include offsets of all\n\t\t\t// root buffers to guarantee they're unique between roots so offset left and right indices here.\n\t\t\tconst offsetLeft = left + byteOffset;\n\t\t\tconst offsetRight = right + byteOffset;\n\t\t\tlet forceChildren = force;\n\t\t\tlet includesLeft = false;\n\t\t\tlet includesRight = false;\n\n\t\t\tif ( nodeIndices ) {\n\n\t\t\t\t// if we see that neither the left or right child are included in the set that need to be updated\n\t\t\t\t// then we assume that all children need to be updated.\n\t\t\t\tif ( ! forceChildren ) {\n\n\t\t\t\t\tincludesLeft = nodeIndices.has( offsetLeft );\n\t\t\t\t\tincludesRight = nodeIndices.has( offsetRight );\n\t\t\t\t\tforceChildren = ! includesLeft && ! includesRight;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tincludesLeft = true;\n\t\t\t\tincludesRight = true;\n\n\t\t\t}\n\n\t\t\tconst traverseLeft = forceChildren || includesLeft;\n\t\t\tconst traverseRight = forceChildren || includesRight;\n\n\t\t\tlet leftChange = false;\n\t\t\tif ( traverseLeft ) {\n\n\t\t\t\tleftChange = _traverse( left, byteOffset, forceChildren );\n\n\t\t\t}\n\n\t\t\tlet rightChange = false;\n\t\t\tif ( traverseRight ) {\n\n\t\t\t\trightChange = _traverse( right, byteOffset, forceChildren );\n\n\t\t\t}\n\n\t\t\tconst didChange = leftChange || rightChange;\n\t\t\tif ( didChange ) {\n\n\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tconst lefti = left + i;\n\t\t\t\t\tconst righti = right + i;\n\t\t\t\t\tconst minLeftValue = float32Array[ lefti ];\n\t\t\t\t\tconst maxLeftValue = float32Array[ lefti + 3 ];\n\t\t\t\t\tconst minRightValue = float32Array[ righti ];\n\t\t\t\t\tconst maxRightValue = float32Array[ righti + 3 ];\n\n\t\t\t\t\tfloat32Array[ node32Index + i ] = minLeftValue < minRightValue ? minLeftValue : minRightValue;\n\t\t\t\t\tfloat32Array[ node32Index + i + 3 ] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn didChange;\n\n\t\t}\n\n\t}\n\n}\n\nexport { refit };\n", "import { Box3 } from 'three';\nimport { arrayToBox } from '../../utils/ArrayBoxUtilities.js';\n\nconst _boundingBox = /* @__PURE__ */ new Box3();\nexport function intersectRay( nodeIndex32, array, ray, target ) {\n\n\tarrayToBox( nodeIndex32, array, _boundingBox );\n\treturn ray.intersectBox( _boundingBox, target );\n\n}\n", "import { intersectTri } from '../../utils/ThreeRayIntersectUtilities.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\n\n/*************************************************************/\n/* This file is generated from \"iterationUtils.template.js\". */\n/*************************************************************/\n/* eslint-disable indent */\n\nfunction intersectTris_indirect( bvh, side, ray, offset, count, intersections ) {\n\n\tconst { geometry, _indirectBuffer } = bvh;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tlet vi = _indirectBuffer ? _indirectBuffer[ i ] : i;\n\t\tintersectTri( geometry, side, ray, vi, intersections );\n\n\n\t}\n\n}\n\nfunction intersectClosestTri_indirect( bvh, side, ray, offset, count ) {\n\n\tconst { geometry, _indirectBuffer } = bvh;\n\tlet dist = Infinity;\n\tlet res = null;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tlet intersection;\n\t\tintersection = intersectTri( geometry, side, ray, _indirectBuffer ? _indirectBuffer[ i ] : i );\n\n\n\t\tif ( intersection && intersection.distance < dist ) {\n\n\t\t\tres = intersection;\n\t\t\tdist = intersection.distance;\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\nfunction iterateOverTriangles_indirect(\n\toffset,\n\tcount,\n\tbvh,\n\tintersectsTriangleFunc,\n\tcontained,\n\tdepth,\n\ttriangle\n) {\n\n\tconst { geometry } = bvh;\n\tconst { index } = geometry;\n\tconst pos = geometry.attributes.position;\n\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\tlet tri;\n\t\ttri = bvh.resolveTriangleIndex( i );\n\n\t\tsetTriangle( triangle, tri * 3, index, pos );\n\t\ttriangle.needsUpdate = true;\n\n\t\tif ( intersectsTriangleFunc( triangle, tri, contained, depth ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\nexport { intersectClosestTri_indirect, intersectTris_indirect, iterateOverTriangles_indirect };\n", "import { Vector3 } from 'three';\nimport { intersectRay } from '../utils/intersectUtils.js';\nimport { IS_LEAF, OFFSET, COUNT, LEFT_NODE, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport { intersectTris } from '../utils/iterationUtils.generated.js';\nimport '../utils/iterationUtils_indirect.generated.js';\n\n/******************************************************/\n/* This file is generated from \"raycast.template.js\". */\n/******************************************************/\n\nconst _boxIntersection = /* @__PURE__ */ new Vector3();\nfunction raycast( bvh, root, side, ray, intersects ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\t_raycast( 0, bvh, side, ray, intersects );\n\tBufferStack.clearBuffer();\n\n}\n\nfunction _raycast( nodeIndex32, bvh, side, ray, intersects ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tconst nodeIndex16 = nodeIndex32 * 2;\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\n\t\tintersectTris( bvh, side, ray, offset, count, intersects );\n\n\n\t} else {\n\n\t\tconst leftIndex = LEFT_NODE( nodeIndex32 );\n\t\tif ( intersectRay( leftIndex, float32Array, ray, _boxIntersection ) ) {\n\n\t\t\t_raycast( leftIndex, bvh, side, ray, intersects );\n\n\t\t}\n\n\t\tconst rightIndex = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\tif ( intersectRay( rightIndex, float32Array, ray, _boxIntersection ) ) {\n\n\t\t\t_raycast( rightIndex, bvh, side, ray, intersects );\n\n\t\t}\n\n\t}\n\n}\n\nexport { raycast };\n", "import { Vector3 } from 'three';\nimport { IS_LEAF, OFFSET, COUNT, SPLIT_AXIS, LEFT_NODE, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport { intersectRay } from '../utils/intersectUtils.js';\nimport { intersectClosestTri } from '../utils/iterationUtils.generated.js';\nimport '../utils/iterationUtils_indirect.generated.js';\n\n/***********************************************************/\n/* This file is generated from \"raycastFirst.template.js\". */\n/***********************************************************/\nconst _boxIntersection = /* @__PURE__ */ new Vector3();\nconst _xyzFields = [ 'x', 'y', 'z' ];\nfunction raycastFirst( bvh, root, side, ray ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\tconst result = _raycastFirst( 0, bvh, side, ray );\n\tBufferStack.clearBuffer();\n\n\treturn result;\n\n}\n\nfunction _raycastFirst( nodeIndex32, bvh, side, ray ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\n\t\treturn intersectClosestTri( bvh, side, ray, offset, count );\n\n\n\t} else {\n\n\t\t// consider the position of the split plane with respect to the oncoming ray; whichever direction\n\t\t// the ray is coming from, look for an intersection among that side of the tree first\n\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\t\tconst xyzAxis = _xyzFields[ splitAxis ];\n\t\tconst rayDir = ray.direction[ xyzAxis ];\n\t\tconst leftToRight = rayDir >= 0;\n\n\t\t// c1 is the child to check first\n\t\tlet c1, c2;\n\t\tif ( leftToRight ) {\n\n\t\t\tc1 = LEFT_NODE( nodeIndex32 );\n\t\t\tc2 = RIGHT_NODE( nodeIndex32, uint32Array );\n\n\t\t} else {\n\n\t\t\tc1 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\tc2 = LEFT_NODE( nodeIndex32 );\n\n\t\t}\n\n\t\tconst c1Intersection = intersectRay( c1, float32Array, ray, _boxIntersection );\n\t\tconst c1Result = c1Intersection ? _raycastFirst( c1, bvh, side, ray ) : null;\n\n\t\t// if we got an intersection in the first node and it's closer than the second node's bounding\n\t\t// box, we don't need to consider the second node because it couldn't possibly be a better result\n\t\tif ( c1Result ) {\n\n\t\t\t// check if the point is within the second bounds\n\t\t\t// \"point\" is in the local frame of the bvh\n\t\t\tconst point = c1Result.point[ xyzAxis ];\n\t\t\tconst isOutside = leftToRight ?\n\t\t\t\tpoint <= float32Array[ c2 + splitAxis ] : // min bounding data\n\t\t\t\tpoint >= float32Array[ c2 + splitAxis + 3 ]; // max bounding data\n\n\t\t\tif ( isOutside ) {\n\n\t\t\t\treturn c1Result;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// either there was no intersection in the first node, or there could still be a closer\n\t\t// intersection in the second, so check the second node and then take the better of the two\n\t\tconst c2Intersection = intersectRay( c2, float32Array, ray, _boxIntersection );\n\t\tconst c2Result = c2Intersection ? _raycastFirst( c2, bvh, side, ray ) : null;\n\n\t\tif ( c1Result && c2Result ) {\n\n\t\t\treturn c1Result.distance <= c2Result.distance ? c1Result : c2Result;\n\n\t\t} else {\n\n\t\t\treturn c1Result || c2Result || null;\n\n\t\t}\n\n\t}\n\n}\n\nexport { raycastFirst };\n", "import { Box3, Matrix4 } from 'three';\nimport { OrientedBox } from '../../math/OrientedBox.js';\nimport { ExtendedTriangle } from '../../math/ExtendedTriangle.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\nimport { arrayToBox } from '../../utils/ArrayBoxUtilities.js';\nimport { IS_LEAF, OFFSET, COUNT, BOUNDING_DATA_INDEX } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\n\n/*****************************************************************/\n/* This file is generated from \"intersectsGeometry.template.js\". */\n/*****************************************************************/\n/* eslint-disable indent */\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nconst triangle = /* @__PURE__ */ new ExtendedTriangle();\nconst triangle2 = /* @__PURE__ */ new ExtendedTriangle();\nconst invertedMat = /* @__PURE__ */ new Matrix4();\n\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\n\nfunction intersectsGeometry( bvh, root, otherGeometry, geometryToBvh ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\tconst result = _intersectsGeometry( 0, bvh, otherGeometry, geometryToBvh );\n\tBufferStack.clearBuffer();\n\n\treturn result;\n\n}\n\nfunction _intersectsGeometry( nodeIndex32, bvh, otherGeometry, geometryToBvh, cachedObb = null ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tif ( cachedObb === null ) {\n\n\t\tif ( ! otherGeometry.boundingBox ) {\n\n\t\t\totherGeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\t\tcachedObb = obb;\n\n\t}\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst thisGeometry = bvh.geometry;\n\t\tconst thisIndex = thisGeometry.index;\n\t\tconst thisPos = thisGeometry.attributes.position;\n\n\t\tconst index = otherGeometry.index;\n\t\tconst pos = otherGeometry.attributes.position;\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\t// get the inverse of the geometry matrix so we can transform our triangles into the\n\t\t// geometry space we're trying to test. We assume there are fewer triangles being checked\n\t\t// here.\n\t\tinvertedMat.copy( geometryToBvh ).invert();\n\n\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t// if there's a bounds tree\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, obb2 );\n\t\t\tobb2.matrix.copy( invertedMat );\n\t\t\tobb2.needsUpdate = true;\n\n\t\t\t// TODO: use a triangle iteration function here\n\t\t\tconst res = otherGeometry.boundsTree.shapecast( {\n\n\t\t\t\tintersectsBounds: box => obb2.intersectsBox( box ),\n\n\t\t\t\tintersectsTriangle: tri => {\n\n\t\t\t\t\ttri.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.needsUpdate = true;\n\n\n\t\t\t\t\tfor ( let i = offset * 3, l = ( count + offset ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\t\t\tsetTriangle( triangle2, i, thisIndex, thisPos );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\t\t\t\t\t\tif ( tri.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn res;\n\n\t\t} else {\n\n\t\t\t// if we're just dealing with raw geometry\n\n\t\t\tfor ( let i = offset * 3, l = ( count + offset ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\tsetTriangle( triangle, i, thisIndex, thisPos );\n\n\n\t\t\t\ttriangle.a.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.b.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.c.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\tfor ( let i2 = 0, l2 = index.count; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\tsetTriangle( triangle2, i2, index, pos );\n\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\tif ( triangle.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\n\t\t}\n\n\t} else {\n\n\t\tconst left = nodeIndex32 + 8;\n\t\tconst right = uint32Array[ nodeIndex32 + 6 ];\n\n\t\tarrayToBox( BOUNDING_DATA_INDEX( left ), float32Array, boundingBox );\n\t\tconst leftIntersection =\n\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t_intersectsGeometry( left, bvh, otherGeometry, geometryToBvh, cachedObb );\n\n\t\tif ( leftIntersection ) return true;\n\n\t\tarrayToBox( BOUNDING_DATA_INDEX( right ), float32Array, boundingBox );\n\t\tconst rightIntersection =\n\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t_intersectsGeometry( right, bvh, otherGeometry, geometryToBvh, cachedObb );\n\n\t\tif ( rightIntersection ) return true;\n\n\t\treturn false;\n\n\t}\n\n}\n\nexport { intersectsGeometry };\n", "import { Matrix4, Vector3 } from 'three';\nimport { OrientedBox } from '../../math/OrientedBox.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\nimport { getTriCount } from '../build/geometryUtils.js';\nimport { ExtendedTrianglePool } from '../../utils/ExtendedTrianglePool.js';\n\n/*********************************************************************/\n/* This file is generated from \"closestPointToGeometry.template.js\". */\n/*********************************************************************/\n\nconst tempMatrix = /* @__PURE__ */ new Matrix4();\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\nconst temp1 = /* @__PURE__ */ new Vector3();\nconst temp2 = /* @__PURE__ */ new Vector3();\nconst temp3 = /* @__PURE__ */ new Vector3();\nconst temp4 = /* @__PURE__ */ new Vector3();\n\nfunction closestPointToGeometry(\n\tbvh,\n\totherGeometry,\n\tgeometryToBvh,\n\ttarget1 = { },\n\ttarget2 = { },\n\tminThreshold = 0,\n\tmaxThreshold = Infinity,\n) {\n\n\tif ( ! otherGeometry.boundingBox ) {\n\n\t\totherGeometry.computeBoundingBox();\n\n\t}\n\n\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\tobb.needsUpdate = true;\n\n\tconst geometry = bvh.geometry;\n\tconst pos = geometry.attributes.position;\n\tconst index = geometry.index;\n\tconst otherPos = otherGeometry.attributes.position;\n\tconst otherIndex = otherGeometry.index;\n\tconst triangle = ExtendedTrianglePool.getPrimitive();\n\tconst triangle2 = ExtendedTrianglePool.getPrimitive();\n\n\tlet tempTarget1 = temp1;\n\tlet tempTargetDest1 = temp2;\n\tlet tempTarget2 = null;\n\tlet tempTargetDest2 = null;\n\n\tif ( target2 ) {\n\n\t\ttempTarget2 = temp3;\n\t\ttempTargetDest2 = temp4;\n\n\t}\n\n\tlet closestDistance = Infinity;\n\tlet closestDistanceTriIndex = null;\n\tlet closestDistanceOtherTriIndex = null;\n\ttempMatrix.copy( geometryToBvh ).invert();\n\tobb2.matrix.copy( tempMatrix );\n\tbvh.shapecast(\n\t\t{\n\n\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\treturn obb.distanceToBox( box );\n\n\t\t\t},\n\n\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\tif ( score < closestDistance && score < maxThreshold ) {\n\n\t\t\t\t\t// if we know the triangles of this bounds will be intersected next then\n\t\t\t\t\t// save the bounds to use during triangle checks.\n\t\t\t\t\tif ( isLeaf ) {\n\n\t\t\t\t\t\tobb2.min.copy( box.min );\n\t\t\t\t\t\tobb2.max.copy( box.max );\n\t\t\t\t\t\tobb2.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\tintersectsRange: ( offset, count ) => {\n\n\t\t\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t\t\t// if the other geometry has a bvh then use the accelerated path where we use shapecast to find\n\t\t\t\t\t// the closest bounds in the other geometry to check.\n\t\t\t\t\tconst otherBvh = otherGeometry.boundsTree;\n\t\t\t\t\treturn otherBvh.shapecast( {\n\t\t\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\t\t\treturn obb2.distanceToBox( box );\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\t\t\treturn score < closestDistance && score < maxThreshold;\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tintersectsRange: ( otherOffset, otherCount ) => {\n\n\t\t\t\t\t\t\tfor ( let i2 = otherOffset, l2 = otherOffset + otherCount; i2 < l2; i2 ++ ) {\n\n\n\t\t\t\t\t\t\t\tsetTriangle( triangle2, 3 * i2, otherIndex, otherPos );\n\n\t\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\n\t\t\t\t\t\t\t\t\tsetTriangle( triangle, 3 * i, index, pos );\n\n\t\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i;\n\t\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// If no bounds tree then we'll just check every triangle.\n\t\t\t\t\tconst triCount = getTriCount( otherGeometry );\n\t\t\t\t\tfor ( let i2 = 0, l2 = triCount; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\t\tsetTriangle( triangle2, 3 * i2, otherIndex, otherPos );\n\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\n\t\t\t\t\t\t\tsetTriangle( triangle, 3 * i, index, pos );\n\n\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i;\n\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t}\n\n\t);\n\n\tExtendedTrianglePool.releasePrimitive( triangle );\n\tExtendedTrianglePool.releasePrimitive( triangle2 );\n\n\tif ( closestDistance === Infinity ) {\n\n\t\treturn null;\n\n\t}\n\n\tif ( ! target1.point ) {\n\n\t\ttarget1.point = tempTargetDest1.clone();\n\n\t} else {\n\n\t\ttarget1.point.copy( tempTargetDest1 );\n\n\t}\n\n\ttarget1.distance = closestDistance,\n\ttarget1.faceIndex = closestDistanceTriIndex;\n\n\tif ( target2 ) {\n\n\t\tif ( ! target2.point ) target2.point = tempTargetDest2.clone();\n\t\telse target2.point.copy( tempTargetDest2 );\n\t\ttarget2.point.applyMatrix4( tempMatrix );\n\t\ttempTargetDest1.applyMatrix4( tempMatrix );\n\t\ttarget2.distance = tempTargetDest1.sub( target2.point ).length();\n\t\ttarget2.faceIndex = closestDistanceOtherTriIndex;\n\n\t}\n\n\treturn target1;\n\n}\n\nexport { closestPointToGeometry };\n", "import { IS_LEAFNODE_FLAG } from '../Constants.js';\n\n/****************************************************/\n/* This file is generated from \"refit.template.js\". */\n/****************************************************/\n\nfunction refit_indirect( bvh, nodeIndices = null ) {\n\n\tif ( nodeIndices && Array.isArray( nodeIndices ) ) {\n\n\t\tnodeIndices = new Set( nodeIndices );\n\n\t}\n\n\tconst geometry = bvh.geometry;\n\tconst indexArr = geometry.index ? geometry.index.array : null;\n\tconst posAttr = geometry.attributes.position;\n\n\tlet buffer, uint32Array, uint16Array, float32Array;\n\tlet byteOffset = 0;\n\tconst roots = bvh._roots;\n\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\tbuffer = roots[ i ];\n\t\tuint32Array = new Uint32Array( buffer );\n\t\tuint16Array = new Uint16Array( buffer );\n\t\tfloat32Array = new Float32Array( buffer );\n\n\t\t_traverse( 0, byteOffset );\n\t\tbyteOffset += buffer.byteLength;\n\n\t}\n\n\tfunction _traverse( node32Index, byteOffset, force = false ) {\n\n\t\tconst node16Index = node32Index * 2;\n\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\tif ( isLeaf ) {\n\n\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\n\t\t\tlet minx = Infinity;\n\t\t\tlet miny = Infinity;\n\t\t\tlet minz = Infinity;\n\t\t\tlet maxx = - Infinity;\n\t\t\tlet maxy = - Infinity;\n\t\t\tlet maxz = - Infinity;\n\n\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\t\t\tconst t = 3 * bvh.resolveTriangleIndex( i );\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tlet index = t + j;\n\t\t\t\t\tindex = indexArr ? indexArr[ index ] : index;\n\n\t\t\t\t\tconst x = posAttr.getX( index );\n\t\t\t\t\tconst y = posAttr.getY( index );\n\t\t\t\t\tconst z = posAttr.getZ( index );\n\n\t\t\t\t\tif ( x < minx ) minx = x;\n\t\t\t\t\tif ( x > maxx ) maxx = x;\n\n\t\t\t\t\tif ( y < miny ) miny = y;\n\t\t\t\t\tif ( y > maxy ) maxy = y;\n\n\t\t\t\t\tif ( z < minz ) minz = z;\n\t\t\t\t\tif ( z > maxz ) maxz = z;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif (\n\t\t\t\tfloat32Array[ node32Index + 0 ] !== minx ||\n\t\t\t\tfloat32Array[ node32Index + 1 ] !== miny ||\n\t\t\t\tfloat32Array[ node32Index + 2 ] !== minz ||\n\n\t\t\t\tfloat32Array[ node32Index + 3 ] !== maxx ||\n\t\t\t\tfloat32Array[ node32Index + 4 ] !== maxy ||\n\t\t\t\tfloat32Array[ node32Index + 5 ] !== maxz\n\t\t\t) {\n\n\t\t\t\tfloat32Array[ node32Index + 0 ] = minx;\n\t\t\t\tfloat32Array[ node32Index + 1 ] = miny;\n\t\t\t\tfloat32Array[ node32Index + 2 ] = minz;\n\n\t\t\t\tfloat32Array[ node32Index + 3 ] = maxx;\n\t\t\t\tfloat32Array[ node32Index + 4 ] = maxy;\n\t\t\t\tfloat32Array[ node32Index + 5 ] = maxz;\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst left = node32Index + 8;\n\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\n\t\t\t// the identifying node indices provided by the shapecast function include offsets of all\n\t\t\t// root buffers to guarantee they're unique between roots so offset left and right indices here.\n\t\t\tconst offsetLeft = left + byteOffset;\n\t\t\tconst offsetRight = right + byteOffset;\n\t\t\tlet forceChildren = force;\n\t\t\tlet includesLeft = false;\n\t\t\tlet includesRight = false;\n\n\t\t\tif ( nodeIndices ) {\n\n\t\t\t\t// if we see that neither the left or right child are included in the set that need to be updated\n\t\t\t\t// then we assume that all children need to be updated.\n\t\t\t\tif ( ! forceChildren ) {\n\n\t\t\t\t\tincludesLeft = nodeIndices.has( offsetLeft );\n\t\t\t\t\tincludesRight = nodeIndices.has( offsetRight );\n\t\t\t\t\tforceChildren = ! includesLeft && ! includesRight;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tincludesLeft = true;\n\t\t\t\tincludesRight = true;\n\n\t\t\t}\n\n\t\t\tconst traverseLeft = forceChildren || includesLeft;\n\t\t\tconst traverseRight = forceChildren || includesRight;\n\n\t\t\tlet leftChange = false;\n\t\t\tif ( traverseLeft ) {\n\n\t\t\t\tleftChange = _traverse( left, byteOffset, forceChildren );\n\n\t\t\t}\n\n\t\t\tlet rightChange = false;\n\t\t\tif ( traverseRight ) {\n\n\t\t\t\trightChange = _traverse( right, byteOffset, forceChildren );\n\n\t\t\t}\n\n\t\t\tconst didChange = leftChange || rightChange;\n\t\t\tif ( didChange ) {\n\n\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tconst lefti = left + i;\n\t\t\t\t\tconst righti = right + i;\n\t\t\t\t\tconst minLeftValue = float32Array[ lefti ];\n\t\t\t\t\tconst maxLeftValue = float32Array[ lefti + 3 ];\n\t\t\t\t\tconst minRightValue = float32Array[ righti ];\n\t\t\t\t\tconst maxRightValue = float32Array[ righti + 3 ];\n\n\t\t\t\t\tfloat32Array[ node32Index + i ] = minLeftValue < minRightValue ? minLeftValue : minRightValue;\n\t\t\t\t\tfloat32Array[ node32Index + i + 3 ] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn didChange;\n\n\t\t}\n\n\t}\n\n}\n\nexport { refit_indirect };\n", "import { Vector3 } from 'three';\nimport { intersectRay } from '../utils/intersectUtils.js';\nimport { IS_LEAF, OFFSET, COUNT, LEFT_NODE, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport '../utils/iterationUtils.generated.js';\nimport { intersectTris_indirect } from '../utils/iterationUtils_indirect.generated.js';\n\n/******************************************************/\n/* This file is generated from \"raycast.template.js\". */\n/******************************************************/\n\nconst _boxIntersection = /* @__PURE__ */ new Vector3();\nfunction raycast_indirect( bvh, root, side, ray, intersects ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\t_raycast( 0, bvh, side, ray, intersects );\n\tBufferStack.clearBuffer();\n\n}\n\nfunction _raycast( nodeIndex32, bvh, side, ray, intersects ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tconst nodeIndex16 = nodeIndex32 * 2;\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\tintersectTris_indirect( bvh, side, ray, offset, count, intersects );\n\n\n\t} else {\n\n\t\tconst leftIndex = LEFT_NODE( nodeIndex32 );\n\t\tif ( intersectRay( leftIndex, float32Array, ray, _boxIntersection ) ) {\n\n\t\t\t_raycast( leftIndex, bvh, side, ray, intersects );\n\n\t\t}\n\n\t\tconst rightIndex = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\tif ( intersectRay( rightIndex, float32Array, ray, _boxIntersection ) ) {\n\n\t\t\t_raycast( rightIndex, bvh, side, ray, intersects );\n\n\t\t}\n\n\t}\n\n}\n\nexport { raycast_indirect };\n", "import { Vector3 } from 'three';\nimport { IS_LEAF, OFFSET, COUNT, SPLIT_AXIS, LEFT_NODE, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport { intersectRay } from '../utils/intersectUtils.js';\nimport '../utils/iterationUtils.generated.js';\nimport { intersectClosestTri_indirect } from '../utils/iterationUtils_indirect.generated.js';\n\n/***********************************************************/\n/* This file is generated from \"raycastFirst.template.js\". */\n/***********************************************************/\nconst _boxIntersection = /* @__PURE__ */ new Vector3();\nconst _xyzFields = [ 'x', 'y', 'z' ];\nfunction raycastFirst_indirect( bvh, root, side, ray ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\tconst result = _raycastFirst( 0, bvh, side, ray );\n\tBufferStack.clearBuffer();\n\n\treturn result;\n\n}\n\nfunction _raycastFirst( nodeIndex32, bvh, side, ray ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\treturn intersectClosestTri_indirect( bvh, side, ray, offset, count );\n\n\n\t} else {\n\n\t\t// consider the position of the split plane with respect to the oncoming ray; whichever direction\n\t\t// the ray is coming from, look for an intersection among that side of the tree first\n\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\t\tconst xyzAxis = _xyzFields[ splitAxis ];\n\t\tconst rayDir = ray.direction[ xyzAxis ];\n\t\tconst leftToRight = rayDir >= 0;\n\n\t\t// c1 is the child to check first\n\t\tlet c1, c2;\n\t\tif ( leftToRight ) {\n\n\t\t\tc1 = LEFT_NODE( nodeIndex32 );\n\t\t\tc2 = RIGHT_NODE( nodeIndex32, uint32Array );\n\n\t\t} else {\n\n\t\t\tc1 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\tc2 = LEFT_NODE( nodeIndex32 );\n\n\t\t}\n\n\t\tconst c1Intersection = intersectRay( c1, float32Array, ray, _boxIntersection );\n\t\tconst c1Result = c1Intersection ? _raycastFirst( c1, bvh, side, ray ) : null;\n\n\t\t// if we got an intersection in the first node and it's closer than the second node's bounding\n\t\t// box, we don't need to consider the second node because it couldn't possibly be a better result\n\t\tif ( c1Result ) {\n\n\t\t\t// check if the point is within the second bounds\n\t\t\t// \"point\" is in the local frame of the bvh\n\t\t\tconst point = c1Result.point[ xyzAxis ];\n\t\t\tconst isOutside = leftToRight ?\n\t\t\t\tpoint <= float32Array[ c2 + splitAxis ] : // min bounding data\n\t\t\t\tpoint >= float32Array[ c2 + splitAxis + 3 ]; // max bounding data\n\n\t\t\tif ( isOutside ) {\n\n\t\t\t\treturn c1Result;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// either there was no intersection in the first node, or there could still be a closer\n\t\t// intersection in the second, so check the second node and then take the better of the two\n\t\tconst c2Intersection = intersectRay( c2, float32Array, ray, _boxIntersection );\n\t\tconst c2Result = c2Intersection ? _raycastFirst( c2, bvh, side, ray ) : null;\n\n\t\tif ( c1Result && c2Result ) {\n\n\t\t\treturn c1Result.distance <= c2Result.distance ? c1Result : c2Result;\n\n\t\t} else {\n\n\t\t\treturn c1Result || c2Result || null;\n\n\t\t}\n\n\t}\n\n}\n\nexport { raycastFirst_indirect };\n", "import { Box3, Matrix4 } from 'three';\nimport { OrientedBox } from '../../math/OrientedBox.js';\nimport { ExtendedTriangle } from '../../math/ExtendedTriangle.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\nimport { arrayToBox } from '../../utils/ArrayBoxUtilities.js';\nimport { IS_LEAF, OFFSET, COUNT, BOUNDING_DATA_INDEX } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\n\n/*****************************************************************/\n/* This file is generated from \"intersectsGeometry.template.js\". */\n/*****************************************************************/\n/* eslint-disable indent */\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nconst triangle = /* @__PURE__ */ new ExtendedTriangle();\nconst triangle2 = /* @__PURE__ */ new ExtendedTriangle();\nconst invertedMat = /* @__PURE__ */ new Matrix4();\n\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\n\nfunction intersectsGeometry_indirect( bvh, root, otherGeometry, geometryToBvh ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\tconst result = _intersectsGeometry( 0, bvh, otherGeometry, geometryToBvh );\n\tBufferStack.clearBuffer();\n\n\treturn result;\n\n}\n\nfunction _intersectsGeometry( nodeIndex32, bvh, otherGeometry, geometryToBvh, cachedObb = null ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tif ( cachedObb === null ) {\n\n\t\tif ( ! otherGeometry.boundingBox ) {\n\n\t\t\totherGeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\t\tcachedObb = obb;\n\n\t}\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst thisGeometry = bvh.geometry;\n\t\tconst thisIndex = thisGeometry.index;\n\t\tconst thisPos = thisGeometry.attributes.position;\n\n\t\tconst index = otherGeometry.index;\n\t\tconst pos = otherGeometry.attributes.position;\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\t// get the inverse of the geometry matrix so we can transform our triangles into the\n\t\t// geometry space we're trying to test. We assume there are fewer triangles being checked\n\t\t// here.\n\t\tinvertedMat.copy( geometryToBvh ).invert();\n\n\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t// if there's a bounds tree\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, obb2 );\n\t\t\tobb2.matrix.copy( invertedMat );\n\t\t\tobb2.needsUpdate = true;\n\n\t\t\t// TODO: use a triangle iteration function here\n\t\t\tconst res = otherGeometry.boundsTree.shapecast( {\n\n\t\t\t\tintersectsBounds: box => obb2.intersectsBox( box ),\n\n\t\t\t\tintersectsTriangle: tri => {\n\n\t\t\t\t\ttri.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.needsUpdate = true;\n\n\t\t\t\t\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\t\t\tsetTriangle( triangle2, 3 * bvh.resolveTriangleIndex( i ), thisIndex, thisPos );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\t\t\t\t\t\tif ( tri.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn res;\n\n\t\t} else {\n\n\t\t\t// if we're just dealing with raw geometry\n\t\t\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\tconst ti = bvh.resolveTriangleIndex( i );\n\t\t\t\tsetTriangle( triangle, 3 * ti, thisIndex, thisPos );\n\n\n\t\t\t\ttriangle.a.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.b.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.c.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\tfor ( let i2 = 0, l2 = index.count; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\tsetTriangle( triangle2, i2, index, pos );\n\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\tif ( triangle.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t} else {\n\n\t\tconst left = nodeIndex32 + 8;\n\t\tconst right = uint32Array[ nodeIndex32 + 6 ];\n\n\t\tarrayToBox( BOUNDING_DATA_INDEX( left ), float32Array, boundingBox );\n\t\tconst leftIntersection =\n\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t_intersectsGeometry( left, bvh, otherGeometry, geometryToBvh, cachedObb );\n\n\t\tif ( leftIntersection ) return true;\n\n\t\tarrayToBox( BOUNDING_DATA_INDEX( right ), float32Array, boundingBox );\n\t\tconst rightIntersection =\n\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t_intersectsGeometry( right, bvh, otherGeometry, geometryToBvh, cachedObb );\n\n\t\tif ( rightIntersection ) return true;\n\n\t\treturn false;\n\n\t}\n\n}\n\nexport { intersectsGeometry_indirect };\n", "import { Matrix4, Vector3 } from 'three';\nimport { OrientedBox } from '../../math/OrientedBox.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\nimport { getTriCount } from '../build/geometryUtils.js';\nimport { ExtendedTrianglePool } from '../../utils/ExtendedTrianglePool.js';\n\n/*********************************************************************/\n/* This file is generated from \"closestPointToGeometry.template.js\". */\n/*********************************************************************/\n\nconst tempMatrix = /* @__PURE__ */ new Matrix4();\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\nconst temp1 = /* @__PURE__ */ new Vector3();\nconst temp2 = /* @__PURE__ */ new Vector3();\nconst temp3 = /* @__PURE__ */ new Vector3();\nconst temp4 = /* @__PURE__ */ new Vector3();\n\nfunction closestPointToGeometry_indirect(\n\tbvh,\n\totherGeometry,\n\tgeometryToBvh,\n\ttarget1 = { },\n\ttarget2 = { },\n\tminThreshold = 0,\n\tmaxThreshold = Infinity,\n) {\n\n\tif ( ! otherGeometry.boundingBox ) {\n\n\t\totherGeometry.computeBoundingBox();\n\n\t}\n\n\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\tobb.needsUpdate = true;\n\n\tconst geometry = bvh.geometry;\n\tconst pos = geometry.attributes.position;\n\tconst index = geometry.index;\n\tconst otherPos = otherGeometry.attributes.position;\n\tconst otherIndex = otherGeometry.index;\n\tconst triangle = ExtendedTrianglePool.getPrimitive();\n\tconst triangle2 = ExtendedTrianglePool.getPrimitive();\n\n\tlet tempTarget1 = temp1;\n\tlet tempTargetDest1 = temp2;\n\tlet tempTarget2 = null;\n\tlet tempTargetDest2 = null;\n\n\tif ( target2 ) {\n\n\t\ttempTarget2 = temp3;\n\t\ttempTargetDest2 = temp4;\n\n\t}\n\n\tlet closestDistance = Infinity;\n\tlet closestDistanceTriIndex = null;\n\tlet closestDistanceOtherTriIndex = null;\n\ttempMatrix.copy( geometryToBvh ).invert();\n\tobb2.matrix.copy( tempMatrix );\n\tbvh.shapecast(\n\t\t{\n\n\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\treturn obb.distanceToBox( box );\n\n\t\t\t},\n\n\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\tif ( score < closestDistance && score < maxThreshold ) {\n\n\t\t\t\t\t// if we know the triangles of this bounds will be intersected next then\n\t\t\t\t\t// save the bounds to use during triangle checks.\n\t\t\t\t\tif ( isLeaf ) {\n\n\t\t\t\t\t\tobb2.min.copy( box.min );\n\t\t\t\t\t\tobb2.max.copy( box.max );\n\t\t\t\t\t\tobb2.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\tintersectsRange: ( offset, count ) => {\n\n\t\t\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t\t\t// if the other geometry has a bvh then use the accelerated path where we use shapecast to find\n\t\t\t\t\t// the closest bounds in the other geometry to check.\n\t\t\t\t\tconst otherBvh = otherGeometry.boundsTree;\n\t\t\t\t\treturn otherBvh.shapecast( {\n\t\t\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\t\t\treturn obb2.distanceToBox( box );\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\t\t\treturn score < closestDistance && score < maxThreshold;\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tintersectsRange: ( otherOffset, otherCount ) => {\n\n\t\t\t\t\t\t\tfor ( let i2 = otherOffset, l2 = otherOffset + otherCount; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\t\t\t\tconst ti2 = otherBvh.resolveTriangleIndex( i2 );\n\t\t\t\t\t\t\t\tsetTriangle( triangle2, 3 * ti2, otherIndex, otherPos );\n\n\t\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tconst ti = bvh.resolveTriangleIndex( i );\n\t\t\t\t\t\t\t\t\tsetTriangle( triangle, 3 * ti, index, pos );\n\n\t\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i;\n\t\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// If no bounds tree then we'll just check every triangle.\n\t\t\t\t\tconst triCount = getTriCount( otherGeometry );\n\t\t\t\t\tfor ( let i2 = 0, l2 = triCount; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\t\tsetTriangle( triangle2, 3 * i2, otherIndex, otherPos );\n\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst ti = bvh.resolveTriangleIndex( i );\n\t\t\t\t\t\t\tsetTriangle( triangle, 3 * ti, index, pos );\n\n\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i;\n\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t}\n\n\t);\n\n\tExtendedTrianglePool.releasePrimitive( triangle );\n\tExtendedTrianglePool.releasePrimitive( triangle2 );\n\n\tif ( closestDistance === Infinity ) {\n\n\t\treturn null;\n\n\t}\n\n\tif ( ! target1.point ) {\n\n\t\ttarget1.point = tempTargetDest1.clone();\n\n\t} else {\n\n\t\ttarget1.point.copy( tempTargetDest1 );\n\n\t}\n\n\ttarget1.distance = closestDistance,\n\ttarget1.faceIndex = closestDistanceTriIndex;\n\n\tif ( target2 ) {\n\n\t\tif ( ! target2.point ) target2.point = tempTargetDest2.clone();\n\t\telse target2.point.copy( tempTargetDest2 );\n\t\ttarget2.point.applyMatrix4( tempMatrix );\n\t\ttempTargetDest1.applyMatrix4( tempMatrix );\n\t\ttarget2.distance = tempTargetDest1.sub( target2.point ).length();\n\t\ttarget2.faceIndex = closestDistanceOtherTriIndex;\n\n\t}\n\n\treturn target1;\n\n}\n\nexport { closestPointToGeometry_indirect };\n", "export function isSharedArrayBufferSupported() {\n\n\treturn typeof SharedArrayBuffer !== 'undefined';\n\n}\n\nexport function convertToBufferType( array, BufferConstructor ) {\n\n\tif ( array === null ) {\n\n\t\treturn array;\n\n\t} else if ( array.buffer ) {\n\n\t\tconst buffer = array.buffer;\n\t\tif ( buffer.constructor === BufferConstructor ) {\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tconst ArrayConstructor = array.constructor;\n\t\tconst result = new ArrayConstructor( new BufferConstructor( buffer.byteLength ) );\n\t\tresult.set( array );\n\t\treturn result;\n\n\t} else {\n\n\t\tif ( array.constructor === BufferConstructor ) {\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tconst result = new BufferConstructor( array.byteLength );\n\t\tnew Uint8Array( result ).set( new Uint8Array( array ) );\n\t\treturn result;\n\n\t}\n\n}\n", "import { Box3, Matrix4 } from 'three';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport { BOUNDING_DATA_INDEX, COUNT, IS_LEAF, LEFT_NODE, OFFSET, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { arrayToBox } from '../../utils/ArrayBoxUtilities.js';\nimport { PrimitivePool } from '../../utils/PrimitivePool.js';\n\nconst _bufferStack1 = new BufferStack.constructor();\nconst _bufferStack2 = new BufferStack.constructor();\nconst _boxPool = new PrimitivePool( () => new Box3() );\nconst _leftBox1 = new Box3();\nconst _rightBox1 = new Box3();\n\nconst _leftBox2 = new Box3();\nconst _rightBox2 = new Box3();\n\nlet _active = false;\n\nexport function bvhcast( bvh, otherBvh, matrixToLocal, intersectsRanges ) {\n\n\tif ( _active ) {\n\n\t\tthrow new Error( 'MeshBVH: Recursive calls to bvhcast not supported.' );\n\n\t}\n\n\t_active = true;\n\n\tconst roots = bvh._roots;\n\tconst otherRoots = otherBvh._roots;\n\tlet result;\n\tlet offset1 = 0;\n\tlet offset2 = 0;\n\tconst invMat = new Matrix4().copy( matrixToLocal ).invert();\n\n\t// iterate over the first set of roots\n\tfor ( let i = 0, il = roots.length; i < il; i ++ ) {\n\n\t\t_bufferStack1.setBuffer( roots[ i ] );\n\t\toffset2 = 0;\n\n\t\t// prep the initial root box\n\t\tconst localBox = _boxPool.getPrimitive();\n\t\tarrayToBox( BOUNDING_DATA_INDEX( 0 ), _bufferStack1.float32Array, localBox );\n\t\tlocalBox.applyMatrix4( invMat );\n\n\t\t// iterate over the second set of roots\n\t\tfor ( let j = 0, jl = otherRoots.length; j < jl; j ++ ) {\n\n\t\t\t_bufferStack2.setBuffer( otherRoots[ i ] );\n\n\t\t\tresult = _traverse(\n\t\t\t\t0, 0, matrixToLocal, invMat, intersectsRanges,\n\t\t\t\toffset1, offset2, 0, 0,\n\t\t\t\tlocalBox,\n\t\t\t);\n\n\t\t\t_bufferStack2.clearBuffer();\n\t\t\toffset2 += otherRoots[ j ].length;\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// release stack info\n\t\t_boxPool.releasePrimitive( localBox );\n\t\t_bufferStack1.clearBuffer();\n\t\toffset1 += roots[ i ].length;\n\n\t\tif ( result ) {\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t_active = false;\n\treturn result;\n\n}\n\nfunction _traverse(\n\tnode1Index32,\n\tnode2Index32,\n\tmatrix2to1,\n\tmatrix1to2,\n\tintersectsRangesFunc,\n\n\t// offsets for ids\n\tnode1IndexByteOffset = 0,\n\tnode2IndexByteOffset = 0,\n\n\t// tree depth\n\tdepth1 = 0,\n\tdepth2 = 0,\n\n\tcurrBox = null,\n\treversed = false,\n\n) {\n\n\t// get the buffer stacks associated with the current indices\n\tlet bufferStack1, bufferStack2;\n\tif ( reversed ) {\n\n\t\tbufferStack1 = _bufferStack2;\n\t\tbufferStack2 = _bufferStack1;\n\n\t} else {\n\n\t\tbufferStack1 = _bufferStack1;\n\t\tbufferStack2 = _bufferStack2;\n\n\t}\n\n\t// get the local instances of the typed buffers\n\tconst\n\t\tfloat32Array1 = bufferStack1.float32Array,\n\t\tuint32Array1 = bufferStack1.uint32Array,\n\t\tuint16Array1 = bufferStack1.uint16Array,\n\t\tfloat32Array2 = bufferStack2.float32Array,\n\t\tuint32Array2 = bufferStack2.uint32Array,\n\t\tuint16Array2 = bufferStack2.uint16Array;\n\n\tconst node1Index16 = node1Index32 * 2;\n\tconst node2Index16 = node2Index32 * 2;\n\tconst isLeaf1 = IS_LEAF( node1Index16, uint16Array1 );\n\tconst isLeaf2 = IS_LEAF( node2Index16, uint16Array2 );\n\tlet result = false;\n\tif ( isLeaf2 && isLeaf1 ) {\n\n\t\t// if both bounds are leaf nodes then fire the callback if the boxes intersect\n\t\tif ( reversed ) {\n\n\t\t\tresult = intersectsRangesFunc(\n\t\t\t\tOFFSET( node2Index32, uint32Array2 ), COUNT( node2Index32 * 2, uint16Array2 ),\n\t\t\t\tOFFSET( node1Index32, uint32Array1 ), COUNT( node1Index32 * 2, uint16Array1 ),\n\t\t\t\tdepth2, node2IndexByteOffset + node2Index32,\n\t\t\t\tdepth1, node1IndexByteOffset + node1Index32,\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tresult = intersectsRangesFunc(\n\t\t\t\tOFFSET( node1Index32, uint32Array1 ), COUNT( node1Index32 * 2, uint16Array1 ),\n\t\t\t\tOFFSET( node2Index32, uint32Array2 ), COUNT( node2Index32 * 2, uint16Array2 ),\n\t\t\t\tdepth1, node1IndexByteOffset + node1Index32,\n\t\t\t\tdepth2, node2IndexByteOffset + node2Index32,\n\t\t\t);\n\n\t\t}\n\n\t} else if ( isLeaf2 ) {\n\n\t\t// SWAP\n\t\t// If we've traversed to the leaf node on the other bvh then we need to swap over\n\t\t// to traverse down the first one\n\n\t\t// get the new box to use\n\t\tconst newBox = _boxPool.getPrimitive();\n\t\tarrayToBox( BOUNDING_DATA_INDEX( node2Index32 ), float32Array2, newBox );\n\t\tnewBox.applyMatrix4( matrix2to1 );\n\n\t\t// get the child bounds to check before traversal\n\t\tconst cl1 = LEFT_NODE( node1Index32 );\n\t\tconst cr1 = RIGHT_NODE( node1Index32, uint32Array1 );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( cl1 ), float32Array1, _leftBox1 );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( cr1 ), float32Array1, _rightBox1 );\n\n\t\t// precompute the intersections otherwise the global boxes will be modified during traversal\n\t\tconst intersectCl1 = newBox.intersectsBox( _leftBox1 );\n\t\tconst intersectCr1 = newBox.intersectsBox( _rightBox1 );\n\t\tresult = (\n\t\t\tintersectCl1 && _traverse(\n\t\t\t\tnode2Index32, cl1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\tnewBox, ! reversed,\n\t\t\t)\n\t\t) || (\n\t\t\tintersectCr1 && _traverse(\n\t\t\t\tnode2Index32, cr1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\tnewBox, ! reversed,\n\t\t\t)\n\t\t);\n\n\t\t_boxPool.releasePrimitive( newBox );\n\n\t} else {\n\n\t\t// if neither are leaves then we should swap if one of the children does not\n\t\t// intersect with the current bounds\n\n\t\t// get the child bounds to check\n\t\tconst cl2 = LEFT_NODE( node2Index32 );\n\t\tconst cr2 = RIGHT_NODE( node2Index32, uint32Array2 );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( cl2 ), float32Array2, _leftBox2 );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( cr2 ), float32Array2, _rightBox2 );\n\n\t\tconst leftIntersects = currBox.intersectsBox( _leftBox2 );\n\t\tconst rightIntersects = currBox.intersectsBox( _rightBox2 );\n\t\tif ( leftIntersects && rightIntersects ) {\n\n\t\t\t// continue to traverse both children if they both intersect\n\t\t\tresult = _traverse(\n\t\t\t\tnode1Index32, cl2, matrix2to1, matrix1to2, intersectsRangesFunc,\n\t\t\t\tnode1IndexByteOffset, node2IndexByteOffset, depth1, depth2 + 1,\n\t\t\t\tcurrBox, reversed,\n\t\t\t) || _traverse(\n\t\t\t\tnode1Index32, cr2, matrix2to1, matrix1to2, intersectsRangesFunc,\n\t\t\t\tnode1IndexByteOffset, node2IndexByteOffset, depth1, depth2 + 1,\n\t\t\t\tcurrBox, reversed,\n\t\t\t);\n\n\t\t} else if ( leftIntersects ) {\n\n\t\t\tif ( isLeaf1 ) {\n\n\t\t\t\t// if the current box is a leaf then just continue\n\t\t\t\tresult = _traverse(\n\t\t\t\t\tnode1Index32, cl2, matrix2to1, matrix1to2, intersectsRangesFunc,\n\t\t\t\t\tnode1IndexByteOffset, node2IndexByteOffset, depth1, depth2 + 1,\n\t\t\t\t\tcurrBox, reversed,\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\t// SWAP\n\t\t\t\t// if only one box intersects then we have to swap to the other bvh to continue\n\t\t\t\tconst newBox = _boxPool.getPrimitive();\n\t\t\t\tnewBox.copy( _leftBox2 ).applyMatrix4( matrix2to1 );\n\n\t\t\t\tconst cl1 = LEFT_NODE( node1Index32 );\n\t\t\t\tconst cr1 = RIGHT_NODE( node1Index32, uint32Array1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( cl1 ), float32Array1, _leftBox1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( cr1 ), float32Array1, _rightBox1 );\n\n\t\t\t\t// precompute the intersections otherwise the global boxes will be modified during traversal\n\t\t\t\tconst intersectCl1 = newBox.intersectsBox( _leftBox1 );\n\t\t\t\tconst intersectCr1 = newBox.intersectsBox( _rightBox1 );\n\t\t\t\tresult = (\n\t\t\t\t\tintersectCl1 && _traverse(\n\t\t\t\t\t\tcl2, cl1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\t\t\tnewBox, ! reversed,\n\t\t\t\t\t)\n\t\t\t\t) || (\n\t\t\t\t\tintersectCr1 && _traverse(\n\t\t\t\t\t\tcl2, cr1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\t\t\tnewBox, ! reversed,\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t_boxPool.releasePrimitive( newBox );\n\n\t\t\t}\n\n\t\t} else if ( rightIntersects ) {\n\n\t\t\tif ( isLeaf1 ) {\n\n\t\t\t\t// if the current box is a leaf then just continue\n\t\t\t\tresult = _traverse(\n\t\t\t\t\tnode1Index32, cr2, matrix2to1, matrix1to2, intersectsRangesFunc,\n\t\t\t\t\tnode1IndexByteOffset, node2IndexByteOffset, depth1, depth2 + 1,\n\t\t\t\t\tcurrBox, reversed,\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\t// SWAP\n\t\t\t\t// if only one box intersects then we have to swap to the other bvh to continue\n\t\t\t\tconst newBox = _boxPool.getPrimitive();\n\t\t\t\tnewBox.copy( _rightBox2 ).applyMatrix4( matrix2to1 );\n\n\t\t\t\tconst cl1 = LEFT_NODE( node1Index32 );\n\t\t\t\tconst cr1 = RIGHT_NODE( node1Index32, uint32Array1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( cl1 ), float32Array1, _leftBox1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( cr1 ), float32Array1, _rightBox1 );\n\n\t\t\t\t// precompute the intersections otherwise the global boxes will be modified during traversal\n\t\t\t\tconst intersectCl1 = newBox.intersectsBox( _leftBox1 );\n\t\t\t\tconst intersectCr1 = newBox.intersectsBox( _rightBox1 );\n\t\t\t\tresult = (\n\t\t\t\t\tintersectCl1 && _traverse(\n\t\t\t\t\t\tcr2, cl1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\t\t\tnewBox, ! reversed,\n\t\t\t\t\t)\n\t\t\t\t) || (\n\t\t\t\t\tintersectCr1 && _traverse(\n\t\t\t\t\t\tcr2, cr1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\t\t\tnewBox, ! reversed,\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t_boxPool.releasePrimitive( newBox );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n", "import { BufferAttribute, Box3, FrontSide } from 'three';\nimport { CENTER, BYTES_PER_NODE, IS_LEAFNODE_FLAG, SKIP_GENERATION } from './Constants.js';\nimport { buildPackedTree } from './build/buildTree.js';\nimport { OrientedBox } from '../math/OrientedBox.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { ExtendedTrianglePool } from '../utils/ExtendedTrianglePool.js';\nimport { shapecast } from './cast/shapecast.js';\nimport { closestPointToPoint } from './cast/closestPointToPoint.js';\n\nimport { iterateOverTriangles } from './utils/iterationUtils.generated.js';\nimport { refit } from './cast/refit.generated.js';\nimport { raycast } from './cast/raycast.generated.js';\nimport { raycastFirst } from './cast/raycastFirst.generated.js';\nimport { intersectsGeometry } from './cast/intersectsGeometry.generated.js';\nimport { closestPointToGeometry } from './cast/closestPointToGeometry.generated.js';\n\nimport { iterateOverTriangles_indirect } from './utils/iterationUtils_indirect.generated.js';\nimport { refit_indirect } from './cast/refit_indirect.generated.js';\nimport { raycast_indirect } from './cast/raycast_indirect.generated.js';\nimport { raycastFirst_indirect } from './cast/raycastFirst_indirect.generated.js';\nimport { intersectsGeometry_indirect } from './cast/intersectsGeometry_indirect.generated.js';\nimport { closestPointToGeometry_indirect } from './cast/closestPointToGeometry_indirect.generated.js';\nimport { isSharedArrayBufferSupported } from '../utils/BufferUtils.js';\nimport { setTriangle } from '../utils/TriangleUtilities.js';\nimport { bvhcast } from './cast/bvhcast.js';\n\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst tempBox = /* @__PURE__ */ new Box3();\nexport const DEFAULT_OPTIONS = {\n\tstrategy: CENTER,\n\tmaxDepth: 40,\n\tmaxLeafTris: 10,\n\tuseSharedArrayBuffer: false,\n\tsetBoundingBox: true,\n\tonProgress: null,\n\tindirect: false,\n\tverbose: true,\n};\n\nexport class MeshBVH {\n\n\tstatic serialize( bvh, options = {} ) {\n\n\t\toptions = {\n\t\t\tcloneBuffers: true,\n\t\t\t...options,\n\t\t};\n\n\t\tconst geometry = bvh.geometry;\n\t\tconst rootData = bvh._roots;\n\t\tconst indirectBuffer = bvh._indirectBuffer;\n\t\tconst indexAttribute = geometry.getIndex();\n\t\tlet result;\n\t\tif ( options.cloneBuffers ) {\n\n\t\t\tresult = {\n\t\t\t\troots: rootData.map( root => root.slice() ),\n\t\t\t\tindex: indexAttribute.array.slice(),\n\t\t\t\tindirectBuffer: indirectBuffer ? indirectBuffer.slice() : null,\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tresult = {\n\t\t\t\troots: rootData,\n\t\t\t\tindex: indexAttribute.array,\n\t\t\t\tindirectBuffer: indirectBuffer,\n\t\t\t};\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tstatic deserialize( data, geometry, options = {} ) {\n\n\t\toptions = {\n\t\t\tsetIndex: true,\n\t\t\tindirect: Boolean( data.indirectBuffer ),\n\t\t\t...options,\n\t\t};\n\n\t\tconst { index, roots, indirectBuffer } = data;\n\t\tconst bvh = new MeshBVH( geometry, { ...options, [ SKIP_GENERATION ]: true } );\n\t\tbvh._roots = roots;\n\t\tbvh._indirectBuffer = indirectBuffer || null;\n\n\t\tif ( options.setIndex ) {\n\n\t\t\tconst indexAttribute = geometry.getIndex();\n\t\t\tif ( indexAttribute === null ) {\n\n\t\t\t\tconst newIndex = new BufferAttribute( data.index, 1, false );\n\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t} else if ( indexAttribute.array !== index ) {\n\n\t\t\t\tindexAttribute.array.set( index );\n\t\t\t\tindexAttribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bvh;\n\n\t}\n\n\tget indirect() {\n\n\t\treturn ! ! this._indirectBuffer;\n\n\t}\n\n\tconstructor( geometry, options = {} ) {\n\n\t\tif ( ! geometry.isBufferGeometry ) {\n\n\t\t\tthrow new Error( 'MeshBVH: Only BufferGeometries are supported.' );\n\n\t\t} else if ( geometry.index && geometry.index.isInterleavedBufferAttribute ) {\n\n\t\t\tthrow new Error( 'MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.' );\n\n\t\t}\n\n\t\t// default options\n\t\toptions = Object.assign( {\n\n\t\t\t...DEFAULT_OPTIONS,\n\n\t\t\t// undocumented options\n\n\t\t\t// Whether to skip generating the tree. Used for deserialization.\n\t\t\t[ SKIP_GENERATION ]: false,\n\n\t\t}, options );\n\n\t\tif ( options.useSharedArrayBuffer && ! isSharedArrayBufferSupported() ) {\n\n\t\t\tthrow new Error( 'MeshBVH: SharedArrayBuffer is not available.' );\n\n\t\t}\n\n\t\t// retain references to the geometry so we can use them it without having to\n\t\t// take a geometry reference in every function.\n\t\tthis.geometry = geometry;\n\t\tthis._roots = null;\n\t\tthis._indirectBuffer = null;\n\t\tif ( ! options[ SKIP_GENERATION ] ) {\n\n\t\t\tbuildPackedTree( this, options );\n\n\t\t\tif ( ! geometry.boundingBox && options.setBoundingBox ) {\n\n\t\t\t\tgeometry.boundingBox = this.getBoundingBox( new Box3() );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst { _indirectBuffer } = this;\n\t\tthis.resolveTriangleIndex = options.indirect ? i => _indirectBuffer[ i ] : i => i;\n\n\t}\n\n\trefit( nodeIndices = null ) {\n\n\t\tconst refitFunc = this.indirect ? refit_indirect : refit;\n\t\treturn refitFunc( this, nodeIndices );\n\n\t}\n\n\ttraverse( callback, rootIndex = 0 ) {\n\n\t\tconst buffer = this._roots[ rootIndex ];\n\t\tconst uint32Array = new Uint32Array( buffer );\n\t\tconst uint16Array = new Uint16Array( buffer );\n\t\t_traverse( 0 );\n\n\t\tfunction _traverse( node32Index, depth = 0 ) {\n\n\t\t\tconst node16Index = node32Index * 2;\n\t\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\t\tif ( isLeaf ) {\n\n\t\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\t\t\t\tcallback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), offset, count );\n\n\t\t\t} else {\n\n\t\t\t\t// TODO: use node functions here\n\t\t\t\tconst left = node32Index + BYTES_PER_NODE / 4;\n\t\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst splitAxis = uint32Array[ node32Index + 7 ];\n\t\t\t\tconst stopTraversal = callback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), splitAxis );\n\n\t\t\t\tif ( ! stopTraversal ) {\n\n\t\t\t\t\t_traverse( left, depth + 1 );\n\t\t\t\t\t_traverse( right, depth + 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Core Cast Functions */\n\traycast( ray, materialOrSide = FrontSide ) {\n\n\t\tconst roots = this._roots;\n\t\tconst geometry = this.geometry;\n\t\tconst intersects = [];\n\t\tconst isMaterial = materialOrSide.isMaterial;\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\n\n\t\tconst groups = geometry.groups;\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\n\t\tconst raycastFunc = this.indirect ? raycast_indirect : raycast;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\n\t\t\tconst startCount = intersects.length;\n\n\t\t\traycastFunc( this, i, materialSide, ray, intersects );\n\n\t\t\tif ( isArrayMaterial ) {\n\n\t\t\t\tconst materialIndex = groups[ i ].materialIndex;\n\t\t\t\tfor ( let j = startCount, jl = intersects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tintersects[ j ].face.materialIndex = materialIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn intersects;\n\n\t}\n\n\traycastFirst( ray, materialOrSide = FrontSide ) {\n\n\t\tconst roots = this._roots;\n\t\tconst geometry = this.geometry;\n\t\tconst isMaterial = materialOrSide.isMaterial;\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\n\n\t\tlet closestResult = null;\n\n\t\tconst groups = geometry.groups;\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\n\t\tconst raycastFirstFunc = this.indirect ? raycastFirst_indirect : raycastFirst;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\n\t\t\tconst result = raycastFirstFunc( this, i, materialSide, ray );\n\t\t\tif ( result != null && ( closestResult == null || result.distance < closestResult.distance ) ) {\n\n\t\t\t\tclosestResult = result;\n\t\t\t\tif ( isArrayMaterial ) {\n\n\t\t\t\t\tresult.face.materialIndex = groups[ i ].materialIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn closestResult;\n\n\t}\n\n\tintersectsGeometry( otherGeometry, geomToMesh ) {\n\n\t\tlet result = false;\n\t\tconst roots = this._roots;\n\t\tconst intersectsGeometryFunc = this.indirect ? intersectsGeometry_indirect : intersectsGeometry;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tresult = intersectsGeometryFunc( this, i, otherGeometry, geomToMesh );\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tshapecast( callbacks ) {\n\n\t\tconst triangle = ExtendedTrianglePool.getPrimitive();\n\t\tconst iterateFunc = this.indirect ? iterateOverTriangles_indirect : iterateOverTriangles;\n\t\tlet {\n\t\t\tboundsTraverseOrder,\n\t\t\tintersectsBounds,\n\t\t\tintersectsRange,\n\t\t\tintersectsTriangle,\n\t\t} = callbacks;\n\n\t\t// wrap the intersectsRange function\n\t\tif ( intersectsRange && intersectsTriangle ) {\n\n\t\t\tconst originalIntersectsRange = intersectsRange;\n\t\t\tintersectsRange = ( offset, count, contained, depth, nodeIndex ) => {\n\n\t\t\t\tif ( ! originalIntersectsRange( offset, count, contained, depth, nodeIndex ) ) {\n\n\t\t\t\t\treturn iterateFunc( offset, count, this, intersectsTriangle, contained, depth, triangle );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t} else if ( ! intersectsRange ) {\n\n\t\t\tif ( intersectsTriangle ) {\n\n\t\t\t\tintersectsRange = ( offset, count, contained, depth ) => {\n\n\t\t\t\t\treturn iterateFunc( offset, count, this, intersectsTriangle, contained, depth, triangle );\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tintersectsRange = ( offset, count, contained ) => {\n\n\t\t\t\t\treturn contained;\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// run shapecast\n\t\tlet result = false;\n\t\tlet byteOffset = 0;\n\t\tconst roots = this._roots;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst root = roots[ i ];\n\t\t\tresult = shapecast( this, i, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset );\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tbyteOffset += root.byteLength;\n\n\t\t}\n\n\t\tExtendedTrianglePool.releasePrimitive( triangle );\n\n\t\treturn result;\n\n\t}\n\n\tbvhcast( otherBvh, matrixToLocal, callbacks ) {\n\n\t\tlet {\n\t\t\tintersectsRanges,\n\t\t\tintersectsTriangles,\n\t\t} = callbacks;\n\n\t\tconst triangle1 = ExtendedTrianglePool.getPrimitive();\n\t\tconst indexAttr1 = this.geometry.index;\n\t\tconst positionAttr1 = this.geometry.attributes.position;\n\t\tconst assignTriangle1 = this.indirect ?\n\t\t\ti1 => {\n\n\n\t\t\t\tconst ti = this.resolveTriangleIndex( i1 );\n\t\t\t\tsetTriangle( triangle1, ti * 3, indexAttr1, positionAttr1 );\n\n\t\t\t} :\n\t\t\ti1 => {\n\n\t\t\t\tsetTriangle( triangle1, i1 * 3, indexAttr1, positionAttr1 );\n\n\t\t\t};\n\n\t\tconst triangle2 = ExtendedTrianglePool.getPrimitive();\n\t\tconst indexAttr2 = otherBvh.geometry.index;\n\t\tconst positionAttr2 = otherBvh.geometry.attributes.position;\n\t\tconst assignTriangle2 = otherBvh.indirect ?\n\t\t\ti2 => {\n\n\t\t\t\tconst ti2 = otherBvh.resolveTriangleIndex( i2 );\n\t\t\t\tsetTriangle( triangle2, ti2 * 3, indexAttr2, positionAttr2 );\n\n\t\t\t} :\n\t\t\ti2 => {\n\n\t\t\t\tsetTriangle( triangle2, i2 * 3, indexAttr2, positionAttr2 );\n\n\t\t\t};\n\n\t\t// generate triangle callback if needed\n\t\tif ( intersectsTriangles ) {\n\n\t\t\tconst iterateOverDoubleTriangles = ( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) => {\n\n\t\t\t\tfor ( let i2 = offset2, l2 = offset2 + count2; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\tassignTriangle2( i2 );\n\n\t\t\t\t\ttriangle2.a.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.b.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.c.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\tfor ( let i1 = offset1, l1 = offset1 + count1; i1 < l1; i1 ++ ) {\n\n\t\t\t\t\t\tassignTriangle1( i1 );\n\n\t\t\t\t\t\ttriangle1.needsUpdate = true;\n\n\t\t\t\t\t\tif ( intersectsTriangles( triangle1, triangle2, i1, i2, depth1, index1, depth2, index2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t\tif ( intersectsRanges ) {\n\n\t\t\t\tconst originalIntersectsRanges = intersectsRanges;\n\t\t\t\tintersectsRanges = function ( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) {\n\n\t\t\t\t\tif ( ! originalIntersectsRanges( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) ) {\n\n\t\t\t\t\t\treturn iterateOverDoubleTriangles( offset1, count1, offset2, count2, depth1, index1, depth2, index2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tintersectsRanges = iterateOverDoubleTriangles;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bvhcast( this, otherBvh, matrixToLocal, intersectsRanges );\n\n\t}\n\n\n\t/* Derived Cast Functions */\n\tintersectsBox( box, boxToMesh ) {\n\n\t\tobb.set( box.min, box.max, boxToMesh );\n\t\tobb.needsUpdate = true;\n\n\t\treturn this.shapecast(\n\t\t\t{\n\t\t\t\tintersectsBounds: box => obb.intersectsBox( box ),\n\t\t\t\tintersectsTriangle: tri => obb.intersectsTriangle( tri )\n\t\t\t}\n\t\t);\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.shapecast(\n\t\t\t{\n\t\t\t\tintersectsBounds: box => sphere.intersectsBox( box ),\n\t\t\t\tintersectsTriangle: tri => tri.intersectsSphere( sphere )\n\t\t\t}\n\t\t);\n\n\t}\n\n\tclosestPointToGeometry( otherGeometry, geometryToBvh, target1 = { }, target2 = { }, minThreshold = 0, maxThreshold = Infinity ) {\n\n\t\tconst closestPointToGeometryFunc = this.indirect ? closestPointToGeometry_indirect : closestPointToGeometry;\n\t\treturn closestPointToGeometryFunc(\n\t\t\tthis,\n\t\t\totherGeometry,\n\t\t\tgeometryToBvh,\n\t\t\ttarget1,\n\t\t\ttarget2,\n\t\t\tminThreshold,\n\t\t\tmaxThreshold,\n\t\t);\n\n\t}\n\n\tclosestPointToPoint( point, target = { }, minThreshold = 0, maxThreshold = Infinity ) {\n\n\t\treturn closestPointToPoint(\n\t\t\tthis,\n\t\t\tpoint,\n\t\t\ttarget,\n\t\t\tminThreshold,\n\t\t\tmaxThreshold,\n\t\t);\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\ttarget.makeEmpty();\n\n\t\tconst roots = this._roots;\n\t\troots.forEach( buffer => {\n\n\t\t\tarrayToBox( 0, new Float32Array( buffer ), tempBox );\n\t\t\ttarget.union( tempBox );\n\n\t\t} );\n\n\t\treturn target;\n\n\t}\n\n}\n", "import { LineBasicMaterial, BufferAttribute, Box3, Group, MeshBasicMaterial, Object3D, BufferGeometry } from 'three';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nclass MeshBVHRootHelper extends Object3D {\n\n\tget isMesh() {\n\n\t\treturn ! this.displayEdges;\n\n\t}\n\n\tget isLineSegments() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tget isLine() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tconstructor( bvh, material, depth = 10, group = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.material = material;\n\t\tthis.geometry = new BufferGeometry();\n\t\tthis.name = 'MeshBVHRootHelper';\n\t\tthis.depth = depth;\n\t\tthis.displayParents = false;\n\t\tthis.bvh = bvh;\n\t\tthis.displayEdges = true;\n\t\tthis._group = group;\n\n\t}\n\n\traycast() {}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst boundsTree = this.bvh;\n\t\tconst group = this._group;\n\t\tgeometry.dispose();\n\t\tthis.visible = false;\n\t\tif ( boundsTree ) {\n\n\t\t\t// count the number of bounds required\n\t\t\tconst targetDepth = this.depth - 1;\n\t\t\tconst displayParents = this.displayParents;\n\t\t\tlet boundsCount = 0;\n\t\t\tboundsTree.traverse( ( depth, isLeaf ) => {\n\n\t\t\t\tif ( depth >= targetDepth || isLeaf ) {\n\n\t\t\t\t\tboundsCount ++;\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else if ( displayParents ) {\n\n\t\t\t\t\tboundsCount ++;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\t// fill in the position buffer with the bounds corners\n\t\t\tlet posIndex = 0;\n\t\t\tconst positionArray = new Float32Array( 8 * 3 * boundsCount );\n\t\t\tboundsTree.traverse( ( depth, isLeaf, boundingData ) => {\n\n\t\t\t\tconst terminate = depth >= targetDepth || isLeaf;\n\t\t\t\tif ( terminate || displayParents ) {\n\n\t\t\t\t\tarrayToBox( 0, boundingData, boundingBox );\n\n\t\t\t\t\tconst { min, max } = boundingBox;\n\t\t\t\t\tfor ( let x = - 1; x <= 1; x += 2 ) {\n\n\t\t\t\t\t\tconst xVal = x < 0 ? min.x : max.x;\n\t\t\t\t\t\tfor ( let y = - 1; y <= 1; y += 2 ) {\n\n\t\t\t\t\t\t\tconst yVal = y < 0 ? min.y : max.y;\n\t\t\t\t\t\t\tfor ( let z = - 1; z <= 1; z += 2 ) {\n\n\t\t\t\t\t\t\t\tconst zVal = z < 0 ? min.z : max.z;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 0 ] = xVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 1 ] = yVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 2 ] = zVal;\n\n\t\t\t\t\t\t\t\tposIndex += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn terminate;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\tlet indexArray;\n\t\t\tlet indices;\n\t\t\tif ( this.displayEdges ) {\n\n\t\t\t\t// fill in the index buffer to point to the corner points\n\t\t\t\tindices = new Uint8Array( [\n\t\t\t\t\t// x axis\n\t\t\t\t\t0, 4,\n\t\t\t\t\t1, 5,\n\t\t\t\t\t2, 6,\n\t\t\t\t\t3, 7,\n\n\t\t\t\t\t// y axis\n\t\t\t\t\t0, 2,\n\t\t\t\t\t1, 3,\n\t\t\t\t\t4, 6,\n\t\t\t\t\t5, 7,\n\n\t\t\t\t\t// z axis\n\t\t\t\t\t0, 1,\n\t\t\t\t\t2, 3,\n\t\t\t\t\t4, 5,\n\t\t\t\t\t6, 7,\n\t\t\t\t] );\n\n\t\t\t} else {\n\n\t\t\t\tindices = new Uint8Array( [\n\n\t\t\t\t\t// X-, X+\n\t\t\t\t\t0, 1, 2,\n\t\t\t\t\t2, 1, 3,\n\n\t\t\t\t\t4, 6, 5,\n\t\t\t\t\t6, 7, 5,\n\n\t\t\t\t\t// Y-, Y+\n\t\t\t\t\t1, 4, 5,\n\t\t\t\t\t0, 4, 1,\n\n\t\t\t\t\t2, 3, 6,\n\t\t\t\t\t3, 7, 6,\n\n\t\t\t\t\t// Z-, Z+\n\t\t\t\t\t0, 2, 4,\n\t\t\t\t\t2, 6, 4,\n\n\t\t\t\t\t1, 5, 3,\n\t\t\t\t\t3, 5, 7,\n\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( positionArray.length > 65535 ) {\n\n\t\t\t\tindexArray = new Uint32Array( indices.length * boundsCount );\n\n\t\t\t} else {\n\n\t\t\t\tindexArray = new Uint16Array( indices.length * boundsCount );\n\n\t\t\t}\n\n\t\t\tconst indexLength = indices.length;\n\t\t\tfor ( let i = 0; i < boundsCount; i ++ ) {\n\n\t\t\t\tconst posOffset = i * 8;\n\t\t\t\tconst indexOffset = i * indexLength;\n\t\t\t\tfor ( let j = 0; j < indexLength; j ++ ) {\n\n\t\t\t\t\tindexArray[ indexOffset + j ] = posOffset + indices[ j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the geometry\n\t\t\tgeometry.setIndex(\n\t\t\t\tnew BufferAttribute( indexArray, 1, false ),\n\t\t\t);\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew BufferAttribute( positionArray, 3, false ),\n\t\t\t);\n\t\t\tthis.visible = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass MeshBVHHelper extends Group {\n\n\tget color() {\n\n\t\treturn this.edgeMaterial.color;\n\n\t}\n\n\tget opacity() {\n\n\t\treturn this.edgeMaterial.opacity;\n\n\t}\n\n\tset opacity( v ) {\n\n\t\tthis.edgeMaterial.opacity = v;\n\t\tthis.meshMaterial.opacity = v;\n\n\t}\n\n\tconstructor( mesh = null, bvh = null, depth = 10 ) {\n\n\t\t// handle bvh, depth signature\n\t\tif ( mesh instanceof MeshBVH ) {\n\n\t\t\tdepth = bvh || 10;\n\t\t\tbvh = mesh;\n\t\t\tmesh = null;\n\n\t\t}\n\n\t\t// handle mesh, depth signature\n\t\tif ( typeof bvh === 'number' ) {\n\n\t\t\tdepth = bvh;\n\t\t\tbvh = null;\n\n\t\t}\n\n\t\tsuper();\n\n\t\tthis.name = 'MeshBVHHelper';\n\t\tthis.depth = depth;\n\t\tthis.mesh = mesh;\n\t\tthis.bvh = bvh;\n\t\tthis.displayParents = false;\n\t\tthis.displayEdges = true;\n\t\tthis._roots = [];\n\n\t\tconst edgeMaterial = new LineBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tconst meshMaterial = new MeshBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tmeshMaterial.color = edgeMaterial.color;\n\n\t\tthis.edgeMaterial = edgeMaterial;\n\t\tthis.meshMaterial = meshMaterial;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst bvh = this.bvh || this.mesh.geometry.boundsTree;\n\t\tconst totalRoots = bvh ? bvh._roots.length : 0;\n\t\twhile ( this._roots.length > totalRoots ) {\n\n\t\t\tconst root = this._roots.pop();\n\t\t\troot.geometry.dispose();\n\t\t\tthis.remove( root );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < totalRoots; i ++ ) {\n\n\t\t\tconst { depth, edgeMaterial, meshMaterial, displayParents, displayEdges } = this;\n\n\t\t\tif ( i >= this._roots.length ) {\n\n\t\t\t\tconst root = new MeshBVHRootHelper( bvh, edgeMaterial, depth, i );\n\t\t\t\tthis.add( root );\n\t\t\t\tthis._roots.push( root );\n\n\t\t\t}\n\n\t\t\tconst root = this._roots[ i ];\n\t\t\troot.bvh = bvh;\n\t\t\troot.depth = depth;\n\t\t\troot.displayParents = displayParents;\n\t\t\troot.displayEdges = displayEdges;\n\t\t\troot.material = displayEdges ? edgeMaterial : meshMaterial;\n\t\t\troot.update();\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( ...args ) {\n\n\t\tconst mesh = this.mesh;\n\t\tconst parent = this.parent;\n\n\t\tif ( mesh !== null ) {\n\n\t\t\tmesh.updateWorldMatrix( true, false );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tthis.matrix\n\t\t\t\t\t.copy( parent.matrixWorld )\n\t\t\t\t\t.invert()\n\t\t\t\t\t.multiply( mesh.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrix\n\t\t\t\t\t.copy( mesh.matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.matrix.decompose(\n\t\t\t\tthis.position,\n\t\t\t\tthis.quaternion,\n\t\t\t\tthis.scale,\n\t\t\t);\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( ...args );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.depth = source.depth;\n\t\tthis.mesh = source.mesh;\n\t\tthis.bvh = source.bvh;\n\t\tthis.opacity = source.opacity;\n\t\tthis.color.copy( source.color );\n\n\t}\n\n\tclone() {\n\n\t\treturn new MeshBVHHelper( this.mesh, this.bvh, this.depth );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.edgeMaterial.dispose();\n\t\tthis.meshMaterial.dispose();\n\n\t\tconst children = this.children;\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].geometry.dispose();\n\n\t\t}\n\n\t}\n\n}\n\nexport class MeshBVHVisualizer extends MeshBVHHelper {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tconsole.warn( 'MeshBVHVisualizer: MeshBVHVisualizer has been deprecated. Use MeshBVHHelper, instead.' );\n\n\t}\n\n}\n\nexport { MeshBVHHelper };\n", "import { Box3, Vector3 } from 'three';\nimport { TRAVERSAL_COST, TRIANGLE_INTERSECT_COST } from '../core/Constants.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { isSharedArrayBufferSupported } from '../utils/BufferUtils.js';\n\nconst _box1 = /* @__PURE__ */ new Box3();\nconst _box2 = /* @__PURE__ */ new Box3();\nconst _vec = /* @__PURE__ */ new Vector3();\n\n// https://stackoverflow.com/questions/1248302/how-to-get-the-size-of-a-javascript-object\nfunction getPrimitiveSize( el ) {\n\n\tswitch ( typeof el ) {\n\n\t\tcase 'number':\n\t\t\treturn 8;\n\t\tcase 'string':\n\t\t\treturn el.length * 2;\n\t\tcase 'boolean':\n\t\t\treturn 4;\n\t\tdefault:\n\t\t\treturn 0;\n\n\t}\n\n}\n\nfunction isTypedArray( arr ) {\n\n\tconst regex = /(Uint|Int|Float)(8|16|32)Array/;\n\treturn regex.test( arr.constructor.name );\n\n}\n\nfunction getRootExtremes( bvh, group ) {\n\n\tconst result = {\n\t\tnodeCount: 0,\n\t\tleafNodeCount: 0,\n\n\t\tdepth: {\n\t\t\tmin: Infinity, max: - Infinity\n\t\t},\n\t\ttris: {\n\t\t\tmin: Infinity, max: - Infinity\n\t\t},\n\t\tsplits: [ 0, 0, 0 ],\n\t\tsurfaceAreaScore: 0,\n\t};\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offsetOrSplit, count ) => {\n\n\t\tconst l0 = boundingData[ 0 + 3 ] - boundingData[ 0 ];\n\t\tconst l1 = boundingData[ 1 + 3 ] - boundingData[ 1 ];\n\t\tconst l2 = boundingData[ 2 + 3 ] - boundingData[ 2 ];\n\n\t\tconst surfaceArea = 2 * ( l0 * l1 + l1 * l2 + l2 * l0 );\n\n\t\tresult.nodeCount ++;\n\t\tif ( isLeaf ) {\n\n\t\t\tresult.leafNodeCount ++;\n\n\t\t\tresult.depth.min = Math.min( depth, result.depth.min );\n\t\t\tresult.depth.max = Math.max( depth, result.depth.max );\n\n\t\t\tresult.tris.min = Math.min( count, result.tris.min );\n\t\t\tresult.tris.max = Math.max( count, result.tris.max );\n\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRIANGLE_INTERSECT_COST * count;\n\n\t\t} else {\n\n\t\t\tresult.splits[ offsetOrSplit ] ++;\n\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRAVERSAL_COST;\n\n\t\t}\n\n\t}, group );\n\n\t// If there are no leaf nodes because the tree hasn't finished generating yet.\n\tif ( result.tris.min === Infinity ) {\n\n\t\tresult.tris.min = 0;\n\t\tresult.tris.max = 0;\n\n\t}\n\n\tif ( result.depth.min === Infinity ) {\n\n\t\tresult.depth.min = 0;\n\t\tresult.depth.max = 0;\n\n\t}\n\n\treturn result;\n\n}\n\nfunction getBVHExtremes( bvh ) {\n\n\treturn bvh._roots.map( ( root, i ) => getRootExtremes( bvh, i ) );\n\n}\n\nfunction estimateMemoryInBytes( obj ) {\n\n\tconst traversed = new Set();\n\tconst stack = [ obj ];\n\tlet bytes = 0;\n\n\twhile ( stack.length ) {\n\n\t\tconst curr = stack.pop();\n\t\tif ( traversed.has( curr ) ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\ttraversed.add( curr );\n\n\t\tfor ( let key in curr ) {\n\n\t\t\tif ( ! curr.hasOwnProperty( key ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tbytes += getPrimitiveSize( key );\n\n\t\t\tconst value = curr[ key ];\n\t\t\tif ( value && ( typeof value === 'object' || typeof value === 'function' ) ) {\n\n\t\t\t\tif ( isTypedArray( value ) ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else if ( isSharedArrayBufferSupported() && value instanceof SharedArrayBuffer ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else if ( value instanceof ArrayBuffer ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstack.push( value );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tbytes += getPrimitiveSize( value );\n\n\t\t\t}\n\n\n\t\t}\n\n\t}\n\n\treturn bytes;\n\n}\n\nfunction validateBounds( bvh ) {\n\n\tconst geometry = bvh.geometry;\n\tconst depthStack = [];\n\tconst index = geometry.index;\n\tconst position = geometry.getAttribute( 'position' );\n\tlet passes = true;\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\n\n\t\tconst info = {\n\t\t\tdepth,\n\t\t\tisLeaf,\n\t\t\tboundingData,\n\t\t\toffset,\n\t\t\tcount,\n\t\t};\n\t\tdepthStack[ depth ] = info;\n\n\t\tarrayToBox( 0, boundingData, _box1 );\n\t\tconst parent = depthStack[ depth - 1 ];\n\n\t\tif ( isLeaf ) {\n\n\t\t\t// check triangles\n\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\t\t\tconst triIndex = bvh.resolveTriangleIndex( i );\n\t\t\t\tlet i0 = 3 * triIndex;\n\t\t\t\tlet i1 = 3 * triIndex + 1;\n\t\t\t\tlet i2 = 3 * triIndex + 2;\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\ti0 = index.getX( i0 );\n\t\t\t\t\ti1 = index.getX( i1 );\n\t\t\t\t\ti2 = index.getX( i2 );\n\n\t\t\t\t}\n\n\t\t\t\tlet isContained;\n\n\t\t\t\t_vec.fromBufferAttribute( position, i0 );\n\t\t\t\tisContained = _box1.containsPoint( _vec );\n\n\t\t\t\t_vec.fromBufferAttribute( position, i1 );\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\n\n\t\t\t\t_vec.fromBufferAttribute( position, i2 );\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\n\n\t\t\t\tconsole.assert( isContained, 'Leaf bounds does not fully contain triangle.' );\n\t\t\t\tpasses = passes && isContained;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parent ) {\n\n\t\t\t// check if my bounds fit in my parents\n\t\t\tarrayToBox( 0, boundingData, _box2 );\n\n\t\t\tconst isContained = _box2.containsBox( _box1 );\n\t\t\tconsole.assert( isContained, 'Parent bounds does not fully contain child.' );\n\t\t\tpasses = passes && isContained;\n\n\t\t}\n\n\t} );\n\n\treturn passes;\n\n}\n\n// Returns a simple, human readable object that represents the BVH.\nfunction getJSONStructure( bvh ) {\n\n\tconst depthStack = [];\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\n\n\t\tconst info = {\n\t\t\tbounds: arrayToBox( 0, boundingData, new Box3() ),\n\t\t};\n\n\t\tif ( isLeaf ) {\n\n\t\t\tinfo.count = count;\n\t\t\tinfo.offset = offset;\n\n\t\t} else {\n\n\t\t\tinfo.left = null;\n\t\t\tinfo.right = null;\n\n\t\t}\n\n\t\tdepthStack[ depth ] = info;\n\n\t\t// traversal hits the left then right node\n\t\tconst parent = depthStack[ depth - 1 ];\n\t\tif ( parent ) {\n\n\t\t\tif ( parent.left === null ) {\n\n\t\t\t\tparent.left = info;\n\n\t\t\t} else {\n\n\t\t\t\tparent.right = info;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn depthStack[ 0 ];\n\n}\n\nexport { estimateMemoryInBytes, getBVHExtremes, validateBounds, getJSONStructure };\n", "// converts the given BVH raycast intersection to align with the three.js raycast\n// structure (include object, world space distance and point).\nexport function convertRaycastIntersect( hit, object, raycaster ) {\n\n\tif ( hit === null ) {\n\n\t\treturn null;\n\n\t}\n\n\thit.point.applyMatrix4( object.matrixWorld );\n\thit.distance = hit.point.distanceTo( raycaster.ray.origin );\n\thit.object = object;\n\n\tif ( hit.distance < raycaster.near || hit.distance > raycaster.far ) {\n\n\t\treturn null;\n\n\t} else {\n\n\t\treturn hit;\n\n\t}\n\n}\n", "import { Ray, Matrix4, Mesh } from 'three';\nimport { convertRaycastIntersect } from './GeometryRayIntersectUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nconst ray = /* @__PURE__ */ new Ray();\nconst tmpInverseMatrix = /* @__PURE__ */ new Matrix4();\nconst origMeshRaycastFunc = Mesh.prototype.raycast;\n\nexport function acceleratedRaycast( raycaster, intersects ) {\n\n\tif ( this.geometry.boundsTree ) {\n\n\t\tif ( this.material === undefined ) return;\n\n\t\ttmpInverseMatrix.copy( this.matrixWorld ).invert();\n\t\tray.copy( raycaster.ray ).applyMatrix4( tmpInverseMatrix );\n\n\t\tconst bvh = this.geometry.boundsTree;\n\t\tif ( raycaster.firstHitOnly === true ) {\n\n\t\t\tconst hit = convertRaycastIntersect( bvh.raycastFirst( ray, this.material ), this, raycaster );\n\t\t\tif ( hit ) {\n\n\t\t\t\tintersects.push( hit );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst hits = bvh.raycast( ray, this.material );\n\t\t\tfor ( let i = 0, l = hits.length; i < l; i ++ ) {\n\n\t\t\t\tconst hit = convertRaycastIntersect( hits[ i ], this, raycaster );\n\t\t\t\tif ( hit ) {\n\n\t\t\t\t\tintersects.push( hit );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\torigMeshRaycastFunc.call( this, raycaster, intersects );\n\n\t}\n\n}\n\nexport function computeBoundsTree( options ) {\n\n\tthis.boundsTree = new MeshBVH( this, options );\n\treturn this.boundsTree;\n\n}\n\nexport function disposeBoundsTree() {\n\n\tthis.boundsTree = null;\n\n}\n", "import {\n\tDataTexture,\n\tFloatType,\n\tIntType,\n\tUnsignedIntType,\n\tByteType,\n\tUnsignedByteType,\n\tShortType,\n\tUnsignedShortType,\n\n\tRedFormat,\n\tRGFormat,\n\tRGBAFormat,\n\n\tRedIntegerFormat,\n\tRGIntegerFormat,\n\tRGBAIntegerFormat,\n\n\tNearestFilter,\n} from 'three';\n\nfunction countToStringFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return 'R';\n\t\tcase 2: return 'RG';\n\t\tcase 3: return 'RGBA';\n\t\tcase 4: return 'RGBA';\n\n\t}\n\n\tthrow new Error();\n\n}\n\nfunction countToFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return RedFormat;\n\t\tcase 2: return RGFormat;\n\t\tcase 3: return RGBAFormat;\n\t\tcase 4: return RGBAFormat;\n\n\t}\n\n}\n\nfunction countToIntFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return RedIntegerFormat;\n\t\tcase 2: return RGIntegerFormat;\n\t\tcase 3: return RGBAIntegerFormat;\n\t\tcase 4: return RGBAIntegerFormat;\n\n\t}\n\n}\n\nexport class VertexAttributeTexture extends DataTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.minFilter = NearestFilter;\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.generateMipmaps = false;\n\t\tthis.overrideItemSize = null;\n\t\tthis._forcedType = null;\n\n\t}\n\n\tupdateFrom( attr ) {\n\n\t\tconst overrideItemSize = this.overrideItemSize;\n\t\tconst originalItemSize = attr.itemSize;\n\t\tconst originalCount = attr.count;\n\t\tif ( overrideItemSize !== null ) {\n\n\t\t\tif ( ( originalItemSize * originalCount ) % overrideItemSize !== 0.0 ) {\n\n\t\t\t\tthrow new Error( 'VertexAttributeTexture: overrideItemSize must divide evenly into buffer length.' );\n\n\t\t\t}\n\n\t\t\tattr.itemSize = overrideItemSize;\n\t\t\tattr.count = originalCount * originalItemSize / overrideItemSize;\n\n\t\t}\n\n\t\tconst itemSize = attr.itemSize;\n\t\tconst count = attr.count;\n\t\tconst normalized = attr.normalized;\n\t\tconst originalBufferCons = attr.array.constructor;\n\t\tconst byteCount = originalBufferCons.BYTES_PER_ELEMENT;\n\t\tlet targetType = this._forcedType;\n\t\tlet finalStride = itemSize;\n\n\t\t// derive the type of texture this should be in the shader\n\t\tif ( targetType === null ) {\n\n\t\t\tswitch ( originalBufferCons ) {\n\n\t\t\t\tcase Float32Array:\n\t\t\t\t\ttargetType = FloatType;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Uint8Array:\n\t\t\t\tcase Uint16Array:\n\t\t\t\tcase Uint32Array:\n\t\t\t\t\ttargetType = UnsignedIntType;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Int8Array:\n\t\t\t\tcase Int16Array:\n\t\t\t\tcase Int32Array:\n\t\t\t\t\ttargetType = IntType;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// get the target format to store the texture as\n\t\tlet type, format, normalizeValue, targetBufferCons;\n\t\tlet internalFormat = countToStringFormat( itemSize );\n\t\tswitch ( targetType ) {\n\n\t\t\tcase FloatType:\n\t\t\t\tnormalizeValue = 1.0;\n\t\t\t\tformat = countToFormat( itemSize );\n\n\t\t\t\tif ( normalized && byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = originalBufferCons;\n\t\t\t\t\tinternalFormat += '8';\n\n\t\t\t\t\tif ( originalBufferCons === Uint8Array ) {\n\n\t\t\t\t\t\ttype = UnsignedByteType;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttype = ByteType;\n\t\t\t\t\t\tinternalFormat += '_SNORM';\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Float32Array;\n\t\t\t\t\tinternalFormat += '32F';\n\t\t\t\t\ttype = FloatType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase IntType:\n\t\t\t\tinternalFormat += byteCount * 8 + 'I';\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\n\t\t\t\tformat = countToIntFormat( itemSize );\n\n\t\t\t\tif ( byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = Int8Array;\n\t\t\t\t\ttype = ByteType;\n\n\t\t\t\t} else if ( byteCount === 2 ) {\n\n\t\t\t\t\ttargetBufferCons = Int16Array;\n\t\t\t\t\ttype = ShortType;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Int32Array;\n\t\t\t\t\ttype = IntType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase UnsignedIntType:\n\t\t\t\tinternalFormat += byteCount * 8 + 'UI';\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\n\t\t\t\tformat = countToIntFormat( itemSize );\n\n\t\t\t\tif ( byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = Uint8Array;\n\t\t\t\t\ttype = UnsignedByteType;\n\n\t\t\t\t} else if ( byteCount === 2 ) {\n\n\t\t\t\t\ttargetBufferCons = Uint16Array;\n\t\t\t\t\ttype = UnsignedShortType;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Uint32Array;\n\t\t\t\t\ttype = UnsignedIntType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// there will be a mismatch between format length and final length because\n\t\t// RGBFormat and RGBIntegerFormat was removed\n\t\tif ( finalStride === 3 && ( format === RGBAFormat || format === RGBAIntegerFormat ) ) {\n\n\t\t\tfinalStride = 4;\n\n\t\t}\n\n\t\t// copy the data over to the new texture array\n\t\tconst dimension = Math.ceil( Math.sqrt( count ) ) || 1;\n\t\tconst length = finalStride * dimension * dimension;\n\t\tconst dataArray = new targetBufferCons( length );\n\n\t\t// temporarily set the normalized state to false since we have custom normalization logic\n\t\tconst originalNormalized = attr.normalized;\n\t\tattr.normalized = false;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tconst ii = finalStride * i;\n\t\t\tdataArray[ ii ] = attr.getX( i ) / normalizeValue;\n\n\t\t\tif ( itemSize >= 2 ) {\n\n\t\t\t\tdataArray[ ii + 1 ] = attr.getY( i ) / normalizeValue;\n\n\t\t\t}\n\n\t\t\tif ( itemSize >= 3 ) {\n\n\t\t\t\tdataArray[ ii + 2 ] = attr.getZ( i ) / normalizeValue;\n\n\t\t\t\tif ( finalStride === 4 ) {\n\n\t\t\t\t\tdataArray[ ii + 3 ] = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( itemSize >= 4 ) {\n\n\t\t\t\tdataArray[ ii + 3 ] = attr.getW( i ) / normalizeValue;\n\n\t\t\t}\n\n\t\t}\n\n\t\tattr.normalized = originalNormalized;\n\n\t\tthis.internalFormat = internalFormat;\n\t\tthis.format = format;\n\t\tthis.type = type;\n\t\tthis.image.width = dimension;\n\t\tthis.image.height = dimension;\n\t\tthis.image.data = dataArray;\n\t\tthis.needsUpdate = true;\n\t\tthis.dispose();\n\n\t\tattr.itemSize = originalItemSize;\n\t\tattr.count = originalCount;\n\n\t}\n\n}\n\nexport class UIntVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = UnsignedIntType;\n\n\t}\n\n}\n\nexport class IntVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = IntType;\n\n\t}\n\n\n}\n\nexport class FloatVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = FloatType;\n\n\t}\n\n}\n", "import {\n\tDataTexture,\n\tFloatType,\n\tUnsignedIntType,\n\tRGBAFormat,\n\tRGIntegerFormat,\n\tNearestFilter,\n\tBufferAttribute,\n} from 'three';\nimport {\n\tFloatVertexAttributeTexture,\n\tUIntVertexAttributeTexture,\n} from './VertexAttributeTexture.js';\nimport { BYTES_PER_NODE } from '../core/Constants.js';\nimport {\n\tBOUNDING_DATA_INDEX,\n\tCOUNT,\n\tIS_LEAF,\n\tRIGHT_NODE,\n\tOFFSET,\n\tSPLIT_AXIS,\n} from '../core/utils/nodeBufferUtils.js';\nimport { getIndexArray, getVertexCount } from '../core/build/geometryUtils.js';\n\nexport class MeshBVHUniformStruct {\n\n\tconstructor() {\n\n\t\tthis.index = new UIntVertexAttributeTexture();\n\t\tthis.position = new FloatVertexAttributeTexture();\n\t\tthis.bvhBounds = new DataTexture();\n\t\tthis.bvhContents = new DataTexture();\n\t\tthis._cachedIndexAttr = null;\n\n\t\tthis.index.overrideItemSize = 3;\n\n\t}\n\n\tupdateFrom( bvh ) {\n\n\t\tconst { geometry } = bvh;\n\t\tbvhToTextures( bvh, this.bvhBounds, this.bvhContents );\n\n\t\tthis.position.updateFrom( geometry.attributes.position );\n\n\t\t// dereference a new index attribute if we're using indirect storage\n\t\tif ( bvh.indirect ) {\n\n\t\t\tconst indirectBuffer = bvh._indirectBuffer;\n\t\t\tif (\n\t\t\t\tthis._cachedIndexAttr === null ||\n\t\t\t\tthis._cachedIndexAttr.count !== indirectBuffer.length\n\t\t\t) {\n\n\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\tthis._cachedIndexAttr = geometry.index.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst array = getIndexArray( getVertexCount( geometry ) );\n\t\t\t\t\tthis._cachedIndexAttr = new BufferAttribute( array, 1, false );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdereferenceIndex( geometry, indirectBuffer, this._cachedIndexAttr );\n\t\t\tthis.index.updateFrom( this._cachedIndexAttr );\n\n\t\t} else {\n\n\t\t\tthis.index.updateFrom( geometry.index );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tconst { index, position, bvhBounds, bvhContents } = this;\n\n\t\tif ( index ) index.dispose();\n\t\tif ( position ) position.dispose();\n\t\tif ( bvhBounds ) bvhBounds.dispose();\n\t\tif ( bvhContents ) bvhContents.dispose();\n\n\t}\n\n}\n\nfunction dereferenceIndex( geometry, indirectBuffer, target ) {\n\n\tconst unpacked = target.array;\n\tconst indexArray = geometry.index ? geometry.index.array : null;\n\tfor ( let i = 0, l = indirectBuffer.length; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst v3 = 3 * indirectBuffer[ i ];\n\t\tfor ( let c = 0; c < 3; c ++ ) {\n\n\t\t\tunpacked[ i3 + c ] = indexArray ? indexArray[ v3 + c ] : v3 + c;\n\n\t\t}\n\n\t}\n\n}\n\nfunction bvhToTextures( bvh, boundsTexture, contentsTexture ) {\n\n\tconst roots = bvh._roots;\n\n\tif ( roots.length !== 1 ) {\n\n\t\tthrow new Error( 'MeshBVHUniformStruct: Multi-root BVHs not supported.' );\n\n\t}\n\n\tconst root = roots[ 0 ];\n\tconst uint16Array = new Uint16Array( root );\n\tconst uint32Array = new Uint32Array( root );\n\tconst float32Array = new Float32Array( root );\n\n\t// Both bounds need two elements per node so compute the height so it's twice as long as\n\t// the width so we can expand the row by two and still have a square texture\n\tconst nodeCount = root.byteLength / BYTES_PER_NODE;\n\tconst boundsDimension = 2 * Math.ceil( Math.sqrt( nodeCount / 2 ) );\n\tconst boundsArray = new Float32Array( 4 * boundsDimension * boundsDimension );\n\n\tconst contentsDimension = Math.ceil( Math.sqrt( nodeCount ) );\n\tconst contentsArray = new Uint32Array( 2 * contentsDimension * contentsDimension );\n\n\tfor ( let i = 0; i < nodeCount; i ++ ) {\n\n\t\tconst nodeIndex32 = i * BYTES_PER_NODE / 4;\n\t\tconst nodeIndex16 = nodeIndex32 * 2;\n\t\tconst boundsIndex = BOUNDING_DATA_INDEX( nodeIndex32 );\n\t\tfor ( let b = 0; b < 3; b ++ ) {\n\n\t\t\tboundsArray[ 8 * i + 0 + b ] = float32Array[ boundsIndex + 0 + b ];\n\t\t\tboundsArray[ 8 * i + 4 + b ] = float32Array[ boundsIndex + 3 + b ];\n\n\t\t}\n\n\t\tif ( IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\n\t\t\tconst mergedLeafCount = 0xffff0000 | count;\n\t\t\tcontentsArray[ i * 2 + 0 ] = mergedLeafCount;\n\t\t\tcontentsArray[ i * 2 + 1 ] = offset;\n\n\t\t} else {\n\n\t\t\tconst rightIndex = 4 * RIGHT_NODE( nodeIndex32, uint32Array ) / BYTES_PER_NODE;\n\t\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\n\t\t\tcontentsArray[ i * 2 + 0 ] = splitAxis;\n\t\t\tcontentsArray[ i * 2 + 1 ] = rightIndex;\n\n\t\t}\n\n\t}\n\n\tboundsTexture.image.data = boundsArray;\n\tboundsTexture.image.width = boundsDimension;\n\tboundsTexture.image.height = boundsDimension;\n\tboundsTexture.format = RGBAFormat;\n\tboundsTexture.type = FloatType;\n\tboundsTexture.internalFormat = 'RGBA32F';\n\tboundsTexture.minFilter = NearestFilter;\n\tboundsTexture.magFilter = NearestFilter;\n\tboundsTexture.generateMipmaps = false;\n\tboundsTexture.needsUpdate = true;\n\tboundsTexture.dispose();\n\n\tcontentsTexture.image.data = contentsArray;\n\tcontentsTexture.image.width = contentsDimension;\n\tcontentsTexture.image.height = contentsDimension;\n\tcontentsTexture.format = RGIntegerFormat;\n\tcontentsTexture.type = UnsignedIntType;\n\tcontentsTexture.internalFormat = 'RG32UI';\n\tcontentsTexture.minFilter = NearestFilter;\n\tcontentsTexture.magFilter = NearestFilter;\n\tcontentsTexture.generateMipmaps = false;\n\tcontentsTexture.needsUpdate = true;\n\tcontentsTexture.dispose();\n\n}\n", "import { BufferAttribute, BufferGeometry, Vector3, Vector4, Matrix4, Matrix3 } from 'three';\n\nconst _positionVector = /*@__PURE__*/ new Vector3();\nconst _normalVector = /*@__PURE__*/ new Vector3();\nconst _tangentVector = /*@__PURE__*/ new Vector3();\nconst _tangentVector4 = /*@__PURE__*/ new Vector4();\n\nconst _morphVector = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\n\n// Confirms that the two provided attributes are compatible\nfunction validateAttributes( attr1, attr2 ) {\n\n\tif ( ! attr1 && ! attr2 ) {\n\n\t\treturn;\n\n\t}\n\n\tconst sameCount = attr1.count === attr2.count;\n\tconst sameNormalized = attr1.normalized === attr2.normalized;\n\tconst sameType = attr1.array.constructor === attr2.array.constructor;\n\tconst sameItemSize = attr1.itemSize === attr2.itemSize;\n\n\tif ( ! sameCount || ! sameNormalized || ! sameType || ! sameItemSize ) {\n\n\t\tthrow new Error();\n\n\t}\n\n}\n\n// Clones the given attribute with a new compatible buffer attribute but no data\nfunction createAttributeClone( attr, countOverride = null ) {\n\n\tconst cons = attr.array.constructor;\n\tconst normalized = attr.normalized;\n\tconst itemSize = attr.itemSize;\n\tconst count = countOverride === null ? attr.count : countOverride;\n\n\treturn new BufferAttribute( new cons( itemSize * count ), itemSize, normalized );\n\n}\n\n// target offset is the number of elements in the target buffer stride to skip before copying the\n// attributes contents in to.\nfunction copyAttributeContents( attr, target, targetOffset = 0 ) {\n\n\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\tconst itemSize = attr.itemSize;\n\t\tfor ( let i = 0, l = attr.count; i < l; i ++ ) {\n\n\t\t\tconst io = i + targetOffset;\n\t\t\ttarget.setX( io, attr.getX( i ) );\n\t\t\tif ( itemSize >= 2 ) target.setY( io, attr.getY( i ) );\n\t\t\tif ( itemSize >= 3 ) target.setZ( io, attr.getZ( i ) );\n\t\t\tif ( itemSize >= 4 ) target.setW( io, attr.getW( i ) );\n\n\t\t}\n\n\t} else {\n\n\t\tconst array = target.array;\n\t\tconst cons = array.constructor;\n\t\tconst byteOffset = array.BYTES_PER_ELEMENT * attr.itemSize * targetOffset;\n\t\tconst temp = new cons( array.buffer, byteOffset, attr.array.length );\n\t\ttemp.set( attr.array );\n\n\t}\n\n}\n\n// Adds the \"matrix\" multiplied by \"scale\" to \"target\"\nfunction addScaledMatrix( target, matrix, scale ) {\n\n\tconst targetArray = target.elements;\n\tconst matrixArray = matrix.elements;\n\tfor ( let i = 0, l = matrixArray.length; i < l; i ++ ) {\n\n\t\ttargetArray[ i ] += matrixArray[ i ] * scale;\n\n\t}\n\n}\n\n// A version of \"SkinnedMesh.boneTransform\" for normals\nfunction boneNormalTransform( mesh, index, target ) {\n\n\tconst skeleton = mesh.skeleton;\n\tconst geometry = mesh.geometry;\n\tconst bones = skeleton.bones;\n\tconst boneInverses = skeleton.boneInverses;\n\n\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t_matrix.elements.fill( 0 );\n\n\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\tif ( weight !== 0 ) {\n\n\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\t\t\t_boneMatrix.multiplyMatrices( bones[ boneIndex ].matrixWorld, boneInverses[ boneIndex ] );\n\n\t\t\taddScaledMatrix( _matrix, _boneMatrix, weight );\n\n\t\t}\n\n\t}\n\n\t_matrix.multiply( mesh.bindMatrix ).premultiply( mesh.bindMatrixInverse );\n\ttarget.transformDirection( _matrix );\n\n\treturn target;\n\n}\n\n// Applies the morph target data to the target vector\nfunction applyMorphTarget( morphData, morphInfluences, morphTargetsRelative, i, target ) {\n\n\t_morphVector.set( 0, 0, 0 );\n\tfor ( let j = 0, jl = morphData.length; j < jl; j ++ ) {\n\n\t\tconst influence = morphInfluences[ j ];\n\t\tconst morphAttribute = morphData[ j ];\n\n\t\tif ( influence === 0 ) continue;\n\n\t\t_temp.fromBufferAttribute( morphAttribute, i );\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\t_morphVector.addScaledVector( _temp, influence );\n\n\t\t} else {\n\n\t\t\t_morphVector.addScaledVector( _temp.sub( target ), influence );\n\n\t\t}\n\n\t}\n\n\ttarget.add( _morphVector );\n\n}\n\n// Modified version of BufferGeometryUtils.mergeBufferGeometries that ignores morph targets and updates a attributes in place\nfunction mergeBufferGeometries( geometries, options = { useGroups: false, updateIndex: false, skipAttributes: [] }, targetGeometry = new BufferGeometry() ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\tconst { useGroups = false, updateIndex = false, skipAttributes = [] } = options;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst attributes = {};\n\n\tlet offset = 0;\n\n\ttargetGeometry.clearGroups();\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) {\n\n\t\t\t\tattributes[ name ] = [];\n\n\t\t\t}\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tthrow new Error( 'StaticGeometryGenerator: Make sure all geometries have the same number of attributes.' );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: The geometry must have either an index or a position attribute' );\n\n\t\t\t}\n\n\t\t\ttargetGeometry.addGroup( offset, count, i );\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\tif ( isIndexed ) {\n\n\t\tlet forceUpdateIndex = false;\n\t\tif ( ! targetGeometry.index ) {\n\n\t\t\tlet indexCount = 0;\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tindexCount += geometries[ i ].index.count;\n\n\t\t\t}\n\n\t\t\ttargetGeometry.setIndex( new BufferAttribute( new Uint32Array( indexCount ), 1, false ) );\n\t\t\tforceUpdateIndex = true;\n\n\t\t}\n\n\t\tif ( updateIndex || forceUpdateIndex ) {\n\n\t\t\tconst targetIndex = targetGeometry.index;\n\t\t\tlet targetOffset = 0;\n\t\t\tlet indexOffset = 0;\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tconst geometry = geometries[ i ];\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tif ( skipAttributes[ i ] !== true ) {\n\n\t\t\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\t\t\ttargetIndex.setX( targetOffset, index.getX( j ) + indexOffset );\n\t\t\t\t\t\ttargetOffset ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tindexOffset += geometry.attributes.position.count;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// merge attributes\n\tfor ( const name in attributes ) {\n\n\t\tconst attrList = attributes[ name ];\n\t\tif ( ! ( name in targetGeometry.attributes ) ) {\n\n\t\t\tlet count = 0;\n\t\t\tfor ( const key in attrList ) {\n\n\t\t\t\tcount += attrList[ key ].count;\n\n\t\t\t}\n\n\t\t\ttargetGeometry.setAttribute( name, createAttributeClone( attributes[ name ][ 0 ], count ) );\n\n\t\t}\n\n\t\tconst targetAttribute = targetGeometry.attributes[ name ];\n\t\tlet offset = 0;\n\t\tfor ( let i = 0, l = attrList.length; i < l; i ++ ) {\n\n\t\t\tconst attr = attrList[ i ];\n\t\t\tif ( skipAttributes[ i ] !== true ) {\n\n\t\t\t\tcopyAttributeContents( attr, targetAttribute, offset );\n\n\t\t\t}\n\n\t\t\toffset += attr.count;\n\n\t\t}\n\n\t}\n\n\treturn targetGeometry;\n\n}\n\nfunction checkTypedArrayEquality( a, b ) {\n\n\tif ( a === null || b === null ) {\n\n\t\treturn a === b;\n\n\t}\n\n\tif ( a.length !== b.length ) {\n\n\t\treturn false;\n\n\t}\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction invertGeometry( geometry ) {\n\n\tconst { index, attributes } = geometry;\n\tif ( index ) {\n\n\t\tfor ( let i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\tconst v0 = index.getX( i );\n\t\t\tconst v2 = index.getX( i + 2 );\n\t\t\tindex.setX( i, v2 );\n\t\t\tindex.setX( i + 2, v0 );\n\n\t\t}\n\n\t} else {\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attr = attributes[ key ];\n\t\t\tconst itemSize = attr.itemSize;\n\t\t\tfor ( let i = 0, l = attr.count; i < l; i += 3 ) {\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tconst v0 = attr.getComponent( i, j );\n\t\t\t\t\tconst v2 = attr.getComponent( i + 2, j );\n\t\t\t\t\tattr.setComponent( i, j, v2 );\n\t\t\t\t\tattr.setComponent( i + 2, j, v0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n\n}\n\n// Checks whether the geometry changed between this and last evaluation\nclass GeometryDiff {\n\n\tconstructor( mesh ) {\n\n\t\tthis.matrixWorld = new Matrix4();\n\t\tthis.geometryHash = null;\n\t\tthis.boneMatrices = null;\n\t\tthis.primitiveCount = - 1;\n\t\tthis.mesh = mesh;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.mesh;\n\t\tconst geometry = mesh.geometry;\n\t\tconst skeleton = mesh.skeleton;\n\t\tconst primitiveCount = ( geometry.index ? geometry.index.count : geometry.attributes.position.count ) / 3;\n\t\tthis.matrixWorld.copy( mesh.matrixWorld );\n\t\tthis.geometryHash = geometry.attributes.position.version;\n\t\tthis.primitiveCount = primitiveCount;\n\n\t\tif ( skeleton ) {\n\n\t\t\t// ensure the bone matrix array is updated to the appropriate length\n\t\t\tif ( ! skeleton.boneTexture ) {\n\n\t\t\t\tskeleton.computeBoneTexture();\n\n\t\t\t}\n\n\t\t\tskeleton.update();\n\n\t\t\t// copy data if possible otherwise clone it\n\t\t\tconst boneMatrices = skeleton.boneMatrices;\n\t\t\tif ( ! this.boneMatrices || this.boneMatrices.length !== boneMatrices.length ) {\n\n\t\t\t\tthis.boneMatrices = boneMatrices.slice();\n\n\t\t\t} else {\n\n\t\t\t\tthis.boneMatrices.set( boneMatrices );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boneMatrices = null;\n\n\t\t}\n\n\t}\n\n\tdidChange() {\n\n\t\tconst mesh = this.mesh;\n\t\tconst geometry = mesh.geometry;\n\t\tconst primitiveCount = ( geometry.index ? geometry.index.count : geometry.attributes.position.count ) / 3;\n\t\tconst identical =\n\t\t\tthis.matrixWorld.equals( mesh.matrixWorld ) &&\n\t\t\tthis.geometryHash === geometry.attributes.position.version &&\n\t\t\tcheckTypedArrayEquality( mesh.skeleton && mesh.skeleton.boneMatrices || null, this.boneMatrices ) &&\n\t\t\tthis.primitiveCount === primitiveCount;\n\n\t\treturn ! identical;\n\n\t}\n\n}\n\nexport class StaticGeometryGenerator {\n\n\tconstructor( meshes ) {\n\n\t\tif ( ! Array.isArray( meshes ) ) {\n\n\t\t\tmeshes = [ meshes ];\n\n\t\t}\n\n\t\tconst finalMeshes = [];\n\t\tmeshes.forEach( object => {\n\n\t\t\tobject.traverseVisible( c => {\n\n\t\t\t\tif ( c.isMesh ) {\n\n\t\t\t\t\tfinalMeshes.push( c );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t\tthis.meshes = finalMeshes;\n\t\tthis.useGroups = true;\n\t\tthis.applyWorldTransforms = true;\n\t\tthis.attributes = [ 'position', 'normal', 'color', 'tangent', 'uv', 'uv2' ];\n\t\tthis._intermediateGeometry = new Array( finalMeshes.length ).fill().map( () => new BufferGeometry() );\n\t\tthis._diffMap = new WeakMap();\n\n\t}\n\n\tgetMaterials() {\n\n\t\tconst materials = [];\n\t\tthis.meshes.forEach( mesh => {\n\n\t\t\tif ( Array.isArray( mesh.material ) ) {\n\n\t\t\t\tmaterials.push( ...mesh.material );\n\n\t\t\t} else {\n\n\t\t\t\tmaterials.push( mesh.material );\n\n\t\t\t}\n\n\t\t} );\n\t\treturn materials;\n\n\t}\n\n\tgenerate( targetGeometry = new BufferGeometry() ) {\n\n\t\t// track which attributes have been updated and which to skip to avoid unnecessary attribute copies\n\t\tlet skipAttributes = [];\n\t\tconst { meshes, useGroups, _intermediateGeometry, _diffMap } = this;\n\t\tfor ( let i = 0, l = meshes.length; i < l; i ++ ) {\n\n\t\t\tconst mesh = meshes[ i ];\n\t\t\tconst geom = _intermediateGeometry[ i ];\n\t\t\tconst diff = _diffMap.get( mesh );\n\t\t\tif ( ! diff || diff.didChange( mesh ) ) {\n\n\t\t\t\tthis._convertToStaticGeometry( mesh, geom );\n\t\t\t\tskipAttributes.push( false );\n\n\t\t\t\tif ( ! diff ) {\n\n\t\t\t\t\t_diffMap.set( mesh, new GeometryDiff( mesh ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdiff.update();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tskipAttributes.push( true );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( _intermediateGeometry.length === 0 ) {\n\n\t\t\t// if there are no geometries then just create a fake empty geometry to provide\n\t\t\ttargetGeometry.setIndex( null );\n\n\t\t\t// remove all geometry\n\t\t\tconst attrs = targetGeometry.attributes;\n\t\t\tfor ( const key in attrs ) {\n\n\t\t\t\ttargetGeometry.deleteAttribute( key );\n\n\t\t\t}\n\n\t\t\t// create dummy attributes\n\t\t\tfor ( const key in this.attributes ) {\n\n\t\t\t\ttargetGeometry.setAttribute( this.attributes[ key ], new BufferAttribute( new Float32Array( 0 ), 4, false ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tmergeBufferGeometries( _intermediateGeometry, { useGroups, skipAttributes }, targetGeometry );\n\n\t\t}\n\n\t\tfor ( const key in targetGeometry.attributes ) {\n\n\t\t\ttargetGeometry.attributes[ key ].needsUpdate = true;\n\n\t\t}\n\n\t\treturn targetGeometry;\n\n\t}\n\n\t_convertToStaticGeometry( mesh, targetGeometry = new BufferGeometry() ) {\n\n\t\tconst geometry = mesh.geometry;\n\t\tconst applyWorldTransforms = this.applyWorldTransforms;\n\t\tconst includeNormal = this.attributes.includes( 'normal' );\n\t\tconst includeTangent = this.attributes.includes( 'tangent' );\n\t\tconst attributes = geometry.attributes;\n\t\tconst targetAttributes = targetGeometry.attributes;\n\n\t\t// initialize the attributes if they don't exist\n\t\tif ( ! targetGeometry.index && geometry.index ) {\n\n\t\t\ttargetGeometry.index = geometry.index.clone();\n\n\t\t}\n\n\t\tif ( ! targetAttributes.position ) {\n\n\t\t\ttargetGeometry.setAttribute( 'position', createAttributeClone( attributes.position ) );\n\n\t\t}\n\n\t\tif ( includeNormal && ! targetAttributes.normal && attributes.normal ) {\n\n\t\t\ttargetGeometry.setAttribute( 'normal', createAttributeClone( attributes.normal ) );\n\n\t\t}\n\n\t\tif ( includeTangent && ! targetAttributes.tangent && attributes.tangent ) {\n\n\t\t\ttargetGeometry.setAttribute( 'tangent', createAttributeClone( attributes.tangent ) );\n\n\t\t}\n\n\t\t// ensure the attributes are consistent\n\t\tvalidateAttributes( geometry.index, targetGeometry.index );\n\t\tvalidateAttributes( attributes.position, targetAttributes.position );\n\n\t\tif ( includeNormal ) {\n\n\t\t\tvalidateAttributes( attributes.normal, targetAttributes.normal );\n\n\t\t}\n\n\t\tif ( includeTangent ) {\n\n\t\t\tvalidateAttributes( attributes.tangent, targetAttributes.tangent );\n\n\t\t}\n\n\t\t// generate transformed vertex attribute data\n\t\tconst position = attributes.position;\n\t\tconst normal = includeNormal ? attributes.normal : null;\n\t\tconst tangent = includeTangent ? attributes.tangent : null;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphNormal = geometry.morphAttributes.normal;\n\t\tconst morphTangent = geometry.morphAttributes.tangent;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst morphInfluences = mesh.morphTargetInfluences;\n\t\tconst normalMatrix = new Matrix3();\n\t\tnormalMatrix.getNormalMatrix( mesh.matrixWorld );\n\n\t\t// copy the index\n\t\tif ( geometry.index ) {\n\n\t\t\ttargetGeometry.index.array.set( geometry.index.array );\n\n\t\t}\n\n\t\t// copy and apply other attributes\n\t\tfor ( let i = 0, l = attributes.position.count; i < l; i ++ ) {\n\n\t\t\t_positionVector.fromBufferAttribute( position, i );\n\t\t\tif ( normal ) {\n\n\t\t\t\t_normalVector.fromBufferAttribute( normal, i );\n\n\t\t\t}\n\n\t\t\tif ( tangent ) {\n\n\t\t\t\t_tangentVector4.fromBufferAttribute( tangent, i );\n\t\t\t\t_tangentVector.fromBufferAttribute( tangent, i );\n\n\t\t\t}\n\n\t\t\t// apply morph target transform\n\t\t\tif ( morphInfluences ) {\n\n\t\t\t\tif ( morphPosition ) {\n\n\t\t\t\t\tapplyMorphTarget( morphPosition, morphInfluences, morphTargetsRelative, i, _positionVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormal ) {\n\n\t\t\t\t\tapplyMorphTarget( morphNormal, morphInfluences, morphTargetsRelative, i, _normalVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphTangent ) {\n\n\t\t\t\t\tapplyMorphTarget( morphTangent, morphInfluences, morphTargetsRelative, i, _tangentVector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// apply bone transform\n\t\t\tif ( mesh.isSkinnedMesh ) {\n\n\t\t\t\tmesh.applyBoneTransform( i, _positionVector );\n\t\t\t\tif ( normal ) {\n\n\t\t\t\t\tboneNormalTransform( mesh, i, _normalVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( tangent ) {\n\n\t\t\t\t\tboneNormalTransform( mesh, i, _tangentVector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the vectors of the attributes\n\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t_positionVector.applyMatrix4( mesh.matrixWorld );\n\n\t\t\t}\n\n\t\t\ttargetAttributes.position.setXYZ( i, _positionVector.x, _positionVector.y, _positionVector.z );\n\n\t\t\tif ( normal ) {\n\n\t\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t\t_normalVector.applyNormalMatrix( normalMatrix );\n\n\t\t\t\t}\n\n\t\t\t\ttargetAttributes.normal.setXYZ( i, _normalVector.x, _normalVector.y, _normalVector.z );\n\n\t\t\t}\n\n\t\t\tif ( tangent ) {\n\n\t\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t\t_tangentVector.transformDirection( mesh.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\ttargetAttributes.tangent.setXYZW( i, _tangentVector.x, _tangentVector.y, _tangentVector.z, _tangentVector4.w );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// copy other attributes over\n\t\tfor ( const i in this.attributes ) {\n\n\t\t\tconst key = this.attributes[ i ];\n\t\t\tif ( key === 'position' || key === 'tangent' || key === 'normal' || ! ( key in attributes ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! targetAttributes[ key ] ) {\n\n\t\t\t\ttargetGeometry.setAttribute( key, createAttributeClone( attributes[ key ] ) );\n\n\t\t\t}\n\n\t\t\tvalidateAttributes( attributes[ key ], targetAttributes[ key ] );\n\t\t\tcopyAttributeContents( attributes[ key ], targetAttributes[ key ] );\n\n\t\t}\n\n\t\tif ( mesh.matrixWorld.determinant() < 0 ) {\n\n\t\t\tinvertGeometry( targetGeometry );\n\n\t\t}\n\n\t\treturn targetGeometry;\n\n\t}\n\n}\n", "export * from './glsl/common_functions.glsl.js';\nexport * from './glsl/bvh_distance_functions.glsl.js';\nexport * from './glsl/bvh_ray_functions.glsl.js';\nexport * from './glsl/bvh_struct_definitions.glsl.js';\n", "export const common_functions = /* glsl */`\n\n// A stack of uint32 indices can can store the indices for\n// a perfectly balanced tree with a depth up to 31. Lower stack\n// depth gets higher performance.\n//\n// However not all trees are balanced. Best value to set this to\n// is the trees max depth.\n#ifndef BVH_STACK_DEPTH\n#define BVH_STACK_DEPTH 60\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n`;\n", "// Distance to Point\nexport const bvh_distance_functions = /* glsl */`\n\nfloat dot2( vec3 v ) {\n\n\treturn dot( v, v );\n\n}\n\n// https://www.shadertoy.com/view/ttfGWl\nvec3 closestPointToTriangle( vec3 p, vec3 v0, vec3 v1, vec3 v2, out vec3 barycoord ) {\n\n    vec3 v10 = v1 - v0;\n    vec3 v21 = v2 - v1;\n    vec3 v02 = v0 - v2;\n\n\tvec3 p0 = p - v0;\n\tvec3 p1 = p - v1;\n\tvec3 p2 = p - v2;\n\n    vec3 nor = cross( v10, v02 );\n\n    // method 2, in barycentric space\n    vec3  q = cross( nor, p0 );\n    float d = 1.0 / dot2( nor );\n    float u = d * dot( q, v02 );\n    float v = d * dot( q, v10 );\n    float w = 1.0 - u - v;\n\n\tif( u < 0.0 ) {\n\n\t\tw = clamp( dot( p2, v02 ) / dot2( v02 ), 0.0, 1.0 );\n\t\tu = 0.0;\n\t\tv = 1.0 - w;\n\n\t} else if( v < 0.0 ) {\n\n\t\tu = clamp( dot( p0, v10 ) / dot2( v10 ), 0.0, 1.0 );\n\t\tv = 0.0;\n\t\tw = 1.0 - u;\n\n\t} else if( w < 0.0 ) {\n\n\t\tv = clamp( dot( p1, v21 ) / dot2( v21 ), 0.0, 1.0 );\n\t\tw = 0.0;\n\t\tu = 1.0-v;\n\n\t}\n\n\tbarycoord = vec3( u, v, w );\n    return u * v1 + v * v2 + w * v0;\n\n}\n\nfloat distanceToTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// point and cut off range\n\tvec3 point, float closestDistanceSquared,\n\n\t// outputs\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord, inout float side, inout vec3 outPoint\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\t// get the closest point and barycoord\n\t\tvec3 closestPoint = closestPointToTriangle( point, a, b, c, localBarycoord );\n\t\tvec3 delta = point - closestPoint;\n\t\tfloat sqDist = dot2( delta );\n\t\tif ( sqDist < closestDistanceSquared ) {\n\n\t\t\t// set the output results\n\t\t\tclosestDistanceSquared = sqDist;\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = normalize( cross( a - b, b - c ) );\n\t\t\tbarycoord = localBarycoord;\n\t\t\toutPoint = closestPoint;\n\t\t\tside = sign( dot( faceNormal, delta ) );\n\n\t\t}\n\n\t}\n\n\treturn closestDistanceSquared;\n\n}\n\nfloat distanceSqToBounds( vec3 point, vec3 boundsMin, vec3 boundsMax ) {\n\n\tvec3 clampedPoint = clamp( point, boundsMin, boundsMax );\n\tvec3 delta = point - clampedPoint;\n\treturn dot( delta, delta );\n\n}\n\nfloat distanceSqToBVHNodeBoundsPoint( vec3 point, sampler2D bvhBounds, uint currNodeIndex ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn distanceSqToBounds( point, boundsMin, boundsMax );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\\\n\tbvhClosestPointToPoint(\\\n\t\tbvh,\\\n\t\tpoint, faceIndices, faceNormal, barycoord, side, outPoint\\\n\t)\\\n\t_bvhClosestPointToPoint(\\\n\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\\\n\t\tpoint, faceIndices, faceNormal, barycoord, side, outPoint\\\n\t)\n\nfloat _bvhClosestPointToPoint(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// point to check\n\tvec3 point,\n\n\t// output variables\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout vec3 outPoint\n ) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat closestDistanceSquared = pow( 100000.0, 2.0 );\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, currNodeIndex );\n\t\tif ( boundsHitDistance > closestDistanceSquared ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\t\t\tclosestDistanceSquared = distanceToTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count, point, closestDistanceSquared,\n\n\t\t\t\t// outputs\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, outPoint\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\t\t\tbool leftToRight = distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, leftIndex ) < distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, rightIndex );//rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn sqrt( closestDistanceSquared );\n\n}\n`;\n", "export const bvh_ray_functions = /* glsl */`\n\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n// Raycasting\nbool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tdist = max( t0, 0.0 );\n\n\treturn t1 >= dist;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// outputs\n\tinout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nbool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\\\n\tbvhIntersectFirstHit(\\\n\t\tbvh,\\\n\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\\\n\t)\\\n\t_bvhIntersectFirstHit(\\\n\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\\\n\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\\\n\t)\n\nbool _bvhIntersectFirstHit(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables split into separate variables due to output precision\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = INFINITY;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance;\n\t\tif (\n\t\t\t! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )\n\t\t\t|| boundsHitDistance > triangleDistance\n\t\t) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count,\n\t\t\t\trayOrigin, rayDirection, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n`;\n", "// Note that a struct cannot be used for the hit record including faceIndices, faceNormal, barycoord,\n// side, and dist because on some mobile GPUS (such as Adreno) numbers are afforded less precision specifically\n// when in a struct leading to inaccurate hit results. See KhronosGroup/WebGL#3351 for more details.\nexport const bvh_struct_definitions = /* glsl */`\nstruct BVH {\n\n\tusampler2D index;\n\tsampler2D position;\n\n\tsampler2D bvhBounds;\n\tusampler2D bvhContents;\n\n};\n`;\n", "export { MeshBVH } from './core/MeshBVH.js';\nexport { MeshBVHHelper } from './objects/MeshBVHHelper.js';\nexport { CENTER, AVERAGE, SAH, NOT_INTERSECTED, INTERSECTED, CONTAINED } from './core/Constants.js';\nexport { getBVHExtremes, estimateMemoryInBytes, getJSONStructure, validateBounds } from './debug/Debug.js';\nexport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from './utils/ExtensionUtilities.js';\nexport { getTriangleHitPointInfo } from './utils/TriangleUtilities.js';\nexport * from './math/ExtendedTriangle.js';\nexport * from './math/OrientedBox.js';\nexport * from './gpu/MeshBVHUniformStruct.js';\nexport * from './gpu/VertexAttributeTexture.js';\nexport * from './utils/StaticGeometryGenerator.js';\nexport * as BVHShaderGLSL from './gpu/BVHShaderGLSL.js';\n\n// backwards compatibility\nimport * as BVHShaderGLSL from './gpu/BVHShaderGLSL.js';\nexport const shaderStructs = BVHShaderGLSL.bvh_struct_definitions;\nexport const shaderDistanceFunction = BVHShaderGLSL.bvh_distance_functions;\nexport const shaderIntersectFunction = `\n\t${ BVHShaderGLSL.common_functions }\n\t${ BVHShaderGLSL.bvh_ray_functions }\n`;\n", "import * as React from 'react';\n\n/* eslint-disable react-hooks/rules-of-hooks */\nfunction useContextBridge(...contexts) {\n  const cRef = React.useRef([]);\n  cRef.current = contexts.map(context => React.useContext(context));\n  return React.useMemo(() => ({\n    children\n  }) => contexts.reduceRight((acc, Context, i) => /*#__PURE__*/React.createElement(Context.Provider, {\n    value: cRef.current[i],\n    children: acc\n  }), children\n  /*\n   * done this way in reference to:\n   * https://github.com/DefinitelyTyped/DefinitelyTyped/issues/44572#issuecomment-625878049\n   * https://github.com/microsoft/TypeScript/issues/14729\n   */), []);\n}\n\nexport { useContextBridge };\n", "import * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = React.useRef();\n  const [actualRef] = React.useState(() => root ? root instanceof Object3D ? {\n    current: root\n  } : root : ref);\n  // eslint-disable-next-line prettier/prettier\n  const [mixer] = React.useState(() => new AnimationMixer(undefined));\n  React.useLayoutEffect(() => {\n    if (root) actualRef.current = root instanceof Object3D ? root : root.current;\n    mixer._root = actualRef.current;\n  });\n  const lazyActions = React.useRef({});\n  const api = React.useMemo(() => {\n    const actions = {};\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\n      enumerable: true,\n      get() {\n        if (actualRef.current) {\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n        }\n      },\n      configurable: true\n    }));\n    return {\n      ref: actualRef,\n      clips,\n      actions,\n      names: clips.map(c => c.name),\n      mixer\n    };\n  }, [clips]);\n  useFrame((state, delta) => mixer.update(delta));\n  React.useEffect(() => {\n    const currentRoot = actualRef.current;\n    return () => {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      mixer.stopAllAction();\n      Object.values(api.actions).forEach(action => {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    };\n  }, [clips]);\n  return api;\n}\n\nexport { useAnimations };\n", "import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\n\nfunction useIntersect(onChange) {\n  const ref = React.useRef(null);\n  const check = React.useRef(false);\n  const temp = React.useRef(false);\n  const callback = React.useRef(onChange);\n  React.useLayoutEffect(() => void (callback.current = onChange), [onChange]);\n  React.useEffect(() => {\n    const obj = ref.current;\n    if (obj) {\n      // Stamp out frustum check pre-emptively\n      const unsub1 = addEffect(() => {\n        check.current = false;\n        return true;\n      });\n      // If the object is inside the frustum three will call onRender\n      const oldOnRender = obj.onBeforeRender;\n      obj.onBeforeRender = () => check.current = true;\n      // Compare the check value against the temp value, if it differs set state\n      const unsub2 = addAfterEffect(() => {\n        if (check.current !== temp.current) callback.current == null || callback.current(temp.current = check.current);\n        return true;\n      });\n      return () => {\n        obj.onBeforeRender = oldOnRender;\n        unsub1();\n        unsub2();\n      };\n    }\n  }, []);\n  return ref;\n}\n\nexport { useIntersect };\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { applyProps } from '@react-three/fiber';\n\n// credits for the box-projecting shader code go to codercat (https://codercat.tk)\n// and @0beqz https://gist.github.com/0beqz/8d51b4ae16d68021a09fb504af708fca\n\nconst worldposReplace = /* glsl */`\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n  vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n  #ifdef BOX_PROJECTED_ENV_MAP\n    vWorldPosition = worldPosition.xyz;\n  #endif\n#endif\n`;\nconst boxProjectDefinitions = /*glsl */`\n#ifdef BOX_PROJECTED_ENV_MAP\n  uniform vec3 envMapSize;\n  uniform vec3 envMapPosition;\n  varying vec3 vWorldPosition;\n    \n  vec3 parallaxCorrectNormal( vec3 v, vec3 cubeSize, vec3 cubePos ) {\n    vec3 nDir = normalize( v );\n    vec3 rbmax = ( .5 * cubeSize + cubePos - vWorldPosition ) / nDir;\n    vec3 rbmin = ( -.5 * cubeSize + cubePos - vWorldPosition ) / nDir;\n    vec3 rbminmax;\n    rbminmax.x = ( nDir.x > 0. ) ? rbmax.x : rbmin.x;\n    rbminmax.y = ( nDir.y > 0. ) ? rbmax.y : rbmin.y;\n    rbminmax.z = ( nDir.z > 0. ) ? rbmax.z : rbmin.z;\n    float correction = min( min( rbminmax.x, rbminmax.y ), rbminmax.z );\n    vec3 boxIntersection = vWorldPosition + nDir * correction;    \n    return boxIntersection - cubePos;\n  }\n#endif\n`;\n\n// will be inserted after \"vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\"\nconst getIBLIrradiance_patch = /* glsl */`\n#ifdef BOX_PROJECTED_ENV_MAP\n  worldNormal = parallaxCorrectNormal( worldNormal, envMapSize, envMapPosition );\n#endif\n`;\n\n// will be inserted after \"reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\"\nconst getIBLRadiance_patch = /* glsl */`\n#ifdef BOX_PROJECTED_ENV_MAP\n  reflectVec = parallaxCorrectNormal( reflectVec, envMapSize, envMapPosition );\n#endif\n`;\n\n// FIXME Replace with `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\n\nfunction boxProjectedEnvMap(shader, envMapPosition, envMapSize) {\n  // defines\n  shader.defines.BOX_PROJECTED_ENV_MAP = true;\n  // uniforms\n  shader.uniforms.envMapPosition = {\n    value: envMapPosition\n  };\n  shader.uniforms.envMapSize = {\n    value: envMapSize\n  };\n  // vertex shader\n  shader.vertexShader = `\n  varying vec3 vWorldPosition;\n  ${shader.vertexShader.replace('#include <worldpos_vertex>', worldposReplace)}`;\n  // fragment shader\n  shader.fragmentShader = `\n    ${boxProjectDefinitions}\n    ${shader.fragmentShader.replace('#include <envmap_physical_pars_fragment>', THREE.ShaderChunk.envmap_physical_pars_fragment).replace('vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );', `vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n         ${getIBLIrradiance_patch}\n         `).replace('reflectVec = inverseTransformDirection( reflectVec, viewMatrix );', `reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n         ${getIBLRadiance_patch}\n        `)}`;\n}\nfunction useBoxProjectedEnv(position = new THREE.Vector3(), size = new THREE.Vector3()) {\n  const [config] = React.useState(() => ({\n    position: new THREE.Vector3(),\n    size: new THREE.Vector3()\n  }));\n  applyProps(config, {\n    position,\n    size\n  });\n  const ref = React.useRef(null);\n  const spread = React.useMemo(() => ({\n    ref,\n    onBeforeCompile: shader => boxProjectedEnvMap(shader, config.position, config.size),\n    customProgramCacheKey: () => JSON.stringify(config.position.toArray()) + JSON.stringify(config.size.toArray())\n  }), [...config.position.toArray(), ...config.size.toArray()]);\n  React.useLayoutEffect(() => void (ref.current.needsUpdate = true), [config]);\n  return spread;\n}\n\nexport { useBoxProjectedEnv };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nconst boundingBox = /* @__PURE__ */new THREE.Box3();\nconst boundingBoxSize = /* @__PURE__ */new THREE.Vector3();\nconst BBAnchor = ({\n  anchor,\n  ...props\n}) => {\n  const ref = React.useRef(null);\n  const parentRef = React.useRef(null);\n\n  // Reattach group created by this component to the parent's parent,\n  // so it becomes a sibling of its initial parent.\n  // We do that so the children have no impact on a bounding box of a parent.\n  React.useEffect(() => {\n    var _ref$current;\n    if ((_ref$current = ref.current) != null && (_ref$current = _ref$current.parent) != null && _ref$current.parent) {\n      parentRef.current = ref.current.parent;\n      ref.current.parent.parent.add(ref.current);\n    }\n  }, []);\n  useFrame(() => {\n    if (parentRef.current) {\n      boundingBox.setFromObject(parentRef.current);\n      boundingBox.getSize(boundingBoxSize);\n      ref.current.position.set(parentRef.current.position.x + boundingBoxSize.x * (Array.isArray(anchor) ? anchor[0] : anchor.x) / 2, parentRef.current.position.y + boundingBoxSize.y * (Array.isArray(anchor) ? anchor[1] : anchor.y) / 2, parentRef.current.position.z + boundingBoxSize.z * (Array.isArray(anchor) ? anchor[2] : anchor.z) / 2);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n};\n\nexport { BBAnchor };\n", "import { useMemo, useCallback } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Texture } from 'three';\n\n// smooth new sample (measurement) based on previous sample (current)\nfunction smoothAverage(current, measurement, smoothing = 0.9) {\n  return measurement * smoothing + current * (1.0 - smoothing);\n}\n\n// default ease\nconst easeCircleOut = x => Math.sqrt(1 - Math.pow(x - 1, 2));\nclass TrailTexture {\n  constructor({\n    size = 256,\n    maxAge = 750,\n    radius = 0.3,\n    intensity = 0.2,\n    interpolate = 0,\n    smoothing = 0,\n    minForce = 0.3,\n    blend = 'screen',\n    // source-over is canvas default. Others are slower\n    ease = easeCircleOut\n  } = {}) {\n    this.size = size;\n    this.maxAge = maxAge;\n    this.radius = radius;\n    this.intensity = intensity;\n    this.ease = ease;\n    this.interpolate = interpolate;\n    this.smoothing = smoothing;\n    this.minForce = minForce;\n    this.blend = blend;\n    this.trail = [];\n    this.force = 0;\n    this.initTexture();\n  }\n  initTexture() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = this.size;\n    const ctx = this.canvas.getContext('2d');\n    if (ctx === null) {\n      throw new Error('2D not available');\n    }\n    this.ctx = ctx;\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.texture = new Texture(this.canvas);\n    this.canvas.id = 'touchTexture';\n    this.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n  }\n  update(delta) {\n    this.clear();\n\n    // age points\n    this.trail.forEach((point, i) => {\n      point.age += delta * 1000;\n      // remove old\n      if (point.age > this.maxAge) {\n        this.trail.splice(i, 1);\n      }\n    });\n\n    // reset force when empty (when smoothing)\n    if (!this.trail.length) this.force = 0;\n    this.trail.forEach(point => {\n      this.drawTouch(point);\n    });\n    this.texture.needsUpdate = true;\n  }\n  clear() {\n    this.ctx.globalCompositeOperation = 'source-over';\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n  addTouch(point) {\n    const last = this.trail[this.trail.length - 1];\n    if (last) {\n      const dx = last.x - point.x;\n      const dy = last.y - point.y;\n      const dd = dx * dx + dy * dy;\n      const force = Math.max(this.minForce, Math.min(dd * 10000, 1));\n      this.force = smoothAverage(force, this.force, this.smoothing);\n      if (!!this.interpolate) {\n        const lines = Math.ceil(dd / Math.pow(this.radius * 0.5 / this.interpolate, 2));\n        if (lines > 1) {\n          for (let i = 1; i < lines; i++) {\n            this.trail.push({\n              x: last.x - dx / lines * i,\n              y: last.y - dy / lines * i,\n              age: 0,\n              force\n            });\n          }\n        }\n      }\n    }\n    this.trail.push({\n      x: point.x,\n      y: point.y,\n      age: 0,\n      force: this.force\n    });\n  }\n  drawTouch(point) {\n    const pos = {\n      x: point.x * this.size,\n      y: (1 - point.y) * this.size\n    };\n    let intensity = 1;\n    if (point.age < this.maxAge * 0.3) {\n      intensity = this.ease(point.age / (this.maxAge * 0.3));\n    } else {\n      intensity = this.ease(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7));\n    }\n    intensity *= point.force;\n\n    // apply blending\n    this.ctx.globalCompositeOperation = this.blend;\n    const radius = this.size * this.radius * intensity;\n    const grd = this.ctx.createRadialGradient(pos.x, pos.y, Math.max(0, radius * 0.25), pos.x, pos.y, Math.max(0, radius));\n    grd.addColorStop(0, `rgba(255, 255, 255, ${this.intensity})`);\n    grd.addColorStop(1, `rgba(0, 0, 0, 0.0)`);\n    this.ctx.beginPath();\n    this.ctx.fillStyle = grd;\n    this.ctx.arc(pos.x, pos.y, Math.max(0, radius), 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n}\nfunction useTrailTexture(config = {}) {\n  const {\n    size,\n    maxAge,\n    radius,\n    intensity,\n    interpolate,\n    smoothing,\n    minForce,\n    blend,\n    ease\n  } = config;\n  const trail = useMemo(() => new TrailTexture(config), [size, maxAge, radius, intensity, interpolate, smoothing, minForce, blend, ease]);\n  useFrame((_, delta) => void trail.update(delta));\n  const onMove = useCallback(e => trail.addTouch(e.uv), [trail]);\n  return [trail.texture, onMove];\n}\n\nexport { useTrailTexture };\n", "import * as React from 'react';\nimport { Text3D } from './Text3D.js';\nimport { Center } from './Center.js';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\nconst Example = /* @__PURE__ */React.forwardRef(({\n  font,\n  color = '#cbcbcb',\n  bevelSize = 0.04,\n  debug = false,\n  children,\n  ...props\n}, fref) => {\n  const [counter, setCounter] = React.useState(0);\n  const incr = React.useCallback((x = 1) => setCounter(counter + x), [counter]);\n  const decr = React.useCallback((x = 1) => setCounter(counter - x), [counter]);\n\n  // ref-API\n  const api = React.useMemo(() => ({\n    incr,\n    decr\n  }), [incr, decr]);\n  React.useImperativeHandle(fref, () => api, [api]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: null\n  }, /*#__PURE__*/React.createElement(Center, {\n    top: true,\n    cacheKey: JSON.stringify({\n      counter,\n      font\n    })\n  }, /*#__PURE__*/React.createElement(Text3D, {\n    bevelEnabled: true,\n    bevelSize: bevelSize,\n    font: font\n  }, debug ? /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n    wireframe: true\n  }) : /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    color: color\n  }), counter))), children);\n});\n\nexport { Example };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { Box3, Vector3, Sphere } from 'three';\nimport * as React from 'react';\n\nconst Center = /* @__PURE__ */React.forwardRef(function Center({\n  children,\n  disable,\n  disableX,\n  disableY,\n  disableZ,\n  left,\n  right,\n  top,\n  bottom,\n  front,\n  back,\n  onCentered,\n  precise = true,\n  cacheKey = 0,\n  ...props\n}, fRef) {\n  const ref = React.useRef(null);\n  const outer = React.useRef(null);\n  const inner = React.useRef(null);\n  React.useLayoutEffect(() => {\n    outer.current.matrixWorld.identity();\n    const box3 = new Box3().setFromObject(inner.current, precise);\n    const center = new Vector3();\n    const sphere = new Sphere();\n    const width = box3.max.x - box3.min.x;\n    const height = box3.max.y - box3.min.y;\n    const depth = box3.max.z - box3.min.z;\n    box3.getCenter(center);\n    box3.getBoundingSphere(sphere);\n    const vAlign = top ? height / 2 : bottom ? -height / 2 : 0;\n    const hAlign = left ? -width / 2 : right ? width / 2 : 0;\n    const dAlign = front ? depth / 2 : back ? -depth / 2 : 0;\n    outer.current.position.set(disable || disableX ? 0 : -center.x + hAlign, disable || disableY ? 0 : -center.y + vAlign, disable || disableZ ? 0 : -center.z + dAlign);\n\n    // Only fire onCentered if the bounding box has changed\n    if (typeof onCentered !== 'undefined') {\n      onCentered({\n        parent: ref.current.parent,\n        container: ref.current,\n        width,\n        height,\n        depth,\n        boundingBox: box3,\n        boundingSphere: sphere,\n        center: center,\n        verticalAlignment: vAlign,\n        horizontalAlignment: hAlign,\n        depthAlignment: dAlign\n      });\n    }\n  }, [cacheKey, onCentered, top, left, front, disable, disableX, disableY, disableZ, precise, right, bottom, back]);\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    ref: outer\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children)));\n});\n\nexport { Center };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Instances, Instance } from './Instances.js';\nimport { useSpriteLoader } from './useSpriteLoader.js';\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction useSpriteAnimator() {\n  return React.useContext(context);\n}\nconst SpriteAnimator = /* @__PURE__ */React.forwardRef(({\n  startFrame,\n  endFrame,\n  fps,\n  frameName,\n  textureDataURL,\n  textureImageURL,\n  loop,\n  numberOfFrames,\n  autoPlay,\n  animationNames,\n  onStart,\n  onEnd,\n  onLoopEnd,\n  onFrame,\n  play,\n  pause,\n  flipX,\n  alphaTest,\n  children,\n  asSprite,\n  offset,\n  playBackwards,\n  resetOnEnd,\n  maxItems,\n  instanceItems,\n  spriteDataset,\n  ...props\n}, fref) => {\n  var _props$scale;\n  const ref = React.useRef();\n  const spriteData = React.useRef(null);\n  const matRef = React.useRef();\n  const spriteRef = React.useRef();\n  const timerOffset = React.useRef(window.performance.now());\n  const currentFrame = React.useRef(startFrame || 0);\n  const currentFrameName = React.useRef(frameName || '');\n  const fpsInterval = 1000 / (fps || 30);\n  const [spriteTexture, setSpriteTexture] = React.useState(new THREE.Texture());\n  const totalFrames = React.useRef(0);\n  const [aspect, setAspect] = React.useState([1, 1, 1]);\n  const flipOffset = flipX ? -1 : 1;\n  const [displayAsSprite, setDisplayAsSprite] = React.useState(asSprite !== null && asSprite !== void 0 ? asSprite : true);\n  const pauseRef = React.useRef(pause);\n  const pos = React.useRef(offset);\n  const softEnd = React.useRef(false);\n  const frameBuffer = React.useRef([]);\n  const {\n    spriteObj,\n    loadJsonAndTexture\n  } = useSpriteLoader(null, null, animationNames, numberOfFrames);\n  //\n\n  function reset() {}\n  const state = React.useMemo(() => ({\n    current: pos.current,\n    offset: pos.current,\n    imageUrl: textureImageURL,\n    reset: reset,\n    hasEnded: false,\n    ref: fref\n  }), [textureImageURL, spriteDataset]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    pos.current = offset;\n  }, [offset]);\n  const calculateAspectRatio = (width, height) => {\n    const aspectRatio = height / width;\n    if (spriteRef.current) {\n      spriteRef.current.scale.set(1, aspectRatio, 1);\n    }\n    return [1, aspectRatio, 1];\n  };\n\n  // initial loads\n  React.useEffect(() => {\n    if (spriteDataset) {\n      var _spriteDataset$sprite;\n      parseSpriteDataLite(spriteDataset == null || (_spriteDataset$sprite = spriteDataset.spriteTexture) == null ? void 0 : _spriteDataset$sprite.clone(), spriteDataset.spriteData);\n    } else {\n      loadJsonAndTexture(textureImageURL, textureDataURL);\n    }\n  }, [spriteDataset]);\n  React.useEffect(() => {\n    if (spriteObj) {\n      var _spriteObj$spriteText;\n      parseSpriteDataLite(spriteObj == null || (_spriteObj$spriteText = spriteObj.spriteTexture) == null ? void 0 : _spriteObj$spriteText.clone(), spriteObj == null ? void 0 : spriteObj.spriteData);\n    }\n  }, [spriteObj]);\n  React.useEffect(() => {\n    setDisplayAsSprite(asSprite !== null && asSprite !== void 0 ? asSprite : true);\n  }, [asSprite]);\n\n  // support backwards play\n  React.useEffect(() => {\n    state.hasEnded = false;\n    if (spriteData.current && playBackwards === true) {\n      currentFrame.current = spriteData.current.frames.length - 1;\n    } else {\n      currentFrame.current = 0;\n    }\n  }, [playBackwards]);\n  React.useLayoutEffect(() => {\n    modifySpritePosition();\n  }, [spriteTexture, flipX]);\n  React.useEffect(() => {\n    if (autoPlay) {\n      pauseRef.current = false;\n    }\n  }, [autoPlay]);\n  React.useLayoutEffect(() => {\n    if (currentFrameName.current !== frameName && frameName) {\n      currentFrame.current = 0;\n      currentFrameName.current = frameName;\n      state.hasEnded = false;\n      // modifySpritePosition()\n      if (spriteData.current) {\n        const {\n          w,\n          h\n        } = getFirstItem(spriteData.current.frames).sourceSize;\n        const _aspect = calculateAspectRatio(w, h);\n        setAspect(_aspect);\n      }\n    }\n  }, [frameName]);\n\n  // lite version for pre-loaded assets\n  const parseSpriteDataLite = (textureData, frameData = null) => {\n    if (frameData === null) {\n      if (numberOfFrames) {\n        //get size from texture\n        const width = textureData.image.width;\n        const height = textureData.image.height;\n        totalFrames.current = numberOfFrames;\n        if (playBackwards) {\n          currentFrame.current = numberOfFrames - 1;\n        }\n        spriteData.current = {\n          frames: [],\n          meta: {\n            version: '1.0',\n            size: {\n              w: width,\n              h: height\n            },\n            scale: '1'\n          }\n        };\n        spriteData.current.frames = frameData;\n      }\n    } else {\n      spriteData.current = frameData;\n      totalFrames.current = spriteData.current.frames.length;\n      if (playBackwards) {\n        currentFrame.current = totalFrames.current - 1;\n      }\n      const {\n        w,\n        h\n      } = getFirstItem(spriteData.current.frames).sourceSize;\n      const aspect = calculateAspectRatio(w, h);\n      setAspect(aspect);\n      if (matRef.current) {\n        matRef.current.map = textureData;\n      }\n    }\n\n    // buffer for instanced\n    if (instanceItems) {\n      for (var i = 0; i < instanceItems.length; i++) {\n        const keys = Object.keys(spriteData.current.frames);\n        const randomKey = keys[Math.floor(Math.random() * keys.length)];\n        frameBuffer.current.push({\n          key: i,\n          frames: spriteData.current.frames,\n          selectedFrame: randomKey,\n          offset: {\n            x: 0,\n            y: 0\n          }\n        });\n      }\n    }\n    setSpriteTexture(textureData);\n  };\n\n  // modify the sprite material after json is parsed and state updated\n  const modifySpritePosition = () => {\n    if (!spriteData.current) return;\n    const {\n      meta: {\n        size: metaInfo\n      },\n      frames\n    } = spriteData.current;\n    const {\n      w: frameW,\n      h: frameH\n    } = Array.isArray(frames) ? frames[0].sourceSize : frameName ? frames[frameName] ? frames[frameName][0].sourceSize : {\n      w: 0,\n      h: 0\n    } : {\n      w: 0,\n      h: 0\n    };\n    matRef.current.map.wrapS = matRef.current.map.wrapT = THREE.RepeatWrapping;\n    matRef.current.map.center.set(0, 0);\n    matRef.current.map.repeat.set(1 * flipOffset / (metaInfo.w / frameW), 1 / (metaInfo.h / frameH));\n\n    //const framesH = (metaInfo.w - 1) / frameW\n    const framesV = (metaInfo.h - 1) / frameH;\n    const frameOffsetY = 1 / framesV;\n    matRef.current.map.offset.x = 0.0; //-matRef.current.map.repeat.x\n    matRef.current.map.offset.y = 1 - frameOffsetY;\n    if (onStart) {\n      onStart({\n        currentFrameName: frameName,\n        currentFrame: currentFrame.current\n      });\n    }\n  };\n\n  // run the animation on each frame\n  const runAnimation = () => {\n    //if (!frameName) return\n\n    const now = window.performance.now();\n    const diff = now - timerOffset.current;\n    const {\n      meta: {\n        size: metaInfo\n      },\n      frames\n    } = spriteData.current;\n    const {\n      w: frameW,\n      h: frameH\n    } = getFirstItem(frames).sourceSize;\n    const spriteFrames = Array.isArray(frames) ? frames : frameName ? frames[frameName] : [];\n    const _endFrame = endFrame || spriteFrames.length - 1;\n    var _offset = offset === undefined ? state.current : offset;\n\n    // conditionals to support backwards play\n    var endCondition = playBackwards ? currentFrame.current < 0 : currentFrame.current > _endFrame;\n    var onStartCondition = playBackwards ? currentFrame.current === _endFrame : currentFrame.current === 0;\n    var manualProgressEndCondition = playBackwards ? currentFrame.current < 0 : currentFrame.current >= _endFrame;\n    if (endCondition) {\n      currentFrame.current = loop ? startFrame !== null && startFrame !== void 0 ? startFrame : 0 : 0;\n      if (playBackwards) {\n        currentFrame.current = _endFrame;\n      }\n      if (loop) {\n        onLoopEnd == null || onLoopEnd({\n          currentFrameName: frameName,\n          currentFrame: currentFrame.current\n        });\n      } else {\n        onEnd == null || onEnd({\n          currentFrameName: frameName,\n          currentFrame: currentFrame.current\n        });\n        state.hasEnded = resetOnEnd ? false : true;\n        if (resetOnEnd) {\n          pauseRef.current = true;\n          //calculateFinalPosition(frameW, frameH, metaInfo, spriteFrames)\n        }\n      }\n\n      if (!loop) return;\n    } else if (onStartCondition) {\n      onStart == null || onStart({\n        currentFrameName: frameName,\n        currentFrame: currentFrame.current\n      });\n    }\n\n    // for manual update\n    if (_offset !== undefined && manualProgressEndCondition) {\n      if (softEnd.current === false) {\n        onEnd == null || onEnd({\n          currentFrameName: frameName,\n          currentFrame: currentFrame.current\n        });\n        softEnd.current = true;\n      }\n    } else {\n      // same for start?\n      softEnd.current = false;\n    }\n\n    // clock to limit fps\n    if (diff <= fpsInterval) return;\n    timerOffset.current = now - diff % fpsInterval;\n    calculateFinalPosition(frameW, frameH, metaInfo, spriteFrames);\n  };\n  const calculateFinalPosition = (frameW, frameH, metaInfo, spriteFrames) => {\n    // get the manual update offset to find the next frame\n    var _offset = offset === undefined ? state.current : offset;\n    const targetFrame = currentFrame.current;\n    let finalValX = 0;\n    let finalValY = 0;\n    calculateAspectRatio(frameW, frameH);\n    const framesH = Math.round((metaInfo.w - 1) / frameW);\n    const framesV = Math.round((metaInfo.h - 1) / frameH);\n    if (!spriteFrames[targetFrame]) {\n      return;\n    }\n    const {\n      frame: {\n        x: frameX,\n        y: frameY\n      },\n      sourceSize: {\n        w: originalSizeX,\n        h: originalSizeY\n      }\n    } = spriteFrames[targetFrame];\n    const frameOffsetX = 1 / framesH;\n    const frameOffsetY = 1 / framesV;\n    finalValX = flipOffset > 0 ? frameOffsetX * (frameX / originalSizeX) : frameOffsetX * (frameX / originalSizeX) - matRef.current.map.repeat.x;\n    finalValY = Math.abs(1 - frameOffsetY) - frameOffsetY * (frameY / originalSizeY);\n    matRef.current.map.offset.x = finalValX;\n    matRef.current.map.offset.y = finalValY;\n\n    // if manual update is active\n    if (_offset !== undefined && _offset !== null) {\n      // Calculate the frame index, based on offset given from the provider\n      let frameIndex = Math.floor(_offset * spriteFrames.length);\n\n      // Ensure the frame index is within the valid range\n      frameIndex = Math.max(0, Math.min(frameIndex, spriteFrames.length - 1));\n      if (isNaN(frameIndex)) {\n        frameIndex = 0; //fallback\n      }\n\n      currentFrame.current = frameIndex;\n    } else {\n      // auto update\n      if (playBackwards) {\n        currentFrame.current -= 1;\n      } else {\n        currentFrame.current += 1;\n      }\n    }\n  };\n\n  // *** Warning! It runs on every frame! ***\n  useFrame((_state, _delta) => {\n    var _spriteData$current, _matRef$current;\n    if (!((_spriteData$current = spriteData.current) != null && _spriteData$current.frames) || !((_matRef$current = matRef.current) != null && _matRef$current.map)) {\n      return;\n    }\n    if (pauseRef.current) {\n      return;\n    }\n    if (!state.hasEnded && (autoPlay || play)) {\n      runAnimation();\n      onFrame && onFrame({\n        currentFrameName: currentFrameName.current,\n        currentFrame: currentFrame.current\n      });\n    }\n  });\n\n  // utils\n  const getFirstItem = param => {\n    if (Array.isArray(param)) {\n      return param[0];\n    } else if (typeof param === 'object' && param !== null) {\n      const keys = Object.keys(param);\n      return frameName ? param[frameName][0] : param[keys[0]][0];\n    } else {\n      return {\n        w: 0,\n        h: 0\n      };\n    }\n  };\n  function multiplyScale(initialScale, newScale) {\n    let _newScale = [];\n\n    // If newScale is a single number, convert it to a Vector3\n    if (typeof newScale === 'number') {\n      _newScale = [newScale, newScale, newScale];\n    } else if (Array.isArray(newScale)) {\n      // If newScale is an array, convert it to a Vector3\n      _newScale = newScale;\n    } else if (newScale instanceof THREE.Vector3) {\n      _newScale = [newScale.x, newScale.y, newScale.z];\n    }\n\n    // Multiply the scale values element-wise\n    const result = initialScale.map((value, index) => value * _newScale[index]);\n    // Convert the result to an array of numbers\n    return result;\n  }\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: ref,\n    scale: multiplyScale(aspect !== null && aspect !== void 0 ? aspect : [1, 1, 1], (_props$scale = props.scale) !== null && _props$scale !== void 0 ? _props$scale : 1.0)\n  }), /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: null\n  }, displayAsSprite && /*#__PURE__*/React.createElement(\"sprite\", {\n    ref: spriteRef,\n    scale: 1.0\n  }, /*#__PURE__*/React.createElement(\"spriteMaterial\", {\n    premultipliedAlpha: false,\n    toneMapped: false,\n    ref: matRef,\n    map: spriteTexture,\n    transparent: true,\n    alphaTest: alphaTest !== null && alphaTest !== void 0 ? alphaTest : 0.0\n  })), !displayAsSprite && /*#__PURE__*/React.createElement(Instances, {\n    limit: maxItems !== null && maxItems !== void 0 ? maxItems : 1 // Optional: max amount of items (for calculating buffer size)\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    premultipliedAlpha: false,\n    toneMapped: false,\n    side: THREE.DoubleSide,\n    ref: matRef,\n    map: spriteTexture,\n    transparent: true,\n    alphaTest: alphaTest !== null && alphaTest !== void 0 ? alphaTest : 0.0\n  }), (instanceItems !== null && instanceItems !== void 0 ? instanceItems : [0]).map((item, index) => {\n    return /*#__PURE__*/React.createElement(Instance, {\n      key: index,\n      ref: (instanceItems == null ? void 0 : instanceItems.length) === 1 ? spriteRef : null,\n      position: item,\n      scale: 1.0\n    });\n  }))), children));\n});\n\nexport { SpriteAnimator, useSpriteAnimator };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport Composer from 'react-composer';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nfunction isFunctionChild(value) {\n  return typeof value === 'function';\n}\nconst _instanceLocalMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceWorldMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceIntersects = [];\nconst _mesh = /* @__PURE__ */new THREE.Mesh();\nclass PositionMesh extends THREE.Group {\n  constructor() {\n    super();\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  // And this will allow the virtual instance to receive events\n  raycast(raycaster, intersects) {\n    const parent = this.instance.current;\n    if (!parent) return;\n    if (!parent.geometry || !parent.material) return;\n    _mesh.geometry = parent.geometry;\n    const matrixWorld = parent.matrixWorld;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.count) return;\n    // calculate the world matrix for each instance\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n    // the mesh represents this single instance\n    _mesh.matrixWorld = _instanceWorldMatrix;\n    // raycast side according to instance material\n    if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n    _mesh.raycast(raycaster, _instanceIntersects);\n    // process the result of raycast\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n      const intersect = _instanceIntersects[i];\n      intersect.instanceId = instanceId;\n      intersect.object = this;\n      intersects.push(intersect);\n    }\n    _instanceIntersects.length = 0;\n  }\n}\nconst globalContext = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst instanceMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst tempMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst translation = /* @__PURE__ */new THREE.Vector3();\nconst rotation = /* @__PURE__ */new THREE.Quaternion();\nconst scale = /* @__PURE__ */new THREE.Vector3();\nconst Instance = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionMesh\n  }), []);\n  const group = React.useRef();\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\nconst Instances = /* @__PURE__ */React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (let i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let iterations = 0;\n  let count = 0;\n  useFrame(() => {\n    if (frames === Infinity || iterations < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = count;\n      setUpdateRange(parentRef.current.instanceMatrix, {\n        offset: 0,\n        count: count * 16\n      });\n      setUpdateRange(parentRef.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i].current;\n        // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n        instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n      iterations++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), isFunctionChild(children) ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nconst Merged = /* @__PURE__ */React.forwardRef(function Merged({\n  meshes,\n  children,\n  ...props\n}, ref) {\n  const isArray = Array.isArray(meshes);\n  // Filter out meshes from collections, which may contain non-meshes\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({\n    ...acc,\n    [key]: args[i]\n  }), {}))));\n});\n\nexport { Instance, Instances, Merged };\n", "import { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Composer(props) {\n  return renderRecursive(props.children, props.components);\n}\n\nComposer.propTypes = {\n  children: PropTypes.func.isRequired,\n  components: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.func])).isRequired\n};\n\n/**\n * Recursively build up elements from props.components and accumulate `results` along the way.\n * @param {function} render\n * @param {Array.<ReactElement|Function>} remaining\n * @param {Array} [results]\n * @returns {ReactElement}\n */\nfunction renderRecursive(render, remaining, results) {\n  results = results || [];\n  // Once components is exhausted, we can render out the results array.\n  if (!remaining[0]) {\n    return render(results);\n  }\n\n  // Continue recursion for remaining items.\n  // results.concat([value]) ensures [...results, value] instead of [...results, ...value]\n  function nextRender(value) {\n    return renderRecursive(render, remaining.slice(1), results.concat([value]));\n  }\n\n  // Each props.components entry is either an element or function [element factory]\n  return typeof remaining[0] === 'function' ? // When it is a function, produce an element by invoking it with \"render component values\".\n  remaining[0]({ results: results, render: nextRender }) : // When it is an element, enhance the element's props with the render prop.\n  cloneElement(remaining[0], { children: nextRender });\n}", "/**\n * Sets `BufferAttribute.updateRange` since r159.\n */\nconst setUpdateRange = (attribute, updateRange) => {\n  if ('updateRanges' in attribute) {\n    // r159\n    // @ts-ignore\n    attribute.updateRanges[0] = updateRange;\n  } else {\n    attribute.updateRange = updateRange;\n  }\n};\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\n\n/**\n * TextureEncoding was deprecated in r152, and removed in r162.\n */\n\nexport { LinearEncoding, sRGBEncoding, setUpdateRange };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { createPortal } from '@react-three/fiber';\nimport { Flow } from 'three-stdlib';\n\nconst CurveModifier = /* @__PURE__ */React.forwardRef(({\n  children,\n  curve\n}, ref) => {\n  const [scene] = React.useState(() => new THREE.Scene());\n  const [obj, set] = React.useState();\n  const modifier = React.useRef();\n  React.useEffect(() => {\n    modifier.current = new Flow(scene.children[0]);\n    set(modifier.current.object3D);\n  }, [children]);\n  React.useEffect(() => {\n    var _modifier$current;\n    if (curve) (_modifier$current = modifier.current) == null || _modifier$current.updateCurve(0, curve);\n  }, [curve]);\n  React.useImperativeHandle(ref, () => ({\n    moveAlongCurve: val => {\n      var _modifier$current2;\n      (_modifier$current2 = modifier.current) == null || _modifier$current2.moveAlongCurve(val);\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(children, scene), obj && /*#__PURE__*/React.createElement(\"primitive\", {\n    object: obj\n  }));\n});\n\nexport { CurveModifier };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  // FIXME Use `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float radius;\n      uniform float distort;\n      ${distort}\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `\n        float updateTime = time / 50.0;\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\n        `);\n  }\n  get time() {\n    return this._time.value;\n  }\n  set time(v) {\n    this._time.value = v;\n  }\n  get distort() {\n    return this._distort.value;\n  }\n  set distort(v) {\n    this._distort.value = v;\n  }\n  get radius() {\n    return this._radius.value;\n  }\n  set radius(v) {\n    this._radius.value = v;\n  }\n}\nconst MeshDistortMaterial = /* @__PURE__ */React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshDistortMaterial };\n", "var distort = \"#define GLSLIFY 1\\nvec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}\"; // eslint-disable-line\n\nexport { distort as default };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshStandardMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nclass WobbleMaterialImpl extends MeshStandardMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._factor = {\n      value: 1\n    };\n  }\n\n  // FIXME Use `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.factor = this._factor;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float factor;\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `float theta = sin( time + position.y ) / 2.0 * factor;\n        float c = cos( theta );\n        float s = sin( theta );\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\n        vec3 transformed = vec3( position ) * m;\n        vNormal = vNormal * m;`);\n  }\n  get time() {\n    return this._time.value;\n  }\n  set time(v) {\n    this._time.value = v;\n  }\n  get factor() {\n    return this._factor.value;\n  }\n  set factor(v) {\n    this._factor.value = v;\n  }\n}\nconst MeshWobbleMaterial = /* @__PURE__ */React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new WobbleMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshWobbleMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, LinearFilter, HalfFloatType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial as MeshReflectorMaterial$1 } from '../materials/MeshReflectorMaterial.js';\n\nconst MeshReflectorMaterial = /* @__PURE__ */React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 1,\n  resolution = 256,\n  blur = [0, 0],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  reflectorOffset = 0,\n  ...props\n}, ref) => {\n  extend({\n    MeshReflectorMaterialImpl: MeshReflectorMaterial$1\n  });\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const materialRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => materialRef.current, []);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    var _materialRef$current;\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    const parent = materialRef.current.parent || ((_materialRef$current = materialRef.current) == null ? void 0 : _materialRef$current.__r3f.parent);\n    if (!parent) return;\n    reflectorWorldPosition.setFromMatrixPosition(parent.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(parent.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    reflectorWorldPosition.addScaledVector(normal, reflectorOffset);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition);\n    // Avoid rendering when reflector is facing away\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n    // Update the texture matrix\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(parent.matrixWorld);\n    // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n    // Calculate the scaled plane vector\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q));\n    // Replacing the third row of the projection matrix\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, [camera, reflectorOffset]);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      type: HalfFloatType\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    var _materialRef$current2;\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    const parent = materialRef.current.parent || ((_materialRef$current2 = materialRef.current) == null ? void 0 : _materialRef$current2.__r3f.parent);\n    if (!parent) return;\n    parent.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    parent.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"meshReflectorMaterialImpl\", _extends({\n    attach: \"material\"\n    // Defines can't be updated dynamically, so we need to recreate the material\n    ,\n    key: 'key' + reflectorProps['defines-USE_BLUR'] + reflectorProps['defines-USE_DEPTH'] + reflectorProps['defines-USE_DISTORTION'],\n    ref: materialRef\n  }, reflectorProps, props));\n});\n\nexport { MeshReflectorMaterial };\n", "import * as THREE from 'three';\nimport { version } from '../helpers/constants.js';\n\nclass ConvolutionMaterial extends THREE.ShaderMaterial {\n  constructor(texelSize = new THREE.Vector2()) {\n    super({\n      uniforms: {\n        inputBuffer: new THREE.Uniform(null),\n        depthBuffer: new THREE.Uniform(null),\n        resolution: new THREE.Uniform(new THREE.Vector2()),\n        texelSize: new THREE.Uniform(new THREE.Vector2()),\n        halfTexelSize: new THREE.Uniform(new THREE.Vector2()),\n        kernel: new THREE.Uniform(0.0),\n        scale: new THREE.Uniform(1.0),\n        cameraNear: new THREE.Uniform(0.0),\n        cameraFar: new THREE.Uniform(1.0),\n        minDepthThreshold: new THREE.Uniform(0.0),\n        maxDepthThreshold: new THREE.Uniform(1.0),\n        depthScale: new THREE.Uniform(0.0),\n        depthToBlurRatioBias: new THREE.Uniform(0.25)\n      },\n      fragmentShader: `#include <common>\n        #include <dithering_pars_fragment>      \n        uniform sampler2D inputBuffer;\n        uniform sampler2D depthBuffer;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          float depthFactor = 0.0;\n          \n          #ifdef USE_DEPTH\n            vec4 depth = texture2D(depthBuffer, vUv);\n            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n            depthFactor *= depthScale;\n            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));\n          #endif\n          \n          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));\n          gl_FragColor = sum * 0.25 ;\n\n          #include <dithering_fragment>\n          #include <tonemapping_fragment>\n          #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n        }`,\n      vertexShader: `uniform vec2 texelSize;\n        uniform vec2 halfTexelSize;\n        uniform float kernel;\n        uniform float scale;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          vec2 uv = position.xy * 0.5 + 0.5;\n          vUv = uv;\n\n          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;\n          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);\n          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);\n          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);\n          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);\n\n          gl_Position = vec4(position.xy, 1.0, 1.0);\n        }`,\n      blending: THREE.NoBlending,\n      depthWrite: false,\n      depthTest: false\n    });\n    this.toneMapped = false;\n    this.setTexelSize(texelSize.x, texelSize.y);\n    this.kernel = new Float32Array([0.0, 1.0, 2.0, 2.0, 3.0]);\n  }\n  setTexelSize(x, y) {\n    this.uniforms.texelSize.value.set(x, y);\n    this.uniforms.halfTexelSize.value.set(x, y).multiplyScalar(0.5);\n  }\n  setResolution(resolution) {\n    this.uniforms.resolution.value.copy(resolution);\n  }\n}\n\nexport { ConvolutionMaterial };\n", "import { WebGLRenderTarget, LinearFilter, HalfFloatType, Vector2, Scene, Camera, BufferGeometry, BufferAttribute, Mesh } from 'three';\nimport { ConvolutionMaterial } from './ConvolutionMaterial.js';\n\nclass BlurPass {\n  constructor({\n    gl,\n    resolution,\n    width = 500,\n    height = 500,\n    minDepthThreshold = 0,\n    maxDepthThreshold = 1,\n    depthScale = 0,\n    depthToBlurRatioBias = 0.25\n  }) {\n    this.renderToScreen = false;\n    this.renderTargetA = new WebGLRenderTarget(resolution, resolution, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      stencilBuffer: false,\n      depthBuffer: false,\n      type: HalfFloatType\n    });\n    this.renderTargetB = this.renderTargetA.clone();\n    this.convolutionMaterial = new ConvolutionMaterial();\n    this.convolutionMaterial.setTexelSize(1.0 / width, 1.0 / height);\n    this.convolutionMaterial.setResolution(new Vector2(width, height));\n    this.scene = new Scene();\n    // @ts-expect-error fixed in r154\n    this.camera = new Camera();\n    this.convolutionMaterial.uniforms.minDepthThreshold.value = minDepthThreshold;\n    this.convolutionMaterial.uniforms.maxDepthThreshold.value = maxDepthThreshold;\n    this.convolutionMaterial.uniforms.depthScale.value = depthScale;\n    this.convolutionMaterial.uniforms.depthToBlurRatioBias.value = depthToBlurRatioBias;\n    this.convolutionMaterial.defines.USE_DEPTH = depthScale > 0;\n    const vertices = new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]);\n    const uvs = new Float32Array([0, 0, 2, 0, 0, 2]);\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new BufferAttribute(vertices, 3));\n    geometry.setAttribute('uv', new BufferAttribute(uvs, 2));\n    this.screen = new Mesh(geometry, this.convolutionMaterial);\n    this.screen.frustumCulled = false;\n    this.scene.add(this.screen);\n  }\n  render(renderer, inputBuffer, outputBuffer) {\n    const scene = this.scene;\n    const camera = this.camera;\n    const renderTargetA = this.renderTargetA;\n    const renderTargetB = this.renderTargetB;\n    let material = this.convolutionMaterial;\n    let uniforms = material.uniforms;\n    uniforms.depthBuffer.value = inputBuffer.depthTexture;\n    const kernel = material.kernel;\n    let lastRT = inputBuffer;\n    let destRT;\n    let i, l;\n    // Apply the multi-pass blur.\n    for (i = 0, l = kernel.length - 1; i < l; ++i) {\n      // Alternate between targets.\n      destRT = (i & 1) === 0 ? renderTargetA : renderTargetB;\n      uniforms.kernel.value = kernel[i];\n      uniforms.inputBuffer.value = lastRT.texture;\n      renderer.setRenderTarget(destRT);\n      renderer.render(scene, camera);\n      lastRT = destRT;\n    }\n    uniforms.kernel.value = kernel[i];\n    uniforms.inputBuffer.value = lastRT.texture;\n    renderer.setRenderTarget(this.renderToScreen ? null : outputBuffer);\n    renderer.render(scene, camera);\n  }\n}\n\nexport { BlurPass };\n", "import { MeshStandardMaterial } from 'three';\n\nclass MeshReflectorMaterial extends MeshStandardMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this._tDepth = {\n      value: null\n    };\n    this._distortionMap = {\n      value: null\n    };\n    this._tDiffuse = {\n      value: null\n    };\n    this._tDiffuseBlur = {\n      value: null\n    };\n    this._textureMatrix = {\n      value: null\n    };\n    this._hasBlur = {\n      value: false\n    };\n    this._mirror = {\n      value: 0.0\n    };\n    this._mixBlur = {\n      value: 0.0\n    };\n    this._blurStrength = {\n      value: 0.5\n    };\n    this._minDepthThreshold = {\n      value: 0.9\n    };\n    this._maxDepthThreshold = {\n      value: 1\n    };\n    this._depthScale = {\n      value: 0\n    };\n    this._depthToBlurRatioBias = {\n      value: 0.25\n    };\n    this._distortion = {\n      value: 1\n    };\n    this._mixContrast = {\n      value: 1.0\n    };\n    this.setValues(parameters);\n  }\n  onBeforeCompile(shader) {\n    var _shader$defines;\n    if (!((_shader$defines = shader.defines) != null && _shader$defines.USE_UV)) {\n      shader.defines.USE_UV = '';\n    }\n    shader.uniforms.hasBlur = this._hasBlur;\n    shader.uniforms.tDiffuse = this._tDiffuse;\n    shader.uniforms.tDepth = this._tDepth;\n    shader.uniforms.distortionMap = this._distortionMap;\n    shader.uniforms.tDiffuseBlur = this._tDiffuseBlur;\n    shader.uniforms.textureMatrix = this._textureMatrix;\n    shader.uniforms.mirror = this._mirror;\n    shader.uniforms.mixBlur = this._mixBlur;\n    shader.uniforms.mixStrength = this._blurStrength;\n    shader.uniforms.minDepthThreshold = this._minDepthThreshold;\n    shader.uniforms.maxDepthThreshold = this._maxDepthThreshold;\n    shader.uniforms.depthScale = this._depthScale;\n    shader.uniforms.depthToBlurRatioBias = this._depthToBlurRatioBias;\n    shader.uniforms.distortion = this._distortion;\n    shader.uniforms.mixContrast = this._mixContrast;\n    shader.vertexShader = `\n        uniform mat4 textureMatrix;\n        varying vec4 my_vUv;\n      ${shader.vertexShader}`;\n    shader.vertexShader = shader.vertexShader.replace('#include <project_vertex>', `#include <project_vertex>\n        my_vUv = textureMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );`);\n    shader.fragmentShader = `\n        uniform sampler2D tDiffuse;\n        uniform sampler2D tDiffuseBlur;\n        uniform sampler2D tDepth;\n        uniform sampler2D distortionMap;\n        uniform float distortion;\n        uniform float cameraNear;\n\t\t\t  uniform float cameraFar;\n        uniform bool hasBlur;\n        uniform float mixBlur;\n        uniform float mirror;\n        uniform float mixStrength;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float mixContrast;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec4 my_vUv;\n        ${shader.fragmentShader}`;\n    shader.fragmentShader = shader.fragmentShader.replace('#include <emissivemap_fragment>', `#include <emissivemap_fragment>\n\n      float distortionFactor = 0.0;\n      #ifdef USE_DISTORTION\n        distortionFactor = texture2D(distortionMap, vUv).r * distortion;\n      #endif\n\n      vec4 new_vUv = my_vUv;\n      new_vUv.x += distortionFactor;\n      new_vUv.y += distortionFactor;\n\n      vec4 base = texture2DProj(tDiffuse, new_vUv);\n      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);\n\n      vec4 merge = base;\n\n      #ifdef USE_NORMALMAP\n        vec2 normal_uv = vec2(0.0);\n        vec4 normalColor = texture2D(normalMap, vUv * normalScale);\n        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\n        vec3 coord = new_vUv.xyz / new_vUv.w;\n        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;\n        vec4 base_normal = texture2D(tDiffuse, normal_uv);\n        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);\n        merge = base_normal;\n        blur = blur_normal;\n      #endif\n\n      float depthFactor = 0.0001;\n      float blurFactor = 0.0;\n\n      #ifdef USE_DEPTH\n        vec4 depth = texture2DProj(tDepth, new_vUv);\n        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n        depthFactor *= depthScale;\n        depthFactor = max(0.0001, min(1.0, depthFactor));\n\n        #ifdef USE_BLUR\n          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);\n          merge = merge * min(1.0, depthFactor + 0.5);\n        #else\n          merge = merge * depthFactor;\n        #endif\n\n      #endif\n\n      float reflectorRoughnessFactor = roughness;\n      #ifdef USE_ROUGHNESSMAP\n        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );\n        reflectorRoughnessFactor *= reflectorTexelRoughness.g;\n      #endif\n\n      #ifdef USE_BLUR\n        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);\n        merge = mix(merge, blur, blurFactor);\n      #endif\n\n      vec4 newMerge = vec4(0.0, 0.0, 0.0, 1.0);\n      newMerge.r = (merge.r - 0.5) * mixContrast + 0.5;\n      newMerge.g = (merge.g - 0.5) * mixContrast + 0.5;\n      newMerge.b = (merge.b - 0.5) * mixContrast + 0.5;\n\n      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + newMerge.rgb * mixStrength);\n      `);\n  }\n  get tDiffuse() {\n    return this._tDiffuse.value;\n  }\n  set tDiffuse(v) {\n    this._tDiffuse.value = v;\n  }\n  get tDepth() {\n    return this._tDepth.value;\n  }\n  set tDepth(v) {\n    this._tDepth.value = v;\n  }\n  get distortionMap() {\n    return this._distortionMap.value;\n  }\n  set distortionMap(v) {\n    this._distortionMap.value = v;\n  }\n  get tDiffuseBlur() {\n    return this._tDiffuseBlur.value;\n  }\n  set tDiffuseBlur(v) {\n    this._tDiffuseBlur.value = v;\n  }\n  get textureMatrix() {\n    return this._textureMatrix.value;\n  }\n  set textureMatrix(v) {\n    this._textureMatrix.value = v;\n  }\n  get hasBlur() {\n    return this._hasBlur.value;\n  }\n  set hasBlur(v) {\n    this._hasBlur.value = v;\n  }\n  get mirror() {\n    return this._mirror.value;\n  }\n  set mirror(v) {\n    this._mirror.value = v;\n  }\n  get mixBlur() {\n    return this._mixBlur.value;\n  }\n  set mixBlur(v) {\n    this._mixBlur.value = v;\n  }\n  get mixStrength() {\n    return this._blurStrength.value;\n  }\n  set mixStrength(v) {\n    this._blurStrength.value = v;\n  }\n  get minDepthThreshold() {\n    return this._minDepthThreshold.value;\n  }\n  set minDepthThreshold(v) {\n    this._minDepthThreshold.value = v;\n  }\n  get maxDepthThreshold() {\n    return this._maxDepthThreshold.value;\n  }\n  set maxDepthThreshold(v) {\n    this._maxDepthThreshold.value = v;\n  }\n  get depthScale() {\n    return this._depthScale.value;\n  }\n  set depthScale(v) {\n    this._depthScale.value = v;\n  }\n  get depthToBlurRatioBias() {\n    return this._depthToBlurRatioBias.value;\n  }\n  set depthToBlurRatioBias(v) {\n    this._depthToBlurRatioBias.value = v;\n  }\n  get distortion() {\n    return this._distortion.value;\n  }\n  set distortion(v) {\n    this._distortion.value = v;\n  }\n  get mixContrast() {\n    return this._mixContrast.value;\n  }\n  set mixContrast(v) {\n    this._mixContrast.value = v;\n  }\n}\n\nexport { MeshReflectorMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useRef, useMemo, useLayoutEffect } from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { MeshBVHUniformStruct, MeshBVH, SAH } from 'three-mesh-bvh';\nimport { MeshRefractionMaterial as MeshRefractionMaterial$1 } from '../materials/MeshRefractionMaterial.js';\n\nconst isCubeTexture = def => def && def.isCubeTexture;\nfunction MeshRefractionMaterial({\n  aberrationStrength = 0,\n  fastChroma = true,\n  envMap,\n  ...props\n}) {\n  extend({\n    MeshRefractionMaterial: MeshRefractionMaterial$1\n  });\n  const material = useRef();\n  const {\n    size\n  } = useThree();\n  const defines = useMemo(() => {\n    var _ref, _envMap$image$;\n    const temp = {};\n    // Sampler2D and SamplerCube need different defines\n    const isCubeMap = isCubeTexture(envMap);\n    const w = (_ref = isCubeMap ? (_envMap$image$ = envMap.image[0]) == null ? void 0 : _envMap$image$.width : envMap.image.width) !== null && _ref !== void 0 ? _ref : 1024;\n    const cubeSize = w / 4;\n    const _lodMax = Math.floor(Math.log2(cubeSize));\n    const _cubeSize = Math.pow(2, _lodMax);\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\n    const height = 4 * _cubeSize;\n    if (isCubeMap) temp.ENVMAP_TYPE_CUBEM = '';\n    temp.CUBEUV_TEXEL_WIDTH = `${1.0 / width}`;\n    temp.CUBEUV_TEXEL_HEIGHT = `${1.0 / height}`;\n    temp.CUBEUV_MAX_MIP = `${_lodMax}.0`;\n    // Add defines from chromatic aberration\n    if (aberrationStrength > 0) temp.CHROMATIC_ABERRATIONS = '';\n    if (fastChroma) temp.FAST_CHROMA = '';\n    return temp;\n  }, [aberrationStrength, fastChroma]);\n  useLayoutEffect(() => {\n    var _material$current;\n    // Get the geometry of this materials parent\n    const geometry = (_material$current = material.current) == null || (_material$current = _material$current.__r3f) == null || (_material$current = _material$current.parent) == null ? void 0 : _material$current.geometry;\n    // Update the BVH\n    if (geometry) {\n      material.current.bvh = new MeshBVHUniformStruct();\n      material.current.bvh.updateFrom(new MeshBVH(geometry.clone().toNonIndexed(), {\n        lazyGeneration: false,\n        strategy: SAH\n      }));\n    }\n  }, []);\n  useFrame(({\n    camera\n  }) => {\n    material.current.viewMatrixInverse = camera.matrixWorld;\n    material.current.projectionMatrixInverse = camera.projectionMatrixInverse;\n  });\n  return /*#__PURE__*/React.createElement(\"meshRefractionMaterial\", _extends({\n    // @ts-ignore\n    key: JSON.stringify(defines)\n    // @ts-ignore\n    ,\n    defines: defines,\n    ref: material,\n    resolution: [size.width, size.height],\n    aberrationStrength: aberrationStrength,\n    envMap: envMap\n  }, props));\n}\n\nexport { MeshRefractionMaterial };\n", "import * as THREE from 'three';\nimport { shaderMaterial } from '../core/shaderMaterial.js';\nimport { shaderStructs, shaderIntersectFunction, MeshBVHUniformStruct } from 'three-mesh-bvh';\nimport { version } from '../helpers/constants.js';\n\n// Author: N8Programs\nconst MeshRefractionMaterial = /* @__PURE__ */shaderMaterial({\n  envMap: null,\n  bounces: 3,\n  ior: 2.4,\n  correctMips: true,\n  aberrationStrength: 0.01,\n  fresnel: 0,\n  bvh: /* @__PURE__ */new MeshBVHUniformStruct(),\n  color: /* @__PURE__ */new THREE.Color('white'),\n  resolution: /* @__PURE__ */new THREE.Vector2(),\n  viewMatrixInverse: /* @__PURE__ */new THREE.Matrix4(),\n  projectionMatrixInverse: /* @__PURE__ */new THREE.Matrix4()\n}, /*glsl*/`\n  uniform mat4 viewMatrixInverse;\n\n  varying vec3 vWorldPosition;  \n  varying vec3 vNormal;\n  varying mat4 vModelMatrixInverse;\n\n  #ifdef USE_INSTANCING_COLOR\n    varying vec3 vInstanceColor;\n  #endif\n\n  void main() {        \n    vec4 transformedNormal = vec4(normal, 0.0);\n    vec4 transformedPosition = vec4(position, 1.0);\n    #ifdef USE_INSTANCING\n      transformedNormal = instanceMatrix * transformedNormal;\n      transformedPosition = instanceMatrix * transformedPosition;\n    #endif\n\n    #ifdef USE_INSTANCING\n      vModelMatrixInverse = inverse(modelMatrix * instanceMatrix);\n    #else\n      vModelMatrixInverse = inverse(modelMatrix);\n    #endif\n\n    #ifdef USE_INSTANCING_COLOR\n      vInstanceColor = instanceColor.rgb;\n    #endif\n\n    vWorldPosition = (modelMatrix * transformedPosition).xyz;\n    vNormal = normalize((viewMatrixInverse * vec4(normalMatrix * transformedNormal.xyz, 0.0)).xyz);\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * transformedPosition;\n  }`, /*glsl*/`\n  #define ENVMAP_TYPE_CUBE_UV\n  precision highp isampler2D;\n  precision highp usampler2D;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n  varying mat4 vModelMatrixInverse;\n\n  #ifdef USE_INSTANCING_COLOR\n    varying vec3 vInstanceColor;\n  #endif\n    \n  #ifdef ENVMAP_TYPE_CUBEM\n    uniform samplerCube envMap;\n  #else\n    uniform sampler2D envMap;\n  #endif\n    \n  uniform float bounces;\n  ${shaderStructs}\n  ${shaderIntersectFunction}\n  uniform BVH bvh;\n  uniform float ior;\n  uniform bool correctMips;\n  uniform vec2 resolution;\n  uniform float fresnel;\n  uniform mat4 modelMatrix;\n  uniform mat4 projectionMatrixInverse;\n  uniform mat4 viewMatrixInverse;\n  uniform float aberrationStrength;\n  uniform vec3 color;\n  \n  float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n    return pow( 1.0 + dot( viewDirection, worldNormal), 10.0 );\n  }\n    \n  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 normal, float ior, mat4 modelMatrixInverse) {\n    vec3 rayOrigin = ro;\n    vec3 rayDirection = rd;\n    rayDirection = refract(rayDirection, normal, 1.0 / ior);\n    rayOrigin = vWorldPosition + rayDirection * 0.001;\n    rayOrigin = (modelMatrixInverse * vec4(rayOrigin, 1.0)).xyz;\n    rayDirection = normalize((modelMatrixInverse * vec4(rayDirection, 0.0)).xyz);\n    for(float i = 0.0; i < bounces; i++) {\n      uvec4 faceIndices = uvec4( 0u );\n      vec3 faceNormal = vec3( 0.0, 0.0, 1.0 );\n      vec3 barycoord = vec3( 0.0 );\n      float side = 1.0;\n      float dist = 0.0;\n      bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist );\n      vec3 hitPos = rayOrigin + rayDirection * max(dist - 0.001, 0.0);      \n      vec3 tempDir = refract(rayDirection, faceNormal, ior);\n      if (length(tempDir) != 0.0) {\n        rayDirection = tempDir;\n        break;\n      }\n      rayDirection = reflect(rayDirection, faceNormal);\n      rayOrigin = hitPos + rayDirection * 0.01;\n    }\n    rayDirection = normalize((modelMatrix * vec4(rayDirection, 0.0)).xyz);\n    return rayDirection;\n  }\n    \n  #include <common>\n  #include <cube_uv_reflection_fragment>\n    \n  #ifdef ENVMAP_TYPE_CUBEM\n    vec4 textureGradient(samplerCube envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n      return textureGrad(envMap, rayDirection, dFdx(correctMips ? directionCamPerfect: rayDirection), dFdy(correctMips ? directionCamPerfect: rayDirection));\n    }\n  #else\n    vec4 textureGradient(sampler2D envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n      vec2 uvv = equirectUv( rayDirection );\n      vec2 smoothUv = equirectUv( directionCamPerfect );\n      return textureGrad(envMap, uvv, dFdx(correctMips ? smoothUv : uvv), dFdy(correctMips ? smoothUv : uvv));\n    }\n  #endif\n  \n  void main() {\n    vec2 uv = gl_FragCoord.xy / resolution;\n    vec3 directionCamPerfect = (projectionMatrixInverse * vec4(uv * 2.0 - 1.0, 0.0, 1.0)).xyz;\n    directionCamPerfect = (viewMatrixInverse * vec4(directionCamPerfect, 0.0)).xyz;\n    directionCamPerfect = normalize(directionCamPerfect);\n    vec3 normal = vNormal;\n    vec3 rayOrigin = cameraPosition;\n    vec3 rayDirection = normalize(vWorldPosition - cameraPosition);\n    vec3 finalColor;\n    #ifdef CHROMATIC_ABERRATIONS\n      vec3 rayDirectionG = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\n      #ifdef FAST_CHROMA \n        vec3 rayDirectionR = normalize(rayDirectionG + 1.0 * vec3(aberrationStrength / 2.0));\n        vec3 rayDirectionB = normalize(rayDirectionG - 1.0 * vec3(aberrationStrength / 2.0));\n      #else\n        vec3 rayDirectionR = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 - aberrationStrength), 1.0), vModelMatrixInverse);\n        vec3 rayDirectionB = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 + aberrationStrength), 1.0), vModelMatrixInverse);\n      #endif\n      float finalColorR = textureGradient(envMap, rayDirectionR, directionCamPerfect).r;\n      float finalColorG = textureGradient(envMap, rayDirectionG, directionCamPerfect).g;\n      float finalColorB = textureGradient(envMap, rayDirectionB, directionCamPerfect).b;\n      finalColor = vec3(finalColorR, finalColorG, finalColorB);\n    #else\n      rayDirection = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\n      finalColor = textureGradient(envMap, rayDirection, directionCamPerfect).rgb;    \n    #endif\n\n    finalColor *= color;\n    #ifdef USE_INSTANCING_COLOR\n      finalColor *= vInstanceColor;\n    #endif\n\n    vec3 viewDirection = normalize(vWorldPosition - cameraPosition);\n    float nFresnel = fresnelFunc(viewDirection, normal) * fresnel;\n    gl_FragColor = vec4(mix(finalColor, vec3(1.0), nFresnel), 1.0);      \n    #include <tonemapping_fragment>\n    #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n  }`);\n\nexport { MeshRefractionMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\nimport { DiscardMaterial } from '../materials/DiscardMaterial.js';\n\nclass MeshTransmissionMaterialImpl extends THREE.MeshPhysicalMaterial {\n  constructor(samples = 6, transmissionSampler = false) {\n    super();\n    this.uniforms = {\n      chromaticAberration: {\n        value: 0.05\n      },\n      // Transmission must always be 0, unless transmissionSampler is being used\n      transmission: {\n        value: 0\n      },\n      // Instead a workaround is used, see below for reasons why\n      _transmission: {\n        value: 1\n      },\n      transmissionMap: {\n        value: null\n      },\n      // Roughness is 1 in THREE.MeshPhysicalMaterial but it makes little sense in a transmission material\n      roughness: {\n        value: 0\n      },\n      thickness: {\n        value: 0\n      },\n      thicknessMap: {\n        value: null\n      },\n      attenuationDistance: {\n        value: Infinity\n      },\n      attenuationColor: {\n        value: new THREE.Color('white')\n      },\n      anisotropicBlur: {\n        value: 0.1\n      },\n      time: {\n        value: 0\n      },\n      distortion: {\n        value: 0.0\n      },\n      distortionScale: {\n        value: 0.5\n      },\n      temporalDistortion: {\n        value: 0.0\n      },\n      buffer: {\n        value: null\n      }\n    };\n    this.onBeforeCompile = shader => {\n      shader.uniforms = {\n        ...shader.uniforms,\n        ...this.uniforms\n      };\n\n      // Fix for r153-r156 anisotropy chunks\n      // https://github.com/mrdoob/three.js/pull/26716\n      if (this.anisotropy > 0) shader.defines.USE_ANISOTROPY = '';\n\n      // If the transmission sampler is active inject a flag\n      if (transmissionSampler) shader.defines.USE_SAMPLER = '';\n      // Otherwise we do use use .transmission and must therefore force USE_TRANSMISSION\n      // because threejs won't inject it for us\n      else shader.defines.USE_TRANSMISSION = '';\n\n      // Head\n      shader.fragmentShader = /*glsl*/`\n      uniform float chromaticAberration;         \n      uniform float anisotropicBlur;      \n      uniform float time;\n      uniform float distortion;\n      uniform float distortionScale;\n      uniform float temporalDistortion;\n      uniform sampler2D buffer;\n\n      vec3 random3(vec3 c) {\n        float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n        vec3 r;\n        r.z = fract(512.0*j);\n        j *= .125;\n        r.x = fract(512.0*j);\n        j *= .125;\n        r.y = fract(512.0*j);\n        return r-0.5;\n      }\n\n      uint hash( uint x ) {\n        x += ( x << 10u );\n        x ^= ( x >>  6u );\n        x += ( x <<  3u );\n        x ^= ( x >> 11u );\n        x += ( x << 15u );\n        return x;\n      }\n\n      // Compound versions of the hashing algorithm I whipped together.\n      uint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }\n      uint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }\n      uint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }\n\n      // Construct a float with half-open range [0:1] using low 23 bits.\n      // All zeroes yields 0.0, all ones yields the next smallest representable value below 1.0.\n      float floatConstruct( uint m ) {\n        const uint ieeeMantissa = 0x007FFFFFu; // binary32 mantissa bitmask\n        const uint ieeeOne      = 0x3F800000u; // 1.0 in IEEE binary32\n        m &= ieeeMantissa;                     // Keep only mantissa bits (fractional part)\n        m |= ieeeOne;                          // Add fractional part to 1.0\n        float  f = uintBitsToFloat( m );       // Range [1:2]\n        return f - 1.0;                        // Range [0:1]\n      }\n\n      // Pseudo-random value in half-open range [0:1].\n      float randomBase( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }\n      float randomBase( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n      float randomBase( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n      float randomBase( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n      float rand(float seed) {\n        float result = randomBase(vec3(gl_FragCoord.xy, seed));\n        return result;\n      }\n\n      const float F3 =  0.3333333;\n      const float G3 =  0.1666667;\n\n      float snoise(vec3 p) {\n        vec3 s = floor(p + dot(p, vec3(F3)));\n        vec3 x = p - s + dot(s, vec3(G3));\n        vec3 e = step(vec3(0.0), x - x.yzx);\n        vec3 i1 = e*(1.0 - e.zxy);\n        vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n        vec3 x1 = x - i1 + G3;\n        vec3 x2 = x - i2 + 2.0*G3;\n        vec3 x3 = x - 1.0 + 3.0*G3;\n        vec4 w, d;\n        w.x = dot(x, x);\n        w.y = dot(x1, x1);\n        w.z = dot(x2, x2);\n        w.w = dot(x3, x3);\n        w = max(0.6 - w, 0.0);\n        d.x = dot(random3(s), x);\n        d.y = dot(random3(s + i1), x1);\n        d.z = dot(random3(s + i2), x2);\n        d.w = dot(random3(s + 1.0), x3);\n        w *= w;\n        w *= w;\n        d *= w;\n        return dot(d, vec4(52.0));\n      }\n\n      float snoiseFractal(vec3 m) {\n        return 0.5333333* snoise(m)\n              +0.2666667* snoise(2.0*m)\n              +0.1333333* snoise(4.0*m)\n              +0.0666667* snoise(8.0*m);\n      }\\n` + shader.fragmentShader;\n\n      // Remove transmission\n      shader.fragmentShader = shader.fragmentShader.replace('#include <transmission_pars_fragment>', /*glsl*/`\n        #ifdef USE_TRANSMISSION\n          // Transmission code is based on glTF-Sampler-Viewer\n          // https://github.com/KhronosGroup/glTF-Sample-Viewer\n          uniform float _transmission;\n          uniform float thickness;\n          uniform float attenuationDistance;\n          uniform vec3 attenuationColor;\n          #ifdef USE_TRANSMISSIONMAP\n            uniform sampler2D transmissionMap;\n          #endif\n          #ifdef USE_THICKNESSMAP\n            uniform sampler2D thicknessMap;\n          #endif\n          uniform vec2 transmissionSamplerSize;\n          uniform sampler2D transmissionSamplerMap;\n          uniform mat4 modelMatrix;\n          uniform mat4 projectionMatrix;\n          varying vec3 vWorldPosition;\n          vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n            // Direction of refracted light.\n            vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n            // Compute rotation-independant scaling of the model matrix.\n            vec3 modelScale;\n            modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n            modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n            modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n            // The thickness is specified in local space.\n            return normalize( refractionVector ) * thickness * modelScale;\n          }\n          float applyIorToRoughness( const in float roughness, const in float ior ) {\n            // Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and\n            // an IOR of 1.5 results in the default amount of microfacet refraction.\n            return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n          }\n          vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n            float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );            \n            #ifdef USE_SAMPLER\n              #ifdef texture2DLodEXT\n                return texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod);\n              #else\n                return texture2D(transmissionSamplerMap, fragCoord.xy, framebufferLod);\n              #endif\n            #else\n              return texture2D(buffer, fragCoord.xy);\n            #endif\n          }\n          vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n            if ( isinf( attenuationDistance ) ) {\n              // Attenuation distance is +∞, i.e. the transmitted color is not attenuated at all.\n              return radiance;\n            } else {\n              // Compute light attenuation using Beer's law.\n              vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n              vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law\n              return transmittance * radiance;\n            }\n          }\n          vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n            const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n            const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n            const in vec3 attenuationColor, const in float attenuationDistance ) {\n            vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n            vec3 refractedRayExit = position + transmissionRay;\n            // Project refracted vector on the framebuffer, while mapping to normalized device coordinates.\n            vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n            vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n            refractionCoords += 1.0;\n            refractionCoords /= 2.0;\n            // Sample framebuffer to get pixel the refracted ray hits.\n            vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n            vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n            // Get the specular component.\n            vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n            return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n          }\n        #endif\\n`);\n\n      // Add refraction\n      shader.fragmentShader = shader.fragmentShader.replace('#include <transmission_fragment>', /*glsl*/`  \n        // Improve the refraction to use the world pos\n        material.transmission = _transmission;\n        material.transmissionAlpha = 1.0;\n        material.thickness = thickness;\n        material.attenuationDistance = attenuationDistance;\n        material.attenuationColor = attenuationColor;\n        #ifdef USE_TRANSMISSIONMAP\n          material.transmission *= texture2D( transmissionMap, vUv ).r;\n        #endif\n        #ifdef USE_THICKNESSMAP\n          material.thickness *= texture2D( thicknessMap, vUv ).g;\n        #endif\n        \n        vec3 pos = vWorldPosition;\n        float runningSeed = 0.0;\n        vec3 v = normalize( cameraPosition - pos );\n        vec3 n = inverseTransformDirection( normal, viewMatrix );\n        vec3 transmission = vec3(0.0);\n        float transmissionR, transmissionB, transmissionG;\n        float randomCoords = rand(runningSeed++);\n        float thickness_smear = thickness * max(pow(roughnessFactor, 0.33), anisotropicBlur);\n        vec3 distortionNormal = vec3(0.0);\n        vec3 temporalOffset = vec3(time, -time, -time) * temporalDistortion;\n        if (distortion > 0.0) {\n          distortionNormal = distortion * vec3(snoiseFractal(vec3((pos * distortionScale + temporalOffset))), snoiseFractal(vec3(pos.zxy * distortionScale - temporalOffset)), snoiseFractal(vec3(pos.yxz * distortionScale + temporalOffset)));\n        }\n        for (float i = 0.0; i < ${samples}.0; i ++) {\n          vec3 sampleNorm = normalize(n + roughnessFactor * roughnessFactor * 2.0 * normalize(vec3(rand(runningSeed++) - 0.5, rand(runningSeed++) - 0.5, rand(runningSeed++) - 0.5)) * pow(rand(runningSeed++), 0.33) + distortionNormal);\n          transmissionR = getIBLVolumeRefraction(\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness  + thickness_smear * (i + randomCoords) / float(${samples}),\n            material.attenuationColor, material.attenuationDistance\n          ).r;\n          transmissionG = getIBLVolumeRefraction(\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior  * (1.0 + chromaticAberration * (i + randomCoords) / float(${samples})) , material.thickness + thickness_smear * (i + randomCoords) / float(${samples}),\n            material.attenuationColor, material.attenuationDistance\n          ).g;\n          transmissionB = getIBLVolumeRefraction(\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior * (1.0 + 2.0 * chromaticAberration * (i + randomCoords) / float(${samples})), material.thickness + thickness_smear * (i + randomCoords) / float(${samples}),\n            material.attenuationColor, material.attenuationDistance\n          ).b;\n          transmission.r += transmissionR;\n          transmission.g += transmissionG;\n          transmission.b += transmissionB;\n        }\n        transmission /= ${samples}.0;\n        totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n`);\n    };\n    Object.keys(this.uniforms).forEach(name => Object.defineProperty(this, name, {\n      get: () => this.uniforms[name].value,\n      set: v => this.uniforms[name].value = v\n    }));\n  }\n}\nconst MeshTransmissionMaterial = /* @__PURE__ */React.forwardRef(({\n  buffer,\n  transmissionSampler = false,\n  backside = false,\n  side = THREE.FrontSide,\n  transmission = 1,\n  thickness = 0,\n  backsideThickness = 0,\n  backsideEnvMapIntensity = 1,\n  samples = 10,\n  resolution,\n  backsideResolution,\n  background,\n  anisotropy,\n  anisotropicBlur,\n  ...props\n}, fref) => {\n  extend({\n    MeshTransmissionMaterial: MeshTransmissionMaterialImpl\n  });\n  const ref = React.useRef(null);\n  const [discardMaterial] = React.useState(() => new DiscardMaterial());\n  const fboBack = useFBO(backsideResolution || resolution);\n  const fboMain = useFBO(resolution);\n  let oldBg;\n  let oldEnvMapIntensity;\n  let oldTone;\n  let parent;\n  useFrame(state => {\n    ref.current.time = state.clock.getElapsedTime();\n    // Render only if the buffer matches the built-in and no transmission sampler is set\n    if (ref.current.buffer === fboMain.texture && !transmissionSampler) {\n      parent = ref.current.__r3f.parent;\n      if (parent) {\n        // Save defaults\n        oldTone = state.gl.toneMapping;\n        oldBg = state.scene.background;\n        oldEnvMapIntensity = ref.current.envMapIntensity;\n\n        // Switch off tonemapping lest it double tone maps\n        // Save the current background and set the HDR as the new BG\n        // Use discardmaterial, the parent will be invisible, but it's shadows will still be cast\n        state.gl.toneMapping = THREE.NoToneMapping;\n        if (background) state.scene.background = background;\n        parent.material = discardMaterial;\n        if (backside) {\n          // Render into the backside buffer\n          state.gl.setRenderTarget(fboBack);\n          state.gl.render(state.scene, state.camera);\n          // And now prepare the material for the main render using the backside buffer\n          parent.material = ref.current;\n          parent.material.buffer = fboBack.texture;\n          parent.material.thickness = backsideThickness;\n          parent.material.side = THREE.BackSide;\n          parent.material.envMapIntensity = backsideEnvMapIntensity;\n        }\n\n        // Render into the main buffer\n        state.gl.setRenderTarget(fboMain);\n        state.gl.render(state.scene, state.camera);\n        parent.material = ref.current;\n        parent.material.thickness = thickness;\n        parent.material.side = side;\n        parent.material.buffer = fboMain.texture;\n        parent.material.envMapIntensity = oldEnvMapIntensity;\n\n        // Set old state back\n        state.scene.background = oldBg;\n        state.gl.setRenderTarget(null);\n        state.gl.toneMapping = oldTone;\n      }\n    }\n  });\n\n  // Forward ref\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"meshTransmissionMaterial\", _extends({\n    // Samples must re-compile the shader so we memoize it\n    args: [samples, transmissionSampler],\n    ref: ref\n  }, props, {\n    buffer: buffer || fboMain.texture\n    // @ts-ignore\n    ,\n    _transmission: transmission\n    // In order for this to not incur extra cost \"transmission\" must be set to 0 and treated as a reserved prop.\n    // This is because THREE.WebGLRenderer will check for transmission > 0 and execute extra renders.\n    // The exception is when transmissionSampler is set, in which case we are using three's built in sampler.\n    ,\n    anisotropicBlur: anisotropicBlur !== null && anisotropicBlur !== void 0 ? anisotropicBlur : anisotropy,\n    transmission: transmissionSampler ? transmission : 0,\n    thickness: thickness,\n    side: side\n  }));\n});\n\nexport { MeshTransmissionMaterial };\n", "import { shaderMaterial } from '../core/shaderMaterial.js';\n\nconst DiscardMaterial = /* @__PURE__ */shaderMaterial({}, 'void main() { }', 'void main() { gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0); discard;  }');\n\nexport { DiscardMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { extend } from '@react-three/fiber';\nimport { DiscardMaterial } from '../materials/DiscardMaterial.js';\n\nconst MeshDiscardMaterial = /* @__PURE__ */React.forwardRef((props, fref) => {\n  extend({\n    DiscardMaterialImpl: DiscardMaterial\n  });\n  return /*#__PURE__*/React.createElement(\"discardMaterialImpl\", _extends({\n    ref: fref\n  }, props));\n});\n\nexport { MeshDiscardMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { version } from '../helpers/constants.js';\n\nconst opaque_fragment = version >= 154 ? 'opaque_fragment' : 'output_fragment';\nclass PointMaterialImpl extends THREE.PointsMaterial {\n  constructor(props) {\n    super(props);\n    this.onBeforeCompile = (shader, renderer) => {\n      const {\n        isWebGL2\n      } = renderer.capabilities;\n      shader.fragmentShader = shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `\n        ${!isWebGL2 ? `#extension GL_OES_standard_derivatives : enable\\n#include <${opaque_fragment}>` : `#include <${opaque_fragment}>`}\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      float r = dot(cxy, cxy);\n      float delta = fwidth(r);     \n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\n      #include <tonemapping_fragment>\n      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n      `);\n    };\n  }\n}\nconst PointMaterial = /* @__PURE__ */React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl(null));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\n\n/*  Integration and compilation: @N8Programs\n    Inspired by:\n     https://github.com/mrdoob/three.js/blob/dev/examples/webgl_shadowmap_pcss.html\n     https://developer.nvidia.com/gpugems/gpugems2/part-ii-shading-lighting-and-shadows/chapter-17-efficient-soft-edged-shadows-using\n     https://developer.download.nvidia.com/whitepapers/2008/PCSS_Integration.pdf\n     https://github.com/mrdoob/three.js/blob/master/examples/webgl_shadowmap_pcss.html [spidersharma03]\n     https://spline.design/\n   Concept:\n     https://www.gamedev.net/tutorials/programming/graphics/contact-hardening-soft-shadows-made-fast-r4906/\n   Vogel Disk Implementation:\n     https://www.shadertoy.com/view/4l3yRM [ashalah]\n   High-Frequency Noise Implementation:\n     https://www.shadertoy.com/view/tt3fDH [spawner64]\n*/\nconst pcss = ({\n  focus = 0,\n  size = 25,\n  samples = 10\n} = {}) => `\n#define PENUMBRA_FILTER_SIZE float(${size})\n#define RGB_NOISE_FUNCTION(uv) (randRGB(uv))\nvec3 randRGB(vec2 uv) {\n  return vec3(\n    fract(sin(dot(uv, vec2(12.75613, 38.12123))) * 13234.76575),\n    fract(sin(dot(uv, vec2(19.45531, 58.46547))) * 43678.23431),\n    fract(sin(dot(uv, vec2(23.67817, 78.23121))) * 93567.23423)\n  );\n}\n\nvec3 lowPassRandRGB(vec2 uv) {\n  // 3x3 convolution (average)\n  // can be implemented as separable with an extra buffer for a total of 6 samples instead of 9\n  vec3 result = vec3(0);\n  result += RGB_NOISE_FUNCTION(uv + vec2(-1.0, -1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(-1.0,  0.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(-1.0, +1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2( 0.0, -1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2( 0.0,  0.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2( 0.0, +1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(+1.0, -1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(+1.0,  0.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(+1.0, +1.0));\n  result *= 0.111111111; // 1.0 / 9.0\n  return result;\n}\nvec3 highPassRandRGB(vec2 uv) {\n  // by subtracting the low-pass signal from the original signal, we're being left with the high-pass signal\n  // hp(x) = x - lp(x)\n  return RGB_NOISE_FUNCTION(uv) - lowPassRandRGB(uv) + 0.5;\n}\n\n\nvec2 vogelDiskSample(int sampleIndex, int sampleCount, float angle) {\n  const float goldenAngle = 2.399963f; // radians\n  float r = sqrt(float(sampleIndex) + 0.5f) / sqrt(float(sampleCount));\n  float theta = float(sampleIndex) * goldenAngle + angle;\n  float sine = sin(theta);\n  float cosine = cos(theta);\n  return vec2(cosine, sine) * r;\n}\nfloat penumbraSize( const in float zReceiver, const in float zBlocker ) { // Parallel plane estimation\n  return (zReceiver - zBlocker) / zBlocker;\n}\nfloat findBlocker(sampler2D shadowMap, vec2 uv, float compare, float angle) {\n  float texelSize = 1.0 / float(textureSize(shadowMap, 0).x);\n  float blockerDepthSum = float(${focus});\n  float blockers = 0.0;\n\n  int j = 0;\n  vec2 offset = vec2(0.);\n  float depth = 0.;\n\n  #pragma unroll_loop_start\n  for(int i = 0; i < ${samples}; i ++) {\n    offset = (vogelDiskSample(j, ${samples}, angle) * texelSize) * 2.0 * PENUMBRA_FILTER_SIZE;\n    depth = unpackRGBAToDepth( texture2D( shadowMap, uv + offset));\n    if (depth < compare) {\n      blockerDepthSum += depth;\n      blockers++;\n    }\n    j++;\n  }\n  #pragma unroll_loop_end\n\n  if (blockers > 0.0) {\n    return blockerDepthSum / blockers;\n  }\n  return -1.0;\n}\n\n        \nfloat vogelFilter(sampler2D shadowMap, vec2 uv, float zReceiver, float filterRadius, float angle) {\n  float texelSize = 1.0 / float(textureSize(shadowMap, 0).x);\n  float shadow = 0.0f;\n  int j = 0;\n  vec2 vogelSample = vec2(0.0);\n  vec2 offset = vec2(0.0);\n  #pragma unroll_loop_start\n  for (int i = 0; i < ${samples}; i++) {\n    vogelSample = vogelDiskSample(j, ${samples}, angle) * texelSize;\n    offset = vogelSample * (1.0 + filterRadius * float(${size}));\n    shadow += step( zReceiver, unpackRGBAToDepth( texture2D( shadowMap, uv + offset ) ) );\n    j++;\n  }\n  #pragma unroll_loop_end\n  return shadow * 1.0 / ${samples}.0;\n}\n\nfloat PCSS (sampler2D shadowMap, vec4 coords) {\n  vec2 uv = coords.xy;\n  float zReceiver = coords.z; // Assumed to be eye-space z in this code\n  float angle = highPassRandRGB(gl_FragCoord.xy).r * PI2;\n  float avgBlockerDepth = findBlocker(shadowMap, uv, zReceiver, angle);\n  if (avgBlockerDepth == -1.0) {\n    return 1.0;\n  }\n  float penumbraRatio = penumbraSize(zReceiver, avgBlockerDepth);\n  return vogelFilter(shadowMap, uv, zReceiver, 1.25 * penumbraRatio, angle);\n}`;\nfunction reset(gl, scene, camera) {\n  scene.traverse(object => {\n    if (object.material) {\n      gl.properties.remove(object.material);\n      object.material.dispose == null || object.material.dispose();\n    }\n  });\n  gl.info.programs.length = 0;\n  gl.compile(scene, camera);\n}\nfunction SoftShadows({\n  focus = 0,\n  samples = 10,\n  size = 25\n}) {\n  const gl = useThree(state => state.gl);\n  const scene = useThree(state => state.scene);\n  const camera = useThree(state => state.camera);\n  React.useEffect(() => {\n    const original = THREE.ShaderChunk.shadowmap_pars_fragment;\n    THREE.ShaderChunk.shadowmap_pars_fragment = THREE.ShaderChunk.shadowmap_pars_fragment.replace('#ifdef USE_SHADOWMAP', '#ifdef USE_SHADOWMAP\\n' + pcss({\n      size,\n      samples,\n      focus\n    })).replace('#if defined( SHADOWMAP_TYPE_PCF )', '\\nreturn PCSS(shadowMap, shadowCoord);\\n#if defined( SHADOWMAP_TYPE_PCF )');\n    reset(gl, scene, camera);\n    return () => {\n      THREE.ShaderChunk.shadowmap_pars_fragment = original;\n      reset(gl, scene, camera);\n    };\n  }, [focus, size, samples]);\n  return null;\n}\n\nexport { SoftShadows };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\n\nfunction create(type, effect) {\n  const El = type + 'Geometry';\n  return /*#__PURE__*/React.forwardRef(({\n    args,\n    children,\n    ...props\n  }, fref) => {\n    const ref = React.useRef(null);\n    React.useImperativeHandle(fref, () => ref.current);\n    React.useLayoutEffect(() => void (effect == null ? void 0 : effect(ref.current)));\n    return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      ref: ref\n    }, props), /*#__PURE__*/React.createElement(El, {\n      attach: \"geometry\",\n      args: args\n    }), children);\n  });\n}\nconst Box = /* @__PURE__ */create('box');\nconst Circle = /* @__PURE__ */create('circle');\nconst Cone = /* @__PURE__ */create('cone');\nconst Cylinder = /* @__PURE__ */create('cylinder');\nconst Sphere = /* @__PURE__ */create('sphere');\nconst Plane = /* @__PURE__ */create('plane');\nconst Tube = /* @__PURE__ */create('tube');\nconst Torus = /* @__PURE__ */create('torus');\nconst TorusKnot = /* @__PURE__ */create('torusKnot');\nconst Tetrahedron = /* @__PURE__ */create('tetrahedron');\nconst Ring = /* @__PURE__ */create('ring');\nconst Polyhedron = /* @__PURE__ */create('polyhedron');\nconst Icosahedron = /* @__PURE__ */create('icosahedron');\nconst Octahedron = /* @__PURE__ */create('octahedron');\nconst Dodecahedron = /* @__PURE__ */create('dodecahedron');\nconst Extrude = /* @__PURE__ */create('extrude');\nconst Lathe = /* @__PURE__ */create('lathe');\nconst Capsule = /* @__PURE__ */create('capsule');\nconst Shape = /* @__PURE__ */create('shape', ({\n  geometry\n}) => {\n  // Calculate UVs (by https://discourse.threejs.org/u/prisoner849)\n  // https://discourse.threejs.org/t/custom-shape-in-image-not-working/49348/10\n  const pos = geometry.attributes.position;\n  const b3 = new THREE.Box3().setFromBufferAttribute(pos);\n  const b3size = new THREE.Vector3();\n  b3.getSize(b3size);\n  const uv = [];\n  let x = 0,\n    y = 0,\n    u = 0,\n    v = 0;\n  for (let i = 0; i < pos.count; i++) {\n    x = pos.getX(i);\n    y = pos.getY(i);\n    u = (x - b3.min.x) / b3size.x;\n    v = (y - b3.min.y) / b3size.y;\n    uv.push(u, v);\n  }\n  geometry.setAttribute('uv', new THREE.Float32BufferAttribute(uv, 2));\n});\n\nexport { Box, Capsule, Circle, Cone, Cylinder, Dodecahedron, Extrude, Icosahedron, Lathe, Octahedron, Plane, Polyhedron, Ring, Shape, Sphere, Tetrahedron, Torus, TorusKnot, Tube };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Shape } from 'three';\nimport { toCreasedNormals } from 'three-stdlib';\n\nconst eps = 0.00001;\nfunction createShape(width, height, radius0) {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\nconst RoundedBox = /* @__PURE__ */React.forwardRef(function RoundedBox({\n  args: [width = 1, height = 1, depth = 1] = [],\n  radius = 0.05,\n  steps = 1,\n  smoothness = 4,\n  bevelSegments = 4,\n  creaseAngle = 0.4,\n  children,\n  ...rest\n}, ref) {\n  const shape = React.useMemo(() => createShape(width, height, radius), [width, height, radius]);\n  const params = React.useMemo(() => ({\n    depth: depth - radius * 2,\n    bevelEnabled: true,\n    bevelSegments: bevelSegments * 2,\n    steps,\n    bevelSize: radius - eps,\n    bevelThickness: radius,\n    curveSegments: smoothness\n  }), [depth, radius, smoothness]);\n  const geomRef = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (geomRef.current) {\n      geomRef.current.center();\n      toCreasedNormals(geomRef.current, creaseAngle);\n    }\n  }, [shape, params]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"extrudeGeometry\", {\n    ref: geomRef,\n    args: [shape, params]\n  }), children);\n});\n\nexport { RoundedBox };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nfunction createScreenQuadGeometry() {\n  const geometry = new THREE.BufferGeometry();\n  const vertices = new Float32Array([-1, -1, 3, -1, -1, 3]);\n  geometry.boundingSphere = new THREE.Sphere();\n  geometry.boundingSphere.set(new THREE.Vector3(), Infinity);\n  geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 2));\n  return geometry;\n}\nconst ScreenQuad = /* @__PURE__ */React.forwardRef(function ScreenQuad({\n  children,\n  ...restProps\n}, ref) {\n  const geometry = React.useMemo(createScreenQuadGeometry, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    geometry: geometry,\n    frustumCulled: false\n  }, restProps), children);\n});\n\nexport { ScreenQuad };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nconst Resize = /* @__PURE__ */React.forwardRef(({\n  children,\n  width,\n  height,\n  depth,\n  box3,\n  precise = true,\n  ...props\n}, fRef) => {\n  const ref = React.useRef(null);\n  const outer = React.useRef(null);\n  const inner = React.useRef(null);\n  React.useLayoutEffect(() => {\n    outer.current.matrixWorld.identity();\n    let box = box3 || new THREE.Box3().setFromObject(inner.current, precise);\n    const w = box.max.x - box.min.x;\n    const h = box.max.y - box.min.y;\n    const d = box.max.z - box.min.z;\n    let dimension = Math.max(w, h, d);\n    if (width) dimension = w;\n    if (height) dimension = h;\n    if (depth) dimension = d;\n    outer.current.scale.setScalar(1 / dimension);\n  }, [width, height, depth, box3, precise]);\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    ref: outer\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children)));\n});\n\nexport { Resize };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\n// eslint-disable-next-line no-shadow\nvar AnimationState = /*#__PURE__*/function (AnimationState) {\n  AnimationState[AnimationState[\"NONE\"] = 0] = \"NONE\";\n  AnimationState[AnimationState[\"START\"] = 1] = \"START\";\n  AnimationState[AnimationState[\"ACTIVE\"] = 2] = \"ACTIVE\";\n  return AnimationState;\n}(AnimationState || {});\nconst isOrthographic = def => def && def.isOrthographicCamera;\nconst isBox3 = def => def && def.isBox3;\nconst interpolateFuncDefault = t => {\n  // Imitates the previously used THREE.MathUtils.damp\n  return 1 - Math.exp(-5 * t) + 0.007 * t;\n};\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  maxDuration = 1.0,\n  margin = 1.2,\n  observe,\n  fit,\n  clip,\n  interpolateFunc = interpolateFuncDefault,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const {\n    camera,\n    size,\n    invalidate\n  } = useThree();\n  const controls = useThree(state => state.controls);\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n  const origin = React.useRef({\n    camPos: new THREE.Vector3(),\n    camRot: new THREE.Quaternion(),\n    camZoom: 1\n  });\n  const goal = React.useRef({\n    camPos: undefined,\n    camRot: undefined,\n    camZoom: undefined,\n    camUp: undefined,\n    target: undefined\n  });\n  const animationState = React.useRef(AnimationState.NONE);\n  const t = React.useRef(0); // represent animation state from 0 to 1\n\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const boxSize = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(boxSize.x, boxSize.y, boxSize.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size: boxSize,\n        center,\n        distance\n      };\n    }\n    return {\n      getSize,\n      refresh(object) {\n        if (isBox3(object)) box.copy(object);else {\n          const target = object || ref.current;\n          if (!target) return this;\n          target.updateWorldMatrix(true, true);\n          box.setFromObject(target);\n        }\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n        origin.current.camPos.copy(camera.position);\n        origin.current.camRot.copy(camera.quaternion);\n        isOrthographic(camera) && (origin.current.camZoom = camera.zoom);\n        goal.current.camPos = undefined;\n        goal.current.camRot = undefined;\n        goal.current.camZoom = undefined;\n        goal.current.camUp = undefined;\n        goal.current.target = undefined;\n        return this;\n      },\n      reset() {\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = camera.position.clone().sub(center).normalize();\n        goal.current.camPos = center.clone().addScaledVector(direction, distance);\n        goal.current.target = center.clone();\n        const mCamRot = new THREE.Matrix4().lookAt(goal.current.camPos, goal.current.target, camera.up);\n        goal.current.camRot = new THREE.Quaternion().setFromRotationMatrix(mCamRot);\n        animationState.current = AnimationState.START;\n        t.current = 0;\n        return this;\n      },\n      moveTo(position) {\n        goal.current.camPos = Array.isArray(position) ? new THREE.Vector3(...position) : position.clone();\n        animationState.current = AnimationState.START;\n        t.current = 0;\n        return this;\n      },\n      lookAt({\n        target,\n        up\n      }) {\n        goal.current.target = Array.isArray(target) ? new THREE.Vector3(...target) : target.clone();\n        if (up) {\n          goal.current.camUp = Array.isArray(up) ? new THREE.Vector3(...up) : up.clone();\n        } else {\n          goal.current.camUp = camera.up.clone();\n        }\n        const mCamRot = new THREE.Matrix4().lookAt(goal.current.camPos || camera.position, goal.current.target, goal.current.camUp);\n        goal.current.camRot = new THREE.Quaternion().setFromRotationMatrix(mCamRot);\n        animationState.current = AnimationState.START;\n        t.current = 0;\n        return this;\n      },\n      /**\n       * @deprecated Use moveTo and lookAt instead\n       */\n      to({\n        position,\n        target\n      }) {\n        return this.moveTo(position).lookAt({\n          target\n        });\n      },\n      fit() {\n        if (!isOrthographic(camera)) {\n          // For non-orthographic cameras, fit should behave exactly like reset\n          return this.reset();\n        }\n\n        // For orthographic cameras, fit should only modify the zoom value\n        let maxHeight = 0,\n          maxWidth = 0;\n        const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)];\n\n        // Transform the center and each corner to camera space\n        const pos = goal.current.camPos || camera.position;\n        const target = goal.current.target || (controls == null ? void 0 : controls.target);\n        const up = goal.current.camUp || camera.up;\n        const mCamWInv = target ? new THREE.Matrix4().lookAt(pos, target, up).setPosition(pos).invert() : camera.matrixWorldInverse;\n        for (const v of vertices) {\n          v.applyMatrix4(mCamWInv);\n          maxHeight = Math.max(maxHeight, Math.abs(v.y));\n          maxWidth = Math.max(maxWidth, Math.abs(v.x));\n        }\n        maxHeight *= 2;\n        maxWidth *= 2;\n        const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n        const zoomForWidth = (camera.right - camera.left) / maxWidth;\n        goal.current.camZoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n        animationState.current = AnimationState.START;\n        t.current = 0;\n        onFitRef.current && onFitRef.current(this.getSize());\n        return this;\n      },\n      clip() {\n        const {\n          distance\n        } = getSize();\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) {\n          controls.maxDistance = distance * 10;\n          controls.update();\n        }\n        invalidate();\n        return this;\n      }\n    };\n  }, [box, camera, controls, margin, invalidate]);\n  React.useLayoutEffect(() => {\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => {\n        if (controls && goal.current.target && animationState.current !== AnimationState.NONE) {\n          const front = new THREE.Vector3().setFromMatrixColumn(camera.matrix, 2);\n          const d0 = origin.current.camPos.distanceTo(controls.target);\n          const d1 = (goal.current.camPos || origin.current.camPos).distanceTo(goal.current.target);\n          const d = (1 - t.current) * d0 + t.current * d1;\n          controls.target.copy(camera.position).addScaledVector(front, -d);\n          controls.update();\n        }\n        animationState.current = AnimationState.NONE;\n      };\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    }\n  }, [controls]);\n\n  // Scale pointer on window resize\n  const count = React.useRef(0);\n  React.useLayoutEffect(() => {\n    if (observe || count.current++ === 0) {\n      api.refresh();\n      if (fit) api.reset().fit();\n      if (clip) api.clip();\n    }\n  }, [size, clip, fit, observe, camera, controls]);\n  useFrame((state, delta) => {\n    // This [additional animation step START] is needed to guarantee that delta used in animation isn't absurdly high (2-3 seconds) which is actually possible if rendering happens on demand...\n    if (animationState.current === AnimationState.START) {\n      animationState.current = AnimationState.ACTIVE;\n      invalidate();\n    } else if (animationState.current === AnimationState.ACTIVE) {\n      t.current += delta / maxDuration;\n      if (t.current >= 1) {\n        goal.current.camPos && camera.position.copy(goal.current.camPos);\n        goal.current.camRot && camera.quaternion.copy(goal.current.camRot);\n        goal.current.camUp && camera.up.copy(goal.current.camUp);\n        goal.current.camZoom && isOrthographic(camera) && (camera.zoom = goal.current.camZoom);\n        camera.updateMatrixWorld();\n        camera.updateProjectionMatrix();\n        if (controls && goal.current.target) {\n          controls.target.copy(goal.current.target);\n          controls.update();\n        }\n        animationState.current = AnimationState.NONE;\n      } else {\n        const k = interpolateFunc(t.current);\n        goal.current.camPos && camera.position.lerpVectors(origin.current.camPos, goal.current.camPos, k);\n        goal.current.camRot && camera.quaternion.slerpQuaternions(origin.current.camRot, goal.current.camRot, k);\n        goal.current.camUp && camera.up.set(0, 1, 0).applyQuaternion(camera.quaternion);\n        goal.current.camZoom && isOrthographic(camera) && (camera.zoom = (1 - k) * origin.current.camZoom + k * goal.current.camZoom);\n        camera.updateMatrixWorld();\n        camera.updateProjectionMatrix();\n      }\n      invalidate();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SimplexNoise } from 'three-stdlib';\n\nconst CameraShake = /* @__PURE__ */React.forwardRef(({\n  intensity = 1,\n  decay,\n  decayRate = 0.65,\n  maxYaw = 0.1,\n  maxPitch = 0.1,\n  maxRoll = 0.1,\n  yawFrequency = 0.1,\n  pitchFrequency = 0.1,\n  rollFrequency = 0.1\n}, ref) => {\n  const camera = useThree(state => state.camera);\n  const defaultControls = useThree(state => state.controls);\n  const intensityRef = React.useRef(intensity);\n  const initialRotation = React.useRef(camera.rotation.clone());\n  const [yawNoise] = React.useState(() => new SimplexNoise());\n  const [pitchNoise] = React.useState(() => new SimplexNoise());\n  const [rollNoise] = React.useState(() => new SimplexNoise());\n  const constrainIntensity = () => {\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\n    }\n  };\n  React.useImperativeHandle(ref, () => ({\n    getIntensity: () => intensityRef.current,\n    setIntensity: val => {\n      intensityRef.current = val;\n      constrainIntensity();\n    }\n  }), []);\n  React.useEffect(() => {\n    if (defaultControls) {\n      const callback = () => void (initialRotation.current = camera.rotation.clone());\n      defaultControls.addEventListener('change', callback);\n      callback();\n      return () => void defaultControls.removeEventListener('change', callback);\n    }\n  }, [camera, defaultControls]);\n  useFrame((state, delta) => {\n    const shake = Math.pow(intensityRef.current, 2);\n    const yaw = maxYaw * shake * yawNoise.noise(state.clock.elapsedTime * yawFrequency, 1);\n    const pitch = maxPitch * shake * pitchNoise.noise(state.clock.elapsedTime * pitchFrequency, 1);\n    const roll = maxRoll * shake * rollNoise.noise(state.clock.elapsedTime * rollFrequency, 1);\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\n    if (decay && intensityRef.current > 0) {\n      intensityRef.current -= decayRate * delta;\n      constrainIntensity();\n    }\n  });\n  return null;\n});\n\nexport { CameraShake };\n", "import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nconst Float = /* @__PURE__ */React.forwardRef(({\n  children,\n  enabled = true,\n  speed = 1,\n  rotationIntensity = 1,\n  floatIntensity = 1,\n  floatingRange = [-0.1, 0.1],\n  ...props\n}, forwardRef) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, () => ref.current, []);\n  const offset = React.useRef(Math.random() * 10000);\n  useFrame(state => {\n    var _floatingRange$, _floatingRange$2;\n    if (!enabled || speed === 0) return;\n    const t = offset.current + state.clock.getElapsedTime();\n    ref.current.rotation.x = Math.cos(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.y = Math.sin(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.z = Math.sin(t / 4 * speed) / 20 * rotationIntensity;\n    let yPosition = Math.sin(t / 4 * speed) / 10;\n    yPosition = THREE.MathUtils.mapLinear(yPosition, -0.1, 0.1, (_floatingRange$ = floatingRange == null ? void 0 : floatingRange[0]) !== null && _floatingRange$ !== void 0 ? _floatingRange$ : -0.1, (_floatingRange$2 = floatingRange == null ? void 0 : floatingRange[1]) !== null && _floatingRange$2 !== void 0 ? _floatingRange$2 : 0.1);\n    ref.current.position.y = yPosition * floatIntensity;\n    ref.current.updateMatrix();\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrixAutoUpdate: false\n  }, children));\n});\n\nexport { Float };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Environment } from './Environment.js';\nimport { ContactShadows } from './ContactShadows.js';\nimport { Center } from './Center.js';\nimport { AccumulativeShadows, RandomizedLight } from './AccumulativeShadows.js';\nimport { Bounds, useBounds } from './Bounds.js';\n\nconst presets = {\n  rembrandt: {\n    main: [1, 2, 1],\n    fill: [-2, -0.5, -2]\n  },\n  portrait: {\n    main: [-1, 2, 0.5],\n    fill: [-1, 0.5, -1.5]\n  },\n  upfront: {\n    main: [0, 2, 1],\n    fill: [-1, 0.5, -1.5]\n  },\n  soft: {\n    main: [-2, 4, 4],\n    fill: [-1, 0.5, -1.5]\n  }\n};\nfunction Refit({\n  radius,\n  adjustCamera\n}) {\n  const api = useBounds();\n  React.useEffect(() => {\n    if (adjustCamera) api.refresh().clip().fit();\n  }, [radius, adjustCamera]);\n  return null;\n}\nfunction Stage({\n  children,\n  center,\n  adjustCamera = true,\n  intensity = 0.5,\n  shadows = 'contact',\n  environment = 'city',\n  preset = 'rembrandt',\n  ...props\n}) {\n  var _bias, _normalBias, _size, _offset, _amount, _radius, _ambient, _intensity;\n  const config = typeof preset === 'string' ? presets[preset] : preset;\n  const [{\n    radius,\n    height\n  }, set] = React.useState({\n    radius: 0,\n    width: 0,\n    height: 0,\n    depth: 0\n  });\n  const shadowBias = (_bias = shadows == null ? void 0 : shadows.bias) !== null && _bias !== void 0 ? _bias : -0.0001;\n  const normalBias = (_normalBias = shadows == null ? void 0 : shadows.normalBias) !== null && _normalBias !== void 0 ? _normalBias : 0;\n  const shadowSize = (_size = shadows == null ? void 0 : shadows.size) !== null && _size !== void 0 ? _size : 1024;\n  const shadowOffset = (_offset = shadows == null ? void 0 : shadows.offset) !== null && _offset !== void 0 ? _offset : 0;\n  const contactShadow = shadows === 'contact' || (shadows == null ? void 0 : shadows.type) === 'contact';\n  const accumulativeShadow = shadows === 'accumulative' || (shadows == null ? void 0 : shadows.type) === 'accumulative';\n  const shadowSpread = {\n    ...(typeof shadows === 'object' ? shadows : {})\n  };\n  const environmentProps = !environment ? null : typeof environment === 'string' ? {\n    preset: environment\n  } : environment;\n  const onCentered = React.useCallback(props => {\n    const {\n      width,\n      height,\n      depth,\n      boundingSphere\n    } = props;\n    set({\n      radius: boundingSphere.radius,\n      width,\n      height,\n      depth\n    });\n    if (center != null && center.onCentered) center.onCentered(props);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: intensity / 3\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    penumbra: 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    intensity: intensity * 2,\n    castShadow: !!shadows,\n    \"shadow-bias\": shadowBias,\n    \"shadow-normalBias\": normalBias,\n    \"shadow-mapSize\": shadowSize\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [config.fill[0] * radius, config.fill[1] * radius, config.fill[2] * radius],\n    intensity: intensity\n  }), /*#__PURE__*/React.createElement(Bounds, _extends({\n    fit: !!adjustCamera,\n    clip: !!adjustCamera,\n    margin: Number(adjustCamera),\n    observe: true\n  }, props), /*#__PURE__*/React.createElement(Refit, {\n    radius: radius,\n    adjustCamera: adjustCamera\n  }), /*#__PURE__*/React.createElement(Center, _extends({}, center, {\n    position: [0, shadowOffset / 2, 0],\n    onCentered: onCentered\n  }), children)), /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, -height / 2 - shadowOffset / 2, 0]\n  }, contactShadow && /*#__PURE__*/React.createElement(ContactShadows, _extends({\n    scale: radius * 4,\n    far: radius,\n    blur: 2\n  }, shadowSpread)), accumulativeShadow && /*#__PURE__*/React.createElement(AccumulativeShadows, _extends({\n    temporal: true,\n    frames: 100,\n    alphaTest: 0.9,\n    toneMapped: true,\n    scale: radius * 4\n  }, shadowSpread), /*#__PURE__*/React.createElement(RandomizedLight, {\n    amount: (_amount = shadowSpread.amount) !== null && _amount !== void 0 ? _amount : 8,\n    radius: (_radius = shadowSpread.radius) !== null && _radius !== void 0 ? _radius : radius,\n    ambient: (_ambient = shadowSpread.ambient) !== null && _ambient !== void 0 ? _ambient : 0.5,\n    intensity: (_intensity = shadowSpread.intensity) !== null && _intensity !== void 0 ? _intensity : 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    size: radius * 4,\n    bias: -shadowBias,\n    mapSize: shadowSize\n  }))), environment && /*#__PURE__*/React.createElement(Environment, environmentProps));\n}\n\nexport { Stage };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame, createPortal, applyProps, extend } from '@react-three/fiber';\nimport { Scene, WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport { GroundProjectedEnv } from 'three-stdlib';\nimport { useEnvironment } from './useEnvironment.js';\n\nconst isRef = obj => obj.current && obj.current.isScene;\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\nfunction setEnvProps(background, scene, defaultScene, texture, sceneProps = {}) {\n  var _sceneProps$blur, _target$backgroundRot, _target$backgroundRot2, _target$environmentRo, _target$environmentRo2;\n  // defaults\n  sceneProps = {\n    backgroundBlurriness: (_sceneProps$blur = sceneProps.blur) !== null && _sceneProps$blur !== void 0 ? _sceneProps$blur : 0,\n    backgroundIntensity: 1,\n    backgroundRotation: [0, 0, 0],\n    environmentIntensity: 1,\n    environmentRotation: [0, 0, 0],\n    ...sceneProps\n  };\n  const target = resolveScene(scene || defaultScene);\n  const oldbg = target.background;\n  const oldenv = target.environment;\n  const oldSceneProps = {\n    // @ts-ignore\n    backgroundBlurriness: target.backgroundBlurriness,\n    // @ts-ignore\n    backgroundIntensity: target.backgroundIntensity,\n    // @ts-ignore\n    backgroundRotation: (_target$backgroundRot = (_target$backgroundRot2 = target.backgroundRotation) == null || _target$backgroundRot2.clone == null ? void 0 : _target$backgroundRot2.clone()) !== null && _target$backgroundRot !== void 0 ? _target$backgroundRot : [0, 0, 0],\n    // @ts-ignore\n    environmentIntensity: target.environmentIntensity,\n    // @ts-ignore\n    environmentRotation: (_target$environmentRo = (_target$environmentRo2 = target.environmentRotation) == null || _target$environmentRo2.clone == null ? void 0 : _target$environmentRo2.clone()) !== null && _target$environmentRo !== void 0 ? _target$environmentRo : [0, 0, 0]\n  };\n  if (background !== 'only') target.environment = texture;\n  if (background) {\n    target.background = texture;\n    applyProps(target, sceneProps);\n  }\n  return () => {\n    if (background !== 'only') target.environment = oldenv;\n    if (background) {\n      target.background = oldbg;\n      applyProps(target, oldSceneProps);\n    }\n  };\n}\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  map,\n  ...config\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) return setEnvProps(background, scene, defaultScene, map, config);\n  });\n  return null;\n}\nfunction EnvironmentCube({\n  background = false,\n  scene,\n  blur,\n  backgroundBlurriness,\n  backgroundIntensity,\n  backgroundRotation,\n  environmentIntensity,\n  environmentRotation,\n  ...rest\n}) {\n  const texture = useEnvironment(rest);\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    return setEnvProps(background, scene, defaultScene, texture, {\n      blur,\n      backgroundBlurriness,\n      backgroundIntensity,\n      backgroundRotation,\n      environmentIntensity,\n      environmentRotation\n    });\n  });\n  return null;\n}\nfunction EnvironmentPortal({\n  children,\n  near = 1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  map,\n  background = false,\n  blur,\n  backgroundBlurriness,\n  backgroundIntensity,\n  backgroundRotation,\n  environmentIntensity,\n  environmentRotation,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    return setEnvProps(background, scene, defaultScene, fbo.texture, {\n      blur,\n      backgroundBlurriness,\n      backgroundIntensity,\n      backgroundRotation,\n      environmentIntensity,\n      environmentRotation\n    });\n  }, [children, virtualScene, fbo.texture, scene, defaultScene, background, frames, gl]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), files || preset ? /*#__PURE__*/React.createElement(EnvironmentCube, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions\n  }) : map ? /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    map: map,\n    extensions: extensions\n  }) : null), virtualScene));\n}\nfunction EnvironmentGround(props) {\n  var _props$ground, _props$ground2, _scale, _props$ground3;\n  const textureDefault = useEnvironment(props);\n  const texture = props.map || textureDefault;\n  React.useMemo(() => extend({\n    GroundProjectedEnvImpl: GroundProjectedEnv\n  }), []);\n  const args = React.useMemo(() => [texture], [texture]);\n  const height = (_props$ground = props.ground) == null ? void 0 : _props$ground.height;\n  const radius = (_props$ground2 = props.ground) == null ? void 0 : _props$ground2.radius;\n  const scale = (_scale = (_props$ground3 = props.ground) == null ? void 0 : _props$ground3.scale) !== null && _scale !== void 0 ? _scale : 1000;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnvironmentMap, _extends({}, props, {\n    map: texture\n  })), /*#__PURE__*/React.createElement(\"groundProjectedEnvImpl\", {\n    args: args,\n    scale: scale,\n    height: height,\n    radius: radius\n  }));\n}\nfunction Environment(props) {\n  return props.ground ? /*#__PURE__*/React.createElement(EnvironmentGround, props) : props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal };\n", "/**\n * @monogrid/gainmap-js v3.0.5\n * With ❤️, by MONOGRID <rnd@monogrid.com>\n */\n\nimport { RGBAFormat, LinearFilter, ClampToEdgeWrapping, Scene, OrthographicCamera, HalfFloatType, FloatType, Mesh, PlaneGeometry, WebGLRenderTarget, UVMapping, WebGLRenderer, DataTexture, LinearSRGBColorSpace, ShaderMaterial, Texture, IntType, ShortType, ByteType, UnsignedIntType, UnsignedByteType, MeshBasicMaterial } from 'three';\n\nconst getBufferForType = (type, width, height) => {\n    let out;\n    switch (type) {\n        case UnsignedByteType:\n            out = new Uint8ClampedArray(width * height * 4);\n            break;\n        case HalfFloatType:\n            out = new Uint16Array(width * height * 4);\n            break;\n        case UnsignedIntType:\n            out = new Uint32Array(width * height * 4);\n            break;\n        case ByteType:\n            out = new Int8Array(width * height * 4);\n            break;\n        case ShortType:\n            out = new Int16Array(width * height * 4);\n            break;\n        case IntType:\n            out = new Int32Array(width * height * 4);\n            break;\n        case FloatType:\n            out = new Float32Array(width * height * 4);\n            break;\n        default:\n            throw new Error('Unsupported data type');\n    }\n    return out;\n};\nlet _canReadPixelsResult;\n/**\n * Test if this browser implementation can correctly read pixels from the specified\n * Render target type.\n *\n * Runs only once\n *\n * @param type\n * @param renderer\n * @param camera\n * @param renderTargetOptions\n * @returns\n */\nconst canReadPixels = (type, renderer, camera, renderTargetOptions) => {\n    if (_canReadPixelsResult !== undefined)\n        return _canReadPixelsResult;\n    const testRT = new WebGLRenderTarget(1, 1, renderTargetOptions);\n    renderer.setRenderTarget(testRT);\n    const mesh = new Mesh(new PlaneGeometry(), new MeshBasicMaterial({ color: 0xffffff }));\n    renderer.render(mesh, camera);\n    renderer.setRenderTarget(null);\n    const out = getBufferForType(type, testRT.width, testRT.height);\n    renderer.readRenderTargetPixels(testRT, 0, 0, testRT.width, testRT.height, out);\n    testRT.dispose();\n    mesh.geometry.dispose();\n    mesh.material.dispose();\n    _canReadPixelsResult = out[0] !== 0;\n    return _canReadPixelsResult;\n};\n/**\n * Utility class used for rendering a texture with a material\n *\n * @category Core\n * @group Core\n */\nclass QuadRenderer {\n    /**\n     * Constructs a new QuadRenderer\n     *\n     * @param options Parameters for this QuadRenderer\n     */\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n        this._rendererIsDisposable = false;\n        this._supportsReadPixels = true;\n        /**\n         * Renders the input texture using the specified material\n         */\n        this.render = () => {\n            this._renderer.setRenderTarget(this._renderTarget);\n            try {\n                this._renderer.render(this._scene, this._camera);\n            }\n            catch (e) {\n                this._renderer.setRenderTarget(null);\n                throw e;\n            }\n            this._renderer.setRenderTarget(null);\n        };\n        this._width = options.width;\n        this._height = options.height;\n        this._type = options.type;\n        this._colorSpace = options.colorSpace;\n        const rtOptions = {\n            // fixed options\n            format: RGBAFormat,\n            depthBuffer: false,\n            stencilBuffer: false,\n            // user options\n            type: this._type, // set in class property\n            colorSpace: this._colorSpace, // set in class property\n            anisotropy: ((_a = options.renderTargetOptions) === null || _a === void 0 ? void 0 : _a.anisotropy) !== undefined ? (_b = options.renderTargetOptions) === null || _b === void 0 ? void 0 : _b.anisotropy : 1,\n            generateMipmaps: ((_c = options.renderTargetOptions) === null || _c === void 0 ? void 0 : _c.generateMipmaps) !== undefined ? (_d = options.renderTargetOptions) === null || _d === void 0 ? void 0 : _d.generateMipmaps : false,\n            magFilter: ((_e = options.renderTargetOptions) === null || _e === void 0 ? void 0 : _e.magFilter) !== undefined ? (_f = options.renderTargetOptions) === null || _f === void 0 ? void 0 : _f.magFilter : LinearFilter,\n            minFilter: ((_g = options.renderTargetOptions) === null || _g === void 0 ? void 0 : _g.minFilter) !== undefined ? (_h = options.renderTargetOptions) === null || _h === void 0 ? void 0 : _h.minFilter : LinearFilter,\n            samples: ((_j = options.renderTargetOptions) === null || _j === void 0 ? void 0 : _j.samples) !== undefined ? (_k = options.renderTargetOptions) === null || _k === void 0 ? void 0 : _k.samples : undefined,\n            wrapS: ((_l = options.renderTargetOptions) === null || _l === void 0 ? void 0 : _l.wrapS) !== undefined ? (_m = options.renderTargetOptions) === null || _m === void 0 ? void 0 : _m.wrapS : ClampToEdgeWrapping,\n            wrapT: ((_o = options.renderTargetOptions) === null || _o === void 0 ? void 0 : _o.wrapT) !== undefined ? (_p = options.renderTargetOptions) === null || _p === void 0 ? void 0 : _p.wrapT : ClampToEdgeWrapping\n        };\n        this._material = options.material;\n        if (options.renderer) {\n            this._renderer = options.renderer;\n        }\n        else {\n            this._renderer = QuadRenderer.instantiateRenderer();\n            this._rendererIsDisposable = true;\n        }\n        this._scene = new Scene();\n        this._camera = new OrthographicCamera();\n        this._camera.position.set(0, 0, 10);\n        this._camera.left = -0.5;\n        this._camera.right = 0.5;\n        this._camera.top = 0.5;\n        this._camera.bottom = -0.5;\n        this._camera.updateProjectionMatrix();\n        if (!canReadPixels(this._type, this._renderer, this._camera, rtOptions)) {\n            let alternativeType;\n            switch (this._type) {\n                case HalfFloatType:\n                    alternativeType = this._renderer.extensions.has('EXT_color_buffer_float') ? FloatType : undefined;\n                    break;\n            }\n            if (alternativeType !== undefined) {\n                console.warn(`This browser does not support reading pixels from ${this._type} RenderTargets, switching to ${FloatType}`);\n                this._type = alternativeType;\n            }\n            else {\n                this._supportsReadPixels = false;\n                console.warn('This browser dos not support toArray or toDataTexture, calls to those methods will result in an error thrown');\n            }\n        }\n        this._quad = new Mesh(new PlaneGeometry(), this._material);\n        this._quad.geometry.computeBoundingBox();\n        this._scene.add(this._quad);\n        this._renderTarget = new WebGLRenderTarget(this.width, this.height, rtOptions);\n        this._renderTarget.texture.mapping = ((_q = options.renderTargetOptions) === null || _q === void 0 ? void 0 : _q.mapping) !== undefined ? (_r = options.renderTargetOptions) === null || _r === void 0 ? void 0 : _r.mapping : UVMapping;\n    }\n    /**\n     * Instantiates a temporary renderer\n     *\n     * @returns\n     */\n    static instantiateRenderer() {\n        const renderer = new WebGLRenderer();\n        renderer.setSize(128, 128);\n        // renderer.outputColorSpace = SRGBColorSpace\n        // renderer.toneMapping = LinearToneMapping\n        // renderer.debug.checkShaderErrors = false\n        // this._rendererIsDisposable = true\n        return renderer;\n    }\n    /**\n     * Obtains a Buffer containing the rendered texture.\n     *\n     * @throws Error if the browser cannot read pixels from this RenderTarget type.\n     * @returns a TypedArray containing RGBA values from this renderer\n     */\n    toArray() {\n        if (!this._supportsReadPixels)\n            throw new Error('Can\\'t read pixels in this browser');\n        const out = getBufferForType(this._type, this._width, this._height);\n        this._renderer.readRenderTargetPixels(this._renderTarget, 0, 0, this._width, this._height, out);\n        return out;\n    }\n    /**\n     * Performs a readPixel operation in the renderTarget\n     * and returns a DataTexture containing the read data\n     *\n     * @params options\n     * @returns\n     */\n    toDataTexture(options) {\n        const returnValue = new DataTexture(\n        // fixed values\n        this.toArray(), this.width, this.height, RGBAFormat, this._type, \n        // user values\n        (options === null || options === void 0 ? void 0 : options.mapping) || UVMapping, (options === null || options === void 0 ? void 0 : options.wrapS) || ClampToEdgeWrapping, (options === null || options === void 0 ? void 0 : options.wrapT) || ClampToEdgeWrapping, (options === null || options === void 0 ? void 0 : options.magFilter) || LinearFilter, (options === null || options === void 0 ? void 0 : options.minFilter) || LinearFilter, (options === null || options === void 0 ? void 0 : options.anisotropy) || 1, \n        // fixed value\n        LinearSRGBColorSpace);\n        // set this afterwards, we can't set it in constructor\n        returnValue.generateMipmaps = (options === null || options === void 0 ? void 0 : options.generateMipmaps) !== undefined ? options === null || options === void 0 ? void 0 : options.generateMipmaps : false;\n        return returnValue;\n    }\n    /**\n     * If using a disposable renderer, it will dispose it.\n     */\n    disposeOnDemandRenderer() {\n        this._renderer.setRenderTarget(null);\n        if (this._rendererIsDisposable) {\n            this._renderer.dispose();\n            this._renderer.forceContextLoss();\n        }\n    }\n    /**\n     * Will dispose of **all** assets used by this renderer.\n     *\n     *\n     * @param disposeRenderTarget will dispose of the renderTarget which will not be usable later\n     * set this to true if you passed the `renderTarget.texture` to a `PMREMGenerator`\n     * or are otherwise done with it.\n     *\n     * @example\n     * ```js\n     * const loader = new HDRJPGLoader(renderer)\n     * const result = await loader.loadAsync('gainmap.jpeg')\n     * const mesh = new Mesh(geometry, new MeshBasicMaterial({ map: result.renderTarget.texture }) )\n     * // DO NOT dispose the renderTarget here,\n     * // it is used directly in the material\n     * result.dispose()\n     * ```\n     *\n     * @example\n     * ```js\n     * const loader = new HDRJPGLoader(renderer)\n     * const pmremGenerator = new PMREMGenerator( renderer );\n     * const result = await loader.loadAsync('gainmap.jpeg')\n     * const envMap = pmremGenerator.fromEquirectangular(result.renderTarget.texture)\n     * const mesh = new Mesh(geometry, new MeshStandardMaterial({ envMap }) )\n     * // renderTarget can be disposed here\n     * // because it was used to generate a PMREM texture\n     * result.dispose(true)\n     * ```\n     */\n    dispose(disposeRenderTarget) {\n        this.disposeOnDemandRenderer();\n        if (disposeRenderTarget) {\n            this.renderTarget.dispose();\n        }\n        // dispose shader material texture uniforms\n        if (this.material instanceof ShaderMaterial) {\n            Object.values(this.material.uniforms).forEach(v => {\n                if (v.value instanceof Texture)\n                    v.value.dispose();\n            });\n        }\n        // dispose other material properties\n        Object.values(this.material).forEach(value => {\n            if (value instanceof Texture)\n                value.dispose();\n        });\n        this.material.dispose();\n        this._quad.geometry.dispose();\n    }\n    /**\n     * Width of the texture\n     */\n    get width() { return this._width; }\n    set width(value) {\n        this._width = value;\n        this._renderTarget.setSize(this._width, this._height);\n    }\n    /**\n     * Height of the texture\n     */\n    get height() { return this._height; }\n    set height(value) {\n        this._height = value;\n        this._renderTarget.setSize(this._width, this._height);\n    }\n    /**\n     * The renderer used\n     */\n    get renderer() { return this._renderer; }\n    /**\n     * The `WebGLRenderTarget` used.\n     */\n    get renderTarget() { return this._renderTarget; }\n    set renderTarget(value) {\n        this._renderTarget = value;\n        this._width = value.width;\n        this._height = value.height;\n        // this._type = value.texture.type\n    }\n    /**\n     * The `Material` used.\n     */\n    get material() { return this._material; }\n    /**\n     *\n     */\n    get type() { return this._type; }\n    get colorSpace() { return this._colorSpace; }\n}\n\nexport { QuadRenderer as Q };\n", "/**\n * @monogrid/gainmap-js v3.0.5\n * With ❤️, by MONOGRID <rnd@monogrid.com>\n */\n\nimport { Q as QuadRenderer } from './QuadRenderer-6HrRQdJM.js';\nimport { ShaderMaterial, Vector3, NoBlending, SRGBColorSpace, LinearSRGBColorSpace, HalfFloatType, Loader, LoadingManager, Texture, UVMapping, ClampToEdgeWrapping, LinearFilter, LinearMipMapLinearFilter, RGBAFormat, UnsignedByteType, FileLoader } from 'three';\n\nconst vertexShader = /* glsl */ `\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n`;\nconst fragmentShader = /* glsl */ `\n// min half float value\n#define HALF_FLOAT_MIN vec3( -65504, -65504, -65504 )\n// max half float value\n#define HALF_FLOAT_MAX vec3( 65504, 65504, 65504 )\n\nuniform sampler2D sdr;\nuniform sampler2D gainMap;\nuniform vec3 gamma;\nuniform vec3 offsetHdr;\nuniform vec3 offsetSdr;\nuniform vec3 gainMapMin;\nuniform vec3 gainMapMax;\nuniform float weightFactor;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec3 rgb = texture2D( sdr, vUv ).rgb;\n  vec3 recovery = texture2D( gainMap, vUv ).rgb;\n  vec3 logRecovery = pow( recovery, gamma );\n  vec3 logBoost = gainMapMin * ( 1.0 - logRecovery ) + gainMapMax * logRecovery;\n  vec3 hdrColor = (rgb + offsetSdr) * exp2( logBoost * weightFactor ) - offsetHdr;\n  vec3 clampedHdrColor = max( HALF_FLOAT_MIN, min( HALF_FLOAT_MAX, hdrColor ));\n  gl_FragColor = vec4( clampedHdrColor , 1.0 );\n}\n`;\n/**\n * A Material which is able to decode the Gainmap into a full HDR Representation\n *\n * @category Materials\n * @group Materials\n */\nclass GainMapDecoderMaterial extends ShaderMaterial {\n    /**\n     *\n     * @param params\n     */\n    constructor({ gamma, offsetHdr, offsetSdr, gainMapMin, gainMapMax, maxDisplayBoost, hdrCapacityMin, hdrCapacityMax, sdr, gainMap }) {\n        super({\n            name: 'GainMapDecoderMaterial',\n            vertexShader,\n            fragmentShader,\n            uniforms: {\n                sdr: { value: sdr },\n                gainMap: { value: gainMap },\n                gamma: { value: new Vector3(1.0 / gamma[0], 1.0 / gamma[1], 1.0 / gamma[2]) },\n                offsetHdr: { value: new Vector3().fromArray(offsetHdr) },\n                offsetSdr: { value: new Vector3().fromArray(offsetSdr) },\n                gainMapMin: { value: new Vector3().fromArray(gainMapMin) },\n                gainMapMax: { value: new Vector3().fromArray(gainMapMax) },\n                weightFactor: {\n                    value: (Math.log2(maxDisplayBoost) - hdrCapacityMin) / (hdrCapacityMax - hdrCapacityMin)\n                }\n            },\n            blending: NoBlending,\n            depthTest: false,\n            depthWrite: false\n        });\n        this._maxDisplayBoost = maxDisplayBoost;\n        this._hdrCapacityMin = hdrCapacityMin;\n        this._hdrCapacityMax = hdrCapacityMax;\n        this.needsUpdate = true;\n        this.uniformsNeedUpdate = true;\n    }\n    get sdr() { return this.uniforms.sdr.value; }\n    set sdr(value) { this.uniforms.sdr.value = value; }\n    get gainMap() { return this.uniforms.gainMap.value; }\n    set gainMap(value) { this.uniforms.gainMap.value = value; }\n    /**\n     * @see {@link GainMapMetadata.offsetHdr}\n     */\n    get offsetHdr() { return this.uniforms.offsetHdr.value.toArray(); }\n    set offsetHdr(value) { this.uniforms.offsetHdr.value.fromArray(value); }\n    /**\n     * @see {@link GainMapMetadata.offsetSdr}\n     */\n    get offsetSdr() { return this.uniforms.offsetSdr.value.toArray(); }\n    set offsetSdr(value) { this.uniforms.offsetSdr.value.fromArray(value); }\n    /**\n     * @see {@link GainMapMetadata.gainMapMin}\n     */\n    get gainMapMin() { return this.uniforms.gainMapMin.value.toArray(); }\n    set gainMapMin(value) { this.uniforms.gainMapMin.value.fromArray(value); }\n    /**\n     * @see {@link GainMapMetadata.gainMapMax}\n     */\n    get gainMapMax() { return this.uniforms.gainMapMax.value.toArray(); }\n    set gainMapMax(value) { this.uniforms.gainMapMax.value.fromArray(value); }\n    /**\n     * @see {@link GainMapMetadata.gamma}\n     */\n    get gamma() {\n        const g = this.uniforms.gamma.value;\n        return [1 / g.x, 1 / g.y, 1 / g.z];\n    }\n    set gamma(value) {\n        const g = this.uniforms.gamma.value;\n        g.x = 1.0 / value[0];\n        g.y = 1.0 / value[1];\n        g.z = 1.0 / value[2];\n    }\n    /**\n     * @see {@link GainMapMetadata.hdrCapacityMin}\n     * @remarks Logarithmic space\n     */\n    get hdrCapacityMin() { return this._hdrCapacityMin; }\n    set hdrCapacityMin(value) {\n        this._hdrCapacityMin = value;\n        this.calculateWeight();\n    }\n    /**\n     * @see {@link GainMapMetadata.hdrCapacityMin}\n     * @remarks Logarithmic space\n     */\n    get hdrCapacityMax() { return this._hdrCapacityMax; }\n    set hdrCapacityMax(value) {\n        this._hdrCapacityMax = value;\n        this.calculateWeight();\n    }\n    /**\n     * @see {@link GainmapDecodingParameters.maxDisplayBoost}\n     * @remarks Non Logarithmic space\n     */\n    get maxDisplayBoost() { return this._maxDisplayBoost; }\n    set maxDisplayBoost(value) {\n        this._maxDisplayBoost = Math.max(1, Math.min(65504, value));\n        this.calculateWeight();\n    }\n    calculateWeight() {\n        const val = (Math.log2(this._maxDisplayBoost) - this._hdrCapacityMin) / (this._hdrCapacityMax - this._hdrCapacityMin);\n        this.uniforms.weightFactor.value = Math.max(0, Math.min(1, val));\n    }\n}\n\n/**\n * Decodes a gain map using a WebGLRenderTarget\n *\n * @category Decoding Functions\n * @group Decoding Functions\n * @example\n * import { decode } from '@monogrid/gainmap-js'\n * import {\n *   Mesh,\n *   MeshBasicMaterial,\n *   PerspectiveCamera,\n *   PlaneGeometry,\n *   Scene,\n *   TextureLoader,\n *   WebGLRenderer\n * } from 'three'\n *\n * const renderer = new WebGLRenderer()\n *\n * const textureLoader = new TextureLoader()\n *\n * // load SDR Representation\n * const sdr = await textureLoader.loadAsync('sdr.jpg')\n * // load Gain map recovery image\n * const gainMap = await textureLoader.loadAsync('gainmap.jpg')\n * // load metadata\n * const metadata = await (await fetch('metadata.json')).json()\n *\n * const result = await decode({\n *   sdr,\n *   gainMap,\n *   // this allows to use `result.renderTarget.texture` directly\n *   renderer,\n *   // this will restore the full HDR range\n *   maxDisplayBoost: Math.pow(2, metadata.hdrCapacityMax),\n *   ...metadata\n * })\n *\n * const scene = new Scene()\n * // `result` can be used to populate a Texture\n * const mesh = new Mesh(\n *   new PlaneGeometry(),\n *   new MeshBasicMaterial({ map: result.renderTarget.texture })\n * )\n * scene.add(mesh)\n * renderer.render(scene, new PerspectiveCamera())\n *\n * // result must be manually disposed\n * // when you are done using it\n * result.dispose()\n *\n * @param params\n * @returns\n * @throws {Error} if the WebGLRenderer fails to render the gain map\n */\nconst decode = (params) => {\n    const { sdr, gainMap, renderer } = params;\n    if (sdr.colorSpace !== SRGBColorSpace) {\n        console.warn('SDR Colorspace needs to be *SRGBColorSpace*, setting it automatically');\n        sdr.colorSpace = SRGBColorSpace;\n    }\n    sdr.needsUpdate = true;\n    if (gainMap.colorSpace !== LinearSRGBColorSpace) {\n        console.warn('Gainmap Colorspace needs to be *LinearSRGBColorSpace*, setting it automatically');\n        gainMap.colorSpace = LinearSRGBColorSpace;\n    }\n    gainMap.needsUpdate = true;\n    const material = new GainMapDecoderMaterial({\n        ...params,\n        sdr,\n        gainMap\n    });\n    const quadRenderer = new QuadRenderer({\n        // TODO: three types are generic, eslint complains here, see how we can solve\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        width: sdr.image.width,\n        // TODO: three types are generic, eslint complains here, see how we can solve\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        height: sdr.image.height,\n        type: HalfFloatType,\n        colorSpace: LinearSRGBColorSpace,\n        material,\n        renderer,\n        renderTargetOptions: params.renderTargetOptions\n    });\n    try {\n        quadRenderer.render();\n    }\n    catch (e) {\n        quadRenderer.disposeOnDemandRenderer();\n        throw e;\n    }\n    return quadRenderer;\n};\n\nclass GainMapNotFoundError extends Error {\n}\n\nclass XMPMetadataNotFoundError extends Error {\n}\n\nconst getAttribute = (description, name, defaultValue) => {\n    var _a;\n    let returnValue;\n    const parsedValue = (_a = description.attributes.getNamedItem(name)) === null || _a === void 0 ? void 0 : _a.nodeValue;\n    if (!parsedValue) {\n        const node = description.getElementsByTagName(name)[0];\n        if (node) {\n            const values = node.getElementsByTagName('rdf:li');\n            if (values.length === 3) {\n                returnValue = Array.from(values).map(v => v.innerHTML);\n            }\n            else {\n                throw new Error(`Gainmap metadata contains an array of items for ${name} but its length is not 3`);\n            }\n        }\n        else {\n            if (defaultValue)\n                return defaultValue;\n            else\n                throw new Error(`Can't find ${name} in gainmap metadata`);\n        }\n    }\n    else {\n        returnValue = parsedValue;\n    }\n    return returnValue;\n};\n/**\n *\n * @param input\n * @returns\n */\nconst extractXMP = (input) => {\n    var _a, _b;\n    let str;\n    // support node test environment\n    if (typeof TextDecoder !== 'undefined')\n        str = new TextDecoder().decode(input);\n    else\n        str = input.toString();\n    let start = str.indexOf('<x:xmpmeta');\n    const parser = new DOMParser();\n    while (start !== -1) {\n        const end = str.indexOf('x:xmpmeta>', start);\n        str.slice(start, end + 10);\n        const xmpBlock = str.slice(start, end + 10);\n        try {\n            const xmlDocument = parser.parseFromString(xmpBlock, 'text/xml');\n            const description = xmlDocument.getElementsByTagName('rdf:Description')[0];\n            const gainMapMin = getAttribute(description, 'hdrgm:GainMapMin', '0');\n            const gainMapMax = getAttribute(description, 'hdrgm:GainMapMax');\n            const gamma = getAttribute(description, 'hdrgm:Gamma', '1');\n            const offsetSDR = getAttribute(description, 'hdrgm:OffsetSDR', '0.015625');\n            const offsetHDR = getAttribute(description, 'hdrgm:OffsetHDR', '0.015625');\n            let hdrCapacityMin = (_a = description.attributes.getNamedItem('hdrgm:HDRCapacityMin')) === null || _a === void 0 ? void 0 : _a.nodeValue;\n            if (!hdrCapacityMin)\n                hdrCapacityMin = '0';\n            const hdrCapacityMax = (_b = description.attributes.getNamedItem('hdrgm:HDRCapacityMax')) === null || _b === void 0 ? void 0 : _b.nodeValue;\n            if (!hdrCapacityMax)\n                throw new Error('Incomplete gainmap metadata');\n            return {\n                gainMapMin: Array.isArray(gainMapMin) ? gainMapMin.map(v => parseFloat(v)) : [parseFloat(gainMapMin), parseFloat(gainMapMin), parseFloat(gainMapMin)],\n                gainMapMax: Array.isArray(gainMapMax) ? gainMapMax.map(v => parseFloat(v)) : [parseFloat(gainMapMax), parseFloat(gainMapMax), parseFloat(gainMapMax)],\n                gamma: Array.isArray(gamma) ? gamma.map(v => parseFloat(v)) : [parseFloat(gamma), parseFloat(gamma), parseFloat(gamma)],\n                offsetSdr: Array.isArray(offsetSDR) ? offsetSDR.map(v => parseFloat(v)) : [parseFloat(offsetSDR), parseFloat(offsetSDR), parseFloat(offsetSDR)],\n                offsetHdr: Array.isArray(offsetHDR) ? offsetHDR.map(v => parseFloat(v)) : [parseFloat(offsetHDR), parseFloat(offsetHDR), parseFloat(offsetHDR)],\n                hdrCapacityMin: parseFloat(hdrCapacityMin),\n                hdrCapacityMax: parseFloat(hdrCapacityMax)\n            };\n        }\n        catch (e) {\n        }\n        start = str.indexOf('<x:xmpmeta', end);\n    }\n};\n\n/**\n * MPF Extractor (Multi Picture Format Extractor)\n * By Henrik S Nilsson 2019\n *\n * Extracts images stored in images based on the MPF format (found here: https://www.cipa.jp/e/std/std-sec.html\n * under \"CIPA DC-007-Translation-2021 Multi-Picture Format\"\n *\n * Overly commented, and without intention of being complete or production ready.\n * Created to extract depth maps from iPhone images, and to learn about image metadata.\n * Kudos to: Phil Harvey (exiftool), Jaume Sanchez (android-lens-blur-depth-extractor)\n */\nclass MPFExtractor {\n    constructor(options) {\n        this.options = {\n            debug: options && options.debug !== undefined ? options.debug : false,\n            extractFII: options && options.extractFII !== undefined ? options.extractFII : true,\n            extractNonFII: options && options.extractNonFII !== undefined ? options.extractNonFII : true\n        };\n    }\n    extract(imageArrayBuffer) {\n        return new Promise((resolve, reject) => {\n            const debug = this.options.debug;\n            const dataView = new DataView(imageArrayBuffer.buffer);\n            // If you're executing this line on a big endian machine, it'll be reversed.\n            // bigEnd further down though, refers to the endianness of the image itself.\n            if (dataView.getUint16(0) !== 0xffd8) {\n                reject(new Error('Not a valid jpeg'));\n                return;\n            }\n            const length = dataView.byteLength;\n            let offset = 2;\n            let loops = 0;\n            let marker; // APP# marker\n            while (offset < length) {\n                if (++loops > 250) {\n                    reject(new Error(`Found no marker after ${loops} loops 😵`));\n                    return;\n                }\n                if (dataView.getUint8(offset) !== 0xff) {\n                    reject(new Error(`Not a valid marker at offset 0x${offset.toString(16)}, found: 0x${dataView.getUint8(offset).toString(16)}`));\n                    return;\n                }\n                marker = dataView.getUint8(offset + 1);\n                if (debug)\n                    console.log(`Marker: ${marker.toString(16)}`);\n                if (marker === 0xe2) {\n                    if (debug)\n                        console.log('Found APP2 marker (0xffe2)');\n                    // Works for iPhone 8 Plus, X, and XSMax. Or any photos of MPF format.\n                    // Great way to visualize image information in html is using Exiftool. E.g.:\n                    // ./exiftool.exe -htmldump -wantTrailer photo.jpg > photo.html\n                    const formatPt = offset + 4;\n                    /*\n                     *  Structure of the MP Format Identifier\n                     *\n                     *  Offset Addr.  | Code (Hex)  | Description\n                     *  +00             ff            Marker Prefix      <-- offset\n                     *  +01             e2            APP2\n                     *  +02             #n            APP2 Field Length\n                     *  +03             #n            APP2 Field Length\n                     *  +04             4d            'M'                <-- formatPt\n                     *  +05             50            'P'\n                     *  +06             46            'F'\n                     *  +07             00            NULL\n                     *                                                   <-- tiffOffset\n                     */\n                    if (dataView.getUint32(formatPt) === 0x4d504600) {\n                        // Found MPF tag, so we start dig out sub images\n                        const tiffOffset = formatPt + 4;\n                        let bigEnd; // Endianness from TIFF header\n                        // Test for TIFF validity and endianness\n                        // 0x4949 and 0x4D4D ('II' and 'MM') marks Little Endian and Big Endian\n                        if (dataView.getUint16(tiffOffset) === 0x4949) {\n                            bigEnd = false;\n                        }\n                        else if (dataView.getUint16(tiffOffset) === 0x4d4d) {\n                            bigEnd = true;\n                        }\n                        else {\n                            reject(new Error('No valid endianness marker found in TIFF header'));\n                            return;\n                        }\n                        if (dataView.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\n                            reject(new Error('Not valid TIFF data! (no 0x002A marker)'));\n                            return;\n                        }\n                        // 32 bit number stating the offset from the start of the 8 Byte MP Header\n                        // to MP Index IFD Least possible value is thus 8 (means 0 offset)\n                        const firstIFDOffset = dataView.getUint32(tiffOffset + 4, !bigEnd);\n                        if (firstIFDOffset < 0x00000008) {\n                            reject(new Error('Not valid TIFF data! (First offset less than 8)'));\n                            return;\n                        }\n                        // Move ahead to MP Index IFD\n                        // Assume we're at the first IFD, so firstIFDOffset points to\n                        // MP Index IFD and not MP Attributes IFD. (If we try extract from a sub image,\n                        // we fail silently here due to this assumption)\n                        // Count (2 Byte) | MP Index Fields a.k.a. MP Entries (count * 12 Byte) | Offset of Next IFD (4 Byte)\n                        const dirStart = tiffOffset + firstIFDOffset; // Start of IFD (Image File Directory)\n                        const count = dataView.getUint16(dirStart, !bigEnd); // Count of MPEntries (2 Byte)\n                        // Extract info from MPEntries (starting after Count)\n                        const entriesStart = dirStart + 2;\n                        let numberOfImages = 0;\n                        for (let i = entriesStart; i < entriesStart + 12 * count; i += 12) {\n                            // Each entry is 12 Bytes long\n                            // Check MP Index IFD tags, here we only take tag 0xb001 = Number of images\n                            if (dataView.getUint16(i, !bigEnd) === 0xb001) {\n                                // stored in Last 4 bytes of its 12 Byte entry.\n                                numberOfImages = dataView.getUint32(i + 8, !bigEnd);\n                            }\n                        }\n                        const nextIFDOffsetLen = 4; // 4 Byte offset field that appears after MP Index IFD tags\n                        const MPImageListValPt = dirStart + 2 + count * 12 + nextIFDOffsetLen;\n                        const images = [];\n                        for (let i = MPImageListValPt; i < MPImageListValPt + numberOfImages * 16; i += 16) {\n                            const image = {\n                                MPType: dataView.getUint32(i, !bigEnd),\n                                size: dataView.getUint32(i + 4, !bigEnd),\n                                // This offset is specified relative to the address of the MP Endian\n                                // field in the MP Header, unless the image is a First Individual Image,\n                                // in which case the value of the offset shall be NULL (0x00000000).\n                                dataOffset: dataView.getUint32(i + 8, !bigEnd),\n                                dependantImages: dataView.getUint32(i + 12, !bigEnd),\n                                start: -1,\n                                end: -1,\n                                isFII: false\n                            };\n                            if (!image.dataOffset) {\n                                // dataOffset is 0x00000000 for First Individual Image\n                                image.start = 0;\n                                image.isFII = true;\n                            }\n                            else {\n                                image.start = tiffOffset + image.dataOffset;\n                                image.isFII = false;\n                            }\n                            image.end = image.start + image.size;\n                            images.push(image);\n                        }\n                        if (this.options.extractNonFII && images.length) {\n                            const bufferBlob = new Blob([dataView]);\n                            const imgs = [];\n                            for (const image of images) {\n                                if (image.isFII && !this.options.extractFII) {\n                                    continue; // Skip FII\n                                }\n                                const imageBlob = bufferBlob.slice(image.start, image.end + 1, 'image/jpeg');\n                                // we don't need this\n                                // const imageUrl = URL.createObjectURL(imageBlob)\n                                // image.img = document.createElement('img')\n                                // image.img.src = imageUrl\n                                imgs.push(imageBlob);\n                            }\n                            resolve(imgs);\n                        }\n                    }\n                }\n                offset += 2 + dataView.getUint16(offset + 2);\n            }\n        });\n    }\n}\n\n/**\n * Extracts XMP Metadata and the gain map recovery image\n * from a single JPEG file.\n *\n * @category Decoding Functions\n * @group Decoding Functions\n * @param jpegFile an `Uint8Array` containing and encoded JPEG file\n * @returns an sdr `Uint8Array` compressed in JPEG, a gainMap `Uint8Array` compressed in JPEG and the XMP parsed XMP metadata\n * @throws Error if XMP Metadata is not found\n * @throws Error if Gain map image is not found\n * @example\n * import { FileLoader } from 'three'\n * import { extractGainmapFromJPEG } from '@monogrid/gainmap-js'\n *\n * const jpegFile = await new FileLoader()\n *  .setResponseType('arraybuffer')\n *  .loadAsync('image.jpg')\n *\n * const { sdr, gainMap, metadata } = extractGainmapFromJPEG(jpegFile)\n */\nconst extractGainmapFromJPEG = async (jpegFile) => {\n    const metadata = extractXMP(jpegFile);\n    if (!metadata)\n        throw new XMPMetadataNotFoundError('Gain map XMP metadata not found');\n    const mpfExtractor = new MPFExtractor({ extractFII: true, extractNonFII: true });\n    const images = await mpfExtractor.extract(jpegFile);\n    if (images.length !== 2)\n        throw new GainMapNotFoundError('Gain map recovery image not found');\n    return {\n        sdr: new Uint8Array(await images[0].arrayBuffer()),\n        gainMap: new Uint8Array(await images[1].arrayBuffer()),\n        metadata\n    };\n};\n\n/**\n * private function, async get image from blob\n *\n * @param blob\n * @returns\n */\nconst getHTMLImageFromBlob = (blob) => {\n    return new Promise((resolve, reject) => {\n        const img = document.createElement('img');\n        img.onload = () => { resolve(img); };\n        img.onerror = (e) => { reject(e); };\n        img.src = URL.createObjectURL(blob);\n    });\n};\n\nclass LoaderBase extends Loader {\n    /**\n     *\n     * @param renderer\n     * @param manager\n     */\n    constructor(renderer, manager) {\n        super(manager);\n        if (renderer)\n            this._renderer = renderer;\n        this._internalLoadingManager = new LoadingManager();\n    }\n    /**\n     * Specify the renderer to use when rendering the gain map\n     *\n     * @param renderer\n     * @returns\n     */\n    setRenderer(renderer) {\n        this._renderer = renderer;\n        return this;\n    }\n    /**\n     * Specify the renderTarget options to use when rendering the gain map\n     *\n     * @param options\n     * @returns\n     */\n    setRenderTargetOptions(options) {\n        this._renderTargetOptions = options;\n        return this;\n    }\n    /**\n     * @private\n     * @returns\n     */\n    prepareQuadRenderer() {\n        if (!this._renderer)\n            console.warn('WARNING: An existing WebGL Renderer was not passed to this Loader constructor or in setRenderer, the result of this Loader will need to be converted to a Data Texture with toDataTexture() before you can use it in your renderer.');\n        // temporary values\n        const material = new GainMapDecoderMaterial({\n            gainMapMax: [1, 1, 1],\n            gainMapMin: [0, 0, 0],\n            gamma: [1, 1, 1],\n            offsetHdr: [1, 1, 1],\n            offsetSdr: [1, 1, 1],\n            hdrCapacityMax: 1,\n            hdrCapacityMin: 0,\n            maxDisplayBoost: 1,\n            gainMap: new Texture(),\n            sdr: new Texture()\n        });\n        return new QuadRenderer({\n            width: 16,\n            height: 16,\n            type: HalfFloatType,\n            colorSpace: LinearSRGBColorSpace,\n            material,\n            renderer: this._renderer,\n            renderTargetOptions: this._renderTargetOptions\n        });\n    }\n    /**\n   * @private\n   * @param quadRenderer\n   * @param metadata\n   * @param sdrBuffer\n   * @param gainMapBuffer\n   */\n    async render(quadRenderer, metadata, sdrBuffer, gainMapBuffer) {\n        // this is optional, will render a black gain-map if not present\n        const gainMapBlob = gainMapBuffer ? new Blob([gainMapBuffer], { type: 'image/jpeg' }) : undefined;\n        const sdrBlob = new Blob([sdrBuffer], { type: 'image/jpeg' });\n        let sdrImage;\n        let gainMapImage;\n        let needsFlip = false;\n        if (typeof createImageBitmap === 'undefined') {\n            const res = await Promise.all([\n                gainMapBlob ? getHTMLImageFromBlob(gainMapBlob) : Promise.resolve(undefined),\n                getHTMLImageFromBlob(sdrBlob)\n            ]);\n            gainMapImage = res[0];\n            sdrImage = res[1];\n            needsFlip = true;\n        }\n        else {\n            const res = await Promise.all([\n                gainMapBlob ? createImageBitmap(gainMapBlob, { imageOrientation: 'flipY' }) : Promise.resolve(undefined),\n                createImageBitmap(sdrBlob, { imageOrientation: 'flipY' })\n            ]);\n            gainMapImage = res[0];\n            sdrImage = res[1];\n        }\n        const gainMap = new Texture(gainMapImage || new ImageData(2, 2), UVMapping, ClampToEdgeWrapping, ClampToEdgeWrapping, LinearFilter, LinearMipMapLinearFilter, RGBAFormat, UnsignedByteType, 1, LinearSRGBColorSpace);\n        gainMap.flipY = needsFlip;\n        gainMap.needsUpdate = true;\n        const sdr = new Texture(sdrImage, UVMapping, ClampToEdgeWrapping, ClampToEdgeWrapping, LinearFilter, LinearMipMapLinearFilter, RGBAFormat, UnsignedByteType, 1, SRGBColorSpace);\n        sdr.flipY = needsFlip;\n        sdr.needsUpdate = true;\n        quadRenderer.width = sdrImage.width;\n        quadRenderer.height = sdrImage.height;\n        quadRenderer.material.gainMap = gainMap;\n        quadRenderer.material.sdr = sdr;\n        quadRenderer.material.gainMapMin = metadata.gainMapMin;\n        quadRenderer.material.gainMapMax = metadata.gainMapMax;\n        quadRenderer.material.offsetHdr = metadata.offsetHdr;\n        quadRenderer.material.offsetSdr = metadata.offsetSdr;\n        quadRenderer.material.gamma = metadata.gamma;\n        quadRenderer.material.hdrCapacityMin = metadata.hdrCapacityMin;\n        quadRenderer.material.hdrCapacityMax = metadata.hdrCapacityMax;\n        quadRenderer.material.maxDisplayBoost = Math.pow(2, metadata.hdrCapacityMax);\n        quadRenderer.material.needsUpdate = true;\n        quadRenderer.render();\n    }\n}\n\n/**\n * A Three.js Loader for the gain map format.\n *\n * @category Loaders\n * @group Loaders\n *\n * @example\n * import { GainMapLoader } from '@monogrid/gainmap-js'\n * import {\n *   EquirectangularReflectionMapping,\n *   LinearFilter,\n *   Mesh,\n *   MeshBasicMaterial,\n *   PerspectiveCamera,\n *   PlaneGeometry,\n *   Scene,\n *   WebGLRenderer\n * } from 'three'\n *\n * const renderer = new WebGLRenderer()\n *\n * const loader = new GainMapLoader(renderer)\n *\n * const result = await loader.loadAsync(['sdr.jpeg', 'gainmap.jpeg', 'metadata.json'])\n * // `result` can be used to populate a Texture\n *\n * const scene = new Scene()\n * const mesh = new Mesh(\n *   new PlaneGeometry(),\n *   new MeshBasicMaterial({ map: result.renderTarget.texture })\n * )\n * scene.add(mesh)\n * renderer.render(scene, new PerspectiveCamera())\n *\n * // Starting from three.js r159\n * // `result.renderTarget.texture` can\n * // also be used as Equirectangular scene background\n * //\n * // it was previously needed to convert it\n * // to a DataTexture with `result.toDataTexture()`\n * scene.background = result.renderTarget.texture\n * scene.background.mapping = EquirectangularReflectionMapping\n *\n * // result must be manually disposed\n * // when you are done using it\n * result.dispose()\n *\n */\nclass GainMapLoader extends LoaderBase {\n    /**\n     * Loads a gainmap using separate data\n     * * sdr image\n     * * gain map image\n     * * metadata json\n     *\n     * useful for webp gain maps\n     *\n     * @param urls An array in the form of [sdr.jpg, gainmap.jpg, metadata.json]\n     * @param onLoad Load complete callback, will receive the result\n     * @param onProgress Progress callback, will receive a {@link ProgressEvent}\n     * @param onError Error callback\n     * @returns\n     */\n    load([sdrUrl, gainMapUrl, metadataUrl], onLoad, onProgress, onError) {\n        const quadRenderer = this.prepareQuadRenderer();\n        let sdr;\n        let gainMap;\n        let metadata;\n        const loadCheck = async () => {\n            if (sdr && gainMap && metadata) {\n                // solves #16\n                try {\n                    await this.render(quadRenderer, metadata, sdr, gainMap);\n                }\n                catch (error) {\n                    this.manager.itemError(sdrUrl);\n                    this.manager.itemError(gainMapUrl);\n                    this.manager.itemError(metadataUrl);\n                    if (typeof onError === 'function')\n                        onError(error);\n                    quadRenderer.disposeOnDemandRenderer();\n                    return;\n                }\n                if (typeof onLoad === 'function')\n                    onLoad(quadRenderer);\n                this.manager.itemEnd(sdrUrl);\n                this.manager.itemEnd(gainMapUrl);\n                this.manager.itemEnd(metadataUrl);\n                quadRenderer.disposeOnDemandRenderer();\n            }\n        };\n        let sdrLengthComputable = true;\n        let sdrTotal = 0;\n        let sdrLoaded = 0;\n        let gainMapLengthComputable = true;\n        let gainMapTotal = 0;\n        let gainMapLoaded = 0;\n        let metadataLengthComputable = true;\n        let metadataTotal = 0;\n        let metadataLoaded = 0;\n        const progressHandler = () => {\n            if (typeof onProgress === 'function') {\n                const total = sdrTotal + gainMapTotal + metadataTotal;\n                const loaded = sdrLoaded + gainMapLoaded + metadataLoaded;\n                const lengthComputable = sdrLengthComputable && gainMapLengthComputable && metadataLengthComputable;\n                onProgress(new ProgressEvent('progress', { lengthComputable, loaded, total }));\n            }\n        };\n        this.manager.itemStart(sdrUrl);\n        this.manager.itemStart(gainMapUrl);\n        this.manager.itemStart(metadataUrl);\n        const sdrLoader = new FileLoader(this._internalLoadingManager);\n        sdrLoader.setResponseType('arraybuffer');\n        sdrLoader.setRequestHeader(this.requestHeader);\n        sdrLoader.setPath(this.path);\n        sdrLoader.setWithCredentials(this.withCredentials);\n        sdrLoader.load(sdrUrl, async (buffer) => {\n            /* istanbul ignore if\n             this condition exists only because of three.js types + strict mode\n            */\n            if (typeof buffer === 'string')\n                throw new Error('Invalid sdr buffer');\n            sdr = buffer;\n            await loadCheck();\n        }, (e) => {\n            sdrLengthComputable = e.lengthComputable;\n            sdrLoaded = e.loaded;\n            sdrTotal = e.total;\n            progressHandler();\n        }, (error) => {\n            this.manager.itemError(sdrUrl);\n            if (typeof onError === 'function')\n                onError(error);\n        });\n        const gainMapLoader = new FileLoader(this._internalLoadingManager);\n        gainMapLoader.setResponseType('arraybuffer');\n        gainMapLoader.setRequestHeader(this.requestHeader);\n        gainMapLoader.setPath(this.path);\n        gainMapLoader.setWithCredentials(this.withCredentials);\n        gainMapLoader.load(gainMapUrl, async (buffer) => {\n            /* istanbul ignore if\n             this condition exists only because of three.js types + strict mode\n            */\n            if (typeof buffer === 'string')\n                throw new Error('Invalid gainmap buffer');\n            gainMap = buffer;\n            await loadCheck();\n        }, (e) => {\n            gainMapLengthComputable = e.lengthComputable;\n            gainMapLoaded = e.loaded;\n            gainMapTotal = e.total;\n            progressHandler();\n        }, (error) => {\n            this.manager.itemError(gainMapUrl);\n            if (typeof onError === 'function')\n                onError(error);\n        });\n        const metadataLoader = new FileLoader(this._internalLoadingManager);\n        // metadataLoader.setResponseType('json')\n        metadataLoader.setRequestHeader(this.requestHeader);\n        metadataLoader.setPath(this.path);\n        metadataLoader.setWithCredentials(this.withCredentials);\n        metadataLoader.load(metadataUrl, async (json) => {\n            /* istanbul ignore if\n             this condition exists only because of three.js types + strict mode\n            */\n            if (typeof json !== 'string')\n                throw new Error('Invalid metadata string');\n            // TODO: implement check on JSON file and remove this eslint disable\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            metadata = JSON.parse(json);\n            await loadCheck();\n        }, (e) => {\n            metadataLengthComputable = e.lengthComputable;\n            metadataLoaded = e.loaded;\n            metadataTotal = e.total;\n            progressHandler();\n        }, (error) => {\n            this.manager.itemError(metadataUrl);\n            if (typeof onError === 'function')\n                onError(error);\n        });\n        return quadRenderer;\n    }\n}\n\n/**\n * A Three.js Loader for a JPEG with embedded gainmap metadata.\n *\n * @category Loaders\n * @group Loaders\n *\n * @example\n * import { HDRJPGLoader } from '@monogrid/gainmap-js'\n * import {\n *   EquirectangularReflectionMapping,\n *   LinearFilter,\n *   Mesh,\n *   MeshBasicMaterial,\n *   PerspectiveCamera,\n *   PlaneGeometry,\n *   Scene,\n *   WebGLRenderer\n * } from 'three'\n *\n * const renderer = new WebGLRenderer()\n *\n * const loader = new HDRJPGLoader(renderer)\n *\n * const result = await loader.loadAsync('gainmap.jpeg')\n * // `result` can be used to populate a Texture\n *\n * const scene = new Scene()\n * const mesh = new Mesh(\n *   new PlaneGeometry(),\n *   new MeshBasicMaterial({ map: result.renderTarget.texture })\n * )\n * scene.add(mesh)\n * renderer.render(scene, new PerspectiveCamera())\n *\n * // Starting from three.js r159\n * // `result.renderTarget.texture` can\n * // also be used as Equirectangular scene background\n * //\n * // it was previously needed to convert it\n * // to a DataTexture with `result.toDataTexture()`\n * scene.background = result.renderTarget.texture\n * scene.background.mapping = EquirectangularReflectionMapping\n *\n * // result must be manually disposed\n * // when you are done using it\n * result.dispose()\n *\n */\nclass HDRJPGLoader extends LoaderBase {\n    /**\n     * Loads a JPEG containing gain map metadata\n     * Renders a normal SDR image if gainmap data is not found\n     *\n     * @param url An array in the form of [sdr.jpg, gainmap.jpg, metadata.json]\n     * @param onLoad Load complete callback, will receive the result\n     * @param onProgress Progress callback, will receive a {@link ProgressEvent}\n     * @param onError Error callback\n     * @returns\n     */\n    load(url, onLoad, onProgress, onError) {\n        const quadRenderer = this.prepareQuadRenderer();\n        const loader = new FileLoader(this._internalLoadingManager);\n        loader.setResponseType('arraybuffer');\n        loader.setRequestHeader(this.requestHeader);\n        loader.setPath(this.path);\n        loader.setWithCredentials(this.withCredentials);\n        this.manager.itemStart(url);\n        loader.load(url, async (jpeg) => {\n            /* istanbul ignore if\n             this condition exists only because of three.js types + strict mode\n            */\n            if (typeof jpeg === 'string')\n                throw new Error('Invalid buffer, received [string], was expecting [ArrayBuffer]');\n            const jpegBuffer = new Uint8Array(jpeg);\n            let sdrJPEG;\n            let gainMapJPEG;\n            let metadata;\n            try {\n                const extractionResult = await extractGainmapFromJPEG(jpegBuffer);\n                // gain map is successfully reconstructed\n                sdrJPEG = extractionResult.sdr;\n                gainMapJPEG = extractionResult.gainMap;\n                metadata = extractionResult.metadata;\n            }\n            catch (e) {\n                // render the SDR version if this is not a gainmap\n                if (e instanceof XMPMetadataNotFoundError || e instanceof GainMapNotFoundError) {\n                    console.warn(`Failure to reconstruct an HDR image from ${url}: Gain map metadata not found in the file, HDRJPGLoader will render the SDR jpeg`);\n                    metadata = {\n                        gainMapMin: [0, 0, 0],\n                        gainMapMax: [1, 1, 1],\n                        gamma: [1, 1, 1],\n                        hdrCapacityMin: 0,\n                        hdrCapacityMax: 1,\n                        offsetHdr: [0, 0, 0],\n                        offsetSdr: [0, 0, 0]\n                    };\n                    sdrJPEG = jpegBuffer;\n                }\n                else {\n                    throw e;\n                }\n            }\n            // solves #16\n            try {\n                await this.render(quadRenderer, metadata, sdrJPEG, gainMapJPEG);\n            }\n            catch (error) {\n                this.manager.itemError(url);\n                if (typeof onError === 'function')\n                    onError(error);\n                quadRenderer.disposeOnDemandRenderer();\n                return;\n            }\n            if (typeof onLoad === 'function')\n                onLoad(quadRenderer);\n            this.manager.itemEnd(url);\n            quadRenderer.disposeOnDemandRenderer();\n        }, onProgress, (error) => {\n            this.manager.itemError(url);\n            if (typeof onError === 'function')\n                onError(error);\n        });\n        return quadRenderer;\n    }\n}\n\nexport { GainMapDecoderMaterial, GainMapLoader, HDRJPGLoader, HDRJPGLoader as JPEGRLoader, MPFExtractor, QuadRenderer, decode, extractGainmapFromJPEG, extractXMP };\n", "const presetsObj = {\n  apartment: 'lebombo_1k.hdr',\n  city: 'potsdamer_platz_1k.hdr',\n  dawn: 'kiara_1_dawn_1k.hdr',\n  forest: 'forest_slope_1k.hdr',\n  lobby: 'st_fagans_interior_1k.hdr',\n  night: 'dikhololo_night_1k.hdr',\n  park: 'rooitou_park_1k.hdr',\n  studio: 'studio_small_03_1k.hdr',\n  sunset: 'venice_sunset_1k.hdr',\n  warehouse: 'empty_warehouse_01_1k.hdr'\n};\n\nexport { presetsObj };\n", "import { useThree, useLoader } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader, EXRLoader } from 'three-stdlib';\nimport { HDRJPGLoader, GainMapLoader } from '@monogrid/gainmap-js';\nimport { presetsObj } from '../helpers/environment-assets.js';\nimport { sRGBEncoding, LinearEncoding } from '../helpers/deprecated.js';\n\nconst CUBEMAP_ROOT = 'https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/';\nconst isArray = arr => Array.isArray(arr);\nfunction useEnvironment({\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  encoding = undefined,\n  extensions\n} = {}) {\n  var _firstEntry$split$pop;\n  let loader = null;\n  let multiFile = false;\n  let extension;\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n  const isCubemap = isArray(files) && files.length === 6;\n  const isGainmap = isArray(files) && files.length === 3 && files.some(file => file.endsWith('json'));\n  const firstEntry = isArray(files) ? files[0] : files;\n\n  // Everything else\n  multiFile = isArray(files);\n  extension = isCubemap ? 'cube' : isGainmap ? 'webp' : firstEntry.startsWith('data:application/exr') ? 'exr' : firstEntry.startsWith('data:application/hdr') ? 'hdr' : firstEntry.startsWith('data:image/jpeg') ? 'jpg' : (_firstEntry$split$pop = firstEntry.split('.').pop()) == null || (_firstEntry$split$pop = _firstEntry$split$pop.split('?')) == null || (_firstEntry$split$pop = _firstEntry$split$pop.shift()) == null ? void 0 : _firstEntry$split$pop.toLowerCase();\n  loader = extension === 'cube' ? CubeTextureLoader : extension === 'hdr' ? RGBELoader : extension === 'exr' ? EXRLoader : extension === 'jpg' || extension === 'jpeg' ? HDRJPGLoader : extension === 'webp' ? GainMapLoader : null;\n  if (!loader) throw new Error('useEnvironment: Unrecognized file extension: ' + files);\n  const gl = useThree(state => state.gl);\n  const loaderResult = useLoader(\n  // @ts-expect-error\n  loader, multiFile ? [files] : files, loader => {\n    // Gainmap requires a renderer\n    if (extension === 'webp' || extension === 'jpg' || extension === 'jpeg') {\n      loader.setRenderer(gl);\n    }\n    loader.setPath == null || loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  let texture = multiFile ?\n  // @ts-ignore\n  loaderResult[0] : loaderResult;\n  if (extension === 'jpg' || extension === 'jpeg' || extension === 'webp') {\n    var _renderTarget;\n    texture = (_renderTarget = texture.renderTarget) == null ? void 0 : _renderTarget.texture;\n  }\n  texture.mapping = isCubemap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  if ('colorSpace' in texture) texture.colorSpace = (encoding !== null && encoding !== void 0 ? encoding : isCubemap) ? 'srgb' : 'srgb-linear';else texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubemap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\n\nexport { useEnvironment };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /* @__PURE__ */React.forwardRef(({\n  scale = 10,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  near = 0,\n  far = 10,\n  resolution = 512,\n  smooth = true,\n  color = '#000000',\n  depthWrite = false,\n  renderOrder,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  const scene = useThree(state => state.scene);\n  const gl = useThree(state => state.gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n    depthMaterial.onBeforeCompile = shader => {\n      shader.uniforms = {\n        ...shader.uniforms,\n        ucolor: {\n          value: new THREE.Color(color)\n        }\n      };\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`,\n      //\n      `uniform vec3 ucolor;\n           void main() {\n          `);\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n      // Colorize the shadow, multiply by the falloff so that the center can remain darker\n      'vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]);\n  const blurShadows = blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n  let count = 0;\n  let initialBackground;\n  let initialOverrideMaterial;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      count++;\n      initialBackground = scene.background;\n      initialOverrideMaterial = scene.overrideMaterial;\n      ref.current.visible = false;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      ref.current.visible = true;\n      scene.overrideMaterial = initialOverrideMaterial;\n      scene.background = initialBackground;\n    }\n  });\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    map: renderTarget.texture,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, near, far]\n  }));\n});\n\nexport { ContactShadows };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { DiscardMaterial } from '../materials/DiscardMaterial.js';\nimport { version } from '../helpers/constants.js';\n\nfunction isLight(object) {\n  return object.isLight;\n}\nfunction isGeometry(object) {\n  return !!object.geometry;\n}\nconst accumulativeContext = /* @__PURE__ */React.createContext(null);\nconst SoftShadowMaterial = /* @__PURE__ */shaderMaterial({\n  color: /* @__PURE__ */new THREE.Color(),\n  blend: 2.0,\n  alphaTest: 0.75,\n  opacity: 0,\n  map: null\n}, `varying vec2 vUv;\n   void main() {\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n     vUv = uv;\n   }`, `varying vec2 vUv;\n   uniform sampler2D map;\n   uniform vec3 color;\n   uniform float opacity;\n   uniform float alphaTest;\n   uniform float blend;\n   void main() {\n     vec4 sampledDiffuseColor = texture2D(map, vUv);\n     gl_FragColor = vec4(color * sampledDiffuseColor.r * blend, max(0.0, (1.0 - (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) / alphaTest)) * opacity);\n     #include <tonemapping_fragment>\n     #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nconst AccumulativeShadows = /* @__PURE__ */React.forwardRef(({\n  children,\n  temporal,\n  frames = 40,\n  limit = Infinity,\n  blend = 20,\n  scale = 10,\n  opacity = 1,\n  alphaTest = 0.75,\n  color = 'black',\n  colorBlend = 2,\n  resolution = 1024,\n  toneMapped = true,\n  ...props\n}, forwardRef) => {\n  extend({\n    SoftShadowMaterial\n  });\n  const gl = useThree(state => state.gl);\n  const scene = useThree(state => state.scene);\n  const camera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const gPlane = React.useRef(null);\n  const gLights = React.useRef(null);\n  const [plm] = React.useState(() => new ProgressiveLightMap(gl, scene, resolution));\n  React.useLayoutEffect(() => {\n    plm.configure(gPlane.current);\n  }, []);\n  const api = React.useMemo(() => ({\n    lights: new Map(),\n    temporal: !!temporal,\n    frames: Math.max(2, frames),\n    blend: Math.max(2, frames === Infinity ? blend : frames),\n    count: 0,\n    getMesh: () => gPlane.current,\n    reset: () => {\n      // Clear buffers, reset opacities, set frame count to 0\n      plm.clear();\n      const material = gPlane.current.material;\n      material.opacity = 0;\n      material.alphaTest = 0;\n      api.count = 0;\n    },\n    update: (frames = 1) => {\n      // Adapt the opacity-blend ratio to the number of frames\n      const material = gPlane.current.material;\n      if (!api.temporal) {\n        material.opacity = opacity;\n        material.alphaTest = alphaTest;\n      } else {\n        material.opacity = Math.min(opacity, material.opacity + opacity / api.blend);\n        material.alphaTest = Math.min(alphaTest, material.alphaTest + alphaTest / api.blend);\n      }\n\n      // Switch accumulative lights on\n      gLights.current.visible = true;\n      // Collect scene lights and meshes\n      plm.prepare();\n\n      // Update the lightmap and the accumulative lights\n      for (let i = 0; i < frames; i++) {\n        api.lights.forEach(light => light.update());\n        plm.update(camera, api.blend);\n      }\n      // Switch lights off\n      gLights.current.visible = false;\n      // Restore lights and meshes\n      plm.finish();\n    }\n  }), [plm, camera, scene, temporal, frames, blend, opacity, alphaTest]);\n  React.useLayoutEffect(() => {\n    // Reset internals, buffers, ...\n    api.reset();\n    // Update lightmap\n    if (!api.temporal && api.frames !== Infinity) api.update(api.blend);\n  });\n\n  // Expose api, allow children to set itself as the main light source\n  React.useImperativeHandle(forwardRef, () => api, [api]);\n  useFrame(() => {\n    if ((api.temporal || api.frames === Infinity) && api.count < api.frames && api.count < limit) {\n      invalidate();\n      api.update();\n      api.count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    traverse: () => null,\n    ref: gLights\n  }, /*#__PURE__*/React.createElement(accumulativeContext.Provider, {\n    value: api\n  }, children)), /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: true,\n    ref: gPlane,\n    scale: scale,\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"softShadowMaterial\", {\n    transparent: true,\n    depthWrite: false,\n    toneMapped: toneMapped,\n    color: color,\n    blend: colorBlend,\n    map: plm.progressiveLightMap2.texture\n  })));\n});\nconst RandomizedLight = /* @__PURE__ */React.forwardRef(({\n  castShadow = true,\n  bias = 0.001,\n  mapSize = 512,\n  size = 5,\n  near = 0.5,\n  far = 500,\n  frames = 1,\n  position = [0, 0, 0],\n  radius = 1,\n  amount = 8,\n  intensity = version >= 155 ? Math.PI : 1,\n  ambient = 0.5,\n  ...props\n}, forwardRef) => {\n  const gLights = React.useRef(null);\n  const length = new THREE.Vector3(...position).length();\n  const parent = React.useContext(accumulativeContext);\n  const update = React.useCallback(() => {\n    let light;\n    if (gLights.current) {\n      for (let l = 0; l < gLights.current.children.length; l++) {\n        light = gLights.current.children[l];\n        if (Math.random() > ambient) {\n          light.position.set(position[0] + THREE.MathUtils.randFloatSpread(radius), position[1] + THREE.MathUtils.randFloatSpread(radius), position[2] + THREE.MathUtils.randFloatSpread(radius));\n        } else {\n          let lambda = Math.acos(2 * Math.random() - 1) - Math.PI / 2.0;\n          let phi = 2 * Math.PI * Math.random();\n          light.position.set(Math.cos(lambda) * Math.cos(phi) * length, Math.abs(Math.cos(lambda) * Math.sin(phi) * length), Math.sin(lambda) * length);\n        }\n      }\n    }\n  }, [radius, ambient, length, ...position]);\n  const api = React.useMemo(() => ({\n    update\n  }), [update]);\n  React.useImperativeHandle(forwardRef, () => api, [api]);\n  React.useLayoutEffect(() => {\n    var _parent$lights;\n    const group = gLights.current;\n    if (parent) (_parent$lights = parent.lights) == null || _parent$lights.set(group.uuid, api);\n    return () => {\n      var _parent$lights2;\n      return void (parent == null || (_parent$lights2 = parent.lights) == null ? void 0 : _parent$lights2.delete(group.uuid));\n    };\n  }, [parent, api]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: gLights\n  }, props), Array.from({\n    length: amount\n  }, (_, index) => /*#__PURE__*/React.createElement(\"directionalLight\", {\n    key: index,\n    castShadow: castShadow,\n    \"shadow-bias\": bias,\n    \"shadow-mapSize\": [mapSize, mapSize],\n    intensity: intensity / amount\n  }, /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    attach: \"shadow-camera\",\n    args: [-size, size, size, -size, near, far]\n  }))));\n});\n\n// Based on \"Progressive Light Map Accumulator\", by [zalo](https://github.com/zalo/)\nclass ProgressiveLightMap {\n  constructor(renderer, scene, res = 1024) {\n    this.renderer = renderer;\n    this.res = res;\n    this.scene = scene;\n    this.buffer1Active = false;\n    this.lights = [];\n    this.meshes = [];\n    this.object = null;\n    this.clearColor = new THREE.Color();\n    this.clearAlpha = 0;\n\n    // Create the Progressive LightMap Texture\n    const textureParams = {\n      type: THREE.HalfFloatType,\n      magFilter: THREE.NearestFilter,\n      minFilter: THREE.NearestFilter\n    };\n    this.progressiveLightMap1 = new THREE.WebGLRenderTarget(this.res, this.res, textureParams);\n    this.progressiveLightMap2 = new THREE.WebGLRenderTarget(this.res, this.res, textureParams);\n\n    // Inject some spicy new logic into a standard phong material\n    this.discardMat = new DiscardMaterial();\n    this.targetMat = new THREE.MeshLambertMaterial({\n      fog: false\n    });\n    this.previousShadowMap = {\n      value: this.progressiveLightMap1.texture\n    };\n    this.averagingWindow = {\n      value: 100\n    };\n    this.targetMat.onBeforeCompile = shader => {\n      // Vertex Shader: Set Vertex Positions to the Unwrapped UV Positions\n      shader.vertexShader = 'varying vec2 vUv;\\n' + shader.vertexShader.slice(0, -1) + 'vUv = uv; gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }';\n\n      // Fragment Shader: Set Pixels to average in the Previous frame's Shadows\n      const bodyStart = shader.fragmentShader.indexOf('void main() {');\n      shader.fragmentShader = 'varying vec2 vUv;\\n' + shader.fragmentShader.slice(0, bodyStart) + 'uniform sampler2D previousShadowMap;\\n\tuniform float averagingWindow;\\n' + shader.fragmentShader.slice(bodyStart - 1, -1) + `\\nvec3 texelOld = texture2D(previousShadowMap, vUv).rgb;\n        gl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/ averagingWindow);\n      }`;\n\n      // Set the Previous Frame's Texture Buffer and Averaging Window\n      shader.uniforms.previousShadowMap = this.previousShadowMap;\n      shader.uniforms.averagingWindow = this.averagingWindow;\n    };\n  }\n  clear() {\n    this.renderer.getClearColor(this.clearColor);\n    this.clearAlpha = this.renderer.getClearAlpha();\n    this.renderer.setClearColor('black', 1);\n    this.renderer.setRenderTarget(this.progressiveLightMap1);\n    this.renderer.clear();\n    this.renderer.setRenderTarget(this.progressiveLightMap2);\n    this.renderer.clear();\n    this.renderer.setRenderTarget(null);\n    this.renderer.setClearColor(this.clearColor, this.clearAlpha);\n    this.lights = [];\n    this.meshes = [];\n    this.scene.traverse(object => {\n      if (isGeometry(object)) {\n        this.meshes.push({\n          object,\n          material: object.material\n        });\n      } else if (isLight(object)) {\n        this.lights.push({\n          object,\n          intensity: object.intensity\n        });\n      }\n    });\n  }\n  prepare() {\n    this.lights.forEach(light => light.object.intensity = 0);\n    this.meshes.forEach(mesh => mesh.object.material = this.discardMat);\n  }\n  finish() {\n    this.lights.forEach(light => light.object.intensity = light.intensity);\n    this.meshes.forEach(mesh => mesh.object.material = mesh.material);\n  }\n  configure(object) {\n    this.object = object;\n  }\n  update(camera, blendWindow = 100) {\n    if (!this.object) return;\n    // Set each object's material to the UV Unwrapped Surface Mapping Version\n    this.averagingWindow.value = blendWindow;\n    this.object.material = this.targetMat;\n    // Ping-pong two surface buffers for reading/writing\n    const activeMap = this.buffer1Active ? this.progressiveLightMap1 : this.progressiveLightMap2;\n    const inactiveMap = this.buffer1Active ? this.progressiveLightMap2 : this.progressiveLightMap1;\n    // Render the object's surface maps\n    const oldBg = this.scene.background;\n    this.scene.background = null;\n    this.renderer.setRenderTarget(activeMap);\n    this.previousShadowMap.value = inactiveMap.texture;\n    this.buffer1Active = !this.buffer1Active;\n    this.renderer.render(this.scene, camera);\n    this.renderer.setRenderTarget(null);\n    this.scene.background = oldBg;\n  }\n}\n\nexport { AccumulativeShadows, RandomizedLight, accumulativeContext };\n", "import * as React from 'react';\n\nconst easeInExpo = x => x === 0 ? 0 : Math.pow(2, 10 * x - 10);\nfunction Backdrop({\n  children,\n  floor = 0.25,\n  segments = 20,\n  receiveShadow,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    let i = 0;\n    const offset = segments / segments / 2;\n    const position = ref.current.attributes.position;\n    for (let x = 0; x < segments + 1; x++) {\n      for (let y = 0; y < segments + 1; y++) {\n        position.setXYZ(i++, x / segments - offset + (x === 0 ? -floor : 0), y / segments - offset, easeInExpo(x / segments));\n      }\n    }\n    position.needsUpdate = true;\n    ref.current.computeVertexNormals();\n  }, [segments, floor]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: receiveShadow,\n    rotation: [-Math.PI / 2, 0, Math.PI / 2]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    ref: ref,\n    args: [1, 1, segments, segments]\n  }), children));\n}\n\nexport { Backdrop };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Color, DoubleSide } from 'three';\n\nconst Shadow = /* @__PURE__ */React.forwardRef(({\n  fog = false,\n  renderOrder,\n  depthWrite = false,\n  colorStop = 0.0,\n  color = 'black',\n  opacity = 0.5,\n  ...props\n}, ref) => {\n  const canvas = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n    gradient.addColorStop(colorStop, new Color(color).getStyle());\n    gradient.addColorStop(1, 'rgba(0,0,0,0)');\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    return canvas;\n  }, [color, colorStop]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    renderOrder: renderOrder,\n    ref: ref,\n    \"rotation-x\": -Math.PI / 2\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    opacity: opacity,\n    fog: fog,\n    depthWrite: depthWrite,\n    side: DoubleSide\n  }, /*#__PURE__*/React.createElement(\"canvasTexture\", {\n    attach: \"map\",\n    args: [canvas]\n  })));\n});\n\nexport { Shadow };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\nimport { useHelper } from './useHelper.js';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { Edges } from './Edges.js';\nimport { FullScreenQuad } from 'three-stdlib';\nimport { version } from '../helpers/constants.js';\n\nfunction createNormalMaterial(side = THREE.FrontSide) {\n  const viewMatrix = {\n    value: new THREE.Matrix4()\n  };\n  return Object.assign(new THREE.MeshNormalMaterial({\n    side\n  }), {\n    viewMatrix,\n    onBeforeCompile: shader => {\n      shader.uniforms.viewMatrix = viewMatrix;\n      shader.fragmentShader = `vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n           return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n         }\\n` + shader.fragmentShader.replace('#include <normal_fragment_maps>', `#include <normal_fragment_maps>\n           normal = inverseTransformDirection( normal, viewMatrix );\\n`);\n    }\n  });\n}\nconst CausticsProjectionMaterial = /* @__PURE__ */shaderMaterial({\n  causticsTexture: null,\n  causticsTextureB: null,\n  color: /* @__PURE__ */new THREE.Color(),\n  lightProjMatrix: /* @__PURE__ */new THREE.Matrix4(),\n  lightViewMatrix: /* @__PURE__ */new THREE.Matrix4()\n}, `varying vec3 vWorldPosition;\n   void main() {\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n     vec4 worldPosition = modelMatrix * vec4(position, 1.);\n     vWorldPosition = worldPosition.xyz;\n   }`, `varying vec3 vWorldPosition;\n  uniform vec3 color;\n  uniform sampler2D causticsTexture;\n  uniform sampler2D causticsTextureB;\n  uniform mat4 lightProjMatrix;\n  uniform mat4 lightViewMatrix;\n   void main() {\n    // Apply caustics\n    vec4 lightSpacePos = lightProjMatrix * lightViewMatrix * vec4(vWorldPosition, 1.0);\n    lightSpacePos.xyz /= lightSpacePos.w;\n    lightSpacePos.xyz = lightSpacePos.xyz * 0.5 + 0.5;\n    vec3 front = texture2D(causticsTexture, lightSpacePos.xy).rgb;\n    vec3 back = texture2D(causticsTextureB, lightSpacePos.xy).rgb;\n    gl_FragColor = vec4((front + back) * color, 1.0);\n    #include <tonemapping_fragment>\n    #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nconst CausticsMaterial = /* @__PURE__ */shaderMaterial({\n  cameraMatrixWorld: /* @__PURE__ */new THREE.Matrix4(),\n  cameraProjectionMatrixInv: /* @__PURE__ */new THREE.Matrix4(),\n  normalTexture: null,\n  depthTexture: null,\n  lightDir: /* @__PURE__ */new THREE.Vector3(0, 1, 0),\n  lightPlaneNormal: /* @__PURE__ */new THREE.Vector3(0, 1, 0),\n  lightPlaneConstant: 0,\n  near: 0.1,\n  far: 100,\n  modelMatrix: /* @__PURE__ */new THREE.Matrix4(),\n  worldRadius: 1 / 40,\n  ior: 1.1,\n  bounces: 0,\n  resolution: 1024,\n  size: 10,\n  intensity: 0.5\n}, /* glsl */`\n  varying vec2 vUv;\n  void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }`, /* glsl */`\n  uniform mat4 cameraMatrixWorld;\n  uniform mat4 cameraProjectionMatrixInv;\n  uniform vec3 lightDir;\n  uniform vec3 lightPlaneNormal;\n  uniform float lightPlaneConstant;\n  uniform float near;\n  uniform float far;\n  uniform float time;\n  uniform float worldRadius;\n  uniform float resolution;\n  uniform float size;\n  uniform float intensity;\n  uniform float ior;\n  precision highp isampler2D;\n  precision highp usampler2D;\n  uniform sampler2D normalTexture;\n  uniform sampler2D depthTexture;\n  uniform float bounces;\n  varying vec2 vUv;\n  vec3 WorldPosFromDepth(float depth, vec2 coord) {\n    float z = depth * 2.0 - 1.0;\n    vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);\n    vec4 viewSpacePosition = cameraProjectionMatrixInv * clipSpacePosition;\n    // Perspective division\n    viewSpacePosition /= viewSpacePosition.w;\n    vec4 worldSpacePosition = cameraMatrixWorld * viewSpacePosition;\n    return worldSpacePosition.xyz;\n  }\n  float sdPlane( vec3 p, vec3 n, float h ) {\n    // n must be normalized\n    return dot(p,n) + h;\n  }\n  float planeIntersect( vec3 ro, vec3 rd, vec4 p ) {\n    return -(dot(ro,p.xyz)+p.w)/dot(rd,p.xyz);\n  }\n  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 pos, vec3 normal, float ior, out vec3 rayOrigin, out vec3 rayDirection) {\n    rayOrigin = ro;\n    rayDirection = rd;\n    rayDirection = refract(rayDirection, normal, 1.0 / ior);\n    rayOrigin = pos + rayDirection * 0.1;\n    return rayDirection;\n  }\n  void main() {\n    // Each sample consists of random offset in the x and y direction\n    float caustic = 0.0;\n    float causticTexelSize = (1.0 / resolution) * size * 2.0;\n    float texelsNeeded = worldRadius / causticTexelSize;\n    float sampleRadius = texelsNeeded / resolution;\n    float sum = 0.0;\n    if (texture2D(depthTexture, vUv).x == 1.0) {\n      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n      return;\n    }\n    vec2 offset1 = vec2(-0.5, -0.5);//vec2(rand() - 0.5, rand() - 0.5);\n    vec2 offset2 = vec2(-0.5, 0.5);//vec2(rand() - 0.5, rand() - 0.5);\n    vec2 offset3 = vec2(0.5, 0.5);//vec2(rand() - 0.5, rand() - 0.5);\n    vec2 offset4 = vec2(0.5, -0.5);//vec2(rand() - 0.5, rand() - 0.5);\n    vec2 uv1 = vUv + offset1 * sampleRadius;\n    vec2 uv2 = vUv + offset2 * sampleRadius;\n    vec2 uv3 = vUv + offset3 * sampleRadius;\n    vec2 uv4 = vUv + offset4 * sampleRadius;\n    vec3 normal1 = texture2D(normalTexture, uv1, -10.0).rgb * 2.0 - 1.0;\n    vec3 normal2 = texture2D(normalTexture, uv2, -10.0).rgb * 2.0 - 1.0;\n    vec3 normal3 = texture2D(normalTexture, uv3, -10.0).rgb * 2.0 - 1.0;\n    vec3 normal4 = texture2D(normalTexture, uv4, -10.0).rgb * 2.0 - 1.0;\n    float depth1 = texture2D(depthTexture, uv1, -10.0).x;\n    float depth2 = texture2D(depthTexture, uv2, -10.0).x;\n    float depth3 = texture2D(depthTexture, uv3, -10.0).x;\n    float depth4 = texture2D(depthTexture, uv4, -10.0).x;\n    // Sanity check the depths\n    if (depth1 == 1.0 || depth2 == 1.0 || depth3 == 1.0 || depth4 == 1.0) {\n      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n      return;\n    }\n    vec3 pos1 = WorldPosFromDepth(depth1, uv1);\n    vec3 pos2 = WorldPosFromDepth(depth2, uv2);\n    vec3 pos3 = WorldPosFromDepth(depth3, uv3);\n    vec3 pos4 = WorldPosFromDepth(depth4, uv4);\n    vec3 originPos1 = WorldPosFromDepth(0.0, uv1);\n    vec3 originPos2 = WorldPosFromDepth(0.0, uv2);\n    vec3 originPos3 = WorldPosFromDepth(0.0, uv3);\n    vec3 originPos4 = WorldPosFromDepth(0.0, uv4);\n    vec3 endPos1, endPos2, endPos3, endPos4;\n    vec3 endDir1, endDir2, endDir3, endDir4;\n    totalInternalReflection(originPos1, lightDir, pos1, normal1, ior, endPos1, endDir1);\n    totalInternalReflection(originPos2, lightDir, pos2, normal2, ior, endPos2, endDir2);\n    totalInternalReflection(originPos3, lightDir, pos3, normal3, ior, endPos3, endDir3);\n    totalInternalReflection(originPos4, lightDir, pos4, normal4, ior, endPos4, endDir4);\n    float lightPosArea = length(cross(originPos2 - originPos1, originPos3 - originPos1)) + length(cross(originPos3 - originPos1, originPos4 - originPos1));\n    float t1 = planeIntersect(endPos1, endDir1, vec4(lightPlaneNormal, lightPlaneConstant));\n    float t2 = planeIntersect(endPos2, endDir2, vec4(lightPlaneNormal, lightPlaneConstant));\n    float t3 = planeIntersect(endPos3, endDir3, vec4(lightPlaneNormal, lightPlaneConstant));\n    float t4 = planeIntersect(endPos4, endDir4, vec4(lightPlaneNormal, lightPlaneConstant));\n    vec3 finalPos1 = endPos1 + endDir1 * t1;\n    vec3 finalPos2 = endPos2 + endDir2 * t2;\n    vec3 finalPos3 = endPos3 + endDir3 * t3;\n    vec3 finalPos4 = endPos4 + endDir4 * t4;\n    float finalArea = length(cross(finalPos2 - finalPos1, finalPos3 - finalPos1)) + length(cross(finalPos3 - finalPos1, finalPos4 - finalPos1));\n    caustic += intensity * (lightPosArea / finalArea);\n    // Calculate the area of the triangle in light spaces\n    gl_FragColor = vec4(vec3(max(caustic, 0.0)), 1.0);\n  }`);\nconst NORMALPROPS = {\n  depth: true,\n  minFilter: THREE.LinearFilter,\n  magFilter: THREE.LinearFilter,\n  type: THREE.UnsignedByteType\n};\nconst CAUSTICPROPS = {\n  minFilter: THREE.LinearMipmapLinearFilter,\n  magFilter: THREE.LinearFilter,\n  type: THREE.FloatType,\n  generateMipmaps: true\n};\nconst Caustics = /* @__PURE__ */React.forwardRef(({\n  debug,\n  children,\n  frames = 1,\n  ior = 1.1,\n  color = 'white',\n  causticsOnly = false,\n  backside = false,\n  backsideIOR = 1.1,\n  worldRadius = 0.3125,\n  intensity = 0.05,\n  resolution = 2024,\n  lightSource = [5, 5, 5],\n  ...props\n}, fref) => {\n  extend({\n    CausticsProjectionMaterial\n  });\n  const ref = React.useRef(null);\n  const camera = React.useRef(null);\n  const scene = React.useRef(null);\n  const plane = React.useRef(null);\n  const gl = useThree(state => state.gl);\n  const helper = useHelper(debug && camera, THREE.CameraHelper);\n\n  // Buffers for front and back faces\n  const normalTarget = useFBO(resolution, resolution, NORMALPROPS);\n  const normalTargetB = useFBO(resolution, resolution, NORMALPROPS);\n  const causticsTarget = useFBO(resolution, resolution, CAUSTICPROPS);\n  const causticsTargetB = useFBO(resolution, resolution, CAUSTICPROPS);\n  // Normal materials for front and back faces\n  const [normalMat] = React.useState(() => createNormalMaterial());\n  const [normalMatB] = React.useState(() => createNormalMaterial(THREE.BackSide));\n  // The quad that catches the caustics\n  const [causticsMaterial] = React.useState(() => new CausticsMaterial());\n  const [causticsQuad] = React.useState(() => new FullScreenQuad(causticsMaterial));\n  React.useLayoutEffect(() => {\n    ref.current.updateWorldMatrix(false, true);\n  });\n  let count = 0;\n  const v = new THREE.Vector3();\n  const lpF = new THREE.Frustum();\n  const lpM = new THREE.Matrix4();\n  const lpP = new THREE.Plane();\n  const lightDir = new THREE.Vector3();\n  const lightDirInv = new THREE.Vector3();\n  const bounds = new THREE.Box3();\n  const focusPos = new THREE.Vector3();\n  const boundsVertices = [];\n  const worldVerts = [];\n  const projectedVerts = [];\n  const lightDirs = [];\n  const cameraPos = new THREE.Vector3();\n  for (let i = 0; i < 8; i++) {\n    boundsVertices.push(new THREE.Vector3());\n    worldVerts.push(new THREE.Vector3());\n    projectedVerts.push(new THREE.Vector3());\n    lightDirs.push(new THREE.Vector3());\n  }\n  useFrame(() => {\n    if (frames === Infinity || count++ < frames) {\n      var _scene$current$parent, _helper$current;\n      if (Array.isArray(lightSource)) lightDir.fromArray(lightSource).normalize();else lightDir.copy(ref.current.worldToLocal(lightSource.current.getWorldPosition(v)).normalize());\n      lightDirInv.copy(lightDir).multiplyScalar(-1);\n      (_scene$current$parent = scene.current.parent) == null || _scene$current$parent.matrixWorld.identity();\n      bounds.setFromObject(scene.current, true);\n      boundsVertices[0].set(bounds.min.x, bounds.min.y, bounds.min.z);\n      boundsVertices[1].set(bounds.min.x, bounds.min.y, bounds.max.z);\n      boundsVertices[2].set(bounds.min.x, bounds.max.y, bounds.min.z);\n      boundsVertices[3].set(bounds.min.x, bounds.max.y, bounds.max.z);\n      boundsVertices[4].set(bounds.max.x, bounds.min.y, bounds.min.z);\n      boundsVertices[5].set(bounds.max.x, bounds.min.y, bounds.max.z);\n      boundsVertices[6].set(bounds.max.x, bounds.max.y, bounds.min.z);\n      boundsVertices[7].set(bounds.max.x, bounds.max.y, bounds.max.z);\n      for (let i = 0; i < 8; i++) {\n        worldVerts[i].copy(boundsVertices[i]);\n      }\n      bounds.getCenter(focusPos);\n      boundsVertices.map(v => v.sub(focusPos));\n      const lightPlane = lpP.set(lightDirInv, 0);\n      boundsVertices.map((v, i) => lightPlane.projectPoint(v, projectedVerts[i]));\n      const centralVert = projectedVerts.reduce((a, b) => a.add(b), v.set(0, 0, 0)).divideScalar(projectedVerts.length);\n      const radius = projectedVerts.map(v => v.distanceTo(centralVert)).reduce((a, b) => Math.max(a, b));\n      const dirLength = boundsVertices.map(x => x.dot(lightDir)).reduce((a, b) => Math.max(a, b));\n      // Shadows\n      camera.current.position.copy(cameraPos.copy(lightDir).multiplyScalar(dirLength).add(focusPos));\n      camera.current.lookAt(scene.current.localToWorld(focusPos));\n      const dirMatrix = lpM.lookAt(camera.current.position, focusPos, v.set(0, 1, 0));\n      camera.current.left = -radius;\n      camera.current.right = radius;\n      camera.current.top = radius;\n      camera.current.bottom = -radius;\n      const yOffset = v.set(0, radius, 0).applyMatrix4(dirMatrix);\n      const yTime = (camera.current.position.y + yOffset.y) / lightDir.y;\n      camera.current.near = 0.1;\n      camera.current.far = yTime;\n      camera.current.updateProjectionMatrix();\n      camera.current.updateMatrixWorld();\n\n      // Now find size of ground plane\n      const groundProjectedCoords = worldVerts.map((v, i) => v.add(lightDirs[i].copy(lightDir).multiplyScalar(-v.y / lightDir.y)));\n      const centerPos = groundProjectedCoords.reduce((a, b) => a.add(b), v.set(0, 0, 0)).divideScalar(groundProjectedCoords.length);\n      const maxSize = 2 * groundProjectedCoords.map(v => Math.hypot(v.x - centerPos.x, v.z - centerPos.z)).reduce((a, b) => Math.max(a, b));\n      plane.current.scale.setScalar(maxSize);\n      plane.current.position.copy(centerPos);\n      if (debug) (_helper$current = helper.current) == null || _helper$current.update();\n\n      // Inject uniforms\n      normalMatB.viewMatrix.value = normalMat.viewMatrix.value = camera.current.matrixWorldInverse;\n      const dirLightNearPlane = lpF.setFromProjectionMatrix(lpM.multiplyMatrices(camera.current.projectionMatrix, camera.current.matrixWorldInverse)).planes[4];\n      causticsMaterial.cameraMatrixWorld = camera.current.matrixWorld;\n      causticsMaterial.cameraProjectionMatrixInv = camera.current.projectionMatrixInverse;\n      causticsMaterial.lightDir = lightDirInv;\n      causticsMaterial.lightPlaneNormal = dirLightNearPlane.normal;\n      causticsMaterial.lightPlaneConstant = dirLightNearPlane.constant;\n      causticsMaterial.near = camera.current.near;\n      causticsMaterial.far = camera.current.far;\n      causticsMaterial.resolution = resolution;\n      causticsMaterial.size = radius;\n      causticsMaterial.intensity = intensity;\n      causticsMaterial.worldRadius = worldRadius;\n\n      // Switch the scene on\n      scene.current.visible = true;\n\n      // Render front face normals\n      gl.setRenderTarget(normalTarget);\n      gl.clear();\n      scene.current.overrideMaterial = normalMat;\n      gl.render(scene.current, camera.current);\n\n      // Render back face normals, if enabled\n      gl.setRenderTarget(normalTargetB);\n      gl.clear();\n      if (backside) {\n        scene.current.overrideMaterial = normalMatB;\n        gl.render(scene.current, camera.current);\n      }\n\n      // Remove the override material\n      scene.current.overrideMaterial = null;\n\n      // Render front face caustics\n      causticsMaterial.ior = ior;\n      plane.current.material.lightProjMatrix = camera.current.projectionMatrix;\n      plane.current.material.lightViewMatrix = camera.current.matrixWorldInverse;\n      causticsMaterial.normalTexture = normalTarget.texture;\n      causticsMaterial.depthTexture = normalTarget.depthTexture;\n      gl.setRenderTarget(causticsTarget);\n      gl.clear();\n      causticsQuad.render(gl);\n\n      // Render back face caustics, if enabled\n      causticsMaterial.ior = backsideIOR;\n      causticsMaterial.normalTexture = normalTargetB.texture;\n      causticsMaterial.depthTexture = normalTargetB.depthTexture;\n      gl.setRenderTarget(causticsTargetB);\n      gl.clear();\n      if (backside) causticsQuad.render(gl);\n\n      // Reset render target\n      gl.setRenderTarget(null);\n\n      // Switch the scene off if caustics is all that's wanted\n      if (causticsOnly) scene.current.visible = false;\n    }\n  });\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"scene\", {\n    ref: scene\n  }, /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: camera,\n    up: [0, 1, 0]\n  }), children), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: 2,\n    ref: plane,\n    \"rotation-x\": -Math.PI / 2\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"causticsProjectionMaterial\", {\n    transparent: true,\n    color: color,\n    causticsTexture: causticsTarget.texture,\n    causticsTextureB: causticsTargetB.texture,\n    blending: THREE.CustomBlending,\n    blendSrc: THREE.OneFactor,\n    blendDst: THREE.SrcAlphaFactor,\n    depthWrite: false\n  }), debug && /*#__PURE__*/React.createElement(Edges, null, /*#__PURE__*/React.createElement(\"lineBasicMaterial\", {\n    color: \"#ffff00\",\n    toneMapped: false\n  }))));\n});\n\nexport { Caustics };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, HalfFloatType, LinearFilter } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\n\n/**\n * @deprecated Use MeshReflectorMaterial instead\n */\nconst Reflector = /* @__PURE__ */React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 0.5,\n  resolution = 256,\n  blur = [0, 0],\n  args = [1, 1],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  children,\n  debug = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  ...props\n}, ref) => {\n  extend({\n    MeshReflectorMaterial\n  });\n  React.useEffect(() => {\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\n  }, []);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const meshRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => meshRef.current, []);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition);\n    // Avoid rendering when reflector is facing away\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n    // Update the texture matrix\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld);\n    // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n    // Calculate the scaled plane vector\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q));\n    // Replacing the third row of the projection matrix\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, []);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      type: HalfFloatType,\n      minFilter: LinearFilter,\n      magFilter: LinearFilter\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      transparent: true,\n      debug,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: meshRef\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\n\nexport { Reflector };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CylinderGeometry, Matrix4, WebGLRenderTarget, RGBAFormat, ShaderMaterial, DoubleSide, RepeatWrapping } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { FullScreenQuad } from 'three-stdlib';\nimport { SpotLightMaterial } from '../materials/SpotLightMaterial.js';\nimport SpotlightShadowShader from '../helpers/glsl/DefaultSpotlightShadowShadows.glsl.js';\n\nconst isSpotLight = child => {\n  return child == null ? void 0 : child.isSpotLight;\n};\nfunction VolumetricMesh({\n  opacity = 1,\n  radiusTop,\n  radiusBottom,\n  depthBuffer,\n  color = 'white',\n  distance = 5,\n  angle = 0.15,\n  attenuation = 5,\n  anglePower = 5\n}) {\n  const mesh = React.useRef(null);\n  const size = useThree(state => state.size);\n  const camera = useThree(state => state.camera);\n  const dpr = useThree(state => state.viewport.dpr);\n  const [material] = React.useState(() => new SpotLightMaterial());\n  const [vec] = React.useState(() => new Vector3());\n  radiusTop = radiusTop === undefined ? 0.1 : radiusTop;\n  radiusBottom = radiusBottom === undefined ? angle * 7 : radiusBottom;\n  useFrame(() => {\n    material.uniforms.spotPosition.value.copy(mesh.current.getWorldPosition(vec));\n    mesh.current.lookAt(mesh.current.parent.target.getWorldPosition(vec));\n  });\n  const geom = React.useMemo(() => {\n    const geometry = new CylinderGeometry(radiusTop, radiusBottom, distance, 128, 64, true);\n    geometry.applyMatrix4(new Matrix4().makeTranslation(0, -distance / 2, 0));\n    geometry.applyMatrix4(new Matrix4().makeRotationX(-Math.PI / 2));\n    return geometry;\n  }, [distance, radiusTop, radiusBottom]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    geometry: geom,\n    raycast: () => null\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: material,\n    attach: \"material\",\n    \"uniforms-opacity-value\": opacity,\n    \"uniforms-lightColor-value\": color,\n    \"uniforms-attenuation-value\": attenuation,\n    \"uniforms-anglePower-value\": anglePower,\n    \"uniforms-depth-value\": depthBuffer,\n    \"uniforms-cameraNear-value\": camera.near,\n    \"uniforms-cameraFar-value\": camera.far,\n    \"uniforms-resolution-value\": depthBuffer ? [size.width * dpr, size.height * dpr] : [0, 0]\n  })));\n}\nfunction useCommon(spotlight, mesh, width, height, distance) {\n  const [[pos, dir]] = React.useState(() => [new Vector3(), new Vector3()]);\n  React.useLayoutEffect(() => {\n    if (isSpotLight(spotlight.current)) {\n      spotlight.current.shadow.mapSize.set(width, height);\n      spotlight.current.shadow.needsUpdate = true;\n    } else {\n      throw new Error('SpotlightShadow must be a child of a SpotLight');\n    }\n  }, [spotlight, width, height]);\n  useFrame(() => {\n    if (!spotlight.current) return;\n    const A = spotlight.current.position;\n    const B = spotlight.current.target.position;\n    dir.copy(B).sub(A);\n    var len = dir.length();\n    dir.normalize().multiplyScalar(len * distance);\n    pos.copy(A).add(dir);\n    mesh.current.position.copy(pos);\n    mesh.current.lookAt(spotlight.current.target.position);\n  });\n}\nfunction SpotlightShadowWithShader({\n  distance = 0.4,\n  alphaTest = 0.5,\n  map,\n  shader = SpotlightShadowShader,\n  width = 512,\n  height = 512,\n  scale = 1,\n  children,\n  ...rest\n}) {\n  const mesh = React.useRef(null);\n  const spotlight = rest.spotlightRef;\n  const debug = rest.debug;\n  useCommon(spotlight, mesh, width, height, distance);\n  const renderTarget = React.useMemo(() => new WebGLRenderTarget(width, height, {\n    format: RGBAFormat,\n    stencilBuffer: false\n    // depthTexture: null!\n  }), [width, height]);\n  const uniforms = React.useRef({\n    uShadowMap: {\n      value: map\n    },\n    uTime: {\n      value: 0\n    }\n  });\n  React.useEffect(() => void (uniforms.current.uShadowMap.value = map), [map]);\n  const fsQuad = React.useMemo(() => new FullScreenQuad(new ShaderMaterial({\n    uniforms: uniforms.current,\n    vertexShader: /* glsl */`\n          varying vec2 vUv;\n\n          void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          }\n          `,\n    fragmentShader: shader\n  })), [shader]);\n  React.useEffect(() => () => {\n    fsQuad.material.dispose();\n    fsQuad.dispose();\n  }, [fsQuad]);\n  React.useEffect(() => () => renderTarget.dispose(), [renderTarget]);\n  useFrame(({\n    gl\n  }, dt) => {\n    uniforms.current.uTime.value += dt;\n    gl.setRenderTarget(renderTarget);\n    fsQuad.render(gl);\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    scale: scale,\n    castShadow: true\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    side: DoubleSide,\n    alphaTest: alphaTest,\n    alphaMap: renderTarget.texture,\n    \"alphaMap-wrapS\": RepeatWrapping,\n    \"alphaMap-wrapT\": RepeatWrapping,\n    opacity: debug ? 1 : 0\n  }, children)));\n}\nfunction SpotlightShadowWithoutShader({\n  distance = 0.4,\n  alphaTest = 0.5,\n  map,\n  width = 512,\n  height = 512,\n  scale,\n  children,\n  ...rest\n}) {\n  const mesh = React.useRef(null);\n  const spotlight = rest.spotlightRef;\n  const debug = rest.debug;\n  useCommon(spotlight, mesh, width, height, distance);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    scale: scale,\n    castShadow: true\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    side: DoubleSide,\n    alphaTest: alphaTest,\n    alphaMap: map,\n    \"alphaMap-wrapS\": RepeatWrapping,\n    \"alphaMap-wrapT\": RepeatWrapping,\n    opacity: debug ? 1 : 0\n  }, children)));\n}\nfunction SpotLightShadow(props) {\n  if (props.shader) return /*#__PURE__*/React.createElement(SpotlightShadowWithShader, props);\n  return /*#__PURE__*/React.createElement(SpotlightShadowWithoutShader, props);\n}\nconst SpotLight = /*#__PURE__*/React.forwardRef(({\n  // Volumetric\n  opacity = 1,\n  radiusTop,\n  radiusBottom,\n  depthBuffer,\n  color = 'white',\n  distance = 5,\n  angle = 0.15,\n  attenuation = 5,\n  anglePower = 5,\n  volumetric = true,\n  debug = false,\n  children,\n  ...props\n}, ref) => {\n  const spotlight = React.useRef(null);\n  React.useImperativeHandle(ref, () => spotlight.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", null, debug && spotlight.current && /*#__PURE__*/React.createElement(\"spotLightHelper\", {\n    args: [spotlight.current]\n  }), /*#__PURE__*/React.createElement(\"spotLight\", _extends({\n    ref: spotlight,\n    angle: angle,\n    color: color,\n    distance: distance,\n    castShadow: true\n  }, props), volumetric && /*#__PURE__*/React.createElement(VolumetricMesh, {\n    debug: debug,\n    opacity: opacity,\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    depthBuffer: depthBuffer,\n    color: color,\n    distance: distance,\n    angle: angle,\n    attenuation: attenuation,\n    anglePower: anglePower\n  })), children && /*#__PURE__*/React.cloneElement(children, {\n    spotlightRef: spotlight,\n    debug: debug\n  }));\n});\n\nexport { SpotLight, SpotLightShadow };\n", "import * as THREE from 'three';\nimport { version } from '../helpers/constants.js';\n\nclass SpotLightMaterial extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        depth: {\n          value: null\n        },\n        opacity: {\n          value: 1\n        },\n        attenuation: {\n          value: 2.5\n        },\n        anglePower: {\n          value: 12\n        },\n        spotPosition: {\n          value: new THREE.Vector3(0, 0, 0)\n        },\n        lightColor: {\n          value: new THREE.Color('white')\n        },\n        cameraNear: {\n          value: 0\n        },\n        cameraFar: {\n          value: 1\n        },\n        resolution: {\n          value: new THREE.Vector2(0, 0)\n        }\n      },\n      transparent: true,\n      depthWrite: false,\n      vertexShader: /* glsl */`\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n        uniform vec3 spotPosition;\n        uniform float attenuation;\n\n        #include <common>\n        #include <logdepthbuf_pars_vertex>\n\n        void main() {\n          // compute intensity\n          vNormal = normalize(normalMatrix * normal);\n          vec4 worldPosition = modelMatrix * vec4(position, 1);\n          vec4 viewPosition = viewMatrix * worldPosition;\n          vViewZ = viewPosition.z;\n\n          vIntensity = 1.0 - saturate(distance(worldPosition.xyz, spotPosition) / attenuation);\n\n          gl_Position = projectionMatrix * viewPosition;\n\n          #include <logdepthbuf_vertex>\n        }\n      `,\n      fragmentShader: /* glsl */`\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n\n        uniform vec3 lightColor;\n        uniform float anglePower;\n        uniform sampler2D depth;\n        uniform vec2 resolution;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float opacity;\n\n        #include <packing>\n        #include <logdepthbuf_pars_fragment>\n\n        float readDepth(sampler2D depthSampler, vec2 uv) {\n          float fragCoordZ = texture(depthSampler, uv).r;\n\n          // https://github.com/mrdoob/three.js/issues/23072\n          #ifdef USE_LOGDEPTHBUF\n            float viewZ = 1.0 - exp2(fragCoordZ * log(cameraFar + 1.0) / log(2.0));\n          #else\n            float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\n          #endif\n\n          return viewZ;\n        }\n\n        void main() {\n          #include <logdepthbuf_fragment>\n\n          vec3 normal = vec3(vNormal.x, vNormal.y, abs(vNormal.z));\n          float angleIntensity = pow(dot(normal, vec3(0, 0, 1)), anglePower);\n          float intensity = vIntensity * angleIntensity;\n\n          // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry\n          bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;\n          if (isSoft) {\n            vec2 uv = gl_FragCoord.xy / resolution;\n            intensity *= smoothstep(0.0, 1.0, vViewZ - readDepth(depth, uv));\n          }\n\n          gl_FragColor = vec4(lightColor, intensity * opacity);\n\n          #include <tonemapping_fragment>\n          #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n        }\n      `\n    });\n  }\n}\n\nexport { SpotLightMaterial };\n", "var SpotlightShadowShader = \"#define GLSLIFY 1\\nvarying vec2 vUv;uniform sampler2D uShadowMap;uniform float uTime;void main(){vec3 color=texture2D(uShadowMap,vUv).xyz;gl_FragColor=vec4(color,1.);}\"; // eslint-disable-line\n\nexport { SpotlightShadowShader as default };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { applyProps } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\n\nconst Lightformer = /* @__PURE__ */React.forwardRef(({\n  args,\n  map,\n  toneMapped = false,\n  color = 'white',\n  form: Form = 'rect',\n  intensity = 1,\n  scale = 1,\n  target,\n  children,\n  ...props\n}, forwardRef) => {\n  // Apply emissive power\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    if (!children && !props.material) {\n      applyProps(ref.current.material, {\n        color\n      });\n      ref.current.material.color.multiplyScalar(intensity);\n    }\n  }, [color, intensity, children, props.material]);\n\n  // Target light\n  React.useLayoutEffect(() => {\n    if (target) ref.current.lookAt(Array.isArray(target) ? new THREE.Vector3(...target) : target);\n  }, [target]);\n\n  // Fix 2-dimensional scale\n  scale = Array.isArray(scale) && scale.length === 2 ? [scale[0], scale[1], 1] : scale;\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: scale\n  }, props), Form === 'circle' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: [0, 1, 64]\n  }) : Form === 'ring' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: [0.5, 1, 64]\n  }) : Form === 'rect' ? /*#__PURE__*/React.createElement(\"planeGeometry\", null) : /*#__PURE__*/React.createElement(Form, {\n    args: args\n  }), children ? children : !props.material ? /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    toneMapped: toneMapped,\n    map: map,\n    side: THREE.DoubleSide\n  }) : null);\n});\n\nexport { Lightformer };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Sky as Sky$1 } from 'three-stdlib';\nimport { Vector3 } from 'three';\n\nfunction calcPosFromAngles(inclination, azimuth, vector = new Vector3()) {\n  const theta = Math.PI * (inclination - 0.5);\n  const phi = 2 * Math.PI * (azimuth - 0.5);\n  vector.x = Math.cos(phi);\n  vector.y = Math.sin(theta);\n  vector.z = Math.sin(phi);\n  return vector;\n}\nconst Sky = /* @__PURE__ */React.forwardRef(({\n  inclination = 0.6,\n  azimuth = 0.1,\n  distance = 1000,\n  mieCoefficient = 0.005,\n  mieDirectionalG = 0.8,\n  rayleigh = 0.5,\n  turbidity = 10,\n  sunPosition = calcPosFromAngles(inclination, azimuth),\n  ...props\n}, ref) => {\n  const scale = React.useMemo(() => new Vector3().setScalar(distance), [distance]);\n  const [sky] = React.useState(() => new Sky$1());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: sky,\n    ref: ref,\n    \"material-uniforms-mieCoefficient-value\": mieCoefficient,\n    \"material-uniforms-mieDirectionalG-value\": mieDirectionalG,\n    \"material-uniforms-rayleigh-value\": rayleigh,\n    \"material-uniforms-sunPosition-value\": sunPosition,\n    \"material-uniforms-turbidity-value\": turbidity,\n    scale: scale\n  }, props));\n});\n\nexport { Sky, calcPosFromAngles };\n", "import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Color, AdditiveBlending, ShaderMaterial, Vector3, Spherical } from 'three';\nimport { version } from '../helpers/constants.js';\n\nclass StarfieldMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        time: {\n          value: 0.0\n        },\n        fade: {\n          value: 1.0\n        }\n      },\n      vertexShader: /* glsl */`\n      uniform float time;\n      attribute float size;\n      varying vec3 vColor;\n      void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\n        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(time + 100.0));\n        gl_Position = projectionMatrix * mvPosition;\n      }`,\n      fragmentShader: /* glsl */`\n      uniform sampler2D pointTexture;\n      uniform float fade;\n      varying vec3 vColor;\n      void main() {\n        float opacity = 1.0;\n        if (fade == 1.0) {\n          float d = distance(gl_PointCoord, vec2(0.5, 0.5));\n          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\n        }\n        gl_FragColor = vec4(vColor, opacity);\n\n        #include <tonemapping_fragment>\n\t      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n      }`\n    });\n  }\n}\nconst genStar = r => {\n  return new Vector3().setFromSpherical(new Spherical(r, Math.acos(1 - Math.random() * 2), Math.random() * 2 * Math.PI));\n};\nconst Stars = /* @__PURE__ */React.forwardRef(({\n  radius = 100,\n  depth = 50,\n  count = 5000,\n  saturation = 0,\n  factor = 4,\n  fade = false,\n  speed = 1\n}, ref) => {\n  const material = React.useRef();\n  const [position, color, size] = React.useMemo(() => {\n    const positions = [];\n    const colors = [];\n    const sizes = Array.from({\n      length: count\n    }, () => (0.5 + 0.5 * Math.random()) * factor);\n    const color = new Color();\n    let r = radius + depth;\n    const increment = depth / count;\n    for (let i = 0; i < count; i++) {\n      r -= increment * Math.random();\n      positions.push(...genStar(r).toArray());\n      color.setHSL(i / count, saturation, 0.9);\n      colors.push(color.r, color.g, color.b);\n    }\n    return [new Float32Array(positions), new Float32Array(colors), new Float32Array(sizes)];\n  }, [count, depth, factor, radius, saturation]);\n  useFrame(state => material.current && (material.current.uniforms.time.value = state.clock.getElapsedTime() * speed));\n  const [starfieldMaterial] = React.useState(() => new StarfieldMaterial());\n  return /*#__PURE__*/React.createElement(\"points\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [position, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [color, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [size, 1]\n  })), /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: material,\n    object: starfieldMaterial,\n    attach: \"material\",\n    blending: AdditiveBlending,\n    \"uniforms-fade-value\": fade,\n    depthWrite: false,\n    transparent: true,\n    vertexColors: true\n  }));\n});\n\nexport { Stars };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './useTexture.js';\nimport { v4 } from 'uuid';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nconst parentMatrix = /* @__PURE__ */new Matrix4();\nconst translation = /* @__PURE__ */new Vector3();\nconst rotation = /* @__PURE__ */new Quaternion();\nconst cpos = /* @__PURE__ */new Vector3();\nconst cquat = /* @__PURE__ */new Quaternion();\nconst scale = /* @__PURE__ */new Vector3();\nconst context = /* @__PURE__ */React.createContext(null);\nconst Clouds = /* @__PURE__ */React.forwardRef(({\n  children,\n  material = MeshLambertMaterial,\n  texture = CLOUD_URL,\n  range,\n  limit = 200,\n  frustumCulled,\n  ...props\n}, fref) => {\n  var _image$width, _image$height;\n  const CloudMaterial = React.useMemo(() => {\n    return class extends material {\n      constructor() {\n        super();\n        const opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        this.onBeforeCompile = shader => {\n          shader.vertexShader = `attribute float opacity;\n               varying float vOpacity;\n              ` + shader.vertexShader.replace('#include <fog_vertex>', `#include <fog_vertex>\n                 vOpacity = opacity;\n                `);\n          shader.fragmentShader = `varying float vOpacity;\n              ` + shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `#include <${opaque_fragment}>\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\n                `);\n        };\n      }\n    };\n  }, [material]);\n  extend({\n    CloudMaterial\n  });\n  const instance = React.useRef(null);\n  const clouds = React.useRef([]);\n  const opacities = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => 1)), [limit]);\n  const colors = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => [1, 1, 1]).flat()), [limit]);\n  const cloudTexture = useTexture(texture);\n  let t = 0;\n  let index = 0;\n  let config;\n  const qat = new Quaternion();\n  const dir = new Vector3(0, 0, 1);\n  const pos = new Vector3();\n  useFrame((state, delta) => {\n    t = state.clock.getElapsedTime();\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort((a, b) => b.dist - a.dist);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.opacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(() => {\n    const count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      offset: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.opacity, {\n      offset: 0,\n      count: count\n    });\n  });\n  let imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  let max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [...imageBounds]\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nconst CloudInstance = /* @__PURE__ */React.forwardRef(({\n  opacity = 1,\n  speed = 0,\n  bounds = [5, 1, 1],\n  segments = 20,\n  color = '#ffffff',\n  fade = 10,\n  volume = 6,\n  smallestVolume = 0.25,\n  distribute = null,\n  growth = 4,\n  concentrate = 'inside',\n  seed = Math.random(),\n  ...props\n}, fref) => {\n  function random() {\n    const x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  const parent = React.useContext(context);\n  const ref = React.useRef(null);\n  const [uuid] = React.useState(() => v4());\n  const clouds = React.useMemo(() => {\n    return [...new Array(segments)].map((_, index) => ({\n      segments,\n      bounds: new Vector3(1, 1, 1),\n      position: new Vector3(),\n      uuid,\n      index,\n      ref,\n      dist: 0,\n      matrix: new Matrix4(),\n      color: new Color(),\n      rotation: index * (Math.PI / segments)\n    }));\n  }, [segments, uuid]);\n  React.useLayoutEffect(() => {\n    clouds.forEach((cloud, index) => {\n      var _distributed$point;\n      applyProps(cloud, {\n        volume,\n        color,\n        speed,\n        growth,\n        opacity,\n        fade,\n        bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      const distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n        x: random() * 2 - 1,\n        y: random() * 2 - 1,\n        z: random() * 2 - 1\n      });\n      const xDiff = Math.abs(cloud.position.x);\n      const yDiff = Math.abs(cloud.position.y);\n      const zDiff = Math.abs(cloud.position.z);\n      const max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(() => {\n    const temp = clouds;\n    parent.current = [...parent.current, ...temp];\n    return () => {\n      parent.current = parent.current.filter(item => item.uuid !== uuid);\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nconst Cloud = /* @__PURE__ */React.forwardRef((props, fref) => {\n  const parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));else return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\n\nexport { Cloud, CloudInstance, Clouds };\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { version } from '../helpers/constants.js';\n\nconst SparklesImplMaterial = /* @__PURE__ */shaderMaterial({\n  time: 0,\n  pixelRatio: 1\n}, ` uniform float pixelRatio;\n    uniform float time;\n    attribute float size;  \n    attribute float speed;  \n    attribute float opacity;\n    attribute vec3 noise;\n    attribute vec3 color;\n    varying vec3 vColor;\n    varying float vOpacity;\n    void main() {\n      vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n      modelPosition.y += sin(time * speed + modelPosition.x * noise.x * 100.0) * 0.2;\n      modelPosition.z += cos(time * speed + modelPosition.x * noise.y * 100.0) * 0.2;\n      modelPosition.x += cos(time * speed + modelPosition.x * noise.z * 100.0) * 0.2;\n      vec4 viewPosition = viewMatrix * modelPosition;\n      vec4 projectionPostion = projectionMatrix * viewPosition;\n      gl_Position = projectionPostion;\n      gl_PointSize = size * 25. * pixelRatio;\n      gl_PointSize *= (1.0 / - viewPosition.z);\n      vColor = color;\n      vOpacity = opacity;\n    }`, ` varying vec3 vColor;\n    varying float vOpacity;\n    void main() {\n      float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n      float strength = 0.05 / distanceToCenter - 0.1;\n      gl_FragColor = vec4(vColor, strength * vOpacity);\n      #include <tonemapping_fragment>\n      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n    }`);\nconst isFloat32Array = def => def && def.constructor === Float32Array;\nconst expandColor = v => [v.r, v.g, v.b];\nconst isVector = v => v instanceof THREE.Vector2 || v instanceof THREE.Vector3 || v instanceof THREE.Vector4;\nconst normalizeVector = v => {\n  if (Array.isArray(v)) return v;else if (isVector(v)) return v.toArray();\n  return [v, v, v];\n};\nfunction usePropAsIsOrAsAttribute(count, prop, setDefault) {\n  return React.useMemo(() => {\n    if (prop !== undefined) {\n      if (isFloat32Array(prop)) {\n        return prop;\n      } else {\n        if (prop instanceof THREE.Color) {\n          const a = Array.from({\n            length: count * 3\n          }, () => expandColor(prop)).flat();\n          return Float32Array.from(a);\n        } else if (isVector(prop) || Array.isArray(prop)) {\n          const a = Array.from({\n            length: count * 3\n          }, () => normalizeVector(prop)).flat();\n          return Float32Array.from(a);\n        }\n        return Float32Array.from({\n          length: count\n        }, () => prop);\n      }\n    }\n    return Float32Array.from({\n      length: count\n    }, setDefault);\n  }, [prop]);\n}\nconst Sparkles = /* @__PURE__ */React.forwardRef(({\n  noise = 1,\n  count = 100,\n  speed = 1,\n  opacity = 1,\n  scale = 1,\n  size,\n  color,\n  children,\n  ...props\n}, forwardRef) => {\n  React.useMemo(() => extend({\n    SparklesImplMaterial\n  }), []);\n  const ref = React.useRef(null);\n  const dpr = useThree(state => state.viewport.dpr);\n  const _scale = normalizeVector(scale);\n  const positions = React.useMemo(() => Float32Array.from(Array.from({\n    length: count\n  }, () => _scale.map(THREE.MathUtils.randFloatSpread)).flat()), [count, ..._scale]);\n  const sizes = usePropAsIsOrAsAttribute(count, size, Math.random);\n  const opacities = usePropAsIsOrAsAttribute(count, opacity);\n  const speeds = usePropAsIsOrAsAttribute(count, speed);\n  const noises = usePropAsIsOrAsAttribute(count * 3, noise);\n  const colors = usePropAsIsOrAsAttribute(color === undefined ? count * 3 : count, !isFloat32Array(color) ? new THREE.Color(color) : color, () => 1);\n  useFrame(state => {\n    if (ref.current && ref.current.material) ref.current.material.time = state.clock.elapsedTime;\n  });\n  React.useImperativeHandle(forwardRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    key: `particle-${count}-${JSON.stringify(scale)}`\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-speed\",\n    args: [speeds, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-noise\",\n    args: [noises, 3]\n  })), children ? children : /*#__PURE__*/React.createElement(\"sparklesImplMaterial\", {\n    transparent: true,\n    pixelRatio: dpr,\n    depthWrite: false\n  }));\n});\n\nexport { Sparkles };\n", "import * as React from 'react';\nimport { useTexture } from './useTexture.js';\nimport { suspend } from 'suspend-react';\n\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n    case 128:\n      return '-128px';\n    case 256:\n      return '-256px';\n    case 512:\n      return '-512px';\n    default:\n      return '';\n  }\n}\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/matcaps.json';\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\nfunction useMatcapTexture(id = 0, format = 1024, onLoad) {\n  const matcapList = suspend(() => fetch(LIST_URL).then(res => res.json()), ['matcapList']);\n  const DEFAULT_MATCAP = matcapList[0];\n  const numTot = React.useMemo(() => Object.keys(matcapList).length, []);\n  const fileHash = React.useMemo(() => {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n    return null;\n  }, [id]);\n  const fileName = `${fileHash || DEFAULT_MATCAP}${getFormatString(format)}.png`;\n  const url = `${MATCAP_ROOT}/${format}/${fileName}`;\n  const matcapTexture = useTexture(url, onLoad);\n  return [matcapTexture, url, numTot];\n}\n\nexport { useMatcapTexture };\n", "import * as React from 'react';\nimport { useTexture } from './useTexture.js';\nimport { RepeatWrapping, Vector2 } from 'three';\nimport { suspend } from 'suspend-react';\n\nconst NORMAL_ROOT = 'https://rawcdn.githack.com/pmndrs/drei-assets/7a3104997e1576f83472829815b00880d88b32fb';\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/normals/normals.json';\nfunction useNormalTexture(id = 0, settings = {}, onLoad) {\n  const {\n    repeat = [1, 1],\n    anisotropy = 1,\n    offset = [0, 0]\n  } = settings;\n  const normalsList = suspend(() => fetch(LIST_URL).then(res => res.json()), ['normalsList']);\n  const numTot = React.useMemo(() => Object.keys(normalsList).length, []);\n  const DEFAULT_NORMAL = normalsList[0];\n  const imageName = normalsList[id] || DEFAULT_NORMAL;\n  const url = `${NORMAL_ROOT}/normals/${imageName}`;\n  const normalTexture = useTexture(url, onLoad);\n  React.useLayoutEffect(() => {\n    if (!normalTexture) return;\n    normalTexture.wrapS = normalTexture.wrapT = RepeatWrapping;\n    normalTexture.repeat = new Vector2(repeat[0], repeat[1]);\n    normalTexture.offset = new Vector2(offset[0], offset[1]);\n    normalTexture.anisotropy = anisotropy;\n  }, [normalTexture, anisotropy, repeat, offset]);\n  return [normalTexture, url, numTot];\n}\n\nexport { useNormalTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend } from '@react-three/fiber';\nimport { WireframeMaterial, WireframeMaterialShaders, useWireframeUniforms, setWireframeOverride } from '../materials/WireframeMaterial.js';\n\nfunction isWithGeometry(object) {\n  return !!(object != null && object.geometry);\n}\nfunction isGeometry(object) {\n  return !!(object != null && object.isBufferGeometry);\n}\nfunction isRefObject(object) {\n  return !!(object != null && object.current);\n}\nfunction isRef(object) {\n  return (object == null ? void 0 : object.current) !== undefined;\n}\nfunction isWireframeGeometry(geometry) {\n  return geometry.type === 'WireframeGeometry';\n}\nfunction getUniforms() {\n  const u = {};\n  for (const key in WireframeMaterialShaders.uniforms) {\n    u[key] = {\n      value: WireframeMaterialShaders.uniforms[key]\n    };\n  }\n  return u;\n}\nfunction getBarycentricCoordinates(geometry, removeEdge) {\n  const position = geometry.getAttribute('position');\n  const count = position.count;\n  const barycentric = [];\n  for (let i = 0; i < count; i++) {\n    const even = i % 2 === 0;\n    const Q = removeEdge ? 1 : 0;\n    if (even) {\n      barycentric.push(0, 0, 1, 0, 1, 0, 1, 0, Q);\n    } else {\n      barycentric.push(0, 1, 0, 0, 0, 1, 1, 0, Q);\n    }\n  }\n  return new THREE.BufferAttribute(Float32Array.from(barycentric), 3);\n}\nfunction getInputGeometry(inputGeometry) {\n  const geo = isRefObject(inputGeometry) ? inputGeometry.current : inputGeometry;\n  if (!isGeometry(geo)) {\n    // Disallow WireframeGeometry\n    if (isWireframeGeometry(geo)) {\n      throw new Error('Wireframe: WireframeGeometry is not supported.');\n    }\n    const parent = geo.parent;\n    if (isWithGeometry(parent)) {\n      // Disallow WireframeGeometry\n      if (isWireframeGeometry(parent.geometry)) {\n        throw new Error('Wireframe: WireframeGeometry is not supported.');\n      }\n      return parent.geometry;\n    }\n  } else {\n    return geo;\n  }\n}\nfunction setBarycentricCoordinates(geometry, simplify) {\n  if (geometry.index) {\n    console.warn('Wireframe: Requires non-indexed geometry, converting to non-indexed geometry.');\n    const nonIndexedGeo = geometry.toNonIndexed();\n    geometry.copy(nonIndexedGeo);\n    geometry.setIndex(null);\n  }\n  const newBarycentric = getBarycentricCoordinates(geometry, simplify);\n  geometry.setAttribute('barycentric', newBarycentric);\n}\nfunction WireframeWithCustomGeo({\n  geometry: customGeometry,\n  simplify = false,\n  ...props\n}) {\n  extend({\n    MeshWireframeMaterial: WireframeMaterial\n  });\n  const [geometry, setGeometry] = React.useState(null);\n  React.useLayoutEffect(() => {\n    const geom = getInputGeometry(customGeometry);\n    if (!geom) {\n      throw new Error('Wireframe: geometry prop must be a BufferGeometry or a ref to a BufferGeometry.');\n    }\n    setBarycentricCoordinates(geom, simplify);\n    if (isRef(customGeometry)) {\n      setGeometry(geom);\n    }\n  }, [simplify, customGeometry]);\n  const drawnGeo = isRef(customGeometry) ? geometry : customGeometry;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, drawnGeo && /*#__PURE__*/React.createElement(\"mesh\", {\n    geometry: drawnGeo\n  }, /*#__PURE__*/React.createElement(\"meshWireframeMaterial\", _extends({\n    attach: \"material\",\n    transparent: true,\n    side: THREE.DoubleSide,\n    polygonOffset: true //\n    ,\n    polygonOffsetFactor: -4\n  }, props, {\n    extensions: {\n      derivatives: true,\n      fragDepth: false,\n      drawBuffers: false,\n      shaderTextureLOD: false\n    }\n  }))));\n}\nfunction WireframeWithoutCustomGeo({\n  simplify = false,\n  ...props\n}) {\n  const objectRef = React.useRef(null);\n  const uniforms = React.useMemo(() => getUniforms(), [WireframeMaterialShaders.uniforms]);\n  useWireframeUniforms(uniforms, props);\n  React.useLayoutEffect(() => {\n    const geom = getInputGeometry(objectRef);\n    if (!geom) {\n      throw new Error('Wireframe: Must be a child of a Mesh, Line or Points object or specify a geometry prop.');\n    }\n    const og = geom.clone();\n    setBarycentricCoordinates(geom, simplify);\n    return () => {\n      geom.copy(og);\n      og.dispose();\n    };\n  }, [simplify]);\n  React.useLayoutEffect(() => {\n    const parentMesh = objectRef.current.parent;\n    const og = parentMesh.material.clone();\n    setWireframeOverride(parentMesh.material, uniforms);\n    return () => {\n      parentMesh.material.dispose();\n      parentMesh.material = og;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"object3D\", {\n    ref: objectRef\n  });\n}\nfunction Wireframe({\n  geometry: customGeometry,\n  ...props\n}) {\n  if (customGeometry) {\n    return /*#__PURE__*/React.createElement(WireframeWithCustomGeo, _extends({\n      geometry: customGeometry\n    }, props));\n  }\n  return /*#__PURE__*/React.createElement(WireframeWithoutCustomGeo, props);\n}\n\nexport { Wireframe };\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { shaderMaterial } from '../core/shaderMaterial.js';\n\nconst WireframeMaterialShaders = {\n  uniforms: {\n    strokeOpacity: 1,\n    fillOpacity: 0.25,\n    fillMix: 0,\n    thickness: 0.05,\n    colorBackfaces: false,\n    dashInvert: true,\n    dash: false,\n    dashRepeats: 4,\n    dashLength: 0.5,\n    squeeze: false,\n    squeezeMin: 0.2,\n    squeezeMax: 1,\n    stroke: /* @__PURE__ */new THREE.Color('#ff0000'),\n    backfaceStroke: /* @__PURE__ */new THREE.Color('#0000ff'),\n    fill: /* @__PURE__ */new THREE.Color('#00ff00')\n  },\n  vertex: /* glsl */`\n\t  attribute vec3 barycentric;\n\t\n\t\tvarying vec3 v_edges_Barycentric;\n\t\tvarying vec3 v_edges_Position;\n\n\t\tvoid initWireframe() {\n\t\t\tv_edges_Barycentric = barycentric;\n\t\t\tv_edges_Position = position.xyz;\n\t\t}\n\t  `,\n  fragment: /* glsl */`\n\t\t#ifndef PI\n\t  \t#define PI 3.1415926535897932384626433832795\n\t\t#endif\n  \n\t  varying vec3 v_edges_Barycentric;\n\t  varying vec3 v_edges_Position;\n  \n\t  uniform float strokeOpacity;\n\t  uniform float fillOpacity;\n\t  uniform float fillMix;\n\t  uniform float thickness;\n\t  uniform bool colorBackfaces;\n  \n\t  // Dash\n\t  uniform bool dashInvert;\n\t  uniform bool dash;\n\t  uniform bool dashOnly;\n\t  uniform float dashRepeats;\n\t  uniform float dashLength;\n  \n\t  // Squeeze\n\t  uniform bool squeeze;\n\t  uniform float squeezeMin;\n\t  uniform float squeezeMax;\n  \n\t  // Colors\n\t  uniform vec3 stroke;\n\t  uniform vec3 backfaceStroke;\n\t  uniform vec3 fill;\n  \n\t  // This is like\n\t  float wireframe_aastep(float threshold, float dist) {\n\t\t  float afwidth = fwidth(dist) * 0.5;\n\t\t  return smoothstep(threshold - afwidth, threshold + afwidth, dist);\n\t  }\n  \n\t  float wireframe_map(float value, float min1, float max1, float min2, float max2) {\n\t\t  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\t  }\n  \n\t  float getWireframe() {\n\t\t\tvec3 barycentric = v_edges_Barycentric;\n\t\t\n\t\t\t// Distance from center of each triangle to its edges.\n\t\t\tfloat d = min(min(barycentric.x, barycentric.y), barycentric.z);\n\n\t\t\t// for dashed rendering, we can use this to get the 0 .. 1 value of the line length\n\t\t\tfloat positionAlong = max(barycentric.x, barycentric.y);\n\t\t\tif (barycentric.y < barycentric.x && barycentric.y < barycentric.z) {\n\t\t\t\tpositionAlong = 1.0 - positionAlong;\n\t\t\t}\n\n\t\t\t// the thickness of the stroke\n\t\t\tfloat computedThickness = wireframe_map(thickness, 0.0, 1.0, 0.0, 0.34);\n\n\t\t\t// if we want to shrink the thickness toward the center of the line segment\n\t\t\tif (squeeze) {\n\t\t\t\tcomputedThickness *= mix(squeezeMin, squeezeMax, (1.0 - sin(positionAlong * PI)));\n\t\t\t}\n\n\t\t\t// Create dash pattern\n\t\t\tif (dash) {\n\t\t\t\t// here we offset the stroke position depending on whether it\n\t\t\t\t// should overlap or not\n\t\t\t\tfloat offset = 1.0 / dashRepeats * dashLength / 2.0;\n\t\t\t\tif (!dashInvert) {\n\t\t\t\t\toffset += 1.0 / dashRepeats / 2.0;\n\t\t\t\t}\n\n\t\t\t\t// if we should animate the dash or not\n\t\t\t\t// if (dashAnimate) {\n\t\t\t\t// \toffset += time * 0.22;\n\t\t\t\t// }\n\n\t\t\t\t// create the repeating dash pattern\n\t\t\t\tfloat pattern = fract((positionAlong + offset) * dashRepeats);\n\t\t\t\tcomputedThickness *= 1.0 - wireframe_aastep(dashLength, pattern);\n\t\t\t}\n\n\t\t\t// compute the anti-aliased stroke edge  \n\t\t\tfloat edge = 1.0 - wireframe_aastep(computedThickness, d);\n\n\t\t\treturn edge;\n\t  }\n\t  `\n};\nconst WireframeMaterial = /* @__PURE__ */shaderMaterial(WireframeMaterialShaders.uniforms, WireframeMaterialShaders.vertex + /* glsl */`\n  \tvoid main() {\n\t\tinitWireframe();\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n  `, WireframeMaterialShaders.fragment + /* glsl */`\n  void main () {\n\t\t// Compute color\n\n\t\tfloat edge = getWireframe();\n\t\tvec4 colorStroke = vec4(stroke, edge);\n\n\t\t#ifdef FLIP_SIDED\n\t\t\tcolorStroke.rgb = backfaceStroke;\n\t\t#endif\n    \n\t\tvec4 colorFill = vec4(fill, fillOpacity);\n\t\tvec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);\n\n\t\tgl_FragColor = outColor;\n\t}\n  `);\nfunction setWireframeOverride(material, uniforms) {\n  material.onBeforeCompile = shader => {\n    shader.uniforms = {\n      ...shader.uniforms,\n      ...uniforms\n    };\n    shader.vertexShader = shader.vertexShader.replace('void main() {', `\n\t\t  ${WireframeMaterialShaders.vertex}\n\t\t  void main() {\n\t\t\tinitWireframe();\n\t\t`);\n    shader.fragmentShader = shader.fragmentShader.replace('void main() {', `\n\t\t  ${WireframeMaterialShaders.fragment}\n\t\t  void main() {\n\t\t`);\n    shader.fragmentShader = shader.fragmentShader.replace('#include <color_fragment>', /* glsl */`\n\t\t  #include <color_fragment>\n\t\t\t  float edge = getWireframe();\n\t\t  vec4 colorStroke = vec4(stroke, edge);\n\t\t  #ifdef FLIP_SIDED\n\t\t\tcolorStroke.rgb = backfaceStroke;\n\t\t  #endif\n\t\t  vec4 colorFill = vec4(mix(diffuseColor.rgb, fill, fillMix), mix(diffuseColor.a, fillOpacity, fillMix));\n\t\t  vec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);\n\n\t\t  diffuseColor.rgb = outColor.rgb;\n\t\t  diffuseColor.a *= outColor.a;\n\t\t`);\n  };\n  material.side = THREE.DoubleSide;\n  material.transparent = true;\n}\nfunction useWireframeUniforms(uniforms, props) {\n  React.useEffect(() => {\n    var _props$fillOpacity;\n    return void (uniforms.fillOpacity.value = (_props$fillOpacity = props.fillOpacity) !== null && _props$fillOpacity !== void 0 ? _props$fillOpacity : uniforms.fillOpacity.value);\n  }, [props.fillOpacity]);\n  React.useEffect(() => {\n    var _props$fillMix;\n    return void (uniforms.fillMix.value = (_props$fillMix = props.fillMix) !== null && _props$fillMix !== void 0 ? _props$fillMix : uniforms.fillMix.value);\n  }, [props.fillMix]);\n  React.useEffect(() => {\n    var _props$strokeOpacity;\n    return void (uniforms.strokeOpacity.value = (_props$strokeOpacity = props.strokeOpacity) !== null && _props$strokeOpacity !== void 0 ? _props$strokeOpacity : uniforms.strokeOpacity.value);\n  }, [props.strokeOpacity]);\n  React.useEffect(() => {\n    var _props$thickness;\n    return void (uniforms.thickness.value = (_props$thickness = props.thickness) !== null && _props$thickness !== void 0 ? _props$thickness : uniforms.thickness.value);\n  }, [props.thickness]);\n  React.useEffect(() => void (uniforms.colorBackfaces.value = !!props.colorBackfaces), [props.colorBackfaces]);\n  React.useEffect(() => void (uniforms.dash.value = !!props.dash), [props.dash]);\n  React.useEffect(() => void (uniforms.dashInvert.value = !!props.dashInvert), [props.dashInvert]);\n  React.useEffect(() => {\n    var _props$dashRepeats;\n    return void (uniforms.dashRepeats.value = (_props$dashRepeats = props.dashRepeats) !== null && _props$dashRepeats !== void 0 ? _props$dashRepeats : uniforms.dashRepeats.value);\n  }, [props.dashRepeats]);\n  React.useEffect(() => {\n    var _props$dashLength;\n    return void (uniforms.dashLength.value = (_props$dashLength = props.dashLength) !== null && _props$dashLength !== void 0 ? _props$dashLength : uniforms.dashLength.value);\n  }, [props.dashLength]);\n  React.useEffect(() => void (uniforms.squeeze.value = !!props.squeeze), [props.squeeze]);\n  React.useEffect(() => {\n    var _props$squeezeMin;\n    return void (uniforms.squeezeMin.value = (_props$squeezeMin = props.squeezeMin) !== null && _props$squeezeMin !== void 0 ? _props$squeezeMin : uniforms.squeezeMin.value);\n  }, [props.squeezeMin]);\n  React.useEffect(() => {\n    var _props$squeezeMax;\n    return void (uniforms.squeezeMax.value = (_props$squeezeMax = props.squeezeMax) !== null && _props$squeezeMax !== void 0 ? _props$squeezeMax : uniforms.squeezeMax.value);\n  }, [props.squeezeMax]);\n  React.useEffect(() => void (uniforms.stroke.value = props.stroke ? new THREE.Color(props.stroke) : uniforms.stroke.value), [props.stroke]);\n  React.useEffect(() => void (uniforms.fill.value = props.fill ? new THREE.Color(props.fill) : uniforms.fill.value), [props.fill]);\n  React.useEffect(() => void (uniforms.backfaceStroke.value = props.backfaceStroke ? new THREE.Color(props.backfaceStroke) : uniforms.backfaceStroke.value), [props.backfaceStroke]);\n}\n\nexport { WireframeMaterial, WireframeMaterialShaders, setWireframeOverride, useWireframeUniforms };\n", "import { useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\n\n/**\n * Integration and compilation: Faraz Shaikh (https://twitter.com/CantBeFaraz)\n *\n * Based on:\n *  - https://gkjohnson.github.io/threejs-sandbox/screendoor-transparency/ by Garrett Johnson (https://github.com/gkjohnson)\n *\n * Note:\n *  - Must depreciate in favor of https://github.com/mrdoob/three.js/issues/10600 when it's ready.\n */\nfunction ShadowAlpha({\n  opacity,\n  alphaMap\n}) {\n  const depthMaterialRef = React.useRef(null);\n  const distanceMaterialRef = React.useRef(null);\n  const uShadowOpacity = React.useRef({\n    value: 1\n  });\n  const uAlphaMap = React.useRef({\n    value: null\n  });\n  const uHasAlphaMap = React.useRef({\n    value: false\n  });\n  React.useLayoutEffect(() => {\n    depthMaterialRef.current.onBeforeCompile = distanceMaterialRef.current.onBeforeCompile = shader => {\n      // Need to get the \"void main\" line dynamically because the lines for\n      // MeshDistanceMaterial and MeshDepthMaterial are different 🤦‍♂️\n      const mainLineStart = shader.fragmentShader.indexOf('void main');\n      let mainLine = '';\n      let ch;\n      let i = mainLineStart;\n      while (ch !== '\\n' && i < mainLineStart + 100) {\n        ch = shader.fragmentShader.charAt(i);\n        mainLine += ch;\n        i++;\n      }\n      mainLine = mainLine.trim();\n      shader.vertexShader = shader.vertexShader.replace('void main() {', `\n        varying vec2 custom_vUv;\n\n        void main() {\n          custom_vUv = uv;\n          \n        `);\n      shader.fragmentShader = shader.fragmentShader.replace(mainLine, `\n          uniform float uShadowOpacity;\n          uniform sampler2D uAlphaMap;\n          uniform bool uHasAlphaMap;\n\n          varying vec2 custom_vUv;\n  \n          float bayerDither2x2( vec2 v ) {\n            return mod( 3.0 * v.y + 2.0 * v.x, 4.0 );\n          }\n    \n          float bayerDither4x4( vec2 v ) {\n            vec2 P1 = mod( v, 2.0 );\n            vec2 P2 = mod( floor( 0.5  * v ), 2.0 );\n            return 4.0 * bayerDither2x2( P1 ) + bayerDither2x2( P2 );\n          }\n  \n          void main() {\n            float alpha = \n              uHasAlphaMap ? \n                uShadowOpacity * texture2D(uAlphaMap, custom_vUv).x\n              : uShadowOpacity;\n\n            if( ( bayerDither4x4( floor( mod( gl_FragCoord.xy, 4.0 ) ) ) ) / 16.0 >= alpha ) discard;\n            \n          `);\n      shader.uniforms['uShadowOpacity'] = uShadowOpacity.current;\n      shader.uniforms['uAlphaMap'] = uAlphaMap.current;\n      shader.uniforms['uHasAlphaMap'] = uHasAlphaMap.current;\n    };\n  }, []);\n  useFrame(() => {\n    var _r3f;\n    const parent = (_r3f = depthMaterialRef.current.__r3f) == null ? void 0 : _r3f.parent;\n    if (parent) {\n      const parentMainMaterial = parent.material;\n      if (parentMainMaterial) {\n        uShadowOpacity.current.value = opacity !== null && opacity !== void 0 ? opacity : parentMainMaterial.opacity;\n        if (alphaMap === false) {\n          uAlphaMap.current.value = null;\n          uHasAlphaMap.current.value = false;\n        } else {\n          uAlphaMap.current.value = alphaMap || parentMainMaterial.alphaMap;\n          uHasAlphaMap.current.value = !!uAlphaMap.current.value;\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"meshDepthMaterial\", {\n    ref: depthMaterialRef,\n    attach: \"customDepthMaterial\",\n    depthPacking: THREE.RGBADepthPacking\n  }), /*#__PURE__*/React.createElement(\"meshDistanceMaterial\", {\n    ref: distanceMaterialRef,\n    attach: \"customDistanceMaterial\"\n  }));\n}\n\nexport { ShadowAlpha };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\n\nconst _inverseMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _ray = /* @__PURE__ */new THREE.Ray();\nconst _sphere = /* @__PURE__ */new THREE.Sphere();\nconst _position = /* @__PURE__ */new THREE.Vector3();\nclass PositionPoint extends THREE.Group {\n  constructor() {\n    super();\n    this.size = 0;\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n  raycast(raycaster, intersects) {\n    var _raycaster$params$Poi, _raycaster$params$Poi2;\n    const parent = this.instance.current;\n    if (!parent || !parent.geometry) return;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.geometry.drawRange.count) return;\n    const threshold = (_raycaster$params$Poi = (_raycaster$params$Poi2 = raycaster.params.Points) == null ? void 0 : _raycaster$params$Poi2.threshold) !== null && _raycaster$params$Poi !== void 0 ? _raycaster$params$Poi : 1;\n    _sphere.set(this.getWorldPosition(_position), threshold);\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n    _inverseMatrix.copy(parent.matrixWorld).invert();\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n    const rayPointDistanceSq = _ray.distanceSqToPoint(this.position);\n    if (rayPointDistanceSq < localThresholdSq) {\n      const intersectPoint = new THREE.Vector3();\n      _ray.closestPointToPoint(this.position, intersectPoint);\n      intersectPoint.applyMatrix4(this.matrixWorld);\n      const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: instanceId,\n        face: null,\n        object: this\n      });\n    }\n  }\n}\nlet i, positionRef;\nconst context = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst position = /* @__PURE__ */new THREE.Vector3();\n\n/**\n * Instance implementation, relies on react + context to update the attributes based on the children of this component\n */\nconst PointsInstances = /* @__PURE__ */React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}, ref) => {\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors, sizes]] = React.useState(() => [new Float32Array(limit * 3), Float32Array.from({\n    length: limit * 3\n  }, () => 1), Float32Array.from({\n    length: limit\n  }, () => 1)]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n  useFrame(() => {\n    parentRef.current.updateMatrix();\n    parentRef.current.updateMatrixWorld();\n    parentMatrix.copy(parentRef.current.matrixWorld).invert();\n    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n    for (i = 0; i < refs.length; i++) {\n      positionRef = refs[i].current;\n      positionRef.getWorldPosition(position).applyMatrix4(parentMatrix);\n      position.toArray(positions, i * 3);\n      parentRef.current.geometry.attributes.position.needsUpdate = true;\n      positionRef.matrixWorldNeedsUpdate = true;\n      positionRef.color.toArray(colors, i * 3);\n      parentRef.current.geometry.attributes.color.needsUpdate = true;\n      sizes.set([positionRef.size], i);\n      parentRef.current.geometry.attributes.size.needsUpdate = true;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    userData: {\n      instances: refs\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / 3,\n    array: positions,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Point = /* @__PURE__ */React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionPoint\n  }), []);\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionPoint\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\n\n/**\n * Buffer implementation, relies on complete buffers of the correct number, leaves it to the user to update them\n */\n\nconst PointsBuffer = /* @__PURE__ */React.forwardRef(({\n  children,\n  positions,\n  colors,\n  sizes,\n  stride = 3,\n  ...props\n}, forwardedRef) => {\n  const pointsRef = React.useRef(null);\n  React.useImperativeHandle(forwardedRef, () => pointsRef.current, []);\n  useFrame(() => {\n    const attr = pointsRef.current.geometry.attributes;\n    attr.position.needsUpdate = true;\n    if (colors) attr.color.needsUpdate = true;\n    if (sizes) attr.size.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: pointsRef\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / stride,\n    array: positions,\n    itemSize: stride,\n    usage: THREE.DynamicDrawUsage\n  }), colors && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / stride,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), sizes && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length / stride,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), children);\n});\nconst Points = /* @__PURE__ */React.forwardRef((props, forwardedRef) => {\n  if (props.positions instanceof Float32Array) {\n    return /*#__PURE__*/React.createElement(PointsBuffer, _extends({}, props, {\n      ref: forwardedRef\n    }));\n  } else return /*#__PURE__*/React.createElement(PointsInstances, _extends({}, props, {\n    ref: forwardedRef\n  }));\n});\n\nexport { Point, Points, PointsBuffer, PositionPoint };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\n\nconst context = /* @__PURE__ */React.createContext(null);\nconst Segments = /* @__PURE__ */React.forwardRef((props, forwardedRef) => {\n  React.useMemo(() => extend({\n    SegmentObject\n  }), []);\n  const {\n    limit = 1000,\n    lineWidth = 1.0,\n    children,\n    ...rest\n  } = props;\n  const [segments, setSegments] = React.useState([]);\n  const [line] = React.useState(() => new Line2());\n  const [material] = React.useState(() => new LineMaterial());\n  const [geometry] = React.useState(() => new LineSegmentsGeometry());\n  const [resolution] = React.useState(() => new THREE.Vector2(512, 512));\n  const [positions] = React.useState(() => Array(limit * 6).fill(0));\n  const [colors] = React.useState(() => Array(limit * 6).fill(0));\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setSegments(segments => [...segments, ref]);\n      return () => setSegments(segments => segments.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  useFrame(() => {\n    for (let i = 0; i < limit; i++) {\n      var _segments$i;\n      const segment = (_segments$i = segments[i]) == null ? void 0 : _segments$i.current;\n      if (segment) {\n        positions[i * 6 + 0] = segment.start.x;\n        positions[i * 6 + 1] = segment.start.y;\n        positions[i * 6 + 2] = segment.start.z;\n        positions[i * 6 + 3] = segment.end.x;\n        positions[i * 6 + 4] = segment.end.y;\n        positions[i * 6 + 5] = segment.end.z;\n        colors[i * 6 + 0] = segment.color.r;\n        colors[i * 6 + 1] = segment.color.g;\n        colors[i * 6 + 2] = segment.color.b;\n        colors[i * 6 + 3] = segment.color.r;\n        colors[i * 6 + 4] = segment.color.g;\n        colors[i * 6 + 5] = segment.color.b;\n      }\n    }\n    geometry.setColors(colors);\n    geometry.setPositions(positions);\n    line.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: line,\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: geometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    attach: \"material\",\n    vertexColors: true,\n    resolution: resolution,\n    linewidth: lineWidth\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nclass SegmentObject {\n  constructor() {\n    this.color = new THREE.Color('white');\n    this.start = new THREE.Vector3(0, 0, 0);\n    this.end = new THREE.Vector3(0, 0, 0);\n  }\n}\nconst normPos = pos => pos instanceof THREE.Vector3 ? pos : new THREE.Vector3(...(typeof pos === 'number' ? [pos, pos, pos] : pos));\nconst Segment = /* @__PURE__ */React.forwardRef(({\n  color,\n  start,\n  end\n}, forwardedRef) => {\n  const api = React.useContext(context);\n  if (!api) throw 'Segment must used inside Segments component.';\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardedRef, () => ref.current, []);\n  React.useLayoutEffect(() => api.subscribe(ref), []);\n  return /*#__PURE__*/React.createElement(\"segmentObject\", {\n    ref: ref,\n    color: color,\n    start: normPos(start),\n    end: normPos(end)\n  });\n});\n\nexport { Segment, SegmentObject, Segments };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst Detailed = /* @__PURE__ */React.forwardRef(({\n  children,\n  hysteresis = 0,\n  distances,\n  ...props\n}, ref) => {\n  const lodRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => lodRef.current, []);\n  React.useLayoutEffect(() => {\n    const {\n      current: lod\n    } = lodRef;\n    lod.levels.length = 0;\n    lod.children.forEach((object, index) => lod.levels.push({\n      object,\n      hysteresis,\n      distance: distances[index]\n    }));\n  });\n  useFrame(state => {\n    var _lodRef$current;\n    return (_lodRef$current = lodRef.current) == null ? void 0 : _lodRef$current.update(state.camera);\n  });\n  return /*#__PURE__*/React.createElement(\"lOD\", _extends({\n    ref: lodRef\n  }, props), children);\n});\n\nexport { Detailed };\n", "import { WebGLCubeRenderTarget, CubeCamera } from 'three';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction Preload({\n  all,\n  scene,\n  camera\n}) {\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const dCamera = useThree(({\n    camera\n  }) => camera);\n  const dScene = useThree(({\n    scene\n  }) => scene);\n\n  // Layout effect because it must run before React commits\n  React.useLayoutEffect(() => {\n    const invisible = [];\n    if (all) {\n      (scene || dScene).traverse(object => {\n        if (object.visible === false) {\n          invisible.push(object);\n          object.visible = true;\n        }\n      });\n    }\n    // Now compile the scene\n    gl.compile(scene || dScene, camera || dCamera);\n    // And for good measure, hit it with a cube camera\n    const cubeRenderTarget = new WebGLCubeRenderTarget(128);\n    const cubeCamera = new CubeCamera(0.01, 100000, cubeRenderTarget);\n    cubeCamera.update(gl, scene || dScene);\n    cubeRenderTarget.dispose();\n    // Flips these objects back\n    invisible.forEach(object => object.visible = false);\n  }, []);\n  return null;\n}\n\nexport { Preload };\n", "import { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction BakeShadows() {\n  const gl = useThree(state => state.gl);\n  useEffect(() => {\n    gl.shadowMap.autoUpdate = false;\n    gl.shadowMap.needsUpdate = true;\n    return () => {\n      gl.shadowMap.autoUpdate = gl.shadowMap.needsUpdate = true;\n    };\n  }, [gl.shadowMap]);\n  return null;\n}\n\nexport { BakeShadows };\n", "import { Matrix4, Ray, Sphere, Vector3 } from 'three';\n\nconst _inverseMatrix = /* @__PURE__ */new Matrix4();\nconst _ray = /* @__PURE__ */new Ray();\nconst _sphere = /* @__PURE__ */new Sphere();\nconst _vA = /* @__PURE__ */new Vector3();\nfunction meshBounds(raycaster, intersects) {\n  const geometry = this.geometry;\n  const material = this.material;\n  const matrixWorld = this.matrixWorld;\n  if (material === undefined) return;\n  // Checking boundingSphere distance to ray\n  if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n  _sphere.copy(geometry.boundingSphere);\n  _sphere.applyMatrix4(matrixWorld);\n  if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n  _inverseMatrix.copy(matrixWorld).invert();\n  _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n  // Check boundingBox before continuing\n  if (geometry.boundingBox !== null && _ray.intersectBox(geometry.boundingBox, _vA) === null) return;\n  intersects.push({\n    distance: _vA.distanceTo(raycaster.ray.origin),\n    point: _vA.clone(),\n    object: this\n  });\n}\n\nexport { meshBounds };\n", "import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveDpr({\n  pixelated\n}) {\n  const gl = useThree(state => state.gl);\n  const active = useThree(state => state.internal.active);\n  const current = useThree(state => state.performance.current);\n  const initialDpr = useThree(state => state.viewport.initialDpr);\n  const setDpr = useThree(state => state.setDpr);\n  // Restore initial pixelratio on unmount\n  React.useEffect(() => {\n    const domElement = gl.domElement;\n    return () => {\n      if (active) setDpr(initialDpr);\n      if (pixelated && domElement) domElement.style.imageRendering = 'auto';\n    };\n  }, []);\n  // Set adaptive pixelratio\n  React.useEffect(() => {\n    setDpr(current * initialDpr);\n    if (pixelated && gl.domElement) gl.domElement.style.imageRendering = current === 1 ? 'auto' : 'pixelated';\n  }, [current]);\n  return null;\n}\n\nexport { AdaptiveDpr };\n", "import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveEvents() {\n  const get = useThree(state => state.get);\n  const setEvents = useThree(state => state.setEvents);\n  const current = useThree(state => state.performance.current);\n  React.useEffect(() => {\n    const enabled = get().events.enabled;\n    return () => setEvents({\n      enabled\n    });\n  }, []);\n  React.useEffect(() => setEvents({\n    enabled: current === 1\n  }), [current]);\n  return null;\n}\n\nexport { AdaptiveEvents };\n", "import * as React from 'react';\nimport { useState, useContext, useRef, useLayoutEffect, createContext } from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst context = /* @__PURE__ */createContext(null);\nfunction PerformanceMonitor({\n  iterations = 10,\n  ms = 250,\n  threshold = 0.75,\n  step = 0.1,\n  factor: _factor = 0.5,\n  flipflops = Infinity,\n  bounds = refreshrate => refreshrate > 100 ? [60, 100] : [40, 60],\n  onIncline,\n  onDecline,\n  onChange,\n  onFallback,\n  children\n}) {\n  const decimalPlacesRatio = Math.pow(10, 0);\n  const [api, _] = useState(() => ({\n    fps: 0,\n    index: 0,\n    factor: _factor,\n    flipped: 0,\n    refreshrate: 0,\n    fallback: false,\n    frames: [],\n    averages: [],\n    subscriptions: new Map(),\n    subscribe: ref => {\n      const key = Symbol();\n      api.subscriptions.set(key, ref.current);\n      return () => void api.subscriptions.delete(key);\n    }\n  }));\n  let lastFactor = 0;\n  useFrame(() => {\n    const {\n      frames,\n      averages\n    } = api;\n\n    // If the fallback has been reached do not continue running samples\n    if (api.fallback) return;\n    if (averages.length < iterations) {\n      frames.push(performance.now());\n      const msPassed = frames[frames.length - 1] - frames[0];\n      if (msPassed >= ms) {\n        api.fps = Math.round(frames.length / msPassed * 1000 * decimalPlacesRatio) / decimalPlacesRatio;\n        api.refreshrate = Math.max(api.refreshrate, api.fps);\n        averages[api.index++ % iterations] = api.fps;\n        if (averages.length === iterations) {\n          const [lower, upper] = bounds(api.refreshrate);\n          const upperBounds = averages.filter(value => value >= upper);\n          const lowerBounds = averages.filter(value => value < lower);\n          // Trigger incline when more than -threshold- avgs exceed the upper bound\n          if (upperBounds.length > iterations * threshold) {\n            api.factor = Math.min(1, api.factor + step);\n            api.flipped++;\n            if (onIncline) onIncline(api);\n            api.subscriptions.forEach(value => value.onIncline && value.onIncline(api));\n          }\n          // Trigger decline when more than -threshold- avgs are below the lower bound\n          if (lowerBounds.length > iterations * threshold) {\n            api.factor = Math.max(0, api.factor - step);\n            api.flipped++;\n            if (onDecline) onDecline(api);\n            api.subscriptions.forEach(value => value.onDecline && value.onDecline(api));\n          }\n          if (lastFactor !== api.factor) {\n            lastFactor = api.factor;\n            if (onChange) onChange(api);\n            api.subscriptions.forEach(value => value.onChange && value.onChange(api));\n          }\n          if (api.flipped > flipflops && !api.fallback) {\n            api.fallback = true;\n            if (onFallback) onFallback(api);\n            api.subscriptions.forEach(value => value.onFallback && value.onFallback(api));\n          }\n          api.averages = [];\n\n          // Resetting the refreshrate creates more problems than it solves atm\n          // api.refreshrate = 0\n        }\n\n        api.frames = [];\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children);\n}\nfunction usePerformanceMonitor({\n  onIncline,\n  onDecline,\n  onChange,\n  onFallback\n}) {\n  const api = useContext(context);\n  const ref = useRef({\n    onIncline,\n    onDecline,\n    onChange,\n    onFallback\n  });\n  useLayoutEffect(() => {\n    ref.current.onIncline = onIncline;\n    ref.current.onDecline = onDecline;\n    ref.current.onChange = onChange;\n    ref.current.onFallback = onFallback;\n  }, [onIncline, onDecline, onChange, onFallback]);\n  useLayoutEffect(() => api.subscribe(ref), [api]);\n}\n\nexport { PerformanceMonitor, usePerformanceMonitor };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nconst RenderTexture = /* @__PURE__ */React.forwardRef(({\n  children,\n  compute,\n  width,\n  height,\n  samples = 8,\n  renderPriority = 0,\n  eventPriority = 0,\n  frames = Infinity,\n  stencilBuffer = false,\n  depthBuffer = true,\n  generateMipmaps = false,\n  ...props\n}, forwardRef) => {\n  const {\n    size,\n    viewport\n  } = useThree();\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\n    samples,\n    stencilBuffer,\n    depthBuffer,\n    generateMipmaps\n  });\n  const [vScene] = React.useState(() => new THREE.Scene());\n  const uvCompute = React.useCallback((event, state, previous) => {\n    var _fbo$texture, _previous$previousRoo;\n    // Since this is only a texture it does not have an easy way to obtain the parent, which we\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\n    // next Object3D.\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\n    while (parent && !(parent instanceof THREE.Object3D)) {\n      parent = parent.__r3f.parent;\n    }\n    if (!parent) return false;\n    // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState());\n    // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n    const [intersection] = previous.raycaster.intersectObject(parent);\n    if (!intersection) return false;\n    // We take that hits uv coords, set up this layers raycaster, et voilà, we have raycasting on arbitrary surfaces\n    const uv = intersection.uv;\n    if (!uv) return false;\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\n  }, []);\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    fbo: fbo\n  }, children, /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  })), vScene, {\n    events: {\n      compute: compute || uvCompute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)));\n});\n\n// The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\nfunction Container({\n  frames,\n  renderPriority,\n  children,\n  fbo\n}) {\n  let count = 0;\n  let oldAutoClear;\n  let oldXrEnabled;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      oldAutoClear = state.gl.autoClear;\n      oldXrEnabled = state.gl.xr.enabled;\n      state.gl.autoClear = true;\n      state.gl.xr.enabled = false;\n      state.gl.setRenderTarget(fbo);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(null);\n      state.gl.autoClear = oldAutoClear;\n      state.gl.xr.enabled = oldXrEnabled;\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nconst RenderCubeTexture = /* @__PURE__ */React.forwardRef(({\n  children,\n  compute,\n  renderPriority = -1,\n  eventPriority = 0,\n  frames = Infinity,\n  stencilBuffer = false,\n  depthBuffer = true,\n  generateMipmaps = false,\n  resolution = 896,\n  near = 0.1,\n  far = 1000,\n  flip = false,\n  position,\n  rotation,\n  scale,\n  quaternion,\n  matrix,\n  matrixAutoUpdate,\n  ...props\n}, forwardRef) => {\n  const {\n    size,\n    viewport\n  } = useThree();\n  const camera = React.useRef(null);\n  const fbo = React.useMemo(() => {\n    const fbo = new THREE.WebGLCubeRenderTarget(Math.max((resolution || size.width) * viewport.dpr, (resolution || size.height) * viewport.dpr), {\n      stencilBuffer,\n      depthBuffer,\n      generateMipmaps\n    });\n    fbo.texture.isRenderTargetTexture = !flip;\n    fbo.texture.flipY = true;\n    fbo.texture.type = THREE.HalfFloatType;\n    return fbo;\n  }, [resolution, flip]);\n  React.useEffect(() => {\n    return () => fbo.dispose();\n  }, [fbo]);\n  const [vScene] = React.useState(() => new THREE.Scene());\n  React.useImperativeHandle(forwardRef, () => ({\n    scene: vScene,\n    fbo,\n    camera: camera.current\n  }), [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    camera: camera\n  }, children, /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  })), vScene, {\n    events: {\n      compute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)), /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo],\n    position: position,\n    rotation: rotation,\n    scale: scale,\n    quaternion: quaternion,\n    matrix: matrix,\n    matrixAutoUpdate: matrixAutoUpdate\n  }));\n});\n\n// The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\nfunction Container({\n  frames,\n  renderPriority,\n  children,\n  camera\n}) {\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(state.gl, state.scene);\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderCubeTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nconst Mask = /* @__PURE__ */React.forwardRef(({\n  id = 1,\n  colorWrite = false,\n  depthWrite = false,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  const spread = React.useMemo(() => ({\n    colorWrite,\n    depthWrite,\n    stencilWrite: true,\n    stencilRef: id,\n    stencilFunc: THREE.AlwaysStencilFunc,\n    stencilFail: THREE.ReplaceStencilOp,\n    stencilZFail: THREE.ReplaceStencilOp,\n    stencilZPass: THREE.ReplaceStencilOp\n  }), [id, colorWrite, depthWrite]);\n  React.useLayoutEffect(() => {\n    Object.assign(ref.current.material, spread);\n  });\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    renderOrder: -id\n  }, props));\n});\nfunction useMask(id, inverse = false) {\n  return {\n    stencilWrite: true,\n    stencilRef: id,\n    stencilFunc: inverse ? THREE.NotEqualStencilFunc : THREE.EqualStencilFunc,\n    stencilFail: THREE.KeepStencilOp,\n    stencilZFail: THREE.KeepStencilOp,\n    stencilZPass: THREE.KeepStencilOp\n  };\n}\n\nexport { Mask, useMask };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { RenderCubeTexture } from './RenderCubeTexture.js';\n\nfunction Fisheye({\n  renderPriority = 1,\n  zoom = 0,\n  segments = 64,\n  children,\n  resolution = 896,\n  ...props\n}) {\n  const sphere = React.useRef(null);\n  const cubeApi = React.useRef(null);\n\n  // This isn't more than a simple sphere and a fixed orthographc camera\n  // pointing at it. A virtual scene is portalled into the environment map\n  // of its material. The cube-camera filming that scene is being synced to\n  // the portals default camera with the <UpdateCubeCamera> component.\n\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const [orthoC] = React.useState(() => new THREE.OrthographicCamera());\n  React.useLayoutEffect(() => {\n    orthoC.position.set(0, 0, 100);\n    orthoC.zoom = 100;\n    orthoC.left = width / -2;\n    orthoC.right = width / 2;\n    orthoC.top = height / 2;\n    orthoC.bottom = height / -2;\n    orthoC.updateProjectionMatrix();\n  }, [width, height]);\n  const radius = Math.sqrt(width * width + height * height) / 100 * (0.5 + zoom / 2);\n  const normal = new THREE.Vector3();\n  const sph = new THREE.Sphere(new THREE.Vector3(), radius);\n  const normalMatrix = new THREE.Matrix3();\n  const compute = React.useCallback((event, state, prev) => {\n    // Raycast from the render camera to the sphere and get the surface normal\n    // of the point hit in world space of the sphere scene\n    // We have to set the raycaster using the orthocam and pointer\n    // to perform sphere interscetions.\n    state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n    state.raycaster.setFromCamera(state.pointer, orthoC);\n    if (!state.raycaster.ray.intersectSphere(sph, normal)) return;else normal.normalize();\n    // Get the matrix for transforming normals into world space\n    normalMatrix.getNormalMatrix(cubeApi.current.camera.matrixWorld);\n    // Get the ray\n    cubeApi.current.camera.getWorldPosition(state.raycaster.ray.origin);\n    state.raycaster.ray.direction.set(0, 0, 1).reflect(normal);\n    state.raycaster.ray.direction.x *= -1; // flip across X to accommodate the \"flip\" of the env map\n    state.raycaster.ray.direction.applyNormalMatrix(normalMatrix).multiplyScalar(-1);\n    return undefined;\n  }, []);\n  useFrame(state => {\n    // Take over rendering\n    if (renderPriority) state.gl.render(sphere.current, orthoC);\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: sphere\n  }, props, {\n    scale: radius\n  }), /*#__PURE__*/React.createElement(\"sphereGeometry\", {\n    args: [1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", null, /*#__PURE__*/React.createElement(RenderCubeTexture, {\n    compute: compute,\n    attach: \"envMap\",\n    flip: true,\n    resolution: resolution,\n    ref: cubeApi\n  }, children, /*#__PURE__*/React.createElement(UpdateCubeCamera, {\n    api: cubeApi\n  })))));\n}\nfunction UpdateCubeCamera({\n  api\n}) {\n  const t = new THREE.Vector3();\n  const r = new THREE.Quaternion();\n  const s = new THREE.Vector3();\n  const e = new THREE.Euler(0, Math.PI, 0);\n  useFrame(state => {\n    // Read out the cameras whereabouts, state.camera is the one *within* the portal\n    state.camera.matrixWorld.decompose(t, r, s);\n    // Apply its position and rotation, flip the Y axis\n    api.current.camera.position.copy(t);\n    api.current.camera.quaternion.setFromEuler(e).premultiply(r);\n  });\n  return null;\n}\n\nexport { Fisheye };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { useIntersect } from './useIntersect.js';\nimport { useFBO } from './useFBO.js';\nimport { RenderTexture } from './RenderTexture.js';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { FullScreenQuad } from 'three-stdlib';\nimport { version } from '../helpers/constants.js';\n\nconst PortalMaterialImpl = /* @__PURE__ */shaderMaterial({\n  blur: 0,\n  map: null,\n  sdf: null,\n  blend: 0,\n  size: 0,\n  resolution: /* @__PURE__ */new THREE.Vector2()\n}, `varying vec2 vUv;\n   void main() {\n     gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n     vUv = uv;\n   }`, `uniform sampler2D sdf;\n   uniform sampler2D map;\n   uniform float blur;\n   uniform float size;\n   uniform float time;\n   uniform vec2 resolution;\n   varying vec2 vUv;\n   #include <packing>\n   void main() {\n     vec2 uv = gl_FragCoord.xy / resolution.xy;\n     vec4 t = texture2D(map, uv);\n     float k = blur;\n     float d = texture2D(sdf, vUv).r/size;\n     float alpha = 1.0 - smoothstep(0.0, 1.0, clamp(d/k + 1.0, 0.0, 1.0));\n     gl_FragColor = vec4(t.rgb, blur == 0.0 ? t.a : t.a * alpha);\n     #include <tonemapping_fragment>\n     #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nconst MeshPortalMaterial = /* @__PURE__ */React.forwardRef(({\n  children,\n  events = undefined,\n  blur = 0,\n  eventPriority = 0,\n  renderPriority = 0,\n  worldUnits = false,\n  resolution = 512,\n  ...props\n}, fref) => {\n  extend({\n    PortalMaterialImpl\n  });\n  const ref = React.useRef(null);\n  const {\n    scene,\n    gl,\n    size,\n    viewport,\n    setEvents\n  } = useThree();\n  const maskRenderTarget = useFBO(resolution, resolution);\n  const [priority, setPriority] = React.useState(0);\n  useFrame(() => {\n    // If blend is > 0 then the portal is being entered, the render-priority must change\n    const p = ref.current.blend > 0 ? Math.max(1, renderPriority) : 0;\n    if (priority !== p) setPriority(p);\n  });\n  React.useEffect(() => {\n    if (events !== undefined) setEvents({\n      enabled: !events\n    });\n  }, [events]);\n  const [visible, setVisible] = React.useState(true);\n  // See if the parent mesh is in the camera frustum\n  const parent = useIntersect(setVisible);\n  React.useLayoutEffect(() => {\n    var _ref$current;\n    // Since the ref above is not tied to a mesh directly (we're inside a material),\n    // it has to be tied to the parent mesh here\n    parent.current = (_ref$current = ref.current) == null ? void 0 : _ref$current.__r3f.parent;\n  }, []);\n  React.useLayoutEffect(() => {\n    if (!parent.current) return;\n\n    // Apply the SDF mask only once\n    if (blur && ref.current.sdf === null) {\n      const tempMesh = new THREE.Mesh(parent.current.geometry, new THREE.MeshBasicMaterial());\n      const boundingBox = new THREE.Box3().setFromBufferAttribute(tempMesh.geometry.attributes.position);\n      const orthoCam = new THREE.OrthographicCamera(boundingBox.min.x * (1 + 2 / resolution), boundingBox.max.x * (1 + 2 / resolution), boundingBox.max.y * (1 + 2 / resolution), boundingBox.min.y * (1 + 2 / resolution), 0.1, 1000);\n      orthoCam.position.set(0, 0, 1);\n      orthoCam.lookAt(0, 0, 0);\n      gl.setRenderTarget(maskRenderTarget);\n      gl.render(tempMesh, orthoCam);\n      const sg = makeSDFGenerator(resolution, resolution, gl);\n      const sdf = sg(maskRenderTarget.texture);\n      const readSdf = new Float32Array(resolution * resolution);\n      gl.readRenderTargetPixels(sdf, 0, 0, resolution, resolution, readSdf);\n      // Get smallest value in sdf\n      let min = Infinity;\n      for (let i = 0; i < readSdf.length; i++) {\n        if (readSdf[i] < min) min = readSdf[i];\n      }\n      min = -min;\n      ref.current.size = min;\n      ref.current.sdf = sdf.texture;\n      gl.setRenderTarget(null);\n    }\n  }, [resolution, blur]);\n  React.useImperativeHandle(fref, () => ref.current);\n  const compute = React.useCallback((event, state, previous) => {\n    var _ref$current2;\n    if (!parent.current) return false;\n    state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n    state.raycaster.setFromCamera(state.pointer, state.camera);\n    if (((_ref$current2 = ref.current) == null ? void 0 : _ref$current2.blend) === 0) {\n      // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n      const [intersection] = state.raycaster.intersectObject(parent.current);\n      if (!intersection) {\n        // Cancel out the raycast camera if the parent mesh isn't hit\n        state.raycaster.camera = undefined;\n        return false;\n      }\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"portalMaterialImpl\", _extends({\n    ref: ref,\n    blur: blur,\n    blend: 0,\n    resolution: [size.width * viewport.dpr, size.height * viewport.dpr],\n    attach: \"material\"\n  }, props), /*#__PURE__*/React.createElement(RenderTexture, {\n    attach: \"map\",\n    frames: visible ? Infinity : 0,\n    eventPriority: eventPriority,\n    renderPriority: renderPriority,\n    compute: compute\n  }, children, /*#__PURE__*/React.createElement(ManagePortalScene, {\n    events: events,\n    rootScene: scene,\n    priority: priority,\n    material: ref,\n    worldUnits: worldUnits\n  })));\n});\nfunction ManagePortalScene({\n  events = undefined,\n  rootScene,\n  material,\n  priority,\n  worldUnits\n}) {\n  const scene = useThree(state => state.scene);\n  const setEvents = useThree(state => state.setEvents);\n  const buffer1 = useFBO();\n  const buffer2 = useFBO();\n  React.useLayoutEffect(() => {\n    scene.matrixAutoUpdate = false;\n  }, []);\n  React.useEffect(() => {\n    if (events !== undefined) setEvents({\n      enabled: events\n    });\n  }, [events]);\n  const [quad, blend] = React.useMemo(() => {\n    // This fullscreen-quad is used to blend the two textures\n    const blend = {\n      value: 0\n    };\n    const quad = new FullScreenQuad(new THREE.ShaderMaterial({\n      uniforms: {\n        a: {\n          value: buffer1.texture\n        },\n        b: {\n          value: buffer2.texture\n        },\n        blend\n      },\n      vertexShader: /*glsl*/`\n          varying vec2 vUv;\n          void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n          }`,\n      fragmentShader: /*glsl*/`\n          uniform sampler2D a;\n          uniform sampler2D b;\n          uniform float blend;\n          varying vec2 vUv;\n          #include <packing>\n          void main() {\n            vec4 ta = texture2D(a, vUv);\n            vec4 tb = texture2D(b, vUv);\n            gl_FragColor = mix(tb, ta, blend);\n            #include <tonemapping_fragment>\n            #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n          }`\n    }));\n    return [quad, blend];\n  }, []);\n  useFrame(state => {\n    var _material$current;\n    let parent = material == null || (_material$current = material.current) == null ? void 0 : _material$current.__r3f.parent;\n    if (parent) {\n      // Move portal contents along with the parent if worldUnits is true\n      if (!worldUnits) {\n        var _material$current2;\n        // If the portal renders exclusively the original scene needs to be updated\n        if (priority && ((_material$current2 = material.current) == null ? void 0 : _material$current2.blend) === 1) parent.updateWorldMatrix(true, false);\n        scene.matrixWorld.copy(parent.matrixWorld);\n      } else scene.matrixWorld.identity();\n\n      // This bit is only necessary if the portal is blended, now it has a render-priority\n      // and will take over the render loop\n      if (priority) {\n        var _material$current3, _material$current4, _material$current5;\n        if (((_material$current3 = material.current) == null ? void 0 : _material$current3.blend) > 0 && ((_material$current4 = material.current) == null ? void 0 : _material$current4.blend) < 1) {\n          // If blend is ongoing (> 0 and < 1) then we need to render both the root scene\n          // and the portal scene, both will then be mixed in the quad from above\n          blend.value = material.current.blend;\n          state.gl.setRenderTarget(buffer1);\n          state.gl.render(scene, state.camera);\n          state.gl.setRenderTarget(buffer2);\n          state.gl.render(rootScene, state.camera);\n          state.gl.setRenderTarget(null);\n          quad.render(state.gl);\n        } else if (((_material$current5 = material.current) == null ? void 0 : _material$current5.blend) === 1) {\n          // However if blend is 1 we only need to render the portal scene\n          state.gl.render(scene, state.camera);\n        }\n      }\n    }\n  }, priority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nconst makeSDFGenerator = (clientWidth, clientHeight, renderer) => {\n  let finalTarget = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.LinearMipmapLinearFilter,\n    magFilter: THREE.LinearFilter,\n    type: THREE.FloatType,\n    format: THREE.RedFormat,\n    generateMipmaps: true\n  });\n  let outsideRenderTarget = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter\n  });\n  let insideRenderTarget = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter\n  });\n  let outsideRenderTarget2 = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter\n  });\n  let insideRenderTarget2 = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter\n  });\n  let outsideRenderTargetFinal = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter,\n    type: THREE.FloatType,\n    format: THREE.RedFormat\n  });\n  let insideRenderTargetFinal = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter,\n    type: THREE.FloatType,\n    format: THREE.RedFormat\n  });\n  const uvRender = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      tex: {\n        value: null\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        uniform sampler2D tex;\n        varying vec2 vUv;\n        #include <packing>\n        void main() {\n          gl_FragColor = pack2HalfToRGBA(vUv * (round(texture2D(tex, vUv).x)));\n        }`\n  }));\n  const uvRenderInside = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      tex: {\n        value: null\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        uniform sampler2D tex;\n        varying vec2 vUv;\n        #include <packing>\n        void main() {\n          gl_FragColor = pack2HalfToRGBA(vUv * (1.0 - round(texture2D(tex, vUv).x)));\n        }`\n  }));\n  const jumpFloodRender = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      tex: {\n        value: null\n      },\n      offset: {\n        value: 0.0\n      },\n      level: {\n        value: 0.0\n      },\n      maxSteps: {\n        value: 0.0\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        varying vec2 vUv;\n        uniform sampler2D tex;\n        uniform float offset;\n        uniform float level;\n        uniform float maxSteps;\n        #include <packing>\n        void main() {\n          float closestDist = 9999999.9;\n          vec2 closestPos = vec2(0.0);\n          for (float x = -1.0; x <= 1.0; x += 1.0) {\n            for (float y = -1.0; y <= 1.0; y += 1.0) {\n              vec2 voffset = vUv;\n              voffset += vec2(x, y) * vec2(${1 / clientWidth}, ${1 / clientHeight}) * offset;\n              vec2 pos = unpackRGBATo2Half(texture2D(tex, voffset));\n              float dist = distance(pos.xy, vUv);\n              if(pos.x != 0.0 && pos.y != 0.0 && dist < closestDist) {\n                closestDist = dist;\n                closestPos = pos;\n              }\n            }\n          }\n          gl_FragColor = pack2HalfToRGBA(closestPos);\n        }`\n  }));\n  const distanceFieldRender = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      tex: {\n        value: null\n      },\n      size: {\n        value: new THREE.Vector2(clientWidth, clientHeight)\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        varying vec2 vUv;\n        uniform sampler2D tex;\n        uniform vec2 size;\n        #include <packing>\n        void main() {\n          gl_FragColor = vec4(distance(size * unpackRGBATo2Half(texture2D(tex, vUv)), size * vUv), 0.0, 0.0, 0.0);\n        }`\n  }));\n  const compositeRender = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      inside: {\n        value: insideRenderTargetFinal.texture\n      },\n      outside: {\n        value: outsideRenderTargetFinal.texture\n      },\n      tex: {\n        value: null\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        varying vec2 vUv;\n        uniform sampler2D inside;\n        uniform sampler2D outside;\n        uniform sampler2D tex;\n        #include <packing>\n        void main() {\n          float i = texture2D(inside, vUv).x;\n          float o =texture2D(outside, vUv).x;\n          if (texture2D(tex, vUv).x == 0.0) {\n            gl_FragColor = vec4(o, 0.0, 0.0, 0.0);\n          } else {\n            gl_FragColor = vec4(-i, 0.0, 0.0, 0.0);\n          }\n        }`\n  }));\n  return image => {\n    let ft = finalTarget;\n    image.minFilter = THREE.NearestFilter;\n    image.magFilter = THREE.NearestFilter;\n    uvRender.material.uniforms.tex.value = image;\n    renderer.setRenderTarget(outsideRenderTarget);\n    uvRender.render(renderer);\n    const passes = Math.ceil(Math.log(Math.max(clientWidth, clientHeight)) / Math.log(2.0));\n    let lastTarget = outsideRenderTarget;\n    let target = null;\n    for (let i = 0; i < passes; i++) {\n      const offset = Math.pow(2, passes - i - 1);\n      target = lastTarget === outsideRenderTarget ? outsideRenderTarget2 : outsideRenderTarget;\n      jumpFloodRender.material.uniforms.level.value = i;\n      jumpFloodRender.material.uniforms.maxSteps.value = passes;\n      jumpFloodRender.material.uniforms.offset.value = offset;\n      jumpFloodRender.material.uniforms.tex.value = lastTarget.texture;\n      renderer.setRenderTarget(target);\n      jumpFloodRender.render(renderer);\n      lastTarget = target;\n    }\n    renderer.setRenderTarget(outsideRenderTargetFinal);\n    distanceFieldRender.material.uniforms.tex.value = target.texture;\n    distanceFieldRender.render(renderer);\n    uvRenderInside.material.uniforms.tex.value = image;\n    renderer.setRenderTarget(insideRenderTarget);\n    uvRenderInside.render(renderer);\n    lastTarget = insideRenderTarget;\n    for (let i = 0; i < passes; i++) {\n      const offset = Math.pow(2, passes - i - 1);\n      target = lastTarget === insideRenderTarget ? insideRenderTarget2 : insideRenderTarget;\n      jumpFloodRender.material.uniforms.level.value = i;\n      jumpFloodRender.material.uniforms.maxSteps.value = passes;\n      jumpFloodRender.material.uniforms.offset.value = offset;\n      jumpFloodRender.material.uniforms.tex.value = lastTarget.texture;\n      renderer.setRenderTarget(target);\n      jumpFloodRender.render(renderer);\n      lastTarget = target;\n    }\n    renderer.setRenderTarget(insideRenderTargetFinal);\n    distanceFieldRender.material.uniforms.tex.value = target.texture;\n    distanceFieldRender.render(renderer);\n    renderer.setRenderTarget(ft);\n    compositeRender.material.uniforms.tex.value = image;\n    compositeRender.render(renderer);\n    renderer.setRenderTarget(null);\n    return ft;\n  };\n};\n\nexport { MeshPortalMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { context, useThree, createPortal, useFrame } from '@react-three/fiber';\nimport tunnel from 'tunnel-rat';\n\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst col = new THREE.Color();\nconst tracked = tunnel();\n\n/**\n * In `@react-three/fiber` after `v8.0.0` but prior to `v8.1.0`, `state.size` contained only dimension\n * information. After `v8.1.0`, position information (`top`, `left`) was added\n *\n * @todo remove this when drei supports v9 and up\n */\n\nfunction isNonLegacyCanvasSize(size) {\n  return 'top' in size;\n}\nfunction computeContainerPosition(canvasSize, trackRect) {\n  const {\n    right,\n    top,\n    left: trackLeft,\n    bottom: trackBottom,\n    width,\n    height\n  } = trackRect;\n  const isOffscreen = trackRect.bottom < 0 || top > canvasSize.height || right < 0 || trackRect.left > canvasSize.width;\n  if (isNonLegacyCanvasSize(canvasSize)) {\n    const canvasBottom = canvasSize.top + canvasSize.height;\n    const bottom = canvasBottom - trackBottom;\n    const left = trackLeft - canvasSize.left;\n    return {\n      position: {\n        width,\n        height,\n        left,\n        top,\n        bottom,\n        right\n      },\n      isOffscreen\n    };\n  }\n  // Fall back on old behavior if r3f < 8.1.0\n  const bottom = canvasSize.height - trackBottom;\n  return {\n    position: {\n      width,\n      height,\n      top,\n      left: trackLeft,\n      bottom,\n      right\n    },\n    isOffscreen\n  };\n}\nfunction prepareSkissor(state, {\n  left,\n  bottom,\n  width,\n  height\n}) {\n  let autoClear;\n  const aspect = width / height;\n  if (isOrthographicCamera(state.camera)) {\n    if (state.camera.left !== width / -2 || state.camera.right !== width / 2 || state.camera.top !== height / 2 || state.camera.bottom !== height / -2) {\n      Object.assign(state.camera, {\n        left: width / -2,\n        right: width / 2,\n        top: height / 2,\n        bottom: height / -2\n      });\n      state.camera.updateProjectionMatrix();\n    }\n  } else if (state.camera.aspect !== aspect) {\n    state.camera.aspect = aspect;\n    state.camera.updateProjectionMatrix();\n  }\n  autoClear = state.gl.autoClear;\n  state.gl.autoClear = false;\n  state.gl.setViewport(left, bottom, width, height);\n  state.gl.setScissor(left, bottom, width, height);\n  state.gl.setScissorTest(true);\n  return autoClear;\n}\nfunction finishSkissor(state, autoClear) {\n  // Restore the default state\n  state.gl.setScissorTest(false);\n  state.gl.autoClear = autoClear;\n}\nfunction clear(state) {\n  state.gl.getClearColor(col);\n  state.gl.setClearColor(col, state.gl.getClearAlpha());\n  state.gl.clear(true, true);\n}\nfunction Container({\n  visible = true,\n  canvasSize,\n  scene,\n  index,\n  children,\n  frames,\n  rect,\n  track\n}) {\n  const rootState = useThree();\n  const [isOffscreen, setOffscreen] = React.useState(false);\n  let frameCount = 0;\n  useFrame(state => {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n      if (track) rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n    if (rect.current) {\n      const {\n        position,\n        isOffscreen: _isOffscreen\n      } = computeContainerPosition(canvasSize, rect.current);\n      if (isOffscreen !== _isOffscreen) setOffscreen(_isOffscreen);\n      if (visible && !isOffscreen && rect.current) {\n        const autoClear = prepareSkissor(state, position);\n        // When children are present render the portalled scene, otherwise the default scene\n        state.gl.render(children ? state.scene : scene, state.camera);\n        finishSkissor(state, autoClear);\n      }\n    }\n  }, index);\n  React.useLayoutEffect(() => {\n    const curRect = rect.current;\n    if (curRect && (!visible || !isOffscreen)) {\n      // If the view is not visible clear it once, but stop rendering afterwards!\n      const {\n        position\n      } = computeContainerPosition(canvasSize, curRect);\n      const autoClear = prepareSkissor(rootState, position);\n      clear(rootState);\n      finishSkissor(rootState, autoClear);\n    }\n  }, [visible, isOffscreen]);\n  React.useEffect(() => {\n    if (!track) return;\n    const curRect = rect.current;\n    // Connect the event layer to the tracking element\n    const old = rootState.get().events.connected;\n    rootState.setEvents({\n      connected: track.current\n    });\n    return () => {\n      if (curRect) {\n        const {\n          position\n        } = computeContainerPosition(canvasSize, curRect);\n        const autoClear = prepareSkissor(rootState, position);\n        clear(rootState);\n        finishSkissor(rootState, autoClear);\n      }\n      rootState.setEvents({\n        connected: old\n      });\n    };\n  }, [track]);\n  React.useEffect(() => {\n    if (isNonLegacyCanvasSize(canvasSize)) return;\n    console.warn('Detected @react-three/fiber canvas size does not include position information. <View /> may not work as expected. ' + 'Upgrade to @react-three/fiber ^8.1.0 for support.\\n See https://github.com/pmndrs/drei/issues/944');\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  }));\n}\nconst CanvasView = /*#__PURE__*/React.forwardRef(({\n  track,\n  visible = true,\n  index = 1,\n  id,\n  style,\n  className,\n  frames = Infinity,\n  children,\n  ...props\n}, fref) => {\n  var _rect$current, _rect$current2, _rect$current3, _rect$current4;\n  const rect = React.useRef(null);\n  const {\n    size,\n    scene\n  } = useThree();\n  const [virtualScene] = React.useState(() => new THREE.Scene());\n  const [ready, toggle] = React.useReducer(() => true, false);\n  const compute = React.useCallback((event, state) => {\n    if (rect.current && track && track.current && event.target === track.current) {\n      const {\n        width,\n        height,\n        left,\n        top\n      } = rect.current;\n      const x = event.clientX - left;\n      const y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect, track]);\n  React.useEffect(() => {\n    var _track$current2;\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\n    if (track) rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect();\n    // And now we can proceed\n    toggle();\n  }, [track]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), ready && createPortal( /*#__PURE__*/React.createElement(Container, {\n    visible: visible,\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute,\n      priority: index\n    },\n    size: {\n      width: (_rect$current = rect.current) == null ? void 0 : _rect$current.width,\n      height: (_rect$current2 = rect.current) == null ? void 0 : _rect$current2.height,\n      // @ts-ignore\n      top: (_rect$current3 = rect.current) == null ? void 0 : _rect$current3.top,\n      // @ts-ignore\n      left: (_rect$current4 = rect.current) == null ? void 0 : _rect$current4.left\n    }\n  }));\n});\nconst HtmlView = /*#__PURE__*/React.forwardRef(({\n  as: El = 'div',\n  id,\n  visible,\n  className,\n  style,\n  index = 1,\n  track,\n  frames = Infinity,\n  children,\n  ...props\n}, fref) => {\n  const uuid = React.useId();\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(El, _extends({\n    ref: ref,\n    id: id,\n    className: className,\n    style: style\n  }, props)), /*#__PURE__*/React.createElement(tracked.In, null, /*#__PURE__*/React.createElement(CanvasView, {\n    visible: visible,\n    key: uuid,\n    track: ref,\n    frames: frames,\n    index: index\n  }, children)));\n});\nconst View = /*#__PURE__*/React.forwardRef((props, fref) => {\n  // If we're inside a canvas we should be able to access the context store\n  const store = React.useContext(context);\n  // If that's not the case we render a tunnel\n  if (!store) return /*#__PURE__*/React.createElement(HtmlView, _extends({\n    ref: fref\n  }, props));\n  // Otherwise a plain canvas-view\n  else return /*#__PURE__*/React.createElement(CanvasView, _extends({\n    ref: fref\n  }, props));\n});\nView.Port = () => /*#__PURE__*/React.createElement(tracked.Out, null);\n\nexport { View };\n", "import React from 'react';\nimport { create } from 'zustand';\n\nvar _window$document, _window$navigator;\n/**\n * An SSR-friendly useLayoutEffect.\n *\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect elsewhere.\n *\n * @see https://github.com/facebook/react/issues/14927\n */\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && ((_window$document = window.document) != null && _window$document.createElement || ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.product) === 'ReactNative') ? React.useLayoutEffect : React.useEffect;\n\nfunction tunnel() {\n  const useStore = create(set => ({\n    current: new Array(),\n    version: 0,\n    set\n  }));\n  return {\n    In: ({\n      children\n    }) => {\n      const set = useStore(state => state.set);\n      const version = useStore(state => state.version);\n      /* When this component mounts, we increase the store's version number.\n      This will cause all existing rats to re-render (just like if the Out component\n      were mapping items to a list.) The re-rendering will cause the final \n      order of rendered components to match what the user is expecting. */\n\n      useIsomorphicLayoutEffect(() => {\n        set(state => ({\n          version: state.version + 1\n        }));\n      }, []);\n      /* Any time the children _or_ the store's version number change, insert\n      the specified React children into the list of rats. */\n\n      useIsomorphicLayoutEffect(() => {\n        set(({\n          current\n        }) => ({\n          current: [...current, children]\n        }));\n        return () => set(({\n          current\n        }) => ({\n          current: current.filter(c => c !== children)\n        }));\n      }, [children, version]);\n      return null;\n    },\n    Out: () => {\n      const current = useStore(state => state.current);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, current);\n    }\n  };\n}\n\nexport { tunnel as default };\n", "const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n", "import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { AxisArrow } from './AxisArrow.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { ScalingSphere } from './ScalingSphere.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\n\nconst mL0 = /* @__PURE__ */new THREE.Matrix4();\nconst mW0 = /* @__PURE__ */new THREE.Matrix4();\nconst mP = /* @__PURE__ */new THREE.Matrix4();\nconst mPInv = /* @__PURE__ */new THREE.Matrix4();\nconst mW = /* @__PURE__ */new THREE.Matrix4();\nconst mL = /* @__PURE__ */new THREE.Matrix4();\nconst mL0Inv = /* @__PURE__ */new THREE.Matrix4();\nconst mdL = /* @__PURE__ */new THREE.Matrix4();\nconst mG = /* @__PURE__ */new THREE.Matrix4();\nconst bb = /* @__PURE__ */new THREE.Box3();\nconst bbObj = /* @__PURE__ */new THREE.Box3();\nconst vCenter = /* @__PURE__ */new THREE.Vector3();\nconst vSize = /* @__PURE__ */new THREE.Vector3();\nconst vAnchorOffset = /* @__PURE__ */new THREE.Vector3();\nconst vPosition = /* @__PURE__ */new THREE.Vector3();\nconst vScale = /* @__PURE__ */new THREE.Vector3();\nconst xDir = /* @__PURE__ */new THREE.Vector3(1, 0, 0);\nconst yDir = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst zDir = /* @__PURE__ */new THREE.Vector3(0, 0, 1);\nconst PivotControls = /* @__PURE__ */React.forwardRef(({\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  disableScaling = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  translationLimits,\n  rotationLimits,\n  scaleLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  annotations = false,\n  annotationsClass,\n  opacity = 1,\n  visible = true,\n  userData,\n  children,\n  ...props\n}, fRef) => {\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  const cameraScale = React.useRef(new THREE.Vector3(1, 1, 1));\n  const gizmoScale = React.useRef(new THREE.Vector3(1, 1, 1));\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: props => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart(props);\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert();\n      // After applying the delta\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) {\n        ref.current.matrix.copy(mL);\n      }\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    depthTest,\n    userData,\n    annotations,\n    annotationsClass\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, scaleLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, userData, autoTransform, annotations, annotationsClass]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n      cameraScale.current.setScalar(sf);\n    }\n    if (matrix && matrix instanceof THREE.Matrix4) {\n      ref.current.matrix = matrix;\n    }\n    // Update gizmo scale in accordance with matrix changes\n    // Without this, there might be noticable turbulences if scaling happens fast enough\n    ref.current.updateWorldMatrix(true, true);\n    mG.makeRotationFromEuler(gizmoRef.current.rotation).setPosition(gizmoRef.current.position).premultiply(ref.current.matrixWorld);\n    gizmoScale.current.setFromMatrixScale(mG);\n    vScale.copy(cameraScale.current).divide(gizmoScale.current);\n    if (Math.abs(gizmoRef.current.scale.x - vScale.x) > 1e-4 || Math.abs(gizmoRef.current.scale.y - vScale.y) > 1e-4 || Math.abs(gizmoRef.current.scale.z - vScale.z) > 1e-4) {\n      gizmoRef.current.scale.copy(vScale);\n      state.invalidate();\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableScaling && activeAxes[0] && /*#__PURE__*/React.createElement(ScalingSphere, {\n    axis: 0,\n    direction: xDir\n  }), !disableScaling && activeAxes[1] && /*#__PURE__*/React.createElement(ScalingSphere, {\n    axis: 1,\n    direction: yDir\n  }), !disableScaling && activeAxes[2] && /*#__PURE__*/React.createElement(ScalingSphere, {\n    axis: 2,\n    direction: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\n\nexport { PivotControls };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst offsetMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst AxisArrow = ({\n  direction,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offset0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    clickInfo.current = {\n      clickPoint,\n      dir\n    };\n    offset0.current = translation.current[axis];\n    onDragStart({\n      component: 'Arrow',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, direction, camControls, onDragStart, translation, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir\n      } = clickInfo.current;\n      const [min, max] = (translationLimits == null ? void 0 : translationLimits[axis]) || [undefined, undefined];\n      let offset = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      if (min !== undefined) {\n        offset = Math.max(offset, min - offset0.current);\n      }\n      if (max !== undefined) {\n        offset = Math.min(offset, max - offset0.current);\n      }\n      translation.current[axis] = offset0.current + offset;\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      }\n      offsetMatrix.makeTranslation(dir.x * offset, dir.y * offset, dir.z * offset);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    cylinderLength,\n    coneWidth,\n    coneLength,\n    matrixL\n  } = React.useMemo(() => {\n    const coneWidth = fixed ? lineWidth / scale * 1.6 : scale / 20;\n    const coneLength = fixed ? 0.2 : scale / 5;\n    const cylinderLength = fixed ? 1 - coneLength : scale - coneLength;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      cylinderLength,\n      coneWidth,\n      coneLength,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color_ = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, -coneLength, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: false,\n    position: [0, (cylinderLength + coneLength) / 2.0, 0],\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"cylinderGeometry\", {\n    args: [coneWidth * 1.4, coneWidth * 1.4, cylinderLength + coneLength, 8, 1]\n  })), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: [0, 0, 0, 0, cylinderLength, 0],\n    lineWidth: lineWidth,\n    side: THREE.DoubleSide,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    renderOrder: 1,\n    polygonOffsetFactor: -10,\n    fog: false\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: () => null,\n    position: [0, cylinderLength + coneLength / 2.0, 0],\n    renderOrder: 500\n  }, /*#__PURE__*/React.createElement(\"coneGeometry\", {\n    args: [coneWidth, coneLength, 24, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }))));\n};\n\nexport { AxisArrow, calculateOffset };\n", "import * as React from 'react';\n\nconst context = /* @__PURE__ */React.createContext(null);\n\nexport { context };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst clickDir = /* @__PURE__ */new THREE.Vector3();\nconst intersectionDir = /* @__PURE__ */new THREE.Vector3();\nconst toDegrees = radians => radians * 180 / Math.PI;\nconst toRadians = degrees => degrees * Math.PI / 180;\nconst calculateAngle = (clickPoint, intersectionPoint, origin, e1, e2) => {\n  clickDir.copy(clickPoint).sub(origin);\n  intersectionDir.copy(intersectionPoint).sub(origin);\n  const dote1e1 = e1.dot(e1);\n  const dote2e2 = e2.dot(e2);\n  const uClick = clickDir.dot(e1) / dote1e1;\n  const vClick = clickDir.dot(e2) / dote2e2;\n  const uIntersection = intersectionDir.dot(e1) / dote1e1;\n  const vIntersection = intersectionDir.dot(e2) / dote2e2;\n  const angleClick = Math.atan2(vClick, uClick);\n  const angleIntersection = Math.atan2(vIntersection, uIntersection);\n  return angleIntersection - angleClick;\n};\nconst fmod = (num, denom) => {\n  let k = Math.floor(num / denom);\n  k = k < 0 ? k + 1 : k;\n  return num - k * denom;\n};\nconst minimizeAngle = angle => {\n  let result = fmod(angle, 2 * Math.PI);\n  if (Math.abs(result) < 1e-6) {\n    return 0.0;\n  }\n  if (result < 0.0) {\n    result += 2 * Math.PI;\n  }\n  return result;\n};\nconst rotMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst posNew = /* @__PURE__ */new THREE.Vector3();\nconst ray = /* @__PURE__ */new THREE.Ray();\nconst intersection = /* @__PURE__ */new THREE.Vector3();\nconst AxisRotator = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    rotationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const angle0 = React.useRef(0);\n  const angle = React.useRef(0);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${toDegrees(angle.current).toFixed(0)}º`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      origin,\n      e1,\n      e2,\n      normal,\n      plane\n    };\n    onDragStart({\n      component: 'Rotator',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        origin,\n        e1,\n        e2,\n        normal,\n        plane\n      } = clickInfo.current;\n      const [min, max] = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      let deltaAngle = calculateAngle(clickPoint, intersection, origin, e1, e2);\n      let degrees = toDegrees(deltaAngle);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        degrees = Math.round(degrees / 10) * 10;\n        deltaAngle = toRadians(degrees);\n      }\n      if (min !== undefined && max !== undefined && max - min < 2 * Math.PI) {\n        deltaAngle = minimizeAngle(deltaAngle);\n        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;\n        deltaAngle = THREE.MathUtils.clamp(deltaAngle, min - angle0.current, max - angle0.current);\n        angle.current = angle0.current + deltaAngle;\n      } else {\n        angle.current = minimizeAngle(angle0.current + deltaAngle);\n        angle.current = angle.current > Math.PI ? angle.current - 2 * Math.PI : angle.current;\n      }\n      if (annotations) {\n        degrees = toDegrees(angle.current);\n        divRef.current.innerText = `${degrees.toFixed(0)}º`;\n      }\n      rotMatrix.makeRotationAxis(normal, deltaAngle);\n      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();\n      rotMatrix.setPosition(posNew);\n      onDrag(rotMatrix);\n    }\n  }, [annotations, onDrag, isHovered, rotationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    angle0.current = angle.current;\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const r = fixed ? 0.65 : scale * 0.65;\n  const arc = React.useMemo(() => {\n    const segments = 32;\n    const points = [];\n    for (let j = 0; j <= segments; j++) {\n      const angle = j * (Math.PI / 2) / segments;\n      points.push(new THREE.Vector3(Math.cos(angle) * r, Math.sin(angle) * r, 0));\n    }\n    return points;\n  }, [r]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [r, r, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(Line, {\n    points: arc,\n    lineWidth: lineWidth * 4,\n    visible: false,\n    userData: userData\n  }), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: arc,\n    lineWidth: lineWidth,\n    side: THREE.DoubleSide,\n    color: isHovered ? hoveredColor : axisColors[axis],\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }));\n};\n\nexport { AxisRotator };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst decomposeIntoBasis = (e1, e2, offset) => {\n  const i1 = Math.abs(e1.x) >= Math.abs(e1.y) && Math.abs(e1.x) >= Math.abs(e1.z) ? 0 : Math.abs(e1.y) >= Math.abs(e1.x) && Math.abs(e1.y) >= Math.abs(e1.z) ? 1 : 2;\n  const e2DegrowthOrder = [0, 1, 2].sort((a, b) => Math.abs(e2.getComponent(b)) - Math.abs(e2.getComponent(a)));\n  const i2 = i1 === e2DegrowthOrder[0] ? e2DegrowthOrder[1] : e2DegrowthOrder[0];\n  const a1 = e1.getComponent(i1);\n  const a2 = e1.getComponent(i2);\n  const b1 = e2.getComponent(i1);\n  const b2 = e2.getComponent(i2);\n  const c1 = offset.getComponent(i1);\n  const c2 = offset.getComponent(i2);\n  const y = (c2 - c1 * (a2 / a1)) / (b2 - b1 * (a2 / a1));\n  const x = (c1 - y * b1) / a1;\n  return [x, y];\n};\nconst ray = /* @__PURE__ */new THREE.Ray();\nconst intersection = /* @__PURE__ */new THREE.Vector3();\nconst offsetMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst PlaneSlider = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offsetX0 = React.useRef(0);\n  const offsetY0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      e1,\n      e2,\n      plane\n    };\n    offsetX0.current = translation.current[(axis + 1) % 3];\n    offsetY0.current = translation.current[(axis + 2) % 3];\n    onDragStart({\n      component: 'Slider',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        e1,\n        e2,\n        plane\n      } = clickInfo.current;\n      const [minX, maxX] = (translationLimits == null ? void 0 : translationLimits[(axis + 1) % 3]) || [undefined, undefined];\n      const [minY, maxY] = (translationLimits == null ? void 0 : translationLimits[(axis + 2) % 3]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      let [offsetX, offsetY] = decomposeIntoBasis(e1, e2, intersection);\n      /* let offsetY = (intersection.y - (intersection.x * e1.y) / e1.x) / (e2.y - (e2.x * e1.y) / e1.x)\n      let offsetX = (intersection.x - offsetY * e2.x) / e1.x */\n      if (minX !== undefined) {\n        offsetX = Math.max(offsetX, minX - offsetX0.current);\n      }\n      if (maxX !== undefined) {\n        offsetX = Math.min(offsetX, maxX - offsetX0.current);\n      }\n      if (minY !== undefined) {\n        offsetY = Math.max(offsetY, minY - offsetY0.current);\n      }\n      if (maxY !== undefined) {\n        offsetY = Math.min(offsetY, maxY - offsetY0.current);\n      }\n      translation.current[(axis + 1) % 3] = offsetX0.current + offsetX;\n      translation.current[(axis + 2) % 3] = offsetY0.current + offsetY;\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      }\n      offsetMatrix.makeTranslation(offsetX * e1.x + offsetY * e2.x, offsetX * e1.y + offsetY * e2.y, offsetX * e1.z + offsetY * e2.z);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide,\n    fog: false\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData,\n    fog: false\n  })));\n};\n\nexport { PlaneSlider };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\n\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst scaleV = /* @__PURE__ */new THREE.Vector3();\nconst scaleMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst ScalingSphere = ({\n  direction,\n  axis\n}) => {\n  const {\n    scaleLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n  const size = useThree(state => state.size);\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const meshRef = React.useRef(null);\n  const scale0 = React.useRef(1);\n  const scaleCur = React.useRef(1);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const position = fixed ? 1.2 : 1.2 * scale;\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    const mPLG = objRef.current.matrixWorld.clone();\n    const mPLGInv = mPLG.clone().invert();\n    const offsetMultiplier = fixed ? 1 / calculateScaleFactor(objRef.current.getWorldPosition(vec1), scale, e.camera, size) : 1;\n    clickInfo.current = {\n      clickPoint,\n      dir,\n      mPLG,\n      mPLGInv,\n      offsetMultiplier\n    };\n    onDragStart({\n      component: 'Sphere',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, direction, onDragStart, axis, fixed, scale, size]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir,\n        mPLG,\n        mPLGInv,\n        offsetMultiplier\n      } = clickInfo.current;\n      const [min, max] = (scaleLimits == null ? void 0 : scaleLimits[axis]) || [1e-5, undefined]; // always limit the minimal value, since setting it very low might break the transform\n\n      const offsetW = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      const offsetL = offsetW * offsetMultiplier;\n      const offsetH = fixed ? offsetL : offsetL / scale;\n      let upscale = Math.pow(2, offsetH * 0.2);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        upscale = Math.round(upscale * 10) / 10;\n      }\n      upscale = Math.max(upscale, min / scale0.current);\n      if (max !== undefined) {\n        upscale = Math.min(upscale, max / scale0.current);\n      }\n      scaleCur.current = scale0.current * upscale;\n      meshRef.current.position.set(0, position + offsetL, 0);\n      if (annotations) {\n        divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      }\n      scaleV.set(1, 1, 1);\n      scaleV.setComponent(axis, upscale);\n      scaleMatrix.makeScale(scaleV.x, scaleV.y, scaleV.z).premultiply(mPLG).multiply(mPLGInv);\n      onDrag(scaleMatrix);\n    }\n  }, [annotations, position, onDrag, isHovered, scaleLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    scale0.current = scaleCur.current;\n    clickInfo.current = null;\n    meshRef.current.position.set(0, position, 0);\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd, position]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    radius,\n    matrixL\n  } = React.useMemo(() => {\n    const radius = fixed ? lineWidth / scale * 1.8 : scale / 22.5;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      radius,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, position / 2, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: meshRef,\n    position: [0, position, 0],\n    renderOrder: 500,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"sphereGeometry\", {\n    args: [radius, 12, 12]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\n\nexport { ScalingSphere, calculateOffset };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { forwardRef, useRef, useState, useCallback, useMemo, useImperativeHandle, useEffect, Suspense, useContext, createContext } from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { easing } from 'maath';\nimport { suspend, clear } from 'suspend-react';\nimport { useVideoTexture } from '../core/useVideoTexture.js';\nimport { Facemesh } from './Facemesh.js';\nimport { useFaceLandmarker } from './FaceLandmarker.js';\n\n// useVideoTexture 1st arg `src` type\n\nfunction mean(v1, v2) {\n  return v1.clone().add(v2).multiplyScalar(0.5);\n}\nfunction localToLocal(objSrc, v, objDst) {\n  // see: https://discourse.threejs.org/t/object3d-localtolocal/51564\n  const v_world = objSrc.localToWorld(v);\n  return objDst.worldToLocal(v_world);\n}\n\n//\n//\n//\nconst FaceControlsContext = /* @__PURE__ */createContext({});\nconst FaceControls = /* @__PURE__ */forwardRef(({\n  camera,\n  autostart = true,\n  webcam = true,\n  webcamVideoTextureSrc,\n  manualUpdate = false,\n  manualDetect = false,\n  onVideoFrame,\n  smoothTime = 0.25,\n  offset = true,\n  offsetScalar = 80,\n  eyes = false,\n  eyesAsOrigin = true,\n  depth = 0.15,\n  debug = false,\n  facemesh,\n  makeDefault\n}, fref) => {\n  var _faces$facialTransfor, _faces$faceBlendshape;\n  const scene = useThree(state => state.scene);\n  const defaultCamera = useThree(state => state.camera);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const explCamera = camera || defaultCamera;\n  const webcamApiRef = useRef(null);\n  const facemeshApiRef = useRef(null);\n\n  //\n  // computeTarget()\n  //\n  // Compute `target` position and rotation for the camera (according to <Facemesh>)\n  //\n  //  1. 👀 either following the 2 eyes\n  //  2. 👤 or just the head mesh\n  //\n\n  const [target] = useState(() => new THREE.Object3D());\n  const [irisRightDirPos] = useState(() => new THREE.Vector3());\n  const [irisLeftDirPos] = useState(() => new THREE.Vector3());\n  const [irisRightLookAt] = useState(() => new THREE.Vector3());\n  const [irisLeftLookAt] = useState(() => new THREE.Vector3());\n  const computeTarget = useCallback(() => {\n    // same parent as the camera\n    target.parent = explCamera.parent;\n    const facemeshApi = facemeshApiRef.current;\n    if (facemeshApi) {\n      const {\n        outerRef,\n        eyeRightRef,\n        eyeLeftRef\n      } = facemeshApi;\n      if (eyeRightRef.current && eyeLeftRef.current) {\n        // 1. 👀\n\n        const {\n          irisDirRef: irisRightDirRef\n        } = eyeRightRef.current;\n        const {\n          irisDirRef: irisLeftDirRef\n        } = eyeLeftRef.current;\n        if (irisRightDirRef.current && irisLeftDirRef.current && outerRef.current) {\n          //\n          // position: mean of irisRightDirPos,irisLeftDirPos\n          //\n          irisRightDirPos.copy(localToLocal(irisRightDirRef.current, new THREE.Vector3(0, 0, 0), outerRef.current));\n          irisLeftDirPos.copy(localToLocal(irisLeftDirRef.current, new THREE.Vector3(0, 0, 0), outerRef.current));\n          target.position.copy(localToLocal(outerRef.current, mean(irisRightDirPos, irisLeftDirPos), explCamera.parent || scene));\n\n          //\n          // lookAt: mean of irisRightLookAt,irisLeftLookAt\n          //\n          irisRightLookAt.copy(localToLocal(irisRightDirRef.current, new THREE.Vector3(0, 0, 1), outerRef.current));\n          irisLeftLookAt.copy(localToLocal(irisLeftDirRef.current, new THREE.Vector3(0, 0, 1), outerRef.current));\n          target.lookAt(outerRef.current.localToWorld(mean(irisRightLookAt, irisLeftLookAt)));\n        }\n      } else {\n        // 2. 👤\n\n        if (outerRef.current) {\n          target.position.copy(localToLocal(outerRef.current, new THREE.Vector3(0, 0, 0), explCamera.parent || scene));\n          target.lookAt(outerRef.current.localToWorld(new THREE.Vector3(0, 0, 1)));\n        }\n      }\n    }\n    return target;\n  }, [explCamera, irisLeftDirPos, irisLeftLookAt, irisRightDirPos, irisRightLookAt, scene, target]);\n\n  //\n  // update()\n  //\n  // Updating the camera `current` position and rotation, following `target`\n  //\n\n  const [current] = useState(() => new THREE.Object3D());\n  const update = useCallback(function (delta, target) {\n    if (explCamera) {\n      var _target;\n      (_target = target) !== null && _target !== void 0 ? _target : target = computeTarget();\n      if (smoothTime > 0) {\n        // damping current\n        const eps = 1e-9;\n        easing.damp3(current.position, target.position, smoothTime, delta, undefined, undefined, eps);\n        easing.dampE(current.rotation, target.rotation, smoothTime, delta, undefined, undefined, eps);\n      } else {\n        // instant\n        current.position.copy(target.position);\n        current.rotation.copy(target.rotation);\n      }\n      explCamera.position.copy(current.position);\n      explCamera.rotation.copy(current.rotation);\n    }\n  }, [explCamera, computeTarget, smoothTime, current.position, current.rotation]);\n\n  //\n  // detect()\n  //\n\n  const [faces, setFaces] = useState();\n  const faceLandmarker = useFaceLandmarker();\n  const detect = useCallback((video, time) => {\n    const faces = faceLandmarker == null ? void 0 : faceLandmarker.detectForVideo(video, time);\n    setFaces(faces);\n  }, [faceLandmarker]);\n  useFrame((_, delta) => {\n    if (!manualUpdate) {\n      update(delta);\n    }\n  });\n\n  // Ref API\n  const api = useMemo(() => Object.assign(Object.create(THREE.EventDispatcher.prototype), {\n    detect,\n    computeTarget,\n    update,\n    facemeshApiRef,\n    webcamApiRef,\n    // shorthands\n    play: () => {\n      var _webcamApiRef$current;\n      (_webcamApiRef$current = webcamApiRef.current) == null || (_webcamApiRef$current = _webcamApiRef$current.videoTextureApiRef.current) == null || _webcamApiRef$current.texture.source.data.play();\n    },\n    pause: () => {\n      var _webcamApiRef$current2;\n      (_webcamApiRef$current2 = webcamApiRef.current) == null || (_webcamApiRef$current2 = _webcamApiRef$current2.videoTextureApiRef.current) == null || _webcamApiRef$current2.texture.source.data.pause();\n    }\n  }), [detect, computeTarget, update]);\n  useImperativeHandle(fref, () => api, [api]);\n\n  //\n  // events callbacks\n  //\n\n  useEffect(() => {\n    const onVideoFrameCb = e => {\n      if (!manualDetect) detect(e.texture.source.data, e.time);\n      if (onVideoFrame) onVideoFrame(e);\n    };\n    api.addEventListener('videoFrame', onVideoFrameCb);\n    return () => {\n      api.removeEventListener('videoFrame', onVideoFrameCb);\n    };\n  }, [api, detect, faceLandmarker, manualDetect, onVideoFrame]);\n\n  // `controls` global state\n  useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls: api\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, api, get, set]);\n  const points = faces == null ? void 0 : faces.faceLandmarks[0];\n  const facialTransformationMatrix = faces == null || (_faces$facialTransfor = faces.facialTransformationMatrixes) == null ? void 0 : _faces$facialTransfor[0];\n  const faceBlendshapes = faces == null || (_faces$faceBlendshape = faces.faceBlendshapes) == null ? void 0 : _faces$faceBlendshape[0];\n  return /*#__PURE__*/React.createElement(FaceControlsContext.Provider, {\n    value: api\n  }, webcam && /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamApiRef,\n    autostart: autostart,\n    videoTextureSrc: webcamVideoTextureSrc\n  })), /*#__PURE__*/React.createElement(Facemesh, _extends({\n    ref: facemeshApiRef\n  }, facemesh, {\n    points: points,\n    depth: depth,\n    facialTransformationMatrix: facialTransformationMatrix,\n    faceBlendshapes: faceBlendshapes,\n    eyes: eyes,\n    eyesAsOrigin: eyesAsOrigin,\n    offset: offset,\n    offsetScalar: offsetScalar,\n    debug: debug,\n    \"rotation-z\": Math.PI,\n    visible: debug\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    side: THREE.DoubleSide\n  })));\n});\nconst useFaceControls = () => useContext(FaceControlsContext);\n\n//\n// Webcam\n//\nconst Webcam = /* @__PURE__ */forwardRef(({\n  videoTextureSrc,\n  autostart = true\n}, fref) => {\n  const videoTextureApiRef = useRef(null);\n  const faceControls = useFaceControls();\n  const stream = suspend(async () => {\n    return !videoTextureSrc ? await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: 'user'\n      }\n    }) : Promise.resolve(null);\n  }, [videoTextureSrc]);\n  useEffect(() => {\n    faceControls.dispatchEvent({\n      type: 'stream',\n      stream\n    });\n    return () => {\n      stream == null || stream.getTracks().forEach(track => track.stop());\n      clear([videoTextureSrc]);\n    };\n  }, [stream, faceControls, videoTextureSrc]);\n\n  // ref-api\n  const api = useMemo(() => ({\n    videoTextureApiRef\n  }), []);\n  useImperativeHandle(fref, () => api, [api]);\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null\n  }, /*#__PURE__*/React.createElement(VideoTexture, {\n    ref: videoTextureApiRef,\n    src: videoTextureSrc || stream,\n    start: autostart\n  }));\n});\n\n//\n// VideoTexture\n//\nconst VideoTexture = /* @__PURE__ */forwardRef(({\n  src,\n  start\n}, fref) => {\n  const texture = useVideoTexture(src, {\n    start\n  });\n  const video = texture.source.data;\n  const faceControls = useFaceControls();\n  const onVideoFrame = useCallback(time => {\n    faceControls.dispatchEvent({\n      type: 'videoFrame',\n      texture,\n      time\n    });\n  }, [texture, faceControls]);\n  useVideoFrame(video, onVideoFrame);\n\n  // ref-api\n  const api = useMemo(() => ({\n    texture\n  }), [texture]);\n  useImperativeHandle(fref, () => api, [api]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n});\nconst useVideoFrame = (video, f) => {\n  // https://web.dev/requestvideoframecallback-rvfc/\n  // https://www.remotion.dev/docs/video-manipulation\n  useEffect(() => {\n    if (!video || !video.requestVideoFrameCallback) return;\n    let handle;\n    function callback(...args) {\n      f(...args);\n      handle = video.requestVideoFrameCallback(callback);\n    }\n    video.requestVideoFrameCallback(callback);\n    return () => video.cancelVideoFrameCallback(handle);\n  }, [video, f]);\n};\n\nexport { FaceControls, useFaceControls };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../core/Line.js';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\nconst defaultLookAt = /* @__PURE__ */new THREE.Vector3(0, 0, -1);\nconst normal = /* @__PURE__ */function () {\n  const a = new THREE.Vector3();\n  const b = new THREE.Vector3();\n  const c = new THREE.Vector3();\n  const ab = new THREE.Vector3();\n  const ac = new THREE.Vector3();\n  return function (v1, v2, v3, v) {\n    a.copy(v1);\n    b.copy(v2);\n    c.copy(v3);\n    ab.copy(b).sub(a);\n    ac.copy(c).sub(a);\n    return v.crossVectors(ac, ab).normalize();\n  };\n}();\nfunction mean(v1, v2) {\n  return v1.clone().add(v2).multiplyScalar(0.5);\n}\nconst Facemesh = /* @__PURE__ */React.forwardRef(({\n  points = FacemeshDatas.SAMPLE_FACELANDMARKER_RESULT.faceLandmarks[0],\n  face,\n  facialTransformationMatrix,\n  faceBlendshapes,\n  offset,\n  offsetScalar = 80,\n  width,\n  height,\n  depth = 1,\n  verticalTri = [159, 386, 152],\n  origin,\n  eyes = true,\n  eyesAsOrigin = false,\n  debug = false,\n  children,\n  ...props\n}, fref) => {\n  var _meshRef$current3;\n  if (face) {\n    points = face.keypoints;\n    console.warn('Facemesh `face` prop is deprecated: use `points` instead');\n  }\n  const offsetRef = React.useRef(null);\n  const scaleRef = React.useRef(null);\n  const originRef = React.useRef(null);\n  const outerRef = React.useRef(null);\n  const meshRef = React.useRef(null);\n  const eyeRightRef = React.useRef(null);\n  const eyeLeftRef = React.useRef(null);\n  const [sightDir] = React.useState(() => new THREE.Vector3());\n  const [transform] = React.useState(() => new THREE.Object3D());\n  const [sightDirQuaternion] = React.useState(() => new THREE.Quaternion());\n  const [_origin] = React.useState(() => new THREE.Vector3());\n  const {\n    invalidate\n  } = useThree();\n  React.useEffect(() => {\n    var _meshRef$current;\n    (_meshRef$current = meshRef.current) == null || _meshRef$current.geometry.setIndex(FacemeshDatas.TRIANGULATION);\n  }, []);\n  const [bboxSize] = React.useState(() => new THREE.Vector3());\n  React.useEffect(() => {\n    var _meshRef$current2, _outerRef$current;\n    const faceGeometry = (_meshRef$current2 = meshRef.current) == null ? void 0 : _meshRef$current2.geometry;\n    if (!faceGeometry) return;\n    faceGeometry.setFromPoints(points);\n    faceGeometry.setDrawRange(0, FacemeshDatas.TRIANGULATION.length);\n\n    //\n    // A. compute sightDir vector\n    //\n    //  - either from `facialTransformationMatrix` if available\n    //  - or from `verticalTri`\n    //\n\n    if (facialTransformationMatrix) {\n      // from facialTransformationMatrix\n      transform.matrix.fromArray(facialTransformationMatrix.data);\n      transform.matrix.decompose(transform.position, transform.quaternion, transform.scale);\n\n      // Rotation: y and z axes are inverted\n      transform.rotation.y *= -1;\n      transform.rotation.z *= -1;\n      sightDirQuaternion.setFromEuler(transform.rotation);\n\n      // Offset: y and z axes are inverted\n      if (offset) {\n        var _offsetRef$current;\n        transform.position.y *= -1;\n        transform.position.z *= -1;\n        (_offsetRef$current = offsetRef.current) == null || _offsetRef$current.position.copy(transform.position.divideScalar(offsetScalar));\n      } else {\n        var _offsetRef$current2;\n        (_offsetRef$current2 = offsetRef.current) == null || _offsetRef$current2.position.set(0, 0, 0); // reset\n      }\n    } else {\n      // normal to verticalTri\n      normal(points[verticalTri[0]], points[verticalTri[1]], points[verticalTri[2]], sightDir);\n      sightDirQuaternion.setFromUnitVectors(defaultLookAt, sightDir);\n    }\n    const sightDirQuaternionInverse = sightDirQuaternion.clone().invert();\n\n    //\n    // B. geometry (straightened)\n    //\n\n    // 1. center (before rotate back)\n    faceGeometry.computeBoundingBox();\n    if (debug) invalidate(); // invalidate to force re-render for box3Helper (after .computeBoundingBox())\n    faceGeometry.center();\n\n    // 2. rotate back + rotate outerRef (once 1.)\n    faceGeometry.applyQuaternion(sightDirQuaternionInverse);\n    (_outerRef$current = outerRef.current) == null || _outerRef$current.setRotationFromQuaternion(sightDirQuaternion);\n\n    // 3. 👀 eyes\n    if (eyes) {\n      if (!faceBlendshapes) {\n        console.warn('Facemesh `eyes` option only works if `faceBlendshapes` is provided: skipping.');\n      } else {\n        if (eyeRightRef.current && eyeLeftRef.current && originRef.current) {\n          if (eyesAsOrigin) {\n            // compute the middle of the 2 eyes as the `origin`\n            const eyeRightSphere = eyeRightRef.current._computeSphere(faceGeometry);\n            const eyeLeftSphere = eyeLeftRef.current._computeSphere(faceGeometry);\n            const eyesCenter = mean(eyeRightSphere.center, eyeLeftSphere.center);\n            origin = eyesCenter.negate(); // eslint-disable-line react-hooks/exhaustive-deps\n\n            eyeRightRef.current._update(faceGeometry, faceBlendshapes, eyeRightSphere);\n            eyeLeftRef.current._update(faceGeometry, faceBlendshapes, eyeLeftSphere);\n          } else {\n            eyeRightRef.current._update(faceGeometry, faceBlendshapes);\n            eyeLeftRef.current._update(faceGeometry, faceBlendshapes);\n          }\n        }\n      }\n    }\n\n    // 3. origin\n    if (originRef.current) {\n      if (origin !== undefined) {\n        if (typeof origin === 'number') {\n          const position = faceGeometry.getAttribute('position');\n          _origin.set(-position.getX(origin), -position.getY(origin), -position.getZ(origin));\n        } else if (origin.isVector3) {\n          _origin.copy(origin);\n        }\n      } else {\n        _origin.setScalar(0);\n      }\n      originRef.current.position.copy(_origin);\n    }\n\n    // 4. re-scale\n    if (scaleRef.current) {\n      let scale = 1;\n      if (width || height || depth) {\n        faceGeometry.boundingBox.getSize(bboxSize);\n        if (width) scale = width / bboxSize.x; // fit in width\n        if (height) scale = height / bboxSize.y; // fit in height\n        if (depth) scale = depth / bboxSize.z; // fit in depth\n      }\n\n      scaleRef.current.scale.setScalar(scale !== 1 ? scale : 1);\n    }\n    faceGeometry.computeVertexNormals();\n    faceGeometry.attributes.position.needsUpdate = true;\n  }, [points, facialTransformationMatrix, faceBlendshapes, transform, offset, offsetScalar, width, height, depth, verticalTri, origin, eyes, debug, invalidate, sightDir, sightDirQuaternion, bboxSize, _origin]);\n\n  //\n  // API\n  //\n\n  const api = React.useMemo(() => ({\n    outerRef,\n    meshRef,\n    eyeRightRef,\n    eyeLeftRef\n  }), []);\n  React.useImperativeHandle(fref, () => api, [api]);\n  const [meshBboxSize] = React.useState(() => new THREE.Vector3());\n  const bbox = (_meshRef$current3 = meshRef.current) == null ? void 0 : _meshRef$current3.geometry.boundingBox;\n  const one = (bbox == null ? void 0 : bbox.getSize(meshBboxSize).z) || 1;\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: offsetRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: outerRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: scaleRef\n  }, debug ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"axesHelper\", {\n    args: [one]\n  }), /*#__PURE__*/React.createElement(Line, {\n    points: [[0, 0, 0], [0, 0, -one]],\n    color: 0x00ffff\n  })) : null, /*#__PURE__*/React.createElement(\"group\", {\n    ref: originRef\n  }, eyes && faceBlendshapes && /*#__PURE__*/React.createElement(\"group\", {\n    name: \"eyes\"\n  }, /*#__PURE__*/React.createElement(FacemeshEye, {\n    side: \"left\",\n    ref: eyeRightRef,\n    debug: debug\n  }), /*#__PURE__*/React.createElement(FacemeshEye, {\n    side: \"right\",\n    ref: eyeLeftRef,\n    debug: debug\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: meshRef,\n    name: \"face\"\n  }, children, debug ? /*#__PURE__*/React.createElement(React.Fragment, null, bbox && /*#__PURE__*/React.createElement(\"box3Helper\", {\n    args: [bbox]\n  })) : null))))));\n});\n\n//\n// 👁️ FacemeshEye\n//\nconst FacemeshEyeDefaults = {\n  contourLandmarks: {\n    right: [33, 133, 159, 145, 153],\n    left: [263, 362, 386, 374, 380]\n  },\n  blendshapes: {\n    right: [14, 16, 18, 12],\n    // lookIn,lookOut, lookUp,lookDown\n    left: [13, 15, 17, 11] // lookIn,lookOut, lookUp,lookDown\n  },\n\n  color: {\n    right: 'red',\n    left: '#00ff00'\n  },\n  fov: {\n    horizontal: 100,\n    vertical: 90\n  }\n};\nconst FacemeshEye = /* @__PURE__ */React.forwardRef(({\n  side,\n  debug = true\n}, fref) => {\n  const eyeMeshRef = React.useRef(null);\n  const irisDirRef = React.useRef(null);\n\n  //\n  // _computeSphere()\n  //\n  // Compute eye's sphere .position and .radius\n  //\n\n  const [sphere] = React.useState(() => new THREE.Sphere());\n  const _computeSphere = React.useCallback(faceGeometry => {\n    const position = faceGeometry.getAttribute('position');\n\n    // get some eye contour landmarks points (from geometry)\n    const eyeContourLandmarks = FacemeshEyeDefaults.contourLandmarks[side];\n    const eyeContourPoints = eyeContourLandmarks.map(i => new THREE.Vector3(position.getX(i), position.getY(i), position.getZ(i))); // prettier-ignore\n\n    // compute center (centroid from eyeContourPoints)\n    sphere.center.set(0, 0, 0);\n    eyeContourPoints.forEach(v => sphere.center.add(v));\n    sphere.center.divideScalar(eyeContourPoints.length);\n\n    // radius (eye half-width)\n    sphere.radius = eyeContourPoints[0].sub(eyeContourPoints[1]).length() / 2;\n    return sphere;\n  }, [sphere, side]);\n\n  //\n  // _update()\n  //\n  // Update:\n  //   - A. eye's mesh (according to sphere)\n  //   - B. iris direction (according to \"look*\" blendshapes)\n  //\n\n  const [rotation] = React.useState(() => new THREE.Euler());\n  const _update = React.useCallback((faceGeometry, faceBlendshapes, sphere) => {\n    // A.\n    if (eyeMeshRef.current) {\n      var _sphere;\n      (_sphere = sphere) !== null && _sphere !== void 0 ? _sphere : sphere = _computeSphere(faceGeometry); // compute sphere dims (if not passed)\n      eyeMeshRef.current.position.copy(sphere.center);\n      eyeMeshRef.current.scale.setScalar(sphere.radius);\n    }\n\n    // B.\n    if (faceBlendshapes && irisDirRef.current) {\n      const blendshapes = FacemeshEyeDefaults.blendshapes[side];\n      const lookIn = faceBlendshapes.categories[blendshapes[0]].score;\n      const lookOut = faceBlendshapes.categories[blendshapes[1]].score;\n      const lookUp = faceBlendshapes.categories[blendshapes[2]].score;\n      const lookDown = faceBlendshapes.categories[blendshapes[3]].score;\n      const hfov = FacemeshEyeDefaults.fov.horizontal * THREE.MathUtils.DEG2RAD;\n      const vfov = FacemeshEyeDefaults.fov.vertical * THREE.MathUtils.DEG2RAD;\n      const rx = hfov * 0.5 * (lookDown - lookUp);\n      const ry = vfov * 0.5 * (lookIn - lookOut) * (side === 'left' ? 1 : -1);\n      rotation.set(rx, ry, 0);\n      irisDirRef.current.setRotationFromEuler(rotation);\n    }\n  }, [_computeSphere, side, rotation]);\n\n  //\n  // API\n  //\n\n  const api = React.useMemo(() => ({\n    eyeMeshRef: eyeMeshRef,\n    irisDirRef: irisDirRef,\n    _computeSphere,\n    _update\n  }), [_computeSphere, _update]);\n  React.useImperativeHandle(fref, () => api, [api]);\n  const color = FacemeshEyeDefaults.color[side];\n  return /*#__PURE__*/React.createElement(\"group\", null, /*#__PURE__*/React.createElement(\"group\", {\n    ref: eyeMeshRef\n  }, debug && /*#__PURE__*/React.createElement(\"axesHelper\", null), /*#__PURE__*/React.createElement(\"group\", {\n    ref: irisDirRef\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, debug && /*#__PURE__*/React.createElement(Line, {\n    points: [[0, 0, 0], [0, 0, -2]],\n    lineWidth: 1,\n    color: color\n  })))));\n});\n\n//\n// Sample datas\n//\n\nconst FacemeshDatas = {\n  // Extracted from: https://github.com/tensorflow/tfjs-models/blob/a8f500809f5afe38feea27870c77e7ba03a6ece4/face-landmarks-detection/demos/shared/triangulation.js\n  // prettier-ignore\n  TRIANGULATION: [127, 34, 139, 11, 0, 37, 232, 231, 120, 72, 37, 39, 128, 121, 47, 232, 121, 128, 104, 69, 67, 175, 171, 148, 157, 154, 155, 118, 50, 101, 73, 39, 40, 9, 151, 108, 48, 115, 131, 194, 204, 211, 74, 40, 185, 80, 42, 183, 40, 92, 186, 230, 229, 118, 202, 212, 214, 83, 18, 17, 76, 61, 146, 160, 29, 30, 56, 157, 173, 106, 204, 194, 135, 214, 192, 203, 165, 98, 21, 71, 68, 51, 45, 4, 144, 24, 23, 77, 146, 91, 205, 50, 187, 201, 200, 18, 91, 106, 182, 90, 91, 181, 85, 84, 17, 206, 203, 36, 148, 171, 140, 92, 40, 39, 193, 189, 244, 159, 158, 28, 247, 246, 161, 236, 3, 196, 54, 68, 104, 193, 168, 8, 117, 228, 31, 189, 193, 55, 98, 97, 99, 126, 47, 100, 166, 79, 218, 155, 154, 26, 209, 49, 131, 135, 136, 150, 47, 126, 217, 223, 52, 53, 45, 51, 134, 211, 170, 140, 67, 69, 108, 43, 106, 91, 230, 119, 120, 226, 130, 247, 63, 53, 52, 238, 20, 242, 46, 70, 156, 78, 62, 96, 46, 53, 63, 143, 34, 227, 173, 155, 133, 123, 117, 111, 44, 125, 19, 236, 134, 51, 216, 206, 205, 154, 153, 22, 39, 37, 167, 200, 201, 208, 36, 142, 100, 57, 212, 202, 20, 60, 99, 28, 158, 157, 35, 226, 113, 160, 159, 27, 204, 202, 210, 113, 225, 46, 43, 202, 204, 62, 76, 77, 137, 123, 116, 41, 38, 72, 203, 129, 142, 64, 98, 240, 49, 102, 64, 41, 73, 74, 212, 216, 207, 42, 74, 184, 169, 170, 211, 170, 149, 176, 105, 66, 69, 122, 6, 168, 123, 147, 187, 96, 77, 90, 65, 55, 107, 89, 90, 180, 101, 100, 120, 63, 105, 104, 93, 137, 227, 15, 86, 85, 129, 102, 49, 14, 87, 86, 55, 8, 9, 100, 47, 121, 145, 23, 22, 88, 89, 179, 6, 122, 196, 88, 95, 96, 138, 172, 136, 215, 58, 172, 115, 48, 219, 42, 80, 81, 195, 3, 51, 43, 146, 61, 171, 175, 199, 81, 82, 38, 53, 46, 225, 144, 163, 110, 246, 33, 7, 52, 65, 66, 229, 228, 117, 34, 127, 234, 107, 108, 69, 109, 108, 151, 48, 64, 235, 62, 78, 191, 129, 209, 126, 111, 35, 143, 163, 161, 246, 117, 123, 50, 222, 65, 52, 19, 125, 141, 221, 55, 65, 3, 195, 197, 25, 7, 33, 220, 237, 44, 70, 71, 139, 122, 193, 245, 247, 130, 33, 71, 21, 162, 153, 158, 159, 170, 169, 150, 188, 174, 196, 216, 186, 92, 144, 160, 161, 2, 97, 167, 141, 125, 241, 164, 167, 37, 72, 38, 12, 145, 159, 160, 38, 82, 13, 63, 68, 71, 226, 35, 111, 158, 153, 154, 101, 50, 205, 206, 92, 165, 209, 198, 217, 165, 167, 97, 220, 115, 218, 133, 112, 243, 239, 238, 241, 214, 135, 169, 190, 173, 133, 171, 208, 32, 125, 44, 237, 86, 87, 178, 85, 86, 179, 84, 85, 180, 83, 84, 181, 201, 83, 182, 137, 93, 132, 76, 62, 183, 61, 76, 184, 57, 61, 185, 212, 57, 186, 214, 207, 187, 34, 143, 156, 79, 239, 237, 123, 137, 177, 44, 1, 4, 201, 194, 32, 64, 102, 129, 213, 215, 138, 59, 166, 219, 242, 99, 97, 2, 94, 141, 75, 59, 235, 24, 110, 228, 25, 130, 226, 23, 24, 229, 22, 23, 230, 26, 22, 231, 112, 26, 232, 189, 190, 243, 221, 56, 190, 28, 56, 221, 27, 28, 222, 29, 27, 223, 30, 29, 224, 247, 30, 225, 238, 79, 20, 166, 59, 75, 60, 75, 240, 147, 177, 215, 20, 79, 166, 187, 147, 213, 112, 233, 244, 233, 128, 245, 128, 114, 188, 114, 217, 174, 131, 115, 220, 217, 198, 236, 198, 131, 134, 177, 132, 58, 143, 35, 124, 110, 163, 7, 228, 110, 25, 356, 389, 368, 11, 302, 267, 452, 350, 349, 302, 303, 269, 357, 343, 277, 452, 453, 357, 333, 332, 297, 175, 152, 377, 384, 398, 382, 347, 348, 330, 303, 304, 270, 9, 336, 337, 278, 279, 360, 418, 262, 431, 304, 408, 409, 310, 415, 407, 270, 409, 410, 450, 348, 347, 422, 430, 434, 313, 314, 17, 306, 307, 375, 387, 388, 260, 286, 414, 398, 335, 406, 418, 364, 367, 416, 423, 358, 327, 251, 284, 298, 281, 5, 4, 373, 374, 253, 307, 320, 321, 425, 427, 411, 421, 313, 18, 321, 405, 406, 320, 404, 405, 315, 16, 17, 426, 425, 266, 377, 400, 369, 322, 391, 269, 417, 465, 464, 386, 257, 258, 466, 260, 388, 456, 399, 419, 284, 332, 333, 417, 285, 8, 346, 340, 261, 413, 441, 285, 327, 460, 328, 355, 371, 329, 392, 439, 438, 382, 341, 256, 429, 420, 360, 364, 394, 379, 277, 343, 437, 443, 444, 283, 275, 440, 363, 431, 262, 369, 297, 338, 337, 273, 375, 321, 450, 451, 349, 446, 342, 467, 293, 334, 282, 458, 461, 462, 276, 353, 383, 308, 324, 325, 276, 300, 293, 372, 345, 447, 382, 398, 362, 352, 345, 340, 274, 1, 19, 456, 248, 281, 436, 427, 425, 381, 256, 252, 269, 391, 393, 200, 199, 428, 266, 330, 329, 287, 273, 422, 250, 462, 328, 258, 286, 384, 265, 353, 342, 387, 259, 257, 424, 431, 430, 342, 353, 276, 273, 335, 424, 292, 325, 307, 366, 447, 345, 271, 303, 302, 423, 266, 371, 294, 455, 460, 279, 278, 294, 271, 272, 304, 432, 434, 427, 272, 407, 408, 394, 430, 431, 395, 369, 400, 334, 333, 299, 351, 417, 168, 352, 280, 411, 325, 319, 320, 295, 296, 336, 319, 403, 404, 330, 348, 349, 293, 298, 333, 323, 454, 447, 15, 16, 315, 358, 429, 279, 14, 15, 316, 285, 336, 9, 329, 349, 350, 374, 380, 252, 318, 402, 403, 6, 197, 419, 318, 319, 325, 367, 364, 365, 435, 367, 397, 344, 438, 439, 272, 271, 311, 195, 5, 281, 273, 287, 291, 396, 428, 199, 311, 271, 268, 283, 444, 445, 373, 254, 339, 263, 466, 249, 282, 334, 296, 449, 347, 346, 264, 447, 454, 336, 296, 299, 338, 10, 151, 278, 439, 455, 292, 407, 415, 358, 371, 355, 340, 345, 372, 390, 249, 466, 346, 347, 280, 442, 443, 282, 19, 94, 370, 441, 442, 295, 248, 419, 197, 263, 255, 359, 440, 275, 274, 300, 383, 368, 351, 412, 465, 263, 467, 466, 301, 368, 389, 380, 374, 386, 395, 378, 379, 412, 351, 419, 436, 426, 322, 373, 390, 388, 2, 164, 393, 370, 462, 461, 164, 0, 267, 302, 11, 12, 374, 373, 387, 268, 12, 13, 293, 300, 301, 446, 261, 340, 385, 384, 381, 330, 266, 425, 426, 423, 391, 429, 355, 437, 391, 327, 326, 440, 457, 438, 341, 382, 362, 459, 457, 461, 434, 430, 394, 414, 463, 362, 396, 369, 262, 354, 461, 457, 316, 403, 402, 315, 404, 403, 314, 405, 404, 313, 406, 405, 421, 418, 406, 366, 401, 361, 306, 408, 407, 291, 409, 408, 287, 410, 409, 432, 436, 410, 434, 416, 411, 264, 368, 383, 309, 438, 457, 352, 376, 401, 274, 275, 4, 421, 428, 262, 294, 327, 358, 433, 416, 367, 289, 455, 439, 462, 370, 326, 2, 326, 370, 305, 460, 455, 254, 449, 448, 255, 261, 446, 253, 450, 449, 252, 451, 450, 256, 452, 451, 341, 453, 452, 413, 464, 463, 441, 413, 414, 258, 442, 441, 257, 443, 442, 259, 444, 443, 260, 445, 444, 467, 342, 445, 459, 458, 250, 289, 392, 290, 290, 328, 460, 376, 433, 435, 250, 290, 392, 411, 416, 433, 341, 463, 464, 453, 464, 465, 357, 465, 412, 343, 412, 399, 360, 363, 440, 437, 399, 456, 420, 456, 363, 401, 435, 288, 372, 383, 353, 339, 255, 249, 448, 261, 255, 133, 243, 190, 133, 155, 112, 33, 246, 247, 33, 130, 25, 398, 384, 286, 362, 398, 414, 362, 463, 341, 263, 359, 467, 263, 249, 255, 466, 467, 260, 75, 60, 166, 238, 239, 79, 162, 127, 139, 72, 11, 37, 121, 232, 120, 73, 72, 39, 114, 128, 47, 233, 232, 128, 103, 104, 67, 152, 175, 148, 173, 157, 155, 119, 118, 101, 74, 73, 40, 107, 9, 108, 49, 48, 131, 32, 194, 211, 184, 74, 185, 191, 80, 183, 185, 40, 186, 119, 230, 118, 210, 202, 214, 84, 83, 17, 77, 76, 146, 161, 160, 30, 190, 56, 173, 182, 106, 194, 138, 135, 192, 129, 203, 98, 54, 21, 68, 5, 51, 4, 145, 144, 23, 90, 77, 91, 207, 205, 187, 83, 201, 18, 181, 91, 182, 180, 90, 181, 16, 85, 17, 205, 206, 36, 176, 148, 140, 165, 92, 39, 245, 193, 244, 27, 159, 28, 30, 247, 161, 174, 236, 196, 103, 54, 104, 55, 193, 8, 111, 117, 31, 221, 189, 55, 240, 98, 99, 142, 126, 100, 219, 166, 218, 112, 155, 26, 198, 209, 131, 169, 135, 150, 114, 47, 217, 224, 223, 53, 220, 45, 134, 32, 211, 140, 109, 67, 108, 146, 43, 91, 231, 230, 120, 113, 226, 247, 105, 63, 52, 241, 238, 242, 124, 46, 156, 95, 78, 96, 70, 46, 63, 116, 143, 227, 116, 123, 111, 1, 44, 19, 3, 236, 51, 207, 216, 205, 26, 154, 22, 165, 39, 167, 199, 200, 208, 101, 36, 100, 43, 57, 202, 242, 20, 99, 56, 28, 157, 124, 35, 113, 29, 160, 27, 211, 204, 210, 124, 113, 46, 106, 43, 204, 96, 62, 77, 227, 137, 116, 73, 41, 72, 36, 203, 142, 235, 64, 240, 48, 49, 64, 42, 41, 74, 214, 212, 207, 183, 42, 184, 210, 169, 211, 140, 170, 176, 104, 105, 69, 193, 122, 168, 50, 123, 187, 89, 96, 90, 66, 65, 107, 179, 89, 180, 119, 101, 120, 68, 63, 104, 234, 93, 227, 16, 15, 85, 209, 129, 49, 15, 14, 86, 107, 55, 9, 120, 100, 121, 153, 145, 22, 178, 88, 179, 197, 6, 196, 89, 88, 96, 135, 138, 136, 138, 215, 172, 218, 115, 219, 41, 42, 81, 5, 195, 51, 57, 43, 61, 208, 171, 199, 41, 81, 38, 224, 53, 225, 24, 144, 110, 105, 52, 66, 118, 229, 117, 227, 34, 234, 66, 107, 69, 10, 109, 151, 219, 48, 235, 183, 62, 191, 142, 129, 126, 116, 111, 143, 7, 163, 246, 118, 117, 50, 223, 222, 52, 94, 19, 141, 222, 221, 65, 196, 3, 197, 45, 220, 44, 156, 70, 139, 188, 122, 245, 139, 71, 162, 145, 153, 159, 149, 170, 150, 122, 188, 196, 206, 216, 92, 163, 144, 161, 164, 2, 167, 242, 141, 241, 0, 164, 37, 11, 72, 12, 144, 145, 160, 12, 38, 13, 70, 63, 71, 31, 226, 111, 157, 158, 154, 36, 101, 205, 203, 206, 165, 126, 209, 217, 98, 165, 97, 237, 220, 218, 237, 239, 241, 210, 214, 169, 140, 171, 32, 241, 125, 237, 179, 86, 178, 180, 85, 179, 181, 84, 180, 182, 83, 181, 194, 201, 182, 177, 137, 132, 184, 76, 183, 185, 61, 184, 186, 57, 185, 216, 212, 186, 192, 214, 187, 139, 34, 156, 218, 79, 237, 147, 123, 177, 45, 44, 4, 208, 201, 32, 98, 64, 129, 192, 213, 138, 235, 59, 219, 141, 242, 97, 97, 2, 141, 240, 75, 235, 229, 24, 228, 31, 25, 226, 230, 23, 229, 231, 22, 230, 232, 26, 231, 233, 112, 232, 244, 189, 243, 189, 221, 190, 222, 28, 221, 223, 27, 222, 224, 29, 223, 225, 30, 224, 113, 247, 225, 99, 60, 240, 213, 147, 215, 60, 20, 166, 192, 187, 213, 243, 112, 244, 244, 233, 245, 245, 128, 188, 188, 114, 174, 134, 131, 220, 174, 217, 236, 236, 198, 134, 215, 177, 58, 156, 143, 124, 25, 110, 7, 31, 228, 25, 264, 356, 368, 0, 11, 267, 451, 452, 349, 267, 302, 269, 350, 357, 277, 350, 452, 357, 299, 333, 297, 396, 175, 377, 381, 384, 382, 280, 347, 330, 269, 303, 270, 151, 9, 337, 344, 278, 360, 424, 418, 431, 270, 304, 409, 272, 310, 407, 322, 270, 410, 449, 450, 347, 432, 422, 434, 18, 313, 17, 291, 306, 375, 259, 387, 260, 424, 335, 418, 434, 364, 416, 391, 423, 327, 301, 251, 298, 275, 281, 4, 254, 373, 253, 375, 307, 321, 280, 425, 411, 200, 421, 18, 335, 321, 406, 321, 320, 405, 314, 315, 17, 423, 426, 266, 396, 377, 369, 270, 322, 269, 413, 417, 464, 385, 386, 258, 248, 456, 419, 298, 284, 333, 168, 417, 8, 448, 346, 261, 417, 413, 285, 326, 327, 328, 277, 355, 329, 309, 392, 438, 381, 382, 256, 279, 429, 360, 365, 364, 379, 355, 277, 437, 282, 443, 283, 281, 275, 363, 395, 431, 369, 299, 297, 337, 335, 273, 321, 348, 450, 349, 359, 446, 467, 283, 293, 282, 250, 458, 462, 300, 276, 383, 292, 308, 325, 283, 276, 293, 264, 372, 447, 346, 352, 340, 354, 274, 19, 363, 456, 281, 426, 436, 425, 380, 381, 252, 267, 269, 393, 421, 200, 428, 371, 266, 329, 432, 287, 422, 290, 250, 328, 385, 258, 384, 446, 265, 342, 386, 387, 257, 422, 424, 430, 445, 342, 276, 422, 273, 424, 306, 292, 307, 352, 366, 345, 268, 271, 302, 358, 423, 371, 327, 294, 460, 331, 279, 294, 303, 271, 304, 436, 432, 427, 304, 272, 408, 395, 394, 431, 378, 395, 400, 296, 334, 299, 6, 351, 168, 376, 352, 411, 307, 325, 320, 285, 295, 336, 320, 319, 404, 329, 330, 349, 334, 293, 333, 366, 323, 447, 316, 15, 315, 331, 358, 279, 317, 14, 316, 8, 285, 9, 277, 329, 350, 253, 374, 252, 319, 318, 403, 351, 6, 419, 324, 318, 325, 397, 367, 365, 288, 435, 397, 278, 344, 439, 310, 272, 311, 248, 195, 281, 375, 273, 291, 175, 396, 199, 312, 311, 268, 276, 283, 445, 390, 373, 339, 295, 282, 296, 448, 449, 346, 356, 264, 454, 337, 336, 299, 337, 338, 151, 294, 278, 455, 308, 292, 415, 429, 358, 355, 265, 340, 372, 388, 390, 466, 352, 346, 280, 295, 442, 282, 354, 19, 370, 285, 441, 295, 195, 248, 197, 457, 440, 274, 301, 300, 368, 417, 351, 465, 251, 301, 389, 385, 380, 386, 394, 395, 379, 399, 412, 419, 410, 436, 322, 387, 373, 388, 326, 2, 393, 354, 370, 461, 393, 164, 267, 268, 302, 12, 386, 374, 387, 312, 268, 13, 298, 293, 301, 265, 446, 340, 380, 385, 381, 280, 330, 425, 322, 426, 391, 420, 429, 437, 393, 391, 326, 344, 440, 438, 458, 459, 461, 364, 434, 394, 428, 396, 262, 274, 354, 457, 317, 316, 402, 316, 315, 403, 315, 314, 404, 314, 313, 405, 313, 421, 406, 323, 366, 361, 292, 306, 407, 306, 291, 408, 291, 287, 409, 287, 432, 410, 427, 434, 411, 372, 264, 383, 459, 309, 457, 366, 352, 401, 1, 274, 4, 418, 421, 262, 331, 294, 358, 435, 433, 367, 392, 289, 439, 328, 462, 326, 94, 2, 370, 289, 305, 455, 339, 254, 448, 359, 255, 446, 254, 253, 449, 253, 252, 450, 252, 256, 451, 256, 341, 452, 414, 413, 463, 286, 441, 414, 286, 258, 441, 258, 257, 442, 257, 259, 443, 259, 260, 444, 260, 467, 445, 309, 459, 250, 305, 289, 290, 305, 290, 460, 401, 376, 435, 309, 250, 392, 376, 411, 433, 453, 341, 464, 357, 453, 465, 343, 357, 412, 437, 343, 399, 344, 360, 440, 420, 437, 456, 360, 420, 363, 361, 401, 288, 265, 372, 353, 390, 339, 249, 339, 448, 255],\n  // My face as default (captured with a 640x480 webcam)\n  // prettier-ignore\n  SAMPLE_FACE: {\n    \"keypoints\": [{\n      \"x\": 356.2804412841797,\n      \"y\": 295.1960563659668,\n      \"z\": -23.786449432373047,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 354.8859405517578,\n      \"y\": 264.69520568847656,\n      \"z\": -36.718435287475586\n    }, {\n      \"x\": 355.2180862426758,\n      \"y\": 275.3360366821289,\n      \"z\": -21.183712482452393\n    }, {\n      \"x\": 347.349853515625,\n      \"y\": 242.4400234222412,\n      \"z\": -25.093655586242676\n    }, {\n      \"x\": 354.40135955810547,\n      \"y\": 256.67933464050293,\n      \"z\": -38.23572635650635\n    }, {\n      \"x\": 353.7689971923828,\n      \"y\": 247.54886627197266,\n      \"z\": -34.5475435256958\n    }, {\n      \"x\": 352.1288299560547,\n      \"y\": 227.34312057495117,\n      \"z\": -13.095386028289795\n    }, {\n      \"x\": 303.5013198852539,\n      \"y\": 234.67002868652344,\n      \"z\": 12.500141859054565,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 351.09378814697266,\n      \"y\": 211.87547206878662,\n      \"z\": -6.413471698760986\n    }, {\n      \"x\": 350.7115936279297,\n      \"y\": 202.1251630783081,\n      \"z\": -6.413471698760986\n    }, {\n      \"x\": 348.33667755126953,\n      \"y\": 168.7741756439209,\n      \"z\": 6.483500003814697,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 356.4806365966797,\n      \"y\": 299.2995357513428,\n      \"z\": -23.144519329071045\n    }, {\n      \"x\": 356.5511703491211,\n      \"y\": 302.66146659851074,\n      \"z\": -21.020312309265137\n    }, {\n      \"x\": 356.6239547729492,\n      \"y\": 304.1536331176758,\n      \"z\": -18.137459754943848,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 356.5807342529297,\n      \"y\": 305.1840591430664,\n      \"z\": -18.767719268798828,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 356.8241500854492,\n      \"y\": 308.25711250305176,\n      \"z\": -20.16829490661621\n    }, {\n      \"x\": 357.113037109375,\n      \"y\": 312.26277351379395,\n      \"z\": -22.10575819015503\n    }, {\n      \"x\": 357.34962463378906,\n      \"y\": 317.1123218536377,\n      \"z\": -21.837315559387207,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 357.6658630371094,\n      \"y\": 325.51036834716797,\n      \"z\": -16.27002477645874\n    }, {\n      \"x\": 355.0201416015625,\n      \"y\": 269.36279296875,\n      \"z\": -33.73054027557373\n    }, {\n      \"x\": 348.5237503051758,\n      \"y\": 270.33411026000977,\n      \"z\": -24.93025302886963\n    }, {\n      \"x\": 279.97331619262695,\n      \"y\": 213.24176788330078,\n      \"z\": 47.759642601013184,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 322.66529083251953,\n      \"y\": 238.5027265548706,\n      \"z\": 5.535193085670471\n    }, {\n      \"x\": 316.0983657836914,\n      \"y\": 239.94489669799805,\n      \"z\": 5.777376294136047\n    }, {\n      \"x\": 309.9431610107422,\n      \"y\": 240.24518966674805,\n      \"z\": 7.510589361190796\n    }, {\n      \"x\": 301.31994247436523,\n      \"y\": 237.86138534545898,\n      \"z\": 13.118728399276733\n    }, {\n      \"x\": 328.14266204833984,\n      \"y\": 235.80496788024902,\n      \"z\": 6.646900177001953\n    }, {\n      \"x\": 313.7326431274414,\n      \"y\": 222.11161136627197,\n      \"z\": 3.9887237548828125\n    }, {\n      \"x\": 320.45196533203125,\n      \"y\": 221.87729358673096,\n      \"z\": 4.601476192474365\n    }, {\n      \"x\": 307.35679626464844,\n      \"y\": 223.63793849945068,\n      \"z\": 5.932023525238037\n    }, {\n      \"x\": 303.0031204223633,\n      \"y\": 226.3743782043457,\n      \"z\": 8.479321002960205\n    }, {\n      \"x\": 296.80023193359375,\n      \"y\": 242.94299125671387,\n      \"z\": 15.931552648544312\n    }, {\n      \"x\": 332.2352981567383,\n      \"y\": 340.77341079711914,\n      \"z\": -10.165848731994629\n    }, {\n      \"x\": 301.38587951660156,\n      \"y\": 233.46447944641113,\n      \"z\": 14.764405488967896,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 279.0147018432617,\n      \"y\": 244.37155723571777,\n      \"z\": 45.77549457550049\n    }, {\n      \"x\": 289.60548400878906,\n      \"y\": 239.1807460784912,\n      \"z\": 23.191204071044922\n    }, {\n      \"x\": 320.32257080078125,\n      \"y\": 267.1292781829834,\n      \"z\": -4.954537749290466\n    }, {\n      \"x\": 347.64583587646484,\n      \"y\": 294.4955062866211,\n      \"z\": -23.062820434570312,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 349.28138732910156,\n      \"y\": 303.1095886230469,\n      \"z\": -20.238323211669922\n    }, {\n      \"x\": 338.9453125,\n      \"y\": 298.19186210632324,\n      \"z\": -19.456336498260498,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 333.36788177490234,\n      \"y\": 302.6706790924072,\n      \"z\": -14.776077270507812,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 342.89188385009766,\n      \"y\": 304.3561363220215,\n      \"z\": -17.752301692962646\n    }, {\n      \"x\": 337.7375030517578,\n      \"y\": 306.0098361968994,\n      \"z\": -13.410515785217285\n    }, {\n      \"x\": 325.6159210205078,\n      \"y\": 316.22995376586914,\n      \"z\": -6.681914925575256\n    }, {\n      \"x\": 349.0104675292969,\n      \"y\": 264.9818515777588,\n      \"z\": -36.274919509887695\n    }, {\n      \"x\": 347.7138900756836,\n      \"y\": 257.5664806365967,\n      \"z\": -37.67549514770508\n    }, {\n      \"x\": 291.79357528686523,\n      \"y\": 218.88171672821045,\n      \"z\": 11.578094959259033,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 332.2689437866211,\n      \"y\": 247.56946563720703,\n      \"z\": -3.3730539679527283\n    }, {\n      \"x\": 332.0074462890625,\n      \"y\": 267.1201229095459,\n      \"z\": -19.969879388809204\n    }, {\n      \"x\": 331.27952575683594,\n      \"y\": 263.6967658996582,\n      \"z\": -17.47218608856201\n    }, {\n      \"x\": 301.04373931884766,\n      \"y\": 269.56552505493164,\n      \"z\": 3.61815482378006\n    }, {\n      \"x\": 347.4863815307617,\n      \"y\": 249.0706443786621,\n      \"z\": -32.633421421051025\n    }, {\n      \"x\": 307.26118087768555,\n      \"y\": 208.2646894454956,\n      \"z\": 1.1591226607561111,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 297.91919708251953,\n      \"y\": 212.22604751586914,\n      \"z\": 5.914516448974609,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 285.1651382446289,\n      \"y\": 197.98450469970703,\n      \"z\": 36.391637325286865,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 337.04097747802734,\n      \"y\": 211.25229835510254,\n      \"z\": -4.548954665660858\n    }, {\n      \"x\": 326.5912628173828,\n      \"y\": 223.16698551177979,\n      \"z\": 6.670243740081787\n    }, {\n      \"x\": 320.05664825439453,\n      \"y\": 309.5834255218506,\n      \"z\": -4.055835008621216\n    }, {\n      \"x\": 289.6866226196289,\n      \"y\": 314.617395401001,\n      \"z\": 53.875489234924316,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 337.4256896972656,\n      \"y\": 270.8755302429199,\n      \"z\": -17.67060160636902\n    }, {\n      \"x\": 343.69922637939453,\n      \"y\": 273.0000400543213,\n      \"z\": -18.756048679351807\n    }, {\n      \"x\": 327.4242401123047,\n      \"y\": 309.22399520874023,\n      \"z\": -4.703601002693176,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 330.37220001220703,\n      \"y\": 308.3323001861572,\n      \"z\": -6.442649960517883\n    }, {\n      \"x\": 293.87027740478516,\n      \"y\": 207.7961826324463,\n      \"z\": 9.821539521217346,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 332.11437225341797,\n      \"y\": 271.22812271118164,\n      \"z\": -16.64351224899292\n    }, {\n      \"x\": 320.1197814941406,\n      \"y\": 207.40366458892822,\n      \"z\": -2.48164564371109,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 318.59575271606445,\n      \"y\": 201.07443809509277,\n      \"z\": -3.110446035861969,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 310.72303771972656,\n      \"y\": 175.75075149536133,\n      \"z\": 13.328815698623657,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 289.67578887939453,\n      \"y\": 202.29835510253906,\n      \"z\": 21.370456218719482\n    }, {\n      \"x\": 315.30879974365234,\n      \"y\": 187.35260009765625,\n      \"z\": 5.0304025411605835\n    }, {\n      \"x\": 287.8936767578125,\n      \"y\": 216.54793739318848,\n      \"z\": 17.81065821647644,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 283.9391899108887,\n      \"y\": 215.01142501831055,\n      \"z\": 32.04984903335571\n    }, {\n      \"x\": 348.35330963134766,\n      \"y\": 299.4155788421631,\n      \"z\": -22.47924566268921\n    }, {\n      \"x\": 341.1790466308594,\n      \"y\": 301.8221855163574,\n      \"z\": -18.977805376052856\n    }, {\n      \"x\": 335.69713592529297,\n      \"y\": 304.4266891479492,\n      \"z\": -14.682706594467163\n    }, {\n      \"x\": 339.4615173339844,\n      \"y\": 272.3654365539551,\n      \"z\": -16.38674020767212\n    }, {\n      \"x\": 328.99600982666016,\n      \"y\": 308.86685371398926,\n      \"z\": -5.616893768310547\n    }, {\n      \"x\": 332.00313568115234,\n      \"y\": 309.1875743865967,\n      \"z\": -10.335084199905396\n    }, {\n      \"x\": 331.0068130493164,\n      \"y\": 307.9274368286133,\n      \"z\": -6.681914925575256,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 341.13792419433594,\n      \"y\": 266.4876937866211,\n      \"z\": -26.56425952911377\n    }, {\n      \"x\": 339.02950286865234,\n      \"y\": 305.6663703918457,\n      \"z\": -12.33674168586731,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 344.22935485839844,\n      \"y\": 304.9452781677246,\n      \"z\": -15.161235332489014,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 350.1844024658203,\n      \"y\": 304.374303817749,\n      \"z\": -17.5305438041687,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 348.52630615234375,\n      \"y\": 325.9562301635742,\n      \"z\": -16.164982318878174\n    }, {\n      \"x\": 348.6581802368164,\n      \"y\": 317.1624183654785,\n      \"z\": -21.510512828826904,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 348.9766311645508,\n      \"y\": 312.1923065185547,\n      \"z\": -21.708929538726807\n    }, {\n      \"x\": 349.2427444458008,\n      \"y\": 308.0660820007324,\n      \"z\": -19.643079042434692\n    }, {\n      \"x\": 349.67491149902344,\n      \"y\": 305.42747497558594,\n      \"z\": -18.16080331802368,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 337.95589447021484,\n      \"y\": 306.6535949707031,\n      \"z\": -12.803598642349243,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 337.06878662109375,\n      \"y\": 307.63169288635254,\n      \"z\": -14.274203777313232\n    }, {\n      \"x\": 335.77449798583984,\n      \"y\": 309.8449516296387,\n      \"z\": -15.698124170303345\n    }, {\n      \"x\": 334.6099090576172,\n      \"y\": 312.7997016906738,\n      \"z\": -14.764405488967896,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 327.2330856323242,\n      \"y\": 293.80866050720215,\n      \"z\": -11.864047050476074\n    }, {\n      \"x\": 280.97679138183594,\n      \"y\": 279.79928970336914,\n      \"z\": 68.90834331512451,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 355.13843536376953,\n      \"y\": 271.7875671386719,\n      \"z\": -25.350427627563477\n    }, {\n      \"x\": 334.7235870361328,\n      \"y\": 307.4656391143799,\n      \"z\": -9.302158951759338,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 333.5293960571289,\n      \"y\": 307.89782524108887,\n      \"z\": -10.200862884521484\n    }, {\n      \"x\": 346.29688262939453,\n      \"y\": 276.4256286621094,\n      \"z\": -19.748122692108154\n    }, {\n      \"x\": 335.16246795654297,\n      \"y\": 276.22097969055176,\n      \"z\": -12.313398122787476\n    }, {\n      \"x\": 345.09132385253906,\n      \"y\": 274.7082996368408,\n      \"z\": -19.304605722427368\n    }, {\n      \"x\": 325.4267883300781,\n      \"y\": 252.95130729675293,\n      \"z\": -1.6661019623279572\n    }, {\n      \"x\": 315.347843170166,\n      \"y\": 259.05200958251953,\n      \"z\": -0.25604281574487686\n    }, {\n      \"x\": 330.44933319091797,\n      \"y\": 267.7570152282715,\n      \"z\": -14.017432928085327\n    }, {\n      \"x\": 294.96768951416016,\n      \"y\": 185.26001930236816,\n      \"z\": 23.903164863586426,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 299.63531494140625,\n      \"y\": 192.7913761138916,\n      \"z\": 12.640198469161987\n    }, {\n      \"x\": 304.5452117919922,\n      \"y\": 202.4142837524414,\n      \"z\": 3.244667649269104,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 331.6915512084961,\n      \"y\": 320.0467872619629,\n      \"z\": -10.632705688476562\n    }, {\n      \"x\": 334.5911407470703,\n      \"y\": 201.27566814422607,\n      \"z\": -6.133356094360352,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 331.4815902709961,\n      \"y\": 185.44180870056152,\n      \"z\": 0.6627205014228821\n    }, {\n      \"x\": 328.05816650390625,\n      \"y\": 170.8385467529297,\n      \"z\": 7.358860373497009,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 304.49764251708984,\n      \"y\": 239.76297855377197,\n      \"z\": 10.387605428695679\n    }, {\n      \"x\": 290.6382179260254,\n      \"y\": 248.85257720947266,\n      \"z\": 19.03616428375244\n    }, {\n      \"x\": 331.5682601928711,\n      \"y\": 233.20727348327637,\n      \"z\": 7.837390303611755\n    }, {\n      \"x\": 295.5115509033203,\n      \"y\": 228.9834451675415,\n      \"z\": 14.41426157951355\n    }, {\n      \"x\": 336.94332122802734,\n      \"y\": 241.8259334564209,\n      \"z\": -5.27842104434967\n    }, {\n      \"x\": 336.2792205810547,\n      \"y\": 262.7049922943115,\n      \"z\": -26.12074375152588\n    }, {\n      \"x\": 284.4102478027344,\n      \"y\": 255.3262710571289,\n      \"z\": 25.467140674591064\n    }, {\n      \"x\": 295.1420593261719,\n      \"y\": 253.02655220031738,\n      \"z\": 12.430112361907959\n    }, {\n      \"x\": 303.5196113586426,\n      \"y\": 254.20703887939453,\n      \"z\": 6.139191389083862\n    }, {\n      \"x\": 315.73450088500977,\n      \"y\": 251.64799690246582,\n      \"z\": 3.3788898587226868\n    }, {\n      \"x\": 324.69661712646484,\n      \"y\": 247.56494522094727,\n      \"z\": 2.3328344523906708\n    }, {\n      \"x\": 331.57970428466797,\n      \"y\": 243.02241325378418,\n      \"z\": 1.1423448473215103\n    }, {\n      \"x\": 345.6210708618164,\n      \"y\": 229.9976634979248,\n      \"z\": -10.825285911560059\n    }, {\n      \"x\": 286.26644134521484,\n      \"y\": 270.37991523742676,\n      \"z\": 21.708929538726807\n    }, {\n      \"x\": 290.2525520324707,\n      \"y\": 228.4921360015869,\n      \"z\": 17.71728754043579\n    }, {\n      \"x\": 351.65367126464844,\n      \"y\": 269.3400764465332,\n      \"z\": -33.450424671173096\n    }, {\n      \"x\": 333.1378936767578,\n      \"y\": 253.88388633728027,\n      \"z\": -7.230473756790161\n    }, {\n      \"x\": 277.8318977355957,\n      \"y\": 246.95331573486328,\n      \"z\": 68.20805549621582,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 336.6680908203125,\n      \"y\": 238.10003757476807,\n      \"z\": 0.7688578963279724\n    }, {\n      \"x\": 329.95800018310547,\n      \"y\": 269.18323516845703,\n      \"z\": -7.207130789756775\n    }, {\n      \"x\": 299.17491912841797,\n      \"y\": 234.13324356079102,\n      \"z\": 15.95489501953125\n    }, {\n      \"x\": 335.61729431152344,\n      \"y\": 258.71752738952637,\n      \"z\": -23.016133308410645\n    }, {\n      \"x\": 284.1079330444336,\n      \"y\": 297.0343494415283,\n      \"z\": 63.25934886932373,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 331.44542694091797,\n      \"y\": 230.6892442703247,\n      \"z\": 9.92658257484436,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 341.41536712646484,\n      \"y\": 253.01264762878418,\n      \"z\": -29.038610458374023\n    }, {\n      \"x\": 303.5472869873047,\n      \"y\": 327.5896739959717,\n      \"z\": 16.725212335586548\n    }, {\n      \"x\": 304.7756576538086,\n      \"y\": 337.4389457702637,\n      \"z\": 27.38126277923584,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 280.80501556396484,\n      \"y\": 275.32050132751465,\n      \"z\": 45.0752067565918\n    }, {\n      \"x\": 295.43582916259766,\n      \"y\": 318.4501647949219,\n      \"z\": 26.2608003616333\n    }, {\n      \"x\": 281.4303207397461,\n      \"y\": 228.7355661392212,\n      \"z\": 40.94350814819336\n    }, {\n      \"x\": 331.2549591064453,\n      \"y\": 349.4216537475586,\n      \"z\": -7.376367449760437\n    }, {\n      \"x\": 352.4247741699219,\n      \"y\": 271.7330074310303,\n      \"z\": -24.953596591949463\n    }, {\n      \"x\": 327.5672912597656,\n      \"y\": 260.41900634765625,\n      \"z\": -5.456410646438599\n    }, {\n      \"x\": 284.5432472229004,\n      \"y\": 241.7647933959961,\n      \"z\": 29.668869972229004\n    }, {\n      \"x\": 310,\n      \"y\": 235.66174507141113,\n      \"z\": 8.502663969993591,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 315.7071113586426,\n      \"y\": 235.7572603225708,\n      \"z\": 6.938687562942505,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 330.41088104248047,\n      \"y\": 311.04143142700195,\n      \"z\": -9.325502514839172,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 288.5377502441406,\n      \"y\": 285.31983375549316,\n      \"z\": 21.837315559387207\n    }, {\n      \"x\": 344.55039978027344,\n      \"y\": 359.4300842285156,\n      \"z\": -6.705257892608643,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 323.41880798339844,\n      \"y\": 351.67362213134766,\n      \"z\": 7.802375555038452,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 314.64088439941406,\n      \"y\": 346.11894607543945,\n      \"z\": 16.36339783668518,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 349.4945526123047,\n      \"y\": 184.8434829711914,\n      \"z\": -0.21847527474164963\n    }, {\n      \"x\": 359.24694061279297,\n      \"y\": 359.8348903656006,\n      \"z\": -8.403456211090088,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 321.26182556152344,\n      \"y\": 234.64492321014404,\n      \"z\": 6.90950870513916,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 326.318359375,\n      \"y\": 232.90250301361084,\n      \"z\": 8.029969334602356,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 329.6211624145508,\n      \"y\": 231.6195774078369,\n      \"z\": 9.722331762313843,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 285.9398078918457,\n      \"y\": 228.2351303100586,\n      \"z\": 24.650139808654785\n    }, {\n      \"x\": 325.79288482666016,\n      \"y\": 227.88007736206055,\n      \"z\": 7.469738721847534,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 320.1699447631836,\n      \"y\": 227.5934886932373,\n      \"z\": 6.168370842933655,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 314.85408782958984,\n      \"y\": 227.85282611846924,\n      \"z\": 6.2675780057907104,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 309.3084907531738,\n      \"y\": 229.1516876220703,\n      \"z\": 7.7031683921813965,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 305.5621337890625,\n      \"y\": 230.92366218566895,\n      \"z\": 9.722331762313843,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 277.8681945800781,\n      \"y\": 228.5354232788086,\n      \"z\": 59.71122741699219,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 306.1444664001465,\n      \"y\": 235.1954698562622,\n      \"z\": 10.603528022766113,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 355.4478454589844,\n      \"y\": 281.96210861206055,\n      \"z\": -20.565123558044434\n    }, {\n      \"x\": 333.02661895751953,\n      \"y\": 288.0105400085449,\n      \"z\": -14.72939133644104\n    }, {\n      \"x\": 337.15728759765625,\n      \"y\": 269.2059516906738,\n      \"z\": -19.8414945602417\n    }, {\n      \"x\": 345.9898376464844,\n      \"y\": 283.5453128814697,\n      \"z\": -20.4834246635437\n    }, {\n      \"x\": 351.48963928222656,\n      \"y\": 219.98916149139404,\n      \"z\": -7.0378947257995605\n    }, {\n      \"x\": 312.39574432373047,\n      \"y\": 336.50628089904785,\n      \"z\": 8.671900033950806\n    }, {\n      \"x\": 321.32152557373047,\n      \"y\": 343.1755256652832,\n      \"z\": 0.9067271649837494\n    }, {\n      \"x\": 343.78379821777344,\n      \"y\": 353.2975959777832,\n      \"z\": -14.355905055999756\n    }, {\n      \"x\": 296.8791389465332,\n      \"y\": 327.91497230529785,\n      \"z\": 41.01353645324707,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 329.6939468383789,\n      \"y\": 229.27897453308105,\n      \"z\": 8.934508562088013,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 341.6905212402344,\n      \"y\": 241.4073657989502,\n      \"z\": -14.589333534240723\n    }, {\n      \"x\": 359.03079986572266,\n      \"y\": 353.48859786987305,\n      \"z\": -15.803166627883911\n    }, {\n      \"x\": 333.1861877441406,\n      \"y\": 356.43213272094727,\n      \"z\": -1.0234417766332626,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 283.97483825683594,\n      \"y\": 291.4318656921387,\n      \"z\": 41.94725513458252\n    }, {\n      \"x\": 343.33770751953125,\n      \"y\": 305.830135345459,\n      \"z\": -15.756480693817139,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 342.40283966064453,\n      \"y\": 307.7453899383545,\n      \"z\": -17.4021577835083\n    }, {\n      \"x\": 341.53621673583984,\n      \"y\": 311.0595703125,\n      \"z\": -19.047834873199463\n    }, {\n      \"x\": 340.9107208251953,\n      \"y\": 315.4837703704834,\n      \"z\": -18.5576331615448,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 339.1478729248047,\n      \"y\": 323.42233657836914,\n      \"z\": -14.367576837539673\n    }, {\n      \"x\": 333.3201599121094,\n      \"y\": 307.4406337738037,\n      \"z\": -9.617288708686829\n    }, {\n      \"x\": 331.2411117553711,\n      \"y\": 306.9811820983887,\n      \"z\": -9.669809937477112\n    }, {\n      \"x\": 329.23255920410156,\n      \"y\": 306.0508346557617,\n      \"z\": -9.582273960113525,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 322.4586486816406,\n      \"y\": 301.33323669433594,\n      \"z\": -7.720675468444824\n    }, {\n      \"x\": 297.1712112426758,\n      \"y\": 286.9552803039551,\n      \"z\": 8.240055441856384\n    }, {\n      \"x\": 341.3060760498047,\n      \"y\": 235.4432201385498,\n      \"z\": -7.504753470420837\n    }, {\n      \"x\": 336.9318389892578,\n      \"y\": 224.3451976776123,\n      \"z\": 5.829898118972778\n    }, {\n      \"x\": 332.65323638916016,\n      \"y\": 226.70403957366943,\n      \"z\": 8.105834126472473\n    }, {\n      \"x\": 334.67357635498047,\n      \"y\": 306.4397621154785,\n      \"z\": -8.981193900108337,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 297.4601936340332,\n      \"y\": 306.29210472106934,\n      \"z\": 15.476365089416504\n    }, {\n      \"x\": 342.9119110107422,\n      \"y\": 222.37077713012695,\n      \"z\": -2.754466235637665\n    }, {\n      \"x\": 335.4629898071289,\n      \"y\": 332.20250129699707,\n      \"z\": -11.823196411132812\n    }, {\n      \"x\": 353.2412338256836,\n      \"y\": 240.56339263916016,\n      \"z\": -27.147831916809082\n    }, {\n      \"x\": 346.3080596923828,\n      \"y\": 236.41446590423584,\n      \"z\": -18.452589511871338\n    }, {\n      \"x\": 352.6475143432617,\n      \"y\": 234.1420555114746,\n      \"z\": -19.748122692108154\n    }, {\n      \"x\": 337.3209762573242,\n      \"y\": 253.39937210083008,\n      \"z\": -16.024924516677856\n    }, {\n      \"x\": 358.6122131347656,\n      \"y\": 344.90861892700195,\n      \"z\": -18.592647314071655\n    }, {\n      \"x\": 358.1117248535156,\n      \"y\": 334.64990615844727,\n      \"z\": -17.49552845954895\n    }, {\n      \"x\": 346.4450454711914,\n      \"y\": 335.0321102142334,\n      \"z\": -16.32838249206543\n    }, {\n      \"x\": 319.17640686035156,\n      \"y\": 320.2833938598633,\n      \"z\": -3.276764452457428\n    }, {\n      \"x\": 325.2540588378906,\n      \"y\": 276.2369728088379,\n      \"z\": -6.460157036781311\n    }, {\n      \"x\": 326.7214584350586,\n      \"y\": 327.3939514160156,\n      \"z\": -7.417217493057251\n    }, {\n      \"x\": 310.7190132141113,\n      \"y\": 277.2265148162842,\n      \"z\": -3.5452082753181458\n    }, {\n      \"x\": 319.78355407714844,\n      \"y\": 284.8238182067871,\n      \"z\": -6.4543211460113525\n    }, {\n      \"x\": 305.773983001709,\n      \"y\": 290.83580017089844,\n      \"z\": 0.06907138042151928\n    }, {\n      \"x\": 344.4001770019531,\n      \"y\": 344.85408782958984,\n      \"z\": -16.946970224380493\n    }, {\n      \"x\": 333.1879425048828,\n      \"y\": 258.74256134033203,\n      \"z\": -11.90489649772644\n    }, {\n      \"x\": 313.80598068237305,\n      \"y\": 327.08919525146484,\n      \"z\": 2.2277912497520447\n    }, {\n      \"x\": 322.9637908935547,\n      \"y\": 334.6819496154785,\n      \"z\": -3.3643004298210144\n    }, {\n      \"x\": 313.4055519104004,\n      \"y\": 311.2166690826416,\n      \"z\": -1.1175429821014404\n    }, {\n      \"x\": 291.0865783691406,\n      \"y\": 298.2831001281738,\n      \"z\": 22.467575073242188\n    }, {\n      \"x\": 305.6580924987793,\n      \"y\": 313.3707904815674,\n      \"z\": 5.561453700065613\n    }, {\n      \"x\": 288.23760986328125,\n      \"y\": 305.9941864013672,\n      \"z\": 36.765122413635254\n    }, {\n      \"x\": 315.10692596435547,\n      \"y\": 296.26991271972656,\n      \"z\": -4.604393839836121\n    }, {\n      \"x\": 337.50518798828125,\n      \"y\": 247.5944423675537,\n      \"z\": -10.597691535949707\n    }, {\n      \"x\": 338.8450622558594,\n      \"y\": 265.47778129577637,\n      \"z\": -27.778091430664062\n    }, {\n      \"x\": 334.25254821777344,\n      \"y\": 269.0671920776367,\n      \"z\": -20.938611030578613\n    }, {\n      \"x\": 341.64512634277344,\n      \"y\": 259.6387195587158,\n      \"z\": -32.189905643463135\n    }, {\n      \"x\": 331.44081115722656,\n      \"y\": 219.0976095199585,\n      \"z\": 4.207563698291779\n    }, {\n      \"x\": 320.56339263916016,\n      \"y\": 216.49658203125,\n      \"z\": 2.930997312068939\n    }, {\n      \"x\": 311.21912002563477,\n      \"y\": 216.57853603363037,\n      \"z\": 2.9674705862998962\n    }, {\n      \"x\": 303.46256256103516,\n      \"y\": 218.54614734649658,\n      \"z\": 5.357203483581543\n    }, {\n      \"x\": 297.99999237060547,\n      \"y\": 222.505202293396,\n      \"z\": 9.325502514839172\n    }, {\n      \"x\": 294.93839263916016,\n      \"y\": 236.39654159545898,\n      \"z\": 18.534289598464966\n    }, {\n      \"x\": 278.87489318847656,\n      \"y\": 259.7095584869385,\n      \"z\": 45.68212032318115\n    }, {\n      \"x\": 300.3782653808594,\n      \"y\": 245.38593292236328,\n      \"z\": 12.278382778167725\n    }, {\n      \"x\": 307.06348419189453,\n      \"y\": 246.36857986450195,\n      \"z\": 8.164191246032715\n    }, {\n      \"x\": 315.5229187011719,\n      \"y\": 245.3949737548828,\n      \"z\": 5.503097176551819\n    }, {\n      \"x\": 323.71395111083984,\n      \"y\": 242.75178909301758,\n      \"z\": 4.6335723996162415\n    }, {\n      \"x\": 330.2785873413086,\n      \"y\": 239.34658527374268,\n      \"z\": 4.937030673027039\n    }, {\n      \"x\": 334.6982192993164,\n      \"y\": 236.0460376739502,\n      \"z\": 4.823233783245087\n    }, {\n      \"x\": 279.3412208557129,\n      \"y\": 263.5196113586426,\n      \"z\": 70.91583728790283,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 334.65972900390625,\n      \"y\": 271.6648578643799,\n      \"z\": -17.775644063949585\n    }, {\n      \"x\": 342.05677032470703,\n      \"y\": 246.99846267700195,\n      \"z\": -20.84523916244507\n    }, {\n      \"x\": 344.0357971191406,\n      \"y\": 264.5701503753662,\n      \"z\": -32.936880588531494\n    }, {\n      \"x\": 348.25531005859375,\n      \"y\": 268.6645030975342,\n      \"z\": -30.695960521697998\n    }, {\n      \"x\": 344.12227630615234,\n      \"y\": 266.34212493896484,\n      \"z\": -29.808926582336426\n    }, {\n      \"x\": 337.12318420410156,\n      \"y\": 274.2556858062744,\n      \"z\": -15.768152475357056\n    }, {\n      \"x\": 349.49047088623047,\n      \"y\": 269.071683883667,\n      \"z\": -32.51670837402344\n    }, {\n      \"x\": 350.1683044433594,\n      \"y\": 271.4691352844238,\n      \"z\": -24.93025302886963\n    }, {\n      \"x\": 333.9634704589844,\n      \"y\": 230.56639194488525,\n      \"z\": 8.89949381351471\n    }, {\n      \"x\": 338.2147979736328,\n      \"y\": 231.4807891845703,\n      \"z\": 4.6715047955513\n    }, {\n      \"x\": 340.4712677001953,\n      \"y\": 231.74463272094727,\n      \"z\": -0.34996166825294495\n    }, {\n      \"x\": 303.28975677490234,\n      \"y\": 232.24980354309082,\n      \"z\": 11.916568279266357,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 299.4649124145508,\n      \"y\": 229.53842639923096,\n      \"z\": 12.325069904327393\n    }, {\n      \"x\": 359.09618377685547,\n      \"y\": 241.77349090576172,\n      \"z\": -24.650139808654785\n    }, {\n      \"x\": 399.46216583251953,\n      \"y\": 229.89503860473633,\n      \"z\": 15.919880867004395,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 361.38919830322266,\n      \"y\": 269.6129894256592,\n      \"z\": -24.510080814361572\n    }, {\n      \"x\": 416.9973373413086,\n      \"y\": 206.0895538330078,\n      \"z\": 53.26857566833496,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 381.32179260253906,\n      \"y\": 235.5476474761963,\n      \"z\": 7.6214683055877686\n    }, {\n      \"x\": 387.8068542480469,\n      \"y\": 236.25958442687988,\n      \"z\": 8.345099091529846\n    }, {\n      \"x\": 393.95751953125,\n      \"y\": 235.8660364151001,\n      \"z\": 10.475142002105713\n    }, {\n      \"x\": 401.84600830078125,\n      \"y\": 232.77019500732422,\n      \"z\": 16.760226488113403\n    }, {\n      \"x\": 375.70568084716797,\n      \"y\": 233.48456382751465,\n      \"z\": 8.234220147132874\n    }, {\n      \"x\": 388.17752838134766,\n      \"y\": 218.94717693328857,\n      \"z\": 6.810300946235657\n    }, {\n      \"x\": 381.64928436279297,\n      \"y\": 219.2656660079956,\n      \"z\": 6.711093783378601\n    }, {\n      \"x\": 394.4760513305664,\n      \"y\": 219.66821193695068,\n      \"z\": 9.173773527145386\n    }, {\n      \"x\": 398.8843536376953,\n      \"y\": 221.8837022781372,\n      \"z\": 12.03328251838684\n    }, {\n      \"x\": 406.5454864501953,\n      \"y\": 237.12156772613525,\n      \"z\": 19.7131085395813\n    }, {\n      \"x\": 383.87447357177734,\n      \"y\": 337.6932907104492,\n      \"z\": -8.631049990653992\n    }, {\n      \"x\": 401.2682342529297,\n      \"y\": 228.5916566848755,\n      \"z\": 18.359217643737793,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 422.0449447631836,\n      \"y\": 236.73934936523438,\n      \"z\": 51.16771221160889\n    }, {\n      \"x\": 412.69153594970703,\n      \"y\": 232.80198097229004,\n      \"z\": 27.52131938934326\n    }, {\n      \"x\": 387.3497772216797,\n      \"y\": 263.298397064209,\n      \"z\": -2.8609684109687805\n    }, {\n      \"x\": 364.5124053955078,\n      \"y\": 293.39221000671387,\n      \"z\": -22.397546768188477,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 363.62987518310547,\n      \"y\": 302.1291446685791,\n      \"z\": -19.643079042434692\n    }, {\n      \"x\": 373.2334518432617,\n      \"y\": 295.8647060394287,\n      \"z\": -18.125789165496826,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 378.83365631103516,\n      \"y\": 299.5177745819092,\n      \"z\": -13.153743743896484,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 369.91477966308594,\n      \"y\": 302.5704002380371,\n      \"z\": -16.65518283843994\n    }, {\n      \"x\": 374.9167251586914,\n      \"y\": 303.5416603088379,\n      \"z\": -11.963253021240234\n    }, {\n      \"x\": 387.58888244628906,\n      \"y\": 312.2716999053955,\n      \"z\": -4.680258631706238\n    }, {\n      \"x\": 360.6635284423828,\n      \"y\": 264.31986808776855,\n      \"z\": -35.94811677932739\n    }, {\n      \"x\": 361.04564666748047,\n      \"y\": 256.8225860595703,\n      \"z\": -37.278664112091064\n    }, {\n      \"x\": 408.3855438232422,\n      \"y\": 213.52088928222656,\n      \"z\": 15.756480693817139,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 373.2946014404297,\n      \"y\": 245.38101196289062,\n      \"z\": -1.9316278398036957\n    }, {\n      \"x\": 376.83860778808594,\n      \"y\": 264.3721103668213,\n      \"z\": -18.510947227478027\n    }, {\n      \"x\": 376.9546127319336,\n      \"y\": 261.0010528564453,\n      \"z\": -15.989909172058105\n    }, {\n      \"x\": 406.1498260498047,\n      \"y\": 263.5030174255371,\n      \"z\": 7.072908878326416\n    }, {\n      \"x\": 360.07205963134766,\n      \"y\": 248.3631706237793,\n      \"z\": -32.16656446456909\n    }, {\n      \"x\": 393.11119079589844,\n      \"y\": 205.10473251342773,\n      \"z\": 3.7786373496055603,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 402.12791442871094,\n      \"y\": 207.89000988006592,\n      \"z\": 9.383859634399414,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 410.8693313598633,\n      \"y\": 191.6182279586792,\n      \"z\": 41.27030849456787,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 364.9509811401367,\n      \"y\": 210.40483474731445,\n      \"z\": -3.758212625980377\n    }, {\n      \"x\": 375.94444274902344,\n      \"y\": 221.1331844329834,\n      \"z\": 8.368442058563232\n    }, {\n      \"x\": 392.1904754638672,\n      \"y\": 305.0360298156738,\n      \"z\": -1.752179116010666\n    }, {\n      \"x\": 419.50225830078125,\n      \"y\": 307.25592613220215,\n      \"z\": 58.96425247192383,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 372.0027160644531,\n      \"y\": 268.7212657928467,\n      \"z\": -16.631840467453003\n    }, {\n      \"x\": 366.1614227294922,\n      \"y\": 271.6237449645996,\n      \"z\": -18.219159841537476\n    }, {\n      \"x\": 385.00938415527344,\n      \"y\": 305.3863334655762,\n      \"z\": -2.567722797393799\n    }, {\n      \"x\": 381.99771881103516,\n      \"y\": 304.9723720550537,\n      \"z\": -4.575215280056\n    }, {\n      \"x\": 405.078125,\n      \"y\": 203.21216583251953,\n      \"z\": 13.713973760604858,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 377.13207244873047,\n      \"y\": 268.4710121154785,\n      \"z\": -15.266278982162476\n    }, {\n      \"x\": 380.9713363647461,\n      \"y\": 205.36980628967285,\n      \"z\": -0.7250899076461792,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 381.7788314819336,\n      \"y\": 198.9268398284912,\n      \"z\": -1.184653863310814,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 385.5204772949219,\n      \"y\": 172.1484375,\n      \"z\": 16.04826807975769,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 407.94189453125,\n      \"y\": 196.76236152648926,\n      \"z\": 25.723915100097656\n    }, {\n      \"x\": 383.03890228271484,\n      \"y\": 184.5157527923584,\n      \"z\": 7.393874526023865\n    }, {\n      \"x\": 411.61781311035156,\n      \"y\": 210.79241752624512,\n      \"z\": 22.315845489501953,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 414.30870056152344,\n      \"y\": 208.4643030166626,\n      \"z\": 37.021894454956055\n    }, {\n      \"x\": 364.28722381591797,\n      \"y\": 298.35777282714844,\n      \"z\": -21.86065673828125\n    }, {\n      \"x\": 371.3682556152344,\n      \"y\": 299.78848457336426,\n      \"z\": -17.834001779556274\n    }, {\n      \"x\": 376.88201904296875,\n      \"y\": 301.6696071624756,\n      \"z\": -13.153743743896484\n    }, {\n      \"x\": 370.2193832397461,\n      \"y\": 270.49095153808594,\n      \"z\": -15.569736957550049\n    }, {\n      \"x\": 383.5081100463867,\n      \"y\": 305.2726364135742,\n      \"z\": -3.673594295978546\n    }, {\n      \"x\": 380.73760986328125,\n      \"y\": 305.96869468688965,\n      \"z\": -8.660228252410889\n    }, {\n      \"x\": 381.2334442138672,\n      \"y\": 304.63574409484863,\n      \"z\": -4.820316135883331,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 368.1698989868164,\n      \"y\": 264.8884963989258,\n      \"z\": -25.653886795043945\n    }, {\n      \"x\": 373.5087203979492,\n      \"y\": 303.4233856201172,\n      \"z\": -10.95950722694397,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 368.4544372558594,\n      \"y\": 303.29601287841797,\n      \"z\": -14.169161319732666,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 362.76554107666016,\n      \"y\": 303.5735607147217,\n      \"z\": -16.911956071853638,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 366.60980224609375,\n      \"y\": 324.8870658874512,\n      \"z\": -15.616422891616821\n    }, {\n      \"x\": 365.7067108154297,\n      \"y\": 315.95678329467773,\n      \"z\": -20.903596878051758,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 365.0083923339844,\n      \"y\": 311.2232208251953,\n      \"z\": -21.066999435424805\n    }, {\n      \"x\": 364.1508102416992,\n      \"y\": 307.0583438873291,\n      \"z\": -18.907777070999146\n    }, {\n      \"x\": 363.37512969970703,\n      \"y\": 304.5721435546875,\n      \"z\": -17.42550015449524,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 374.580078125,\n      \"y\": 304.3059539794922,\n      \"z\": -11.40302300453186,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 375.55362701416016,\n      \"y\": 305.0998020172119,\n      \"z\": -12.861957550048828\n    }, {\n      \"x\": 377.2437286376953,\n      \"y\": 307.1674346923828,\n      \"z\": -14.215847253799438\n    }, {\n      \"x\": 378.68587493896484,\n      \"y\": 309.9015712738037,\n      \"z\": -13.223772048950195,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 383.8992691040039,\n      \"y\": 290.29629707336426,\n      \"z\": -9.97326910495758\n    }, {\n      \"x\": 423.3871841430664,\n      \"y\": 271.91688537597656,\n      \"z\": 74.37058925628662,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 377.68043518066406,\n      \"y\": 304.62209701538086,\n      \"z\": -7.603961229324341,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 379.00428771972656,\n      \"y\": 304.9314594268799,\n      \"z\": -8.57852816581726\n    }, {\n      \"x\": 364.00279998779297,\n      \"y\": 275.2813911437988,\n      \"z\": -19.25792098045349\n    }, {\n      \"x\": 374.68231201171875,\n      \"y\": 273.82555961608887,\n      \"z\": -11.28047227859497\n    }, {\n      \"x\": 365.0354766845703,\n      \"y\": 273.4548568725586,\n      \"z\": -18.791062831878662\n    }, {\n      \"x\": 380.61901092529297,\n      \"y\": 249.8848056793213,\n      \"z\": 0.15501167625188828\n    }, {\n      \"x\": 391.14158630371094,\n      \"y\": 254.7934627532959,\n      \"z\": 2.0906515419483185\n    }, {\n      \"x\": 378.1761169433594,\n      \"y\": 264.9612236022949,\n      \"z\": -12.605184316635132\n    }, {\n      \"x\": 400.9540557861328,\n      \"y\": 179.99592304229736,\n      \"z\": 27.82477855682373,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 398.0038833618164,\n      \"y\": 188.50656509399414,\n      \"z\": 16.094952821731567\n    }, {\n      \"x\": 394.8717498779297,\n      \"y\": 199.0359592437744,\n      \"z\": 6.226727366447449,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 382.10926055908203,\n      \"y\": 316.83926582336426,\n      \"z\": -8.946179747581482\n    }, {\n      \"x\": 366.51588439941406,\n      \"y\": 200.32583713531494,\n      \"z\": -5.24632453918457,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 367.4893569946289,\n      \"y\": 183.87210845947266,\n      \"z\": 1.9039081037044525\n    }, {\n      \"x\": 368.6243438720703,\n      \"y\": 168.8127565383911,\n      \"z\": 8.736093044281006,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 398.96175384521484,\n      \"y\": 234.9675178527832,\n      \"z\": 13.713973760604858\n    }, {\n      \"x\": 412.9645538330078,\n      \"y\": 242.23042488098145,\n      \"z\": 23.272905349731445\n    }, {\n      \"x\": 372.05257415771484,\n      \"y\": 231.41919136047363,\n      \"z\": 9.226294755935669\n    }, {\n      \"x\": 406.0722351074219,\n      \"y\": 223.58965873718262,\n      \"z\": 18.370890617370605\n    }, {\n      \"x\": 368.27442169189453,\n      \"y\": 240.2039337158203,\n      \"z\": -4.166713654994965\n    }, {\n      \"x\": 372.3575210571289,\n      \"y\": 260.66442489624023,\n      \"z\": -24.976940155029297\n    }, {\n      \"x\": 419.2244338989258,\n      \"y\": 247.9079246520996,\n      \"z\": 30.299127101898193\n    }, {\n      \"x\": 409.43885803222656,\n      \"y\": 246.60913467407227,\n      \"z\": 16.398411989212036\n    }, {\n      \"x\": 401.69139862060547,\n      \"y\": 248.76328468322754,\n      \"z\": 9.395531415939331\n    }, {\n      \"x\": 389.7608184814453,\n      \"y\": 247.56915092468262,\n      \"z\": 5.841569304466248\n    }, {\n      \"x\": 380.5461883544922,\n      \"y\": 244.55984115600586,\n      \"z\": 4.263003468513489\n    }, {\n      \"x\": 373.25817108154297,\n      \"y\": 240.80214500427246,\n      \"z\": 2.5356262922286987\n    }, {\n      \"x\": 358.77086639404297,\n      \"y\": 229.35615062713623,\n      \"z\": -10.387605428695679\n    }, {\n      \"x\": 419.5793914794922,\n      \"y\": 262.8478717803955,\n      \"z\": 26.5175724029541\n    }, {\n      \"x\": 410.8808898925781,\n      \"y\": 222.51372814178467,\n      \"z\": 22.199130058288574\n    }, {\n      \"x\": 358.45714569091797,\n      \"y\": 268.91467094421387,\n      \"z\": -33.17030906677246\n    }, {\n      \"x\": 373.4129333496094,\n      \"y\": 251.6385841369629,\n      \"z\": -5.771540403366089\n    }, {\n      \"x\": 422.5408172607422,\n      \"y\": 239.23919677734375,\n      \"z\": 74.04378890991211,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 367.8171920776367,\n      \"y\": 236.58040523529053,\n      \"z\": 1.820748895406723\n    }, {\n      \"x\": 378.51959228515625,\n      \"y\": 266.2532329559326,\n      \"z\": -5.74819803237915\n    }, {\n      \"x\": 403.3472442626953,\n      \"y\": 229.05112266540527,\n      \"z\": 19.689764976501465\n    }, {\n      \"x\": 372.34840393066406,\n      \"y\": 256.6451168060303,\n      \"z\": -21.872329711914062\n    }, {\n      \"x\": 422.54566192626953,\n      \"y\": 289.1587829589844,\n      \"z\": 68.67491245269775,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 371.9297409057617,\n      \"y\": 228.90116214752197,\n      \"z\": 11.432201862335205,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 366.21360778808594,\n      \"y\": 251.6158962249756,\n      \"z\": -28.19826364517212\n    }, {\n      \"x\": 409.1571807861328,\n      \"y\": 321.3156223297119,\n      \"z\": 20.2266526222229\n    }, {\n      \"x\": 408.52943420410156,\n      \"y\": 331.44238471984863,\n      \"z\": 31.09278917312622,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 424.2788314819336,\n      \"y\": 267.1992301940918,\n      \"z\": 50.467424392700195\n    }, {\n      \"x\": 415.60352325439453,\n      \"y\": 311.6528606414795,\n      \"z\": 30.579242706298828\n    }, {\n      \"x\": 418.12793731689453,\n      \"y\": 221.59927368164062,\n      \"z\": 46.26569747924805\n    }, {\n      \"x\": 385.68286895751953,\n      \"y\": 346.0184955596924,\n      \"z\": -5.70151150226593\n    }, {\n      \"x\": 357.82936096191406,\n      \"y\": 271.3758373260498,\n      \"z\": -24.836881160736084\n    }, {\n      \"x\": 379.588623046875,\n      \"y\": 257.5071716308594,\n      \"z\": -3.755294680595398\n    }, {\n      \"x\": 417.4592590332031,\n      \"y\": 234.71948146820068,\n      \"z\": 34.5475435256958\n    }, {\n      \"x\": 393.4684371948242,\n      \"y\": 231.58967971801758,\n      \"z\": 11.408859491348267,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 387.8864288330078,\n      \"y\": 232.14245796203613,\n      \"z\": 9.51808214187622,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 382.4981689453125,\n      \"y\": 307.5654888153076,\n      \"z\": -7.522260546684265,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 419.00169372558594,\n      \"y\": 277.8332805633545,\n      \"z\": 26.424202919006348\n    }, {\n      \"x\": 373.62953186035156,\n      \"y\": 357.6375102996826,\n      \"z\": -5.75986921787262,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 392.8708267211914,\n      \"y\": 347.72446632385254,\n      \"z\": 10.154176950454712,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 400.3953552246094,\n      \"y\": 341.0005187988281,\n      \"z\": 19.39797878265381,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 382.25440979003906,\n      \"y\": 231.66935920715332,\n      \"z\": 8.998700976371765,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 377.14550018310547,\n      \"y\": 230.4228687286377,\n      \"z\": 9.804032444953918,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 373.8358688354492,\n      \"y\": 229.64950561523438,\n      \"z\": 11.292144060134888,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 414.5794677734375,\n      \"y\": 221.67891025543213,\n      \"z\": 29.412097930908203\n    }, {\n      \"x\": 377.00672149658203,\n      \"y\": 225.66201210021973,\n      \"z\": 9.360517263412476,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 382.29530334472656,\n      \"y\": 224.8431158065796,\n      \"z\": 8.32175612449646,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 387.5133514404297,\n      \"y\": 224.49507236480713,\n      \"z\": 8.917000889778137,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 393.15906524658203,\n      \"y\": 225.24795055389404,\n      \"z\": 10.737749338150024,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 397.05554962158203,\n      \"y\": 226.55359268188477,\n      \"z\": 13.002015352249146,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 420.5299377441406,\n      \"y\": 221.014666557312,\n      \"z\": 65.40690422058105,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 397.06920623779297,\n      \"y\": 230.6661558151245,\n      \"z\": 13.807345628738403,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 377.94647216796875,\n      \"y\": 285.1647090911865,\n      \"z\": -13.305472135543823\n    }, {\n      \"x\": 372.1118927001953,\n      \"y\": 267.1267318725586,\n      \"z\": -18.83774757385254\n    }, {\n      \"x\": 364.9968719482422,\n      \"y\": 282.24411964416504,\n      \"z\": -19.818150997161865\n    }, {\n      \"x\": 401.973876953125,\n      \"y\": 331.20131492614746,\n      \"z\": 11.566424369812012\n    }, {\n      \"x\": 394.3083190917969,\n      \"y\": 338.86693954467773,\n      \"z\": 3.142542541027069\n    }, {\n      \"x\": 373.9820861816406,\n      \"y\": 351.4504623413086,\n      \"z\": -13.50388765335083\n    }, {\n      \"x\": 414.3888854980469,\n      \"y\": 321.24735832214355,\n      \"z\": 45.51872253417969,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 373.44234466552734,\n      \"y\": 227.33163356781006,\n      \"z\": 10.626870393753052,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 364.0731430053711,\n      \"y\": 240.31539916992188,\n      \"z\": -13.807345628738403\n    }, {\n      \"x\": 384.2658233642578,\n      \"y\": 353.3793067932129,\n      \"z\": 0.7385850697755814,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 423.20526123046875,\n      \"y\": 283.5176181793213,\n      \"z\": 47.152724266052246\n    }, {\n      \"x\": 369.42798614501953,\n      \"y\": 304.0898895263672,\n      \"z\": -14.647691249847412,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 370.63812255859375,\n      \"y\": 305.90051651000977,\n      \"z\": -16.211668252944946\n    }, {\n      \"x\": 371.91192626953125,\n      \"y\": 309.0167713165283,\n      \"z\": -17.84567356109619\n    }, {\n      \"x\": 373.0583953857422,\n      \"y\": 313.3545398712158,\n      \"z\": -17.378815412521362,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 375.39905548095703,\n      \"y\": 321.09289169311523,\n      \"z\": -13.118728399276733\n    }, {\n      \"x\": 379.2567825317383,\n      \"y\": 304.3582534790039,\n      \"z\": -7.924926280975342\n    }, {\n      \"x\": 381.18797302246094,\n      \"y\": 303.7031364440918,\n      \"z\": -7.843226194381714\n    }, {\n      \"x\": 383.0918502807617,\n      \"y\": 302.4884605407715,\n      \"z\": -7.6506465673446655,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 389.09461975097656,\n      \"y\": 297.1475315093994,\n      \"z\": -5.5497825145721436\n    }, {\n      \"x\": 411.6408920288086,\n      \"y\": 280.24898529052734,\n      \"z\": 12.02161192893982\n    }, {\n      \"x\": 363.3110809326172,\n      \"y\": 234.27620887756348,\n      \"z\": -6.775286793708801\n    }, {\n      \"x\": 366.0474395751953,\n      \"y\": 223.29872131347656,\n      \"z\": 6.827808618545532\n    }, {\n      \"x\": 370.34427642822266,\n      \"y\": 225.1457118988037,\n      \"z\": 9.558931589126587\n    }, {\n      \"x\": 377.5371551513672,\n      \"y\": 303.60079765319824,\n      \"z\": -7.358860373497009,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 412.9557800292969,\n      \"y\": 299.53579902648926,\n      \"z\": 19.39797878265381\n    }, {\n      \"x\": 360.0810241699219,\n      \"y\": 221.72012329101562,\n      \"z\": -2.153385728597641\n    }, {\n      \"x\": 379.82784271240234,\n      \"y\": 329.47723388671875,\n      \"z\": -10.48097848892212\n    }, {\n      \"x\": 359.08477783203125,\n      \"y\": 235.7911491394043,\n      \"z\": -18.079102039337158\n    }, {\n      \"x\": 369.6688461303711,\n      \"y\": 251.5407943725586,\n      \"z\": -14.962821006774902\n    }, {\n      \"x\": 369.5555114746094,\n      \"y\": 333.5307312011719,\n      \"z\": -15.67478060722351\n    }, {\n      \"x\": 394.0193176269531,\n      \"y\": 315.6973171234131,\n      \"z\": -0.9920747578144073\n    }, {\n      \"x\": 383.78997802734375,\n      \"y\": 272.7268695831299,\n      \"z\": -4.689012169837952\n    }, {\n      \"x\": 387.67765045166016,\n      \"y\": 323.6722755432129,\n      \"z\": -5.640236139297485\n    }, {\n      \"x\": 397.8769302368164,\n      \"y\": 272.1331214904785,\n      \"z\": -0.9395531564950943\n    }, {\n      \"x\": 389.87476348876953,\n      \"y\": 280.5630111694336,\n      \"z\": -4.29218202829361\n    }, {\n      \"x\": 403.83888244628906,\n      \"y\": 285.1167869567871,\n      \"z\": 3.0229100584983826\n    }, {\n      \"x\": 372.5467300415039,\n      \"y\": 343.1070327758789,\n      \"z\": -16.153310537338257\n    }, {\n      \"x\": 374.1112518310547,\n      \"y\": 256.3721466064453,\n      \"z\": -10.574349164962769\n    }, {\n      \"x\": 399.73785400390625,\n      \"y\": 321.77515983581543,\n      \"z\": 4.849494695663452\n    }, {\n      \"x\": 392.03365325927734,\n      \"y\": 330.56447982788086,\n      \"z\": -1.3407598435878754\n    }, {\n      \"x\": 398.59134674072266,\n      \"y\": 305.93902587890625,\n      \"z\": 1.517290621995926\n    }, {\n      \"x\": 417.95997619628906,\n      \"y\": 290.9716987609863,\n      \"z\": 26.89105987548828\n    }, {\n      \"x\": 406.04541778564453,\n      \"y\": 307.35154151916504,\n      \"z\": 8.666064143180847\n    }, {\n      \"x\": 420.75328826904297,\n      \"y\": 298.40752601623535,\n      \"z\": 41.78385257720947\n    }, {\n      \"x\": 395.4522705078125,\n      \"y\": 291.4153575897217,\n      \"z\": -2.1752697229385376\n    }, {\n      \"x\": 368.6452102661133,\n      \"y\": 245.8882999420166,\n      \"z\": -9.453888535499573\n    }, {\n      \"x\": 370.34900665283203,\n      \"y\": 263.56690406799316,\n      \"z\": -26.75100326538086\n    }, {\n      \"x\": 374.98477935791016,\n      \"y\": 266.6126346588135,\n      \"z\": -19.77146625518799\n    }, {\n      \"x\": 366.99840545654297,\n      \"y\": 258.12140464782715,\n      \"z\": -31.372904777526855\n    }, {\n      \"x\": 371.00616455078125,\n      \"y\": 217.63479709625244,\n      \"z\": 5.60522198677063\n    }, {\n      \"x\": 381.30577087402344,\n      \"y\": 214.14087295532227,\n      \"z\": 4.983716309070587\n    }, {\n      \"x\": 390.1496124267578,\n      \"y\": 213.38221549987793,\n      \"z\": 5.593550801277161\n    }, {\n      \"x\": 397.7696990966797,\n      \"y\": 214.3659782409668,\n      \"z\": 8.57852816581726\n    }, {\n      \"x\": 403.1652069091797,\n      \"y\": 217.65509605407715,\n      \"z\": 13.013685941696167\n    }, {\n      \"x\": 407.3551940917969,\n      \"y\": 230.72525024414062,\n      \"z\": 22.444231510162354\n    }, {\n      \"x\": 424.0876770019531,\n      \"y\": 251.7839241027832,\n      \"z\": 51.16771221160889\n    }, {\n      \"x\": 403.50196838378906,\n      \"y\": 239.88757610321045,\n      \"z\": 15.803166627883911\n    }, {\n      \"x\": 397.31719970703125,\n      \"y\": 241.49806022644043,\n      \"z\": 11.233787536621094\n    }, {\n      \"x\": 388.99425506591797,\n      \"y\": 241.4366912841797,\n      \"z\": 7.948269248008728\n    }, {\n      \"x\": 380.7804489135742,\n      \"y\": 239.78078842163086,\n      \"z\": 6.600214838981628\n    }, {\n      \"x\": 374.01336669921875,\n      \"y\": 237.11946487426758,\n      \"z\": 6.349278092384338\n    }, {\n      \"x\": 369.39125061035156,\n      \"y\": 234.35351371765137,\n      \"z\": 5.987462401390076\n    }, {\n      \"x\": 422.9730987548828,\n      \"y\": 255.76455116271973,\n      \"z\": 76.61150932312012,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 374.73915100097656,\n      \"y\": 269.24214363098145,\n      \"z\": -16.608498096466064\n    }, {\n      \"x\": 364.61681365966797,\n      \"y\": 245.71088790893555,\n      \"z\": -20.02823829650879\n    }, {\n      \"x\": 365.3834533691406,\n      \"y\": 263.34174156188965,\n      \"z\": -32.32996463775635\n    }, {\n      \"x\": 361.58252716064453,\n      \"y\": 267.8273677825928,\n      \"z\": -30.345816612243652\n    }, {\n      \"x\": 365.37208557128906,\n      \"y\": 265.0249671936035,\n      \"z\": -29.178667068481445\n    }, {\n      \"x\": 372.72605895996094,\n      \"y\": 272.05135345458984,\n      \"z\": -14.834434986114502\n    }, {\n      \"x\": 360.48614501953125,\n      \"y\": 268.34827423095703,\n      \"z\": -32.189905643463135\n    }, {\n      \"x\": 359.9516296386719,\n      \"y\": 270.8049201965332,\n      \"z\": -24.650139808654785\n    }, {\n      \"x\": 369.5049285888672,\n      \"y\": 229.01945114135742,\n      \"z\": 10.107489824295044\n    }, {\n      \"x\": 365.5447769165039,\n      \"y\": 230.24096488952637,\n      \"z\": 5.593550801277161\n    }, {\n      \"x\": 363.50669860839844,\n      \"y\": 230.6208372116089,\n      \"z\": 0.43622106313705444\n    }, {\n      \"x\": 399.3529510498047,\n      \"y\": 227.65677452087402,\n      \"z\": 15.35965085029602,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 402.5693130493164,\n      \"y\": 224.60190296173096,\n      \"z\": 15.931552648544312\n    }],\n    \"box\": {\n      \"xMin\": 277.8318977355957,\n      \"yMin\": 168.7741756439209,\n      \"xMax\": 424.2788314819336,\n      \"yMax\": 359.8348903656006,\n      \"width\": 146.4469337463379,\n      \"height\": 191.0607147216797\n    }\n  },\n  // Tasks-vision: https://developers.google.com/mediapipe/solutions/vision/face_landmarker/web_js\n  // prettier-ignore\n  SAMPLE_FACELANDMARKER_RESULT: {\n    \"faceLandmarks\": [[{\n      \"x\": 0.5760777592658997,\n      \"y\": 0.8639070391654968,\n      \"z\": -0.030997956171631813\n    }, {\n      \"x\": 0.572094738483429,\n      \"y\": 0.7886289358139038,\n      \"z\": -0.07189624011516571\n    }, {\n      \"x\": 0.5723551511764526,\n      \"y\": 0.8075382709503174,\n      \"z\": -0.03578168898820877\n    }, {\n      \"x\": 0.5548420548439026,\n      \"y\": 0.7188365459442139,\n      \"z\": -0.057787876576185226\n    }, {\n      \"x\": 0.5706077814102173,\n      \"y\": 0.7674974799156189,\n      \"z\": -0.07740399986505508\n    }, {\n      \"x\": 0.5681378245353699,\n      \"y\": 0.7387768030166626,\n      \"z\": -0.07356284558773041\n    }, {\n      \"x\": 0.5621535181999207,\n      \"y\": 0.6681165099143982,\n      \"z\": -0.04189874976873398\n    }, {\n      \"x\": 0.46613582968711853,\n      \"y\": 0.6679812073707581,\n      \"z\": 0.011289681307971478\n    }, {\n      \"x\": 0.5579932928085327,\n      \"y\": 0.6174106597900391,\n      \"z\": -0.03502821549773216\n    }, {\n      \"x\": 0.5563451647758484,\n      \"y\": 0.5905600190162659,\n      \"z\": -0.03928658738732338\n    }, {\n      \"x\": 0.5487832427024841,\n      \"y\": 0.4900572597980499,\n      \"z\": -0.029898937791585922\n    }, {\n      \"x\": 0.5765544176101685,\n      \"y\": 0.8692144751548767,\n      \"z\": -0.02831427752971649\n    }, {\n      \"x\": 0.5771114230155945,\n      \"y\": 0.873644232749939,\n      \"z\": -0.02345779910683632\n    }, {\n      \"x\": 0.5771905779838562,\n      \"y\": 0.877016007900238,\n      \"z\": -0.016658689826726913\n    }, {\n      \"x\": 0.5778058767318726,\n      \"y\": 0.8770116567611694,\n      \"z\": -0.014505492523312569\n    }, {\n      \"x\": 0.5783766508102417,\n      \"y\": 0.8835000991821289,\n      \"z\": -0.015996402129530907\n    }, {\n      \"x\": 0.5792440176010132,\n      \"y\": 0.8913810849189758,\n      \"z\": -0.01924579218029976\n    }, {\n      \"x\": 0.5796768069267273,\n      \"y\": 0.8996334671974182,\n      \"z\": -0.018261712044477463\n    }, {\n      \"x\": 0.5817288160324097,\n      \"y\": 0.9255813956260681,\n      \"z\": -0.007126849144697189\n    }, {\n      \"x\": 0.5726592540740967,\n      \"y\": 0.7992473244667053,\n      \"z\": -0.0643521398305893\n    }, {\n      \"x\": 0.5579419136047363,\n      \"y\": 0.7996989488601685,\n      \"z\": -0.04566684365272522\n    }, {\n      \"x\": 0.4216199815273285,\n      \"y\": 0.5958762764930725,\n      \"z\": 0.06776496022939682\n    }, {\n      \"x\": 0.5052269697189331,\n      \"y\": 0.6796539425849915,\n      \"z\": -0.0010737782577052712\n    }, {\n      \"x\": 0.49243026971817017,\n      \"y\": 0.6838865876197815,\n      \"z\": -0.0005227324436418712\n    }, {\n      \"x\": 0.4796970784664154,\n      \"y\": 0.6856290102005005,\n      \"z\": 0.002684245817363262\n    }, {\n      \"x\": 0.4618356227874756,\n      \"y\": 0.6764569878578186,\n      \"z\": 0.013439622707664967\n    }, {\n      \"x\": 0.5160380601882935,\n      \"y\": 0.6737282276153564,\n      \"z\": -0.000017607348127057776\n    }, {\n      \"x\": 0.48070961236953735,\n      \"y\": 0.6255870461463928,\n      \"z\": -0.008339674212038517\n    }, {\n      \"x\": 0.49719780683517456,\n      \"y\": 0.6256808042526245,\n      \"z\": -0.008027955889701843\n    }, {\n      \"x\": 0.46674346923828125,\n      \"y\": 0.6317623853683472,\n      \"z\": -0.004460199736058712\n    }, {\n      \"x\": 0.4582492709159851,\n      \"y\": 0.641118049621582,\n      \"z\": 0.0011905613355338573\n    }, {\n      \"x\": 0.45408669114112854,\n      \"y\": 0.6911458969116211,\n      \"z\": 0.020514748990535736\n    }, {\n      \"x\": 0.535312294960022,\n      \"y\": 0.9619986414909363,\n      \"z\": 0.012499462813138962\n    }, {\n      \"x\": 0.4608460068702698,\n      \"y\": 0.6628725528717041,\n      \"z\": 0.01517564244568348\n    }, {\n      \"x\": 0.4206731915473938,\n      \"y\": 0.6828458309173584,\n      \"z\": 0.07848648726940155\n    }, {\n      \"x\": 0.4390624463558197,\n      \"y\": 0.6796106696128845,\n      \"z\": 0.03283142298460007\n    }, {\n      \"x\": 0.5029968619346619,\n      \"y\": 0.7701570391654968,\n      \"z\": -0.009734481573104858\n    }, {\n      \"x\": 0.5595027208328247,\n      \"y\": 0.8607323169708252,\n      \"z\": -0.030043255537748337\n    }, {\n      \"x\": 0.5621269941329956,\n      \"y\": 0.8738374710083008,\n      \"z\": -0.021709579974412918\n    }, {\n      \"x\": 0.5451499819755554,\n      \"y\": 0.865527331829071,\n      \"z\": -0.022014077752828598\n    }, {\n      \"x\": 0.5351184010505676,\n      \"y\": 0.8705098032951355,\n      \"z\": -0.011602800339460373\n    }, {\n      \"x\": 0.5495014190673828,\n      \"y\": 0.8744956254959106,\n      \"z\": -0.016490943729877472\n    }, {\n      \"x\": 0.5395170450210571,\n      \"y\": 0.8759440779685974,\n      \"z\": -0.007333362940698862\n    }, {\n      \"x\": 0.5183624029159546,\n      \"y\": 0.8959754705429077,\n      \"z\": 0.010520773939788342\n    }, {\n      \"x\": 0.5604349374771118,\n      \"y\": 0.7895449995994568,\n      \"z\": -0.07082037627696991\n    }, {\n      \"x\": 0.557381272315979,\n      \"y\": 0.7687489986419678,\n      \"z\": -0.07590588927268982\n    }, {\n      \"x\": 0.4432901442050934,\n      \"y\": 0.6308897733688354,\n      \"z\": 0.0027153254486620426\n    }, {\n      \"x\": 0.5258325338363647,\n      \"y\": 0.7151225805282593,\n      \"z\": -0.014676518738269806\n    }, {\n      \"x\": 0.5271827578544617,\n      \"y\": 0.7833116054534912,\n      \"z\": -0.037643320858478546\n    }, {\n      \"x\": 0.5257382988929749,\n      \"y\": 0.7717816233634949,\n      \"z\": -0.03401920944452286\n    }, {\n      \"x\": 0.46516409516334534,\n      \"y\": 0.7705106735229492,\n      \"z\": 0.0065747760236263275\n    }, {\n      \"x\": 0.5558893084526062,\n      \"y\": 0.7420997619628906,\n      \"z\": -0.0694495290517807\n    }, {\n      \"x\": 0.4720408320426941,\n      \"y\": 0.6066038608551025,\n      \"z\": -0.021204356104135513\n    }, {\n      \"x\": 0.45432573556900024,\n      \"y\": 0.6158540844917297,\n      \"z\": -0.011054684408009052\n    }, {\n      \"x\": 0.4305151402950287,\n      \"y\": 0.5608053803443909,\n      \"z\": 0.0396830290555954\n    }, {\n      \"x\": 0.5310865640640259,\n      \"y\": 0.6157484650611877,\n      \"z\": -0.03081176057457924\n    }, {\n      \"x\": 0.5114666223526001,\n      \"y\": 0.6329749226570129,\n      \"z\": -0.00335998204536736\n    }, {\n      \"x\": 0.506435751914978,\n      \"y\": 0.8786543607711792,\n      \"z\": 0.012980876490473747\n    }, {\n      \"x\": 0.4480472207069397,\n      \"y\": 0.8640613555908203,\n      \"z\": 0.12569651007652283\n    }, {\n      \"x\": 0.5372058153152466,\n      \"y\": 0.7942581176757812,\n      \"z\": -0.03168361634016037\n    }, {\n      \"x\": 0.5488379597663879,\n      \"y\": 0.8001630306243896,\n      \"z\": -0.03280917927622795\n    }, {\n      \"x\": 0.5213388204574585,\n      \"y\": 0.8794381618499756,\n      \"z\": 0.011892606504261494\n    }, {\n      \"x\": 0.5242055654525757,\n      \"y\": 0.8789222240447998,\n      \"z\": 0.008370225317776203\n    }, {\n      \"x\": 0.4477175176143646,\n      \"y\": 0.6039950251579285,\n      \"z\": -0.0050799972377717495\n    }, {\n      \"x\": 0.526964008808136,\n      \"y\": 0.7916748523712158,\n      \"z\": -0.02968614175915718\n    }, {\n      \"x\": 0.4971255660057068,\n      \"y\": 0.6050706505775452,\n      \"z\": -0.028175678104162216\n    }, {\n      \"x\": 0.4938119053840637,\n      \"y\": 0.5882453918457031,\n      \"z\": -0.03210941329598427\n    }, {\n      \"x\": 0.4757143557071686,\n      \"y\": 0.5094879865646362,\n      \"z\": -0.01300730835646391\n    }, {\n      \"x\": 0.43947282433509827,\n      \"y\": 0.5816648006439209,\n      \"z\": 0.01415177434682846\n    }, {\n      \"x\": 0.485664039850235,\n      \"y\": 0.5477864146232605,\n      \"z\": -0.023685332387685776\n    }, {\n      \"x\": 0.43635931611061096,\n      \"y\": 0.6226438283920288,\n      \"z\": 0.013606148771941662\n    }, {\n      \"x\": 0.42910251021385193,\n      \"y\": 0.6102726459503174,\n      \"z\": 0.03926564007997513\n    }, {\n      \"x\": 0.5605402588844299,\n      \"y\": 0.8680099248886108,\n      \"z\": -0.027318159118294716\n    }, {\n      \"x\": 0.5474816560745239,\n      \"y\": 0.8702861070632935,\n      \"z\": -0.019686367362737656\n    }, {\n      \"x\": 0.5373021364212036,\n      \"y\": 0.8728838562965393,\n      \"z\": -0.010484928265213966\n    }, {\n      \"x\": 0.540735125541687,\n      \"y\": 0.7979167103767395,\n      \"z\": -0.029073253273963928\n    }, {\n      \"x\": 0.5228585004806519,\n      \"y\": 0.87913578748703,\n      \"z\": 0.009915109723806381\n    }, {\n      \"x\": 0.530497670173645,\n      \"y\": 0.8815253973007202,\n      \"z\": 0.0020524784922599792\n    }, {\n      \"x\": 0.5259912610054016,\n      \"y\": 0.8790552616119385,\n      \"z\": 0.007895970717072487\n    }, {\n      \"x\": 0.5433906316757202,\n      \"y\": 0.7882310748100281,\n      \"z\": -0.05121905356645584\n    }, {\n      \"x\": 0.541388213634491,\n      \"y\": 0.8777219653129578,\n      \"z\": -0.00466804439201951\n    }, {\n      \"x\": 0.5515822172164917,\n      \"y\": 0.8767023086547852,\n      \"z\": -0.010475946590304375\n    }, {\n      \"x\": 0.5637003779411316,\n      \"y\": 0.877059817314148,\n      \"z\": -0.015273625031113625\n    }, {\n      \"x\": 0.5640299320220947,\n      \"y\": 0.9263423085212708,\n      \"z\": -0.00658724969252944\n    }, {\n      \"x\": 0.5642300248146057,\n      \"y\": 0.8993074893951416,\n      \"z\": -0.017653480172157288\n    }, {\n      \"x\": 0.5637336373329163,\n      \"y\": 0.8910360932350159,\n      \"z\": -0.01852807030081749\n    }, {\n      \"x\": 0.5637134313583374,\n      \"y\": 0.8837276697158813,\n      \"z\": -0.01482592523097992\n    }, {\n      \"x\": 0.564205527305603,\n      \"y\": 0.8768964409828186,\n      \"z\": -0.01331155002117157\n    }, {\n      \"x\": 0.5419867634773254,\n      \"y\": 0.8778373599052429,\n      \"z\": -0.0037720394320786\n    }, {\n      \"x\": 0.5404468774795532,\n      \"y\": 0.880696177482605,\n      \"z\": -0.005610354244709015\n    }, {\n      \"x\": 0.5392338633537292,\n      \"y\": 0.8845721483230591,\n      \"z\": -0.007352025713771582\n    }, {\n      \"x\": 0.538469672203064,\n      \"y\": 0.8891173601150513,\n      \"z\": -0.005154991988092661\n    }, {\n      \"x\": 0.5189250111579895,\n      \"y\": 0.8452741503715515,\n      \"z\": -0.009755070321261883\n    }, {\n      \"x\": 0.4258975088596344,\n      \"y\": 0.7662280797958374,\n      \"z\": 0.1387351155281067\n    }, {\n      \"x\": 0.5725725293159485,\n      \"y\": 0.8041572570800781,\n      \"z\": -0.04583907872438431\n    }, {\n      \"x\": 0.5342061519622803,\n      \"y\": 0.8785833120346069,\n      \"z\": 0.002659974154084921\n    }, {\n      \"x\": 0.5324031114578247,\n      \"y\": 0.8804071545600891,\n      \"z\": 0.0017832003068178892\n    }, {\n      \"x\": 0.5538818836212158,\n      \"y\": 0.8078407645225525,\n      \"z\": -0.03254539892077446\n    }, {\n      \"x\": 0.5325431823730469,\n      \"y\": 0.8026832938194275,\n      \"z\": -0.019140373915433884\n    }, {\n      \"x\": 0.5514076948165894,\n      \"y\": 0.8043903112411499,\n      \"z\": -0.03313535451889038\n    }, {\n      \"x\": 0.5131856203079224,\n      \"y\": 0.7284771800041199,\n      \"z\": -0.009399853646755219\n    }, {\n      \"x\": 0.49331504106521606,\n      \"y\": 0.7443980574607849,\n      \"z\": -0.005225230939686298\n    }, {\n      \"x\": 0.5239617824554443,\n      \"y\": 0.7807451486587524,\n      \"z\": -0.025881027802824974\n    }, {\n      \"x\": 0.4473606050014496,\n      \"y\": 0.5315827131271362,\n      \"z\": 0.011164786294102669\n    }, {\n      \"x\": 0.45718759298324585,\n      \"y\": 0.5604941248893738,\n      \"z\": -0.005943301599472761\n    }, {\n      \"x\": 0.4670005738735199,\n      \"y\": 0.5909327268600464,\n      \"z\": -0.019681761041283607\n    }, {\n      \"x\": 0.5311570167541504,\n      \"y\": 0.9076261520385742,\n      \"z\": 0.00389476353302598\n    }, {\n      \"x\": 0.5249923467636108,\n      \"y\": 0.5893563628196716,\n      \"z\": -0.037981919944286346\n    }, {\n      \"x\": 0.5166932344436646,\n      \"y\": 0.5429551005363464,\n      \"z\": -0.03319704160094261\n    }, {\n      \"x\": 0.5085030198097229,\n      \"y\": 0.49676206707954407,\n      \"z\": -0.02691275253891945\n    }, {\n      \"x\": 0.4687720239162445,\n      \"y\": 0.6834565997123718,\n      \"z\": 0.008113506250083447\n    }, {\n      \"x\": 0.4426414966583252,\n      \"y\": 0.7069531679153442,\n      \"z\": 0.028577271848917007\n    }, {\n      \"x\": 0.5230373740196228,\n      \"y\": 0.6675713658332825,\n      \"z\": 0.001773772411979735\n    }, {\n      \"x\": 0.4481240212917328,\n      \"y\": 0.6527872085571289,\n      \"z\": 0.012414850294589996\n    }, {\n      \"x\": 0.5339856743812561,\n      \"y\": 0.7012367844581604,\n      \"z\": -0.020220188423991203\n    }, {\n      \"x\": 0.5347223281860352,\n      \"y\": 0.7761190533638,\n      \"z\": -0.05141595005989075\n    }, {\n      \"x\": 0.4315067231655121,\n      \"y\": 0.7211957573890686,\n      \"z\": 0.04381405934691429\n    }, {\n      \"x\": 0.45203351974487305,\n      \"y\": 0.7206180095672607,\n      \"z\": 0.017288070172071457\n    }, {\n      \"x\": 0.46892452239990234,\n      \"y\": 0.7265436053276062,\n      \"z\": 0.005602988880127668\n    }, {\n      \"x\": 0.49314674735069275,\n      \"y\": 0.7202282547950745,\n      \"z\": -0.0006408205372281373\n    }, {\n      \"x\": 0.5104925632476807,\n      \"y\": 0.7091827392578125,\n      \"z\": -0.00362918758764863\n    }, {\n      \"x\": 0.5232142210006714,\n      \"y\": 0.698553740978241,\n      \"z\": -0.00787867046892643\n    }, {\n      \"x\": 0.5497883558273315,\n      \"y\": 0.6743605136871338,\n      \"z\": -0.036349106580019\n    }, {\n      \"x\": 0.43658503890037537,\n      \"y\": 0.7627100348472595,\n      \"z\": 0.042555369436740875\n    }, {\n      \"x\": 0.4397648870944977,\n      \"y\": 0.6528646349906921,\n      \"z\": 0.017956094816327095\n    }, {\n      \"x\": 0.5653332471847534,\n      \"y\": 0.7992802858352661,\n      \"z\": -0.06365057826042175\n    }, {\n      \"x\": 0.5285563468933105,\n      \"y\": 0.736810564994812,\n      \"z\": -0.018836988136172295\n    }, {\n      \"x\": 0.4180678725242615,\n      \"y\": 0.6792560815811157,\n      \"z\": 0.12284679710865021\n    }, {\n      \"x\": 0.5328429937362671,\n      \"y\": 0.6865872144699097,\n      \"z\": -0.010484723374247551\n    }, {\n      \"x\": 0.5230283141136169,\n      \"y\": 0.7809416055679321,\n      \"z\": -0.011922398582100868\n    }, {\n      \"x\": 0.4551771283149719,\n      \"y\": 0.6650775074958801,\n      \"z\": 0.01774493046104908\n    }, {\n      \"x\": 0.5337203741073608,\n      \"y\": 0.7618928551673889,\n      \"z\": -0.04697106033563614\n    }, {\n      \"x\": 0.43463975191116333,\n      \"y\": 0.8133478164672852,\n      \"z\": 0.1354849934577942\n    }, {\n      \"x\": 0.5225707292556763,\n      \"y\": 0.6605283617973328,\n      \"z\": 0.004980515688657761\n    }, {\n      \"x\": 0.5441933870315552,\n      \"y\": 0.7497199773788452,\n      \"z\": -0.06091512367129326\n    }, {\n      \"x\": 0.4774007797241211,\n      \"y\": 0.9159183502197266,\n      \"z\": 0.059622734785079956\n    }, {\n      \"x\": 0.48068761825561523,\n      \"y\": 0.9364941716194153,\n      \"z\": 0.08404944837093353\n    }, {\n      \"x\": 0.4268292486667633,\n      \"y\": 0.7657528519630432,\n      \"z\": 0.09051097184419632\n    }, {\n      \"x\": 0.46051913499832153,\n      \"y\": 0.8880485892295837,\n      \"z\": 0.0738474428653717\n    }, {\n      \"x\": 0.4243420660495758,\n      \"y\": 0.6434382200241089,\n      \"z\": 0.06230505183339119\n    }, {\n      \"x\": 0.5342157483100891,\n      \"y\": 0.9835634231567383,\n      \"z\": 0.021662971004843712\n    }, {\n      \"x\": 0.5668109655380249,\n      \"y\": 0.8042187094688416,\n      \"z\": -0.044937074184417725\n    }, {\n      \"x\": 0.5176341533660889,\n      \"y\": 0.7530587315559387,\n      \"z\": -0.012967454269528389\n    }, {\n      \"x\": 0.430206298828125,\n      \"y\": 0.6835605502128601,\n      \"z\": 0.04612284153699875\n    }, {\n      \"x\": 0.4794231951236725,\n      \"y\": 0.6732114553451538,\n      \"z\": 0.003970044665038586\n    }, {\n      \"x\": 0.49073347449302673,\n      \"y\": 0.6722435355186462,\n      \"z\": 0.0008692514384165406\n    }, {\n      \"x\": 0.5294116139411926,\n      \"y\": 0.884677529335022,\n      \"z\": 0.004413890186697245\n    }, {\n      \"x\": 0.4430122375488281,\n      \"y\": 0.80235356092453,\n      \"z\": 0.04987282305955887\n    }, {\n      \"x\": 0.5603825449943542,\n      \"y\": 1.0092442035675049,\n      \"z\": 0.026417359709739685\n    }, {\n      \"x\": 0.5186598300933838,\n      \"y\": 0.9828659892082214,\n      \"z\": 0.0513598807156086\n    }, {\n      \"x\": 0.5010536909103394,\n      \"y\": 0.9640932679176331,\n      \"z\": 0.06591596454381943\n    }, {\n      \"x\": 0.5524769425392151,\n      \"y\": 0.539441704750061,\n      \"z\": -0.035816047340631485\n    }, {\n      \"x\": 0.5879997611045837,\n      \"y\": 1.0091472864151,\n      \"z\": 0.02285068854689598\n    }, {\n      \"x\": 0.5016193985939026,\n      \"y\": 0.6684437990188599,\n      \"z\": 0.00028415941051207483\n    }, {\n      \"x\": 0.511952817440033,\n      \"y\": 0.6642197370529175,\n      \"z\": 0.0021144719794392586\n    }, {\n      \"x\": 0.5194343328475952,\n      \"y\": 0.6623469591140747,\n      \"z\": 0.004674181342124939\n    }, {\n      \"x\": 0.4321230351924896,\n      \"y\": 0.6496355533599854,\n      \"z\": 0.03124697133898735\n    }, {\n      \"x\": 0.508686363697052,\n      \"y\": 0.6479565501213074,\n      \"z\": -0.00044765998609364033\n    }, {\n      \"x\": 0.4963986277580261,\n      \"y\": 0.6431032419204712,\n      \"z\": -0.0032507688738405704\n    }, {\n      \"x\": 0.4845542013645172,\n      \"y\": 0.6430778503417969,\n      \"z\": -0.002903624437749386\n    }, {\n      \"x\": 0.4733612537384033,\n      \"y\": 0.647506833076477,\n      \"z\": 0.00023347247042693198\n    }, {\n      \"x\": 0.4668654501438141,\n      \"y\": 0.653346598148346,\n      \"z\": 0.004762572236359119\n    }, {\n      \"x\": 0.41815051436424255,\n      \"y\": 0.633708119392395,\n      \"z\": 0.09809435904026031\n    }, {\n      \"x\": 0.47159942984580994,\n      \"y\": 0.6711485385894775,\n      \"z\": 0.007849935442209244\n    }, {\n      \"x\": 0.5734396576881409,\n      \"y\": 0.8256140351295471,\n      \"z\": -0.03155219927430153\n    }, {\n      \"x\": 0.5306524038314819,\n      \"y\": 0.8337990641593933,\n      \"z\": -0.018351426348090172\n    }, {\n      \"x\": 0.5371729135513306,\n      \"y\": 0.7910830974578857,\n      \"z\": -0.037286680191755295\n    }, {\n      \"x\": 0.5549534559249878,\n      \"y\": 0.8275275826454163,\n      \"z\": -0.030664825811982155\n    }, {\n      \"x\": 0.5597432255744934,\n      \"y\": 0.6418541669845581,\n      \"z\": -0.03318847343325615\n    }, {\n      \"x\": 0.4958484172821045,\n      \"y\": 0.9429569244384766,\n      \"z\": 0.048340678215026855\n    }, {\n      \"x\": 0.5140507817268372,\n      \"y\": 0.9634028077125549,\n      \"z\": 0.03589847311377525\n    }, {\n      \"x\": 0.5587693452835083,\n      \"y\": 0.9951097369194031,\n      \"z\": 0.00908728688955307\n    }, {\n      \"x\": 0.46411189436912537,\n      \"y\": 0.9051855206489563,\n      \"z\": 0.10601935535669327\n    }, {\n      \"x\": 0.5181609392166138,\n      \"y\": 0.6554316878318787,\n      \"z\": 0.002546071307733655\n    }, {\n      \"x\": 0.5436590909957886,\n      \"y\": 0.7085841298103333,\n      \"z\": -0.03844436630606651\n    }, {\n      \"x\": 0.5872187614440918,\n      \"y\": 0.9960382580757141,\n      \"z\": 0.0063423276878893375\n    }, {\n      \"x\": 0.5379653573036194,\n      \"y\": 0.9989125728607178,\n      \"z\": 0.03636329993605614\n    }, {\n      \"x\": 0.4350326955318451,\n      \"y\": 0.8088565468788147,\n      \"z\": 0.09147704392671585\n    }, {\n      \"x\": 0.5523084998130798,\n      \"y\": 0.8773422837257385,\n      \"z\": -0.009068487212061882\n    }, {\n      \"x\": 0.5510149598121643,\n      \"y\": 0.8816931843757629,\n      \"z\": -0.011043853126466274\n    }, {\n      \"x\": 0.5503793954849243,\n      \"y\": 0.88776695728302,\n      \"z\": -0.01348799467086792\n    }, {\n      \"x\": 0.5501549243927002,\n      \"y\": 0.8954370617866516,\n      \"z\": -0.012142189778387547\n    }, {\n      \"x\": 0.546072781085968,\n      \"y\": 0.9192524552345276,\n      \"z\": -0.003157563041895628\n    }, {\n      \"x\": 0.5314661860466003,\n      \"y\": 0.8771666884422302,\n      \"z\": 0.0005075141089037061\n    }, {\n      \"x\": 0.5293324589729309,\n      \"y\": 0.8762547969818115,\n      \"z\": 0.00039177737198770046\n    }, {\n      \"x\": 0.5275698900222778,\n      \"y\": 0.8750609755516052,\n      \"z\": 0.000047732755774632096\n    }, {\n      \"x\": 0.5104271173477173,\n      \"y\": 0.8607332110404968,\n      \"z\": 0.0012934643309563398\n    }, {\n      \"x\": 0.45938700437545776,\n      \"y\": 0.8134918212890625,\n      \"z\": 0.023569690063595772\n    }, {\n      \"x\": 0.5418947339057922,\n      \"y\": 0.6864100694656372,\n      \"z\": -0.027333909645676613\n    }, {\n      \"x\": 0.531914234161377,\n      \"y\": 0.6456130743026733,\n      \"z\": -0.005434140563011169\n    }, {\n      \"x\": 0.523697018623352,\n      \"y\": 0.647885262966156,\n      \"z\": -0.0002466466394253075\n    }, {\n      \"x\": 0.5338191390037537,\n      \"y\": 0.8783687353134155,\n      \"z\": 0.002268768846988678\n    }, {\n      \"x\": 0.46226605772972107,\n      \"y\": 0.8610277771949768,\n      \"z\": 0.04718952998518944\n    }, {\n      \"x\": 0.5434442758560181,\n      \"y\": 0.6456181406974792,\n      \"z\": -0.02327350154519081\n    }, {\n      \"x\": 0.5399754643440247,\n      \"y\": 0.940219521522522,\n      \"z\": 0.005075343884527683\n    }, {\n      \"x\": 0.5661457777023315,\n      \"y\": 0.71457839012146,\n      \"z\": -0.06242101639509201\n    }, {\n      \"x\": 0.5523148775100708,\n      \"y\": 0.6974870562553406,\n      \"z\": -0.04863070324063301\n    }, {\n      \"x\": 0.5639959573745728,\n      \"y\": 0.6923378109931946,\n      \"z\": -0.05180761218070984\n    }, {\n      \"x\": 0.5367592573165894,\n      \"y\": 0.7423217296600342,\n      \"z\": -0.03623027727007866\n    }, {\n      \"x\": 0.5853689908981323,\n      \"y\": 0.9752064943313599,\n      \"z\": -0.002361974213272333\n    }, {\n      \"x\": 0.5835235118865967,\n      \"y\": 0.9493685960769653,\n      \"z\": -0.003941743168979883\n    }, {\n      \"x\": 0.5615018606185913,\n      \"y\": 0.949194610118866,\n      \"z\": -0.0015953965485095978\n    }, {\n      \"x\": 0.5068561434745789,\n      \"y\": 0.9048219323158264,\n      \"z\": 0.01862684078514576\n    }, {\n      \"x\": 0.5134067535400391,\n      \"y\": 0.7971825003623962,\n      \"z\": -0.008485661819577217\n    }, {\n      \"x\": 0.5223897099494934,\n      \"y\": 0.925589919090271,\n      \"z\": 0.01249657291918993\n    }, {\n      \"x\": 0.48500555753707886,\n      \"y\": 0.7959478497505188,\n      \"z\": -0.0032065745908766985\n    }, {\n      \"x\": 0.5037734508514404,\n      \"y\": 0.8184596300125122,\n      \"z\": -0.004932103678584099\n    }, {\n      \"x\": 0.4766361117362976,\n      \"y\": 0.828806459903717,\n      \"z\": 0.01027688942849636\n    }, {\n      \"x\": 0.5589827299118042,\n      \"y\": 0.974656343460083,\n      \"z\": 0.0009666886180639267\n    }, {\n      \"x\": 0.5294582843780518,\n      \"y\": 0.7541216611862183,\n      \"z\": -0.025603046640753746\n    }, {\n      \"x\": 0.4973002076148987,\n      \"y\": 0.9208990931510925,\n      \"z\": 0.031931452453136444\n    }, {\n      \"x\": 0.5163551568984985,\n      \"y\": 0.9432790875434875,\n      \"z\": 0.024321340024471283\n    }, {\n      \"x\": 0.49399662017822266,\n      \"y\": 0.8814862370491028,\n      \"z\": 0.018687399104237556\n    }, {\n      \"x\": 0.44948166608810425,\n      \"y\": 0.836137592792511,\n      \"z\": 0.05702034756541252\n    }, {\n      \"x\": 0.47898444533348083,\n      \"y\": 0.8836610913276672,\n      \"z\": 0.03150695189833641\n    }, {\n      \"x\": 0.4454479217529297,\n      \"y\": 0.8499438166618347,\n      \"z\": 0.08868525922298431\n    }, {\n      \"x\": 0.49572959542274475,\n      \"y\": 0.8452823758125305,\n      \"z\": 0.0036111653316766024\n    }, {\n      \"x\": 0.5362502336502075,\n      \"y\": 0.7222585678100586,\n      \"z\": -0.027912352234125137\n    }, {\n      \"x\": 0.5393770337104797,\n      \"y\": 0.7850722074508667,\n      \"z\": -0.05415399745106697\n    }, {\n      \"x\": 0.531399667263031,\n      \"y\": 0.7898418307304382,\n      \"z\": -0.03883346915245056\n    }, {\n      \"x\": 0.5451627373695374,\n      \"y\": 0.7717036604881287,\n      \"z\": -0.06480253487825394\n    }, {\n      \"x\": 0.5206395983695984,\n      \"y\": 0.6287745833396912,\n      \"z\": -0.010521138086915016\n    }, {\n      \"x\": 0.4974782466888428,\n      \"y\": 0.6191938519477844,\n      \"z\": -0.014098240062594414\n    }, {\n      \"x\": 0.4774145185947418,\n      \"y\": 0.6193130612373352,\n      \"z\": -0.013643337413668633\n    }, {\n      \"x\": 0.4616098403930664,\n      \"y\": 0.6259890198707581,\n      \"z\": -0.008448202162981033\n    }, {\n      \"x\": 0.4516478478908539,\n      \"y\": 0.6368461847305298,\n      \"z\": 0.00009050309745362028\n    }, {\n      \"x\": 0.4485096037387848,\n      \"y\": 0.6719120740890503,\n      \"z\": 0.022984720766544342\n    }, {\n      \"x\": 0.42177659273147583,\n      \"y\": 0.7240667343139648,\n      \"z\": 0.08511673659086227\n    }, {\n      \"x\": 0.4616215229034424,\n      \"y\": 0.6988231539726257,\n      \"z\": 0.014238474890589714\n    }, {\n      \"x\": 0.4755798876285553,\n      \"y\": 0.7034608721733093,\n      \"z\": 0.00625590980052948\n    }, {\n      \"x\": 0.4924992024898529,\n      \"y\": 0.7005885243415833,\n      \"z\": 0.0009391739731654525\n    }, {\n      \"x\": 0.5082254409790039,\n      \"y\": 0.693384051322937,\n      \"z\": -0.0009464038303121924\n    }, {\n      \"x\": 0.5203112959861755,\n      \"y\": 0.6849707961082458,\n      \"z\": -0.0022114769089967012\n    }, {\n      \"x\": 0.52867591381073,\n      \"y\": 0.6779075860977173,\n      \"z\": -0.002962538506835699\n    }, {\n      \"x\": 0.4213953912258148,\n      \"y\": 0.7219811677932739,\n      \"z\": 0.1350894570350647\n    }, {\n      \"x\": 0.5320829749107361,\n      \"y\": 0.794858992099762,\n      \"z\": -0.03181503340601921\n    }, {\n      \"x\": 0.5452795028686523,\n      \"y\": 0.7286570072174072,\n      \"z\": -0.04771539941430092\n    }, {\n      \"x\": 0.5496407747268677,\n      \"y\": 0.7866933345794678,\n      \"z\": -0.06452003121376038\n    }, {\n      \"x\": 0.557040274143219,\n      \"y\": 0.7962084412574768,\n      \"z\": -0.05837344378232956\n    }, {\n      \"x\": 0.549176812171936,\n      \"y\": 0.7895247936248779,\n      \"z\": -0.057761140167713165\n    }, {\n      \"x\": 0.5362890362739563,\n      \"y\": 0.8005836606025696,\n      \"z\": -0.026903774589300156\n    }, {\n      \"x\": 0.560200035572052,\n      \"y\": 0.7983731031417847,\n      \"z\": -0.06172555685043335\n    }, {\n      \"x\": 0.5616944432258606,\n      \"y\": 0.8022753596305847,\n      \"z\": -0.045200999826192856\n    }, {\n      \"x\": 0.5273328423500061,\n      \"y\": 0.6611284017562866,\n      \"z\": 0.0029021520167589188\n    }, {\n      \"x\": 0.534850537776947,\n      \"y\": 0.6660012006759644,\n      \"z\": -0.005215510260313749\n    }, {\n      \"x\": 0.5394860506057739,\n      \"y\": 0.6701375246047974,\n      \"z\": -0.014931917190551758\n    }, {\n      \"x\": 0.4634307324886322,\n      \"y\": 0.658291757106781,\n      \"z\": 0.009295716881752014\n    }, {\n      \"x\": 0.4538393020629883,\n      \"y\": 0.6519932150840759,\n      \"z\": 0.00930330716073513\n    }, {\n      \"x\": 0.5776031613349915,\n      \"y\": 0.7159298658370972,\n      \"z\": -0.057365912944078445\n    }, {\n      \"x\": 0.6504855155944824,\n      \"y\": 0.6461779475212097,\n      \"z\": 0.014184834435582161\n    }, {\n      \"x\": 0.5860154032707214,\n      \"y\": 0.7962266206741333,\n      \"z\": -0.04522843658924103\n    }, {\n      \"x\": 0.6842049360275269,\n      \"y\": 0.5631637573242188,\n      \"z\": 0.07207967340946198\n    }, {\n      \"x\": 0.6152560710906982,\n      \"y\": 0.6674962639808655,\n      \"z\": 0.0007529259892180562\n    }, {\n      \"x\": 0.6280948519706726,\n      \"y\": 0.6684326529502869,\n      \"z\": 0.0016892586136236787\n    }, {\n      \"x\": 0.6408625245094299,\n      \"y\": 0.6663892269134521,\n      \"z\": 0.005331226624548435\n    }, {\n      \"x\": 0.6557814478874207,\n      \"y\": 0.6534678936004639,\n      \"z\": 0.01646413467824459\n    }, {\n      \"x\": 0.6035663485527039,\n      \"y\": 0.6639701724052429,\n      \"z\": 0.0013799630105495453\n    }, {\n      \"x\": 0.6329053044319153,\n      \"y\": 0.608010470867157,\n      \"z\": -0.006195899099111557\n    }, {\n      \"x\": 0.6167260408401489,\n      \"y\": 0.6117533445358276,\n      \"z\": -0.006319951266050339\n    }, {\n      \"x\": 0.6471013426780701,\n      \"y\": 0.6112449765205383,\n      \"z\": -0.0017843559617176652\n    }, {\n      \"x\": 0.6560901999473572,\n      \"y\": 0.6185776591300964,\n      \"z\": 0.004047257360070944\n    }, {\n      \"x\": 0.6666946411132812,\n      \"y\": 0.6651176810264587,\n      \"z\": 0.023647578433156013\n    }, {\n      \"x\": 0.6311345100402832,\n      \"y\": 0.9495396018028259,\n      \"z\": 0.014004078693687916\n    }, {\n      \"x\": 0.6544655561447144,\n      \"y\": 0.6397901773452759,\n      \"z\": 0.01809609681367874\n    }, {\n      \"x\": 0.6965808868408203,\n      \"y\": 0.6482675075531006,\n      \"z\": 0.08304904401302338\n    }, {\n      \"x\": 0.679817259311676,\n      \"y\": 0.650188148021698,\n      \"z\": 0.03632688894867897\n    }, {\n      \"x\": 0.6336516737937927,\n      \"y\": 0.7541458010673523,\n      \"z\": -0.007742783520370722\n    }, {\n      \"x\": 0.5921701192855835,\n      \"y\": 0.8567668199539185,\n      \"z\": -0.029399123042821884\n    }, {\n      \"x\": 0.591663658618927,\n      \"y\": 0.870215654373169,\n      \"z\": -0.02103729173541069\n    }, {\n      \"x\": 0.6068367958068848,\n      \"y\": 0.8584195375442505,\n      \"z\": -0.020668085664510727\n    }, {\n      \"x\": 0.6176617741584778,\n      \"y\": 0.860965371131897,\n      \"z\": -0.009790095500648022\n    }, {\n      \"x\": 0.6040634512901306,\n      \"y\": 0.8686612844467163,\n      \"z\": -0.015289564616978168\n    }, {\n      \"x\": 0.6143736839294434,\n      \"y\": 0.8671170473098755,\n      \"z\": -0.005712216719985008\n    }, {\n      \"x\": 0.6373105049133301,\n      \"y\": 0.8815656900405884,\n      \"z\": 0.012672550976276398\n    }, {\n      \"x\": 0.5832505822181702,\n      \"y\": 0.7866312861442566,\n      \"z\": -0.07051534950733185\n    }, {\n      \"x\": 0.5836675763130188,\n      \"y\": 0.7658692598342896,\n      \"z\": -0.07566110789775848\n    }, {\n      \"x\": 0.6709531545639038,\n      \"y\": 0.604898989200592,\n      \"z\": 0.005951565690338612\n    }, {\n      \"x\": 0.6029891967773438,\n      \"y\": 0.705652117729187,\n      \"z\": -0.013388276100158691\n    }, {\n      \"x\": 0.6131622195243835,\n      \"y\": 0.7728396058082581,\n      \"z\": -0.036248479038476944\n    }, {\n      \"x\": 0.6123163104057312,\n      \"y\": 0.7612020373344421,\n      \"z\": -0.03264721855521202\n    }, {\n      \"x\": 0.6696187853813171,\n      \"y\": 0.744706928730011,\n      \"z\": 0.009673702530562878\n    }, {\n      \"x\": 0.5803102254867554,\n      \"y\": 0.7385968565940857,\n      \"z\": -0.0689152330160141\n    }, {\n      \"x\": 0.6404349207878113,\n      \"y\": 0.5877999663352966,\n      \"z\": -0.01929756999015808\n    }, {\n      \"x\": 0.6588467955589294,\n      \"y\": 0.5929454565048218,\n      \"z\": -0.008487257175147533\n    }, {\n      \"x\": 0.6720337867736816,\n      \"y\": 0.530631422996521,\n      \"z\": 0.043437421321868896\n    }, {\n      \"x\": 0.584305465221405,\n      \"y\": 0.6099005341529846,\n      \"z\": -0.030301367864012718\n    }, {\n      \"x\": 0.6034283638000488,\n      \"y\": 0.6217452883720398,\n      \"z\": -0.001970183802768588\n    }, {\n      \"x\": 0.6460927724838257,\n      \"y\": 0.8608663082122803,\n      \"z\": 0.015541625209152699\n    }, {\n      \"x\": 0.6957815289497375,\n      \"y\": 0.8326103091239929,\n      \"z\": 0.13015234470367432\n    }, {\n      \"x\": 0.6043362617492676,\n      \"y\": 0.7861682772636414,\n      \"z\": -0.030476901680231094\n    }, {\n      \"x\": 0.594293475151062,\n      \"y\": 0.7942103147506714,\n      \"z\": -0.032218821346759796\n    }, {\n      \"x\": 0.6324057579040527,\n      \"y\": 0.8665139675140381,\n      \"z\": 0.014255806803703308\n    }, {\n      \"x\": 0.6296147704124451,\n      \"y\": 0.8667733669281006,\n      \"z\": 0.010388285852968693\n    }, {\n      \"x\": 0.663644552230835,\n      \"y\": 0.5798642635345459,\n      \"z\": -0.0022301070857793093\n    }, {\n      \"x\": 0.6140630841255188,\n      \"y\": 0.7809288501739502,\n      \"z\": -0.02835679054260254\n    }, {\n      \"x\": 0.615908145904541,\n      \"y\": 0.5921698212623596,\n      \"z\": -0.026804860681295395\n    }, {\n      \"x\": 0.617181122303009,\n      \"y\": 0.5748661756515503,\n      \"z\": -0.03060605563223362\n    }, {\n      \"x\": 0.6222207546234131,\n      \"y\": 0.49137672781944275,\n      \"z\": -0.011151673272252083\n    }, {\n      \"x\": 0.6669357419013977,\n      \"y\": 0.5541607141494751,\n      \"z\": 0.017466170713305473\n    }, {\n      \"x\": 0.6182981729507446,\n      \"y\": 0.5320425629615784,\n      \"z\": -0.021793590858578682\n    }, {\n      \"x\": 0.6760554313659668,\n      \"y\": 0.595052182674408,\n      \"z\": 0.017115700989961624\n    }, {\n      \"x\": 0.6801463961601257,\n      \"y\": 0.5800720453262329,\n      \"z\": 0.043127160519361496\n    }, {\n      \"x\": 0.5922210812568665,\n      \"y\": 0.8644017577171326,\n      \"z\": -0.02662893570959568\n    }, {\n      \"x\": 0.6054555177688599,\n      \"y\": 0.8637874722480774,\n      \"z\": -0.018363753333687782\n    }, {\n      \"x\": 0.6161889433860779,\n      \"y\": 0.8641164898872375,\n      \"z\": -0.008808949030935764\n    }, {\n      \"x\": 0.6017249822616577,\n      \"y\": 0.7901403307914734,\n      \"z\": -0.028126630932092667\n    }, {\n      \"x\": 0.631446123123169,\n      \"y\": 0.8664817810058594,\n      \"z\": 0.012112865224480629\n    }, {\n      \"x\": 0.6249198913574219,\n      \"y\": 0.8716511130332947,\n      \"z\": 0.003882825840264559\n    }, {\n      \"x\": 0.6281915903091431,\n      \"y\": 0.867301881313324,\n      \"z\": 0.009891441091895103\n    }, {\n      \"x\": 0.5986843109130859,\n      \"y\": 0.7813931703567505,\n      \"z\": -0.050227612257003784\n    }, {\n      \"x\": 0.6126407384872437,\n      \"y\": 0.869275689125061,\n      \"z\": -0.0031255714129656553\n    }, {\n      \"x\": 0.6027271151542664,\n      \"y\": 0.8711842894554138,\n      \"z\": -0.009324162267148495\n    }, {\n      \"x\": 0.59088134765625,\n      \"y\": 0.8742044568061829,\n      \"z\": -0.014608660712838173\n    }, {\n      \"x\": 0.5984604358673096,\n      \"y\": 0.9216185212135315,\n      \"z\": -0.005981989670544863\n    }, {\n      \"x\": 0.5950398445129395,\n      \"y\": 0.8964707255363464,\n      \"z\": -0.01703473925590515\n    }, {\n      \"x\": 0.5941568613052368,\n      \"y\": 0.8882410526275635,\n      \"z\": -0.017784785479307175\n    }, {\n      \"x\": 0.5928806662559509,\n      \"y\": 0.8803883194923401,\n      \"z\": -0.014153128489851952\n    }, {\n      \"x\": 0.5909661054611206,\n      \"y\": 0.8748103976249695,\n      \"z\": -0.012609979137778282\n    }, {\n      \"x\": 0.6128016710281372,\n      \"y\": 0.8702545762062073,\n      \"z\": -0.0022550546564161777\n    }, {\n      \"x\": 0.6150846481323242,\n      \"y\": 0.8726804256439209,\n      \"z\": -0.00414019962772727\n    }, {\n      \"x\": 0.6173093914985657,\n      \"y\": 0.8770190477371216,\n      \"z\": -0.005970994010567665\n    }, {\n      \"x\": 0.619335412979126,\n      \"y\": 0.8814800977706909,\n      \"z\": -0.0036864024586975574\n    }, {\n      \"x\": 0.6292637586593628,\n      \"y\": 0.8314558267593384,\n      \"z\": -0.007714875973761082\n    }, {\n      \"x\": 0.702275276184082,\n      \"y\": 0.7320667505264282,\n      \"z\": 0.1433621346950531\n    }, {\n      \"x\": 0.6204835176467896,\n      \"y\": 0.8689177632331848,\n      \"z\": 0.0044869170524179935\n    }, {\n      \"x\": 0.6223508715629578,\n      \"y\": 0.8704851269721985,\n      \"z\": 0.00352082890458405\n    }, {\n      \"x\": 0.590448260307312,\n      \"y\": 0.8029727935791016,\n      \"z\": -0.03200828656554222\n    }, {\n      \"x\": 0.6097423434257507,\n      \"y\": 0.7933741211891174,\n      \"z\": -0.018042555078864098\n    }, {\n      \"x\": 0.59229576587677,\n      \"y\": 0.7993767261505127,\n      \"z\": -0.032564569264650345\n    }, {\n      \"x\": 0.6171364188194275,\n      \"y\": 0.7153720259666443,\n      \"z\": -0.007672437466681004\n    }, {\n      \"x\": 0.6389747858047485,\n      \"y\": 0.726390540599823,\n      \"z\": -0.002999067772179842\n    }, {\n      \"x\": 0.6151940226554871,\n      \"y\": 0.769412100315094,\n      \"z\": -0.024427521973848343\n    }, {\n      \"x\": 0.6526776552200317,\n      \"y\": 0.505868136882782,\n      \"z\": 0.01412637997418642\n    }, {\n      \"x\": 0.6475822329521179,\n      \"y\": 0.5375454425811768,\n      \"z\": -0.0033899128902703524\n    }, {\n      \"x\": 0.6433356404304504,\n      \"y\": 0.5714520215988159,\n      \"z\": -0.017428796738386154\n    }, {\n      \"x\": 0.626949667930603,\n      \"y\": 0.8962116837501526,\n      \"z\": 0.005602736957371235\n    }, {\n      \"x\": 0.5868416428565979,\n      \"y\": 0.5829002261161804,\n      \"z\": -0.03727729618549347\n    }, {\n      \"x\": 0.5877229571342468,\n      \"y\": 0.5345035791397095,\n      \"z\": -0.032396964728832245\n    }, {\n      \"x\": 0.5887066125869751,\n      \"y\": 0.48655083775520325,\n      \"z\": -0.025856535881757736\n    }, {\n      \"x\": 0.6507197618484497,\n      \"y\": 0.6612282991409302,\n      \"z\": 0.011114613153040409\n    }, {\n      \"x\": 0.6803066730499268,\n      \"y\": 0.677992045879364,\n      \"z\": 0.032125361263751984\n    }, {\n      \"x\": 0.5963194370269775,\n      \"y\": 0.6598632335662842,\n      \"z\": 0.002976928371936083\n    }, {\n      \"x\": 0.667536199092865,\n      \"y\": 0.6274255514144897,\n      \"z\": 0.015618261881172657\n    }, {\n      \"x\": 0.5930740833282471,\n      \"y\": 0.6940041780471802,\n      \"z\": -0.019217798486351967\n    }, {\n      \"x\": 0.6053346395492554,\n      \"y\": 0.7676517963409424,\n      \"z\": -0.050308309495449066\n    }, {\n      \"x\": 0.6934473514556885,\n      \"y\": 0.6884298920631409,\n      \"z\": 0.04794462397694588\n    }, {\n      \"x\": 0.6738007664680481,\n      \"y\": 0.6934011578559875,\n      \"z\": 0.020697161555290222\n    }, {\n      \"x\": 0.6588084697723389,\n      \"y\": 0.7033141851425171,\n      \"z\": 0.008462334051728249\n    }, {\n      \"x\": 0.6346072554588318,\n      \"y\": 0.7029502391815186,\n      \"z\": 0.001542167621664703\n    }, {\n      \"x\": 0.6157816648483276,\n      \"y\": 0.6966525912284851,\n      \"z\": -0.002009218093007803\n    }, {\n      \"x\": 0.6015574336051941,\n      \"y\": 0.688928484916687,\n      \"z\": -0.006588225718587637\n    }, {\n      \"x\": 0.5746836066246033,\n      \"y\": 0.6711069345474243,\n      \"z\": -0.03597589209675789\n    }, {\n      \"x\": 0.6947521567344666,\n      \"y\": 0.7309479117393494,\n      \"z\": 0.046707939356565475\n    }, {\n      \"x\": 0.6759101152420044,\n      \"y\": 0.6249120831489563,\n      \"z\": 0.021654341369867325\n    }, {\n      \"x\": 0.5794773101806641,\n      \"y\": 0.7971615195274353,\n      \"z\": -0.06339326500892639\n    }, {\n      \"x\": 0.6041849851608276,\n      \"y\": 0.727514922618866,\n      \"z\": -0.017512541264295578\n    }, {\n      \"x\": 0.6968844532966614,\n      \"y\": 0.6440950036048889,\n      \"z\": 0.12727996706962585\n    }, {\n      \"x\": 0.5910853147506714,\n      \"y\": 0.679325520992279,\n      \"z\": -0.009497715160250664\n    }, {\n      \"x\": 0.6157375574111938,\n      \"y\": 0.7695677280426025,\n      \"z\": -0.010624290443956852\n    }, {\n      \"x\": 0.6606494784355164,\n      \"y\": 0.6410489678382874,\n      \"z\": 0.0208158977329731\n    }, {\n      \"x\": 0.6040687561035156,\n      \"y\": 0.7531470656394958,\n      \"z\": -0.045887019485235214\n    }, {\n      \"x\": 0.7012156248092651,\n      \"y\": 0.780247151851654,\n      \"z\": 0.14028730988502502\n    }, {\n      \"x\": 0.595149576663971,\n      \"y\": 0.6527782678604126,\n      \"z\": 0.006308757700026035\n    }, {\n      \"x\": 0.5925500392913818,\n      \"y\": 0.7436665892601013,\n      \"z\": -0.060151755809783936\n    }, {\n      \"x\": 0.6780198812484741,\n      \"y\": 0.8905693888664246,\n      \"z\": 0.0626060739159584\n    }, {\n      \"x\": 0.676746666431427,\n      \"y\": 0.9113880395889282,\n      \"z\": 0.08726003766059875\n    }, {\n      \"x\": 0.7030686140060425,\n      \"y\": 0.7312687635421753,\n      \"z\": 0.09529774636030197\n    }, {\n      \"x\": 0.688987135887146,\n      \"y\": 0.8588417172431946,\n      \"z\": 0.07752864807844162\n    }, {\n      \"x\": 0.6883691549301147,\n      \"y\": 0.6109960675239563,\n      \"z\": 0.06669612973928452\n    }, {\n      \"x\": 0.6358906030654907,\n      \"y\": 0.9702065587043762,\n      \"z\": 0.023120900616049767\n    }, {\n      \"x\": 0.5781539678573608,\n      \"y\": 0.8023634552955627,\n      \"z\": -0.044763918966054916\n    }, {\n      \"x\": 0.6170316934585571,\n      \"y\": 0.7408350706100464,\n      \"z\": -0.011375460773706436\n    }, {\n      \"x\": 0.688542366027832,\n      \"y\": 0.6516284346580505,\n      \"z\": 0.050206027925014496\n    }, {\n      \"x\": 0.6385149359703064,\n      \"y\": 0.6540714502334595,\n      \"z\": 0.006462941411882639\n    }, {\n      \"x\": 0.6279382109642029,\n      \"y\": 0.6563615798950195,\n      \"z\": 0.003062846139073372\n    }, {\n      \"x\": 0.6268895268440247,\n      \"y\": 0.8736732006072998,\n      \"z\": 0.00627936702221632\n    }, {\n      \"x\": 0.6944946050643921,\n      \"y\": 0.7709181308746338,\n      \"z\": 0.053824134171009064\n    }, {\n      \"x\": 0.614617109298706,\n      \"y\": 1.0022112131118774,\n      \"z\": 0.02719894051551819\n    }, {\n      \"x\": 0.6493719220161438,\n      \"y\": 0.9665167927742004,\n      \"z\": 0.053563784807920456\n    }, {\n      \"x\": 0.6624587178230286,\n      \"y\": 0.943530797958374,\n      \"z\": 0.068605437874794\n    }, {\n      \"x\": 0.6162528991699219,\n      \"y\": 0.6558693051338196,\n      \"z\": 0.002187855076044798\n    }, {\n      \"x\": 0.6058168411254883,\n      \"y\": 0.654328465461731,\n      \"z\": 0.0036193584091961384\n    }, {\n      \"x\": 0.5987918972969055,\n      \"y\": 0.6536934971809387,\n      \"z\": 0.006134530063718557\n    }, {\n      \"x\": 0.6831037402153015,\n      \"y\": 0.6195642948150635,\n      \"z\": 0.03511790186166763\n    }, {\n      \"x\": 0.6062582731246948,\n      \"y\": 0.6356398463249207,\n      \"z\": 0.001280312892049551\n    }, {\n      \"x\": 0.6174948811531067,\n      \"y\": 0.62776118516922,\n      \"z\": -0.0013642468256875873\n    }, {\n      \"x\": 0.6297246217727661,\n      \"y\": 0.6253792643547058,\n      \"z\": -0.0007034156005829573\n    }, {\n      \"x\": 0.6407091617584229,\n      \"y\": 0.627578616142273,\n      \"z\": 0.0028144705574959517\n    }, {\n      \"x\": 0.6479622721672058,\n      \"y\": 0.6322650909423828,\n      \"z\": 0.00750273372977972\n    }, {\n      \"x\": 0.6915091276168823,\n      \"y\": 0.5990704298019409,\n      \"z\": 0.10270945727825165\n    }, {\n      \"x\": 0.6457163095474243,\n      \"y\": 0.6504453420639038,\n      \"z\": 0.010696077719330788\n    }, {\n      \"x\": 0.6164222955703735,\n      \"y\": 0.8231936097145081,\n      \"z\": -0.016772059723734856\n    }, {\n      \"x\": 0.6042401194572449,\n      \"y\": 0.7830976843833923,\n      \"z\": -0.03630910441279411\n    }, {\n      \"x\": 0.5922216773033142,\n      \"y\": 0.8228387236595154,\n      \"z\": -0.029992375522851944\n    }, {\n      \"x\": 0.6646111011505127,\n      \"y\": 0.92097008228302,\n      \"z\": 0.050967294722795486\n    }, {\n      \"x\": 0.651232898235321,\n      \"y\": 0.9460107088088989,\n      \"z\": 0.038000158965587616\n    }, {\n      \"x\": 0.6140977144241333,\n      \"y\": 0.9882472157478333,\n      \"z\": 0.009882091544568539\n    }, {\n      \"x\": 0.6870781183242798,\n      \"y\": 0.8768675327301025,\n      \"z\": 0.10980932414531708\n    }, {\n      \"x\": 0.5986856818199158,\n      \"y\": 0.6456438899040222,\n      \"z\": 0.003999010659754276\n    }, {\n      \"x\": 0.585981547832489,\n      \"y\": 0.7034481763839722,\n      \"z\": -0.0377722829580307\n    }, {\n      \"x\": 0.6342031359672546,\n      \"y\": 0.9867448806762695,\n      \"z\": 0.03786521404981613\n    }, {\n      \"x\": 0.7013950943946838,\n      \"y\": 0.776049017906189,\n      \"z\": 0.09598205983638763\n    }, {\n      \"x\": 0.6030206680297852,\n      \"y\": 0.8719133138656616,\n      \"z\": -0.007931148633360863\n    }, {\n      \"x\": 0.6050592064857483,\n      \"y\": 0.8767156004905701,\n      \"z\": -0.009791925549507141\n    }, {\n      \"x\": 0.6073468923568726,\n      \"y\": 0.8831382393836975,\n      \"z\": -0.012361008673906326\n    }, {\n      \"x\": 0.6087977290153503,\n      \"y\": 0.890143632888794,\n      \"z\": -0.01098148338496685\n    }, {\n      \"x\": 0.6147705316543579,\n      \"y\": 0.9110084772109985,\n      \"z\": -0.0018823575228452682\n    }, {\n      \"x\": 0.622577965259552,\n      \"y\": 0.8670604825019836,\n      \"z\": 0.002609190298244357\n    }, {\n      \"x\": 0.6241236329078674,\n      \"y\": 0.8651344180107117,\n      \"z\": 0.0025534380692988634\n    }, {\n      \"x\": 0.6257084608078003,\n      \"y\": 0.8638408184051514,\n      \"z\": 0.0023300074972212315\n    }, {\n      \"x\": 0.639931321144104,\n      \"y\": 0.8449671268463135,\n      \"z\": 0.0038123116828501225\n    }, {\n      \"x\": 0.6810906529426575,\n      \"y\": 0.7856625318527222,\n      \"z\": 0.02717764675617218\n    }, {\n      \"x\": 0.583532452583313,\n      \"y\": 0.6811994910240173,\n      \"z\": -0.026588857173919678\n    }, {\n      \"x\": 0.5855660438537598,\n      \"y\": 0.6393819451332092,\n      \"z\": -0.004512844607234001\n    }, {\n      \"x\": 0.5932201743125916,\n      \"y\": 0.6398029327392578,\n      \"z\": 0.0008020466193556786\n    }, {\n      \"x\": 0.6200879812240601,\n      \"y\": 0.8683351874351501,\n      \"z\": 0.00417016725987196\n    }, {\n      \"x\": 0.6842559576034546,\n      \"y\": 0.8330534100532532,\n      \"z\": 0.050836317241191864\n    }, {\n      \"x\": 0.5754412412643433,\n      \"y\": 0.6418221592903137,\n      \"z\": -0.022838059812784195\n    }, {\n      \"x\": 0.6232790350914001,\n      \"y\": 0.9295297265052795,\n      \"z\": 0.006339520215988159\n    }, {\n      \"x\": 0.5764067769050598,\n      \"y\": 0.694546639919281,\n      \"z\": -0.04825803264975548\n    }, {\n      \"x\": 0.59778892993927,\n      \"y\": 0.7343927621841431,\n      \"z\": -0.035004377365112305\n    }, {\n      \"x\": 0.6042810678482056,\n      \"y\": 0.9441440105438232,\n      \"z\": -0.0010970570147037506\n    }, {\n      \"x\": 0.6496372222900391,\n      \"y\": 0.8869078159332275,\n      \"z\": 0.021036235615611076\n    }, {\n      \"x\": 0.6274012327194214,\n      \"y\": 0.7830310463905334,\n      \"z\": -0.006658440921455622\n    }, {\n      \"x\": 0.637792706489563,\n      \"y\": 0.9104999899864197,\n      \"z\": 0.014290250837802887\n    }, {\n      \"x\": 0.6549934148788452,\n      \"y\": 0.7748609185218811,\n      \"z\": -0.0006672973395325243\n    }, {\n      \"x\": 0.6404005289077759,\n      \"y\": 0.801220715045929,\n      \"z\": -0.0026642554439604282\n    }, {\n      \"x\": 0.6671456694602966,\n      \"y\": 0.8045546412467957,\n      \"z\": 0.013180811889469624\n    }, {\n      \"x\": 0.6107483506202698,\n      \"y\": 0.9680658578872681,\n      \"z\": 0.001778992242179811\n    }, {\n      \"x\": 0.6060343980789185,\n      \"y\": 0.744587242603302,\n      \"z\": -0.024382334202528\n    }, {\n      \"x\": 0.6602751612663269,\n      \"y\": 0.8998945355415344,\n      \"z\": 0.0344940721988678\n    }, {\n      \"x\": 0.6463775038719177,\n      \"y\": 0.9262562394142151,\n      \"z\": 0.02617623284459114\n    }, {\n      \"x\": 0.6579852104187012,\n      \"y\": 0.8602304458618164,\n      \"z\": 0.021586716175079346\n    }, {\n      \"x\": 0.6926165223121643,\n      \"y\": 0.8053340315818787,\n      \"z\": 0.061075080186128616\n    }, {\n      \"x\": 0.6724731922149658,\n      \"y\": 0.8594399690628052,\n      \"z\": 0.03457934781908989\n    }, {\n      \"x\": 0.6975721716880798,\n      \"y\": 0.8183245062828064,\n      \"z\": 0.09300774335861206\n    }, {\n      \"x\": 0.6512877941131592,\n      \"y\": 0.8258221745491028,\n      \"z\": 0.006324059329926968\n    }, {\n      \"x\": 0.594887375831604,\n      \"y\": 0.7148372530937195,\n      \"z\": -0.026898479089140892\n    }, {\n      \"x\": 0.6017440557479858,\n      \"y\": 0.7773507833480835,\n      \"z\": -0.05312420800328255\n    }, {\n      \"x\": 0.6096571683883667,\n      \"y\": 0.7806998491287231,\n      \"z\": -0.037646256387233734\n    }, {\n      \"x\": 0.5952993035316467,\n      \"y\": 0.7654367685317993,\n      \"z\": -0.06398405134677887\n    }, {\n      \"x\": 0.5950021147727966,\n      \"y\": 0.6201304793357849,\n      \"z\": -0.009297547861933708\n    }, {\n      \"x\": 0.6165438890457153,\n      \"y\": 0.6052900552749634,\n      \"z\": -0.012455573305487633\n    }, {\n      \"x\": 0.6362661719322205,\n      \"y\": 0.6015968918800354,\n      \"z\": -0.011649220250546932\n    }, {\n      \"x\": 0.6522727608680725,\n      \"y\": 0.6046400666236877,\n      \"z\": -0.005903332494199276\n    }, {\n      \"x\": 0.6625409722328186,\n      \"y\": 0.6128141283988953,\n      \"z\": 0.0030042496509850025\n    }, {\n      \"x\": 0.6688099503517151,\n      \"y\": 0.6457712054252625,\n      \"z\": 0.026322703808546066\n    }, {\n      \"x\": 0.7013440728187561,\n      \"y\": 0.6893666386604309,\n      \"z\": 0.08984331786632538\n    }, {\n      \"x\": 0.6608623266220093,\n      \"y\": 0.6749406456947327,\n      \"z\": 0.0172116681933403\n    }, {\n      \"x\": 0.6482325196266174,\n      \"y\": 0.6823726296424866,\n      \"z\": 0.008881398476660252\n    }, {\n      \"x\": 0.6313265562057495,\n      \"y\": 0.6842025518417358,\n      \"z\": 0.0031308617908507586\n    }, {\n      \"x\": 0.6147016286849976,\n      \"y\": 0.6809731721878052,\n      \"z\": 0.0007630771724507213\n    }, {\n      \"x\": 0.6018834114074707,\n      \"y\": 0.6755372285842896,\n      \"z\": -0.0008834321051836014\n    }, {\n      \"x\": 0.5925027132034302,\n      \"y\": 0.670681357383728,\n      \"z\": -0.001968748401850462\n    }, {\n      \"x\": 0.700127363204956,\n      \"y\": 0.6871103644371033,\n      \"z\": 0.13980500400066376\n    }, {\n      \"x\": 0.6095665693283081,\n      \"y\": 0.7853189706802368,\n      \"z\": -0.03074747882783413\n    }, {\n      \"x\": 0.5880423784255981,\n      \"y\": 0.7229287028312683,\n      \"z\": -0.04691500961780548\n    }, {\n      \"x\": 0.5930182337760925,\n      \"y\": 0.7811514139175415,\n      \"z\": -0.06398335844278336\n    }, {\n      \"x\": 0.5867722034454346,\n      \"y\": 0.7922660112380981,\n      \"z\": -0.05794971063733101\n    }, {\n      \"x\": 0.5933279991149902,\n      \"y\": 0.7842848896980286,\n      \"z\": -0.05714067071676254\n    }, {\n      \"x\": 0.6063535809516907,\n      \"y\": 0.7920218706130981,\n      \"z\": -0.02590685710310936\n    }, {\n      \"x\": 0.5839452743530273,\n      \"y\": 0.794978141784668,\n      \"z\": -0.0615212507545948\n    }, {\n      \"x\": 0.5828126072883606,\n      \"y\": 0.8000800013542175,\n      \"z\": -0.0449722595512867\n    }, {\n      \"x\": 0.5909603834152222,\n      \"y\": 0.6541213393211365,\n      \"z\": 0.003991890233010054\n    }, {\n      \"x\": 0.5852181911468506,\n      \"y\": 0.6602938771247864,\n      \"z\": -0.004428438376635313\n    }, {\n      \"x\": 0.5825737714767456,\n      \"y\": 0.6651063561439514,\n      \"z\": -0.014345290139317513\n    }, {\n      \"x\": 0.6517343521118164,\n      \"y\": 0.6362385153770447,\n      \"z\": 0.012151890434324741\n    }, {\n      \"x\": 0.6615052819252014,\n      \"y\": 0.6281577944755554,\n      \"z\": 0.0123682152479887\n    }, {\n      \"x\": 0.4856873154640198,\n      \"y\": 0.6568945646286011,\n      \"z\": 0.000720038078725338\n    }, {\n      \"x\": 0.49988406896591187,\n      \"y\": 0.6547410488128662,\n      \"z\": 0.0006949726957827806\n    }, {\n      \"x\": 0.48438939452171326,\n      \"y\": 0.6392973065376282,\n      \"z\": 0.000705525919329375\n    }, {\n      \"x\": 0.47143134474754333,\n      \"y\": 0.6589511632919312,\n      \"z\": 0.0006980331381782889\n    }, {\n      \"x\": 0.48704618215560913,\n      \"y\": 0.6752797961235046,\n      \"z\": 0.0006921177846379578\n    }, {\n      \"x\": 0.6243702173233032,\n      \"y\": 0.640461802482605,\n      \"z\": -0.00006592126737814397\n    }, {\n      \"x\": 0.6390967965126038,\n      \"y\": 0.6385173797607422,\n      \"z\": -0.00016105435497593135\n    }, {\n      \"x\": 0.6230536699295044,\n      \"y\": 0.6224825382232666,\n      \"z\": -0.00016136496560648084\n    }, {\n      \"x\": 0.6095397472381592,\n      \"y\": 0.641917884349823,\n      \"z\": -0.0001803556369850412\n    }, {\n      \"x\": 0.6250996589660645,\n      \"y\": 0.6586247682571411,\n      \"z\": -0.0001785515050869435\n    }]],\n    \"faceBlendshapes\": [{\n      \"categories\": [{\n        \"index\": 0,\n        \"score\": 0.000005187174338061595,\n        \"categoryName\": \"_neutral\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 1,\n        \"score\": 0.24521504342556,\n        \"categoryName\": \"browDownLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 2,\n        \"score\": 0.1987743377685547,\n        \"categoryName\": \"browDownRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 3,\n        \"score\": 0.013400448486208916,\n        \"categoryName\": \"browInnerUp\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 4,\n        \"score\": 0.012361560948193073,\n        \"categoryName\": \"browOuterUpLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 5,\n        \"score\": 0.019305096939206123,\n        \"categoryName\": \"browOuterUpRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 6,\n        \"score\": 0.000028426356948330067,\n        \"categoryName\": \"cheekPuff\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 7,\n        \"score\": 3.4500112633395474e-7,\n        \"categoryName\": \"cheekSquintLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 8,\n        \"score\": 4.83789051486383e-7,\n        \"categoryName\": \"cheekSquintRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 9,\n        \"score\": 0.07650448381900787,\n        \"categoryName\": \"eyeBlinkLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 10,\n        \"score\": 0.05070012807846069,\n        \"categoryName\": \"eyeBlinkRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 11,\n        \"score\": 0.13978900015354156,\n        \"categoryName\": \"eyeLookDownLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 12,\n        \"score\": 0.14198613166809082,\n        \"categoryName\": \"eyeLookDownRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 13,\n        \"score\": 0.2177766114473343,\n        \"categoryName\": \"eyeLookInLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 14,\n        \"score\": 0.014739357866346836,\n        \"categoryName\": \"eyeLookInRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 15,\n        \"score\": 0.02361512929201126,\n        \"categoryName\": \"eyeLookOutLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 16,\n        \"score\": 0.19679604470729828,\n        \"categoryName\": \"eyeLookOutRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 17,\n        \"score\": 0.04874616861343384,\n        \"categoryName\": \"eyeLookUpLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 18,\n        \"score\": 0.049392376095056534,\n        \"categoryName\": \"eyeLookUpRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 19,\n        \"score\": 0.34944331645965576,\n        \"categoryName\": \"eyeSquintLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 20,\n        \"score\": 0.2939716875553131,\n        \"categoryName\": \"eyeSquintRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 21,\n        \"score\": 0.005955042317509651,\n        \"categoryName\": \"eyeWideLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 22,\n        \"score\": 0.006776117719709873,\n        \"categoryName\": \"eyeWideRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 23,\n        \"score\": 0.000016942436559475027,\n        \"categoryName\": \"jawForward\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 24,\n        \"score\": 0.0045165494084358215,\n        \"categoryName\": \"jawLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 25,\n        \"score\": 0.07803940027952194,\n        \"categoryName\": \"jawOpen\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 26,\n        \"score\": 0.00002090057751047425,\n        \"categoryName\": \"jawRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 27,\n        \"score\": 0.06032035872340202,\n        \"categoryName\": \"mouthClose\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 28,\n        \"score\": 0.00228882092051208,\n        \"categoryName\": \"mouthDimpleLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 29,\n        \"score\": 0.00781762320548296,\n        \"categoryName\": \"mouthDimpleRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 30,\n        \"score\": 0.0017093931091949344,\n        \"categoryName\": \"mouthFrownLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 31,\n        \"score\": 0.0019319106359034777,\n        \"categoryName\": \"mouthFrownRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 32,\n        \"score\": 0.00008485237776767462,\n        \"categoryName\": \"mouthFunnel\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 33,\n        \"score\": 0.0009051355300471187,\n        \"categoryName\": \"mouthLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 34,\n        \"score\": 0.0003630454302765429,\n        \"categoryName\": \"mouthLowerDownLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 35,\n        \"score\": 0.00017601238505449146,\n        \"categoryName\": \"mouthLowerDownRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 36,\n        \"score\": 0.12865161895751953,\n        \"categoryName\": \"mouthPressLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 37,\n        \"score\": 0.20137207210063934,\n        \"categoryName\": \"mouthPressRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 38,\n        \"score\": 0.0022203284315764904,\n        \"categoryName\": \"mouthPucker\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 39,\n        \"score\": 0.0009096377179957926,\n        \"categoryName\": \"mouthRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 40,\n        \"score\": 0.34189721941947937,\n        \"categoryName\": \"mouthRollLower\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 41,\n        \"score\": 0.11409689486026764,\n        \"categoryName\": \"mouthRollUpper\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 42,\n        \"score\": 0.17172536253929138,\n        \"categoryName\": \"mouthShrugLower\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 43,\n        \"score\": 0.004038424696773291,\n        \"categoryName\": \"mouthShrugUpper\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 44,\n        \"score\": 0.00023205230536404997,\n        \"categoryName\": \"mouthSmileLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 45,\n        \"score\": 0.00019313619122840464,\n        \"categoryName\": \"mouthSmileRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 46,\n        \"score\": 0.0018571305554360151,\n        \"categoryName\": \"mouthStretchLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 47,\n        \"score\": 0.0023813238367438316,\n        \"categoryName\": \"mouthStretchRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 48,\n        \"score\": 0.000024323100660694763,\n        \"categoryName\": \"mouthUpperUpLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 49,\n        \"score\": 0.00003161552012898028,\n        \"categoryName\": \"mouthUpperUpRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 50,\n        \"score\": 1.08198406678639e-7,\n        \"categoryName\": \"noseSneerLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 51,\n        \"score\": 0.0000012652527630052646,\n        \"categoryName\": \"noseSneerRight\",\n        \"displayName\": \"\"\n      }],\n      \"headIndex\": -1,\n      \"headName\": \"\"\n    }],\n    \"facialTransformationMatrixes\": [{\n      \"rows\": 4,\n      \"columns\": 4,\n      \"data\": [0.9947517514228821, 0.10230544209480286, 0.0013679931871592999, 0, -0.10230997204780579, 0.9947447776794434, 0.003816320328041911, 0, -0.000970348424743861, -0.0039362297393381596, 0.9999914169311523, 0, 2.8888821601867676, -7.808934211730957, -30.52109146118164, 1]\n    }]\n  }\n};\n\nexport { Facemesh, FacemeshDatas, FacemeshEye, FacemeshEyeDefaults };\n", "import * as React from 'react';\nimport { useEffect, useContext, createContext } from 'react';\nimport { suspend, clear } from 'suspend-react';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\nconst FaceLandmarkerContext = /* @__PURE__ */createContext({});\nconst FaceLandmarkerDefaults = {\n  basePath: 'https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.8/wasm',\n  options: {\n    baseOptions: {\n      modelAssetPath: 'https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task',\n      delegate: 'GPU'\n    },\n    runningMode: 'VIDEO',\n    outputFaceBlendshapes: true,\n    outputFacialTransformationMatrixes: true\n  }\n};\nfunction FaceLandmarker({\n  basePath = FaceLandmarkerDefaults.basePath,\n  options = FaceLandmarkerDefaults.options,\n  children\n}) {\n  const opts = JSON.stringify(options);\n  const faceLandmarker = suspend(async () => {\n    const {\n      FilesetResolver,\n      FaceLandmarker\n    } = await import('@mediapipe/tasks-vision');\n    const vision = await FilesetResolver.forVisionTasks(basePath);\n    return FaceLandmarker.createFromOptions(vision, options);\n  }, [basePath, opts]);\n  useEffect(() => {\n    return () => {\n      faceLandmarker == null || faceLandmarker.close();\n      clear([basePath, opts]);\n    };\n  }, [faceLandmarker, basePath, opts]);\n  return /*#__PURE__*/React.createElement(FaceLandmarkerContext.Provider, {\n    value: faceLandmarker\n  }, children);\n}\nfunction useFaceLandmarker() {\n  return useContext(FaceLandmarkerContext);\n}\n\nexport { FaceLandmarker, FaceLandmarkerDefaults, useFaceLandmarker };\n"],
  "mappings": "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AM,CAAA;sBACNC,MAAM,CAAA;sBACNC,MAAM,CAAA;sBACNC,MAAM,CAAA;sBACNC,MAAM,CAAA;oBACR;AAEA,wBAAIrnE;AACJ,yBAAKA,MAAKilE,KAAIC,OAAO;AACnB,0BAAID,KAAIC,MAAM9U,eAAepwD,EAAC,GAAG;AAC/BilE,wBAAAA,KAAIC,MAAMllE,EAAC,IAAI,CACbA,GAAEsnE,WAAW,CAAC,GACdtnE,GAAEsnE,WAAW,CAAC,GACdtnE,GAAEsnE,WAAW,CAAC,GACdtnE,GAAEsnE,WAAW,CAAC,CAAC;sBAEnB;oBACF;AAEA,wBAAMC,YAAY,IAAIj/D,WAAW;sBAC/B;;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;;oBAAM,CACP;AAED,wBAAMk/D,YAAY,IAAIl/D,WAAW;sBAC/B;;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;;oBAAM,CACP;AAED28D,oBAAAA,KAAIwC,aAAa;sBACf7+D,OAAO2+D;sBACP7+D,OAAO8+D;oBACT;AAEA,wBAAMjC,OAAO,IAAIj9D,WAAW;sBAC1B;;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;;sBACA;sBACA;sBACA;;oBAAM,CACP;AAED,wBAAMk+D,OAAO,IAAIl+D,WAAW;sBAC1B;;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;oB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ACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;;wBACCgc,SAAS,IAAK;wBACfA,QAAQ;;wBACPC,UAAU,IAAK;wBAChBA,SAAS;;wBACT;wBACA;wBACA;wBACA;;wBACA;wBACA;wBACA;wBACA;;wBACA;wBACA;wBACA;wBACA;;wBACA;wBACA;;wBACA;wBACA;wBACA;wBACA;wBACA;;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;;wBACA;wBACA;;wBACA;wBACA;sBAAI,CACL;;sBACDwkD;sBACA9D,KAAIoD,IACFpD,KAAIC,MAAMG,MACV,IAAI/8D,WAAW;wBACb;wBACA;wBACA;wBACA;;wBACA;wBACA;wBACA;wBACA;;wBACA;wBACA;wBACA;wBACA;sBAAI,CACL,CAAC;;sBAEJ28D,KAAIoD,IACFpD,KAAIC,MAAMmB,MACV,IAAI/9D,WAAW;wBACb0gE,YAAY;;wBACXA,YAAY,KAAM;wBAClBA,YAAY,IAAK;wBAClBA,WAAW;wBACXC,YAAY;;wBACXA,YAAY,KAAM;wBAClBA,YAAY,IAAK;wBAClBA,WAAW;sBAAI,CAChB,CAAC;oBACH;kBAEL;AAAC,kBAAAhE,KAEMO,OAAP,SAAA,KAAY3+D,OAAO;AACjB,wBAAMqiE,YAAYriE,MAAM/N,OAAOgQ;AAC/B,2BAAO,IAAIR,WACT;sBACE;;sBACA;sBACA;sBACA;;sBAEA;;sBACA,KAAO4gE;;sBACP;sBACA;;sBACA;;sBAEA;;sBACA,KAAOA;;sBACP;;sBACA;;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBACA;sBACA;sBACA;sBACA;;sBAEA;;oBAAM,EAELjwD,OAAO,CAACiwD,SAAS,CAAC,EAClBjwD,OAAOpS,MAAM/N,MAAM,EACnBmgB,OAAO,CAAC,GAAM,GAAM,CAAI,CAAC,CAAC;kBAEjC;AAAC,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AG,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,KAAK,GAAG,GAAG,EAAE,GAAG,IAAI,KAAK,GAAG,IAAI,EAAE,CAAC;AAC3P,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,K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,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AA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",
  "names": ["hlsDefaultConfig", "autoStartLoad", "startPosition", "defaultAudioCodec", "undefined", "debug", "capLevelOnFPSDrop", "capLevelToPlayerSize", "ignoreDevicePixelRatio", "initialLiveManifestSize", "maxBufferLength", "backBufferLength", "Infinity", "maxBufferSize", "maxBufferHole", "highBufferWatchdogPeriod", "nudgeOffset", "nudgeMaxRetry", "maxFragLookUpTolerance", "liveSyncDurationCount", "liveMaxLatencyDurationCount", "liveSyncDuration", "liveMaxLatencyDuration", "maxLiveSyncPlaybackRate", "liveDurationInfinity", "liveBackBufferLength", "maxMaxBufferLength", "enableWorker", "enableSoftwareAES", "manifestLoadingTimeOut", "manifestLoadingMaxRetry", "manifestLoadingRetryDelay", "manifestLoadingMaxRetryTimeout", "startLevel", "levelLoadingTimeOut", "levelLoadingMaxRetry", "levelLoadingRetryDelay", "levelLoadingMaxRetryTimeout", "fragLoadingTimeOut", "fragLoadingMaxRetry", "fragLoadingRetryDelay", "fragLoadingMaxRetryTimeout", "startFragPrefetch", "fpsDroppedMonitoringPeriod", "fpsDroppedMonitoringThreshold", "appendErrorMaxRetry", "loader", "XhrLoader", "fLoader", "pLoader", "xhrSetup", "licenseXhrSetup", "licenseResponseCallback", "abrController", "AbrController", "bufferController", "BufferController", "capLevelController", "CapLevelController", "fpsController", "FPSController", "stretchShortVideoTrack", "maxAudioFramesDrift", "forceKeyFrameOnDiscontinuity", "abrEwmaFastLive", "abrEwmaSlowLive", "abrEwmaFastVoD", "abrEwmaSlowVoD", "abrEwmaDefaultEstimate", "abrBandWidthFactor", "abrBandWidthUpFactor", "abrMaxWithRealBitrate", "maxStarvationDelay", "maxLoadingDelay", "minAutoBitrate", "emeEnabled", "widevineLicenseUrl", "drmSystems", "drmSystemOptions", "requestMediaKeySystemAccessFunc", "requestMediaKeySystemAccess", "testBandwidth", "progressive", "lowLatencyMode", "cmcd", "enableDateRangeMetadataCues", "enableEmsgMetadataCues", "enableID3MetadataCues", "timelineConfig", "subtitleStreamController", "__USE_SUBTITLES__", "SubtitleStreamController", "subtitleTrackController", "SubtitleTrackController", "timelineController", "TimelineController", "audioStreamController", "__USE_ALT_AUDIO__", "AudioStreamController", "audioTrackController", "AudioTrackController", "emeController", "__USE_EME_DRM__", "EMEController", "cmcdController", "__USE_CMCD__", "CMCDController", "cueHandler", "Cues", "enableWebVTT", "enableIMSC1", "enableCEA708Captions", "captionsTextTrack1Label", "captionsTextTrack1LanguageCode", "captionsTextTrack2Label", "captionsTextTrack2LanguageCode", "captionsTextTrack3Label", "captionsTextTrack3LanguageCode", "captionsTextTrack4Label", "captionsTextTrack4LanguageCode", "renderTextTracksNatively", "mergeConfig", "defaultConfig", "userConfig", "Error", "_extends", "enableStreamingMode", "config", "currentLoader", "FetchLoader", "logger", "canStreamProgressively", "fetchSupported", "hls", "lastLoadedFragLevel", "_nextAutoLevel", "timer", "onCheck", "_abandonRulesCheck", "bind", "fragCurrent", "partCurrent", "bitrateTestDelay", "bwEstimator", "EwmaBandWidthEstimator", "registerListeners", "on", "Events", "onFragLoading", "onFragLoaded", "onFragBuffered", "onLevelLoaded", "onError", "unregisterListeners", "off", "destroy", "clearTimer", "event", "data", "frag", "type", "PlaylistLevelType", "part", "self", "setInterval", "details", "live", "update", "autoLevelEnabled", "media", "stats", "duration", "aborted", "loaded", "total", "level", "paused", "playbackRate", "readyState", "bufferInfo", "mainForwardBufferInfo", "requestDelay", "performance", "now", "loading", "start", "Math", "abs", "loadedFirstByte", "first", "bwEstimate", "getEstimate", "levels", "minAutoLevel", "expectedLen", "max", "round", "maxBitrate", "loadRate", "fragLoadedDelay", "bufferStarvationDelay", "len", "fragLevelNextLoadedDelay", "Number", "POSITIVE_INFINITY", "nextLoadLevel", "levelNextBitrate", "sn", "index", "toFixed", "sample", "keyLoader", "abortRequests", "trigger", "loadedBytes", "bytes", "loadedDuration", "realBitrate", "bitrateTest", "fragBufferedData", "id", "processingMs", "parsing", "end", "ErrorTypes", "ErrorDetails", "clearInterval", "getNextABRAutoLevel", "maxAutoLevel", "currentFragDuration", "avgbw", "bestLevel", "findBestLevel", "min", "bwFactor", "bwUpFactor", "currentBw", "maxFetchDuration", "currentLevel", "currentCodecSet", "codecSet", "i", "levelInfo", "levelDetails", "avgDuration", "partTarget", "averagetargetduration", "adjustedbw", "bitrate", "fetchDuration", "_createClass", "forcedAutoLevel", "canEstimate", "nextABRAutoLevel", "loadError", "nextLevel", "TICK_INTERVAL", "fragmentTracker", "videoBuffer", "videoTrackCC", "waitingVideoCC", "audioSwitch", "trackId", "waitingData", "mainDetails", "bufferFlushed", "cachedTrackLoadedData", "_registerListeners", "onHandlerDestroying", "_unregisterListeners", "onMediaAttached", "onMediaDetaching", "onManifestLoading", "onAudioTracksUpdated", "onAudioTrackSwitching", "onAudioTrackLoaded", "onBufferReset", "onBufferCreated", "onBufferFlushed", "onInitPtsFound", "initPTS", "cc", "log", "state", "State", "tick", "startLoad", "lastCurrentTime", "stopLoad", "fragLoadError", "loadedmetadata", "nextLoadPosition", "doTick", "doTickIdle", "waitForCdnTuneIn", "retryDate", "seeking", "resetStartWhenNotLoaded", "cache", "complete", "payload", "flush", "networkDetails", "_handleFragmentLoadProgress", "_handleFragmentLoadComplete", "clearWaitingFragment", "pos", "getLoadPosition", "BufferHelper", "mediaBuffer", "waitingFragmentAtPosition", "fragmentWithinToleranceTest", "onTickEnd", "removeFragment", "resetLoadingState", "currentTime", "startFragRequested", "trackDetails", "levelLastLoaded", "bufferable", "afterBufferFlushed", "ElementaryStreamTypes", "getFwdBufferInfo", "_streamEnded", "mainBufferInfo", "bufferLen", "maxBufLen", "getMaxBufferLength", "fragments", "targetBufferTime", "PTSKnown", "nextStart", "targetduration", "getNextFragment", "loadFragment", "mainBufferLength", "maxConfigBuffer", "audioTracks", "resetTransmuxer", "map", "mediaPlaylist", "Level", "altAudio", "url", "removeAllFragments", "newDetails", "warn", "startSN", "endSN", "totalduration", "track", "sliding", "deltaUpdateFailed", "hasProgramDateTime", "alignMediaPlaylistByPDT", "alignPlaylists", "setStartPosition", "console", "assert", "audioCodec", "transmuxer", "TransmuxerInterface", "_handleTransmuxComplete", "_handleTransmuxerFlush", "initSegmentData", "initSegment", "accurateTimeOffset", "partIndex", "partial", "chunkMeta", "ChunkMetadata", "chunkCount", "byteLength", "push", "ChunkCache", "Uint8Array", "fragLoadedData", "audioTrack", "tracks", "audio", "buffer", "video", "buffered", "length", "fragContextChanged", "fragPrevious", "fragBufferedComplete", "onFragmentOrKeyLoadError", "fatal", "parent", "flushBuffer", "bufferedInfo", "reduceMaxBufferLength", "flushMainBuffer", "transmuxResult", "remuxResult", "context", "getCurrentContext", "text", "id3", "completeAudioSwitch", "_bufferInitSegment", "startPTS", "endPTS", "startDTS", "endDTS", "elementaryStreams", "setElementaryStreamInfo", "bufferFragmentData", "samples", "emittedID3", "emittedText", "levelCodec", "codec", "container", "segment", "fragState", "getState", "FragmentState", "_loadInitSegment", "BaseStreamController", "groupId", "tracksInGroup", "trackName", "selectDefaultTrack", "onManifestParsed", "onLevelLoading", "onLevelSwitching", "currentTrack", "curDetails", "retryCount", "playlistLoaded", "switchLevel", "levelIndex", "audioGroupIds", "audioGroupId", "urlId", "filter", "some", "default", "audioTracksUpdated", "selectInitialTrack", "PlaylistContextType", "retryLoadingOrFail", "setAudioTrack", "newId", "lastTrack", "name", "hlsUrlParameters", "switchParams", "loadPlaylist", "currentAudioTrackName", "findTrackId", "shouldLoadTrack", "addDirectives", "error", "deliveryDirectives", "BasePlaylistController", "logPrefix", "requestScheduled", "canLoad", "clearTimeout", "playlistUri", "previous", "renditionReports", "attr", "uri", "URL", "URI", "href", "slice", "msn", "parseInt", "lastPartSn", "lastPartIndex", "currentGoal", "age", "HlsUrlParameters", "HlsSkip", "previousDetails", "elapsed", "advancedDateTime", "Date", "reloaded", "advanced", "mergeDetails", "canBlockReload", "endSn", "hasParts", "lastPart", "nextSnStartIndex", "lastAdvanced", "cdnAge", "ageHeader", "tuneInGoal", "segments", "floor", "parts", "getDeliveryDirectives", "position", "distanceToLiveEdgeMs", "edge", "reloadInterval", "computeReloadInterval", "updated", "estimatedTimeUntilUpdate", "setTimeout", "previousDeliveryDirectives", "skip", "getSkipValue", "errorEvent", "retry", "indexOf", "delay", "pow", "STOPPED", "IDLE", "KEY_LOADING", "FRAG_LOADING", "FRAG_LOADING_WAITING_RETRY", "WAITING_TRACK", "PARSING", "PARSED", "ENDED", "ERROR", "WAITING_INIT_PTS", "WAITING_LEVEL", "_state", "fragmentLoader", "decrypter", "onvseeking", "onvended", "FragmentLoader", "Decrypter", "_assertThisInitialized", "abort", "clearNextTick", "partList", "lastPartBuffered", "playlistType", "isEndListAppended", "getLevelDetails", "onMediaSeeking", "onMediaEnded", "addEventListener", "ended", "removeEventListener", "detach", "tolerance", "fragStartOffset", "fragEndOffset", "pastFragment", "tickImmediate", "onHandlerDestroyed", "_loadFragForPlayback", "progressCallback", "_doFragLoad", "then", "catch", "reason", "resetFragmentLoading", "startOffset", "endOffset", "flushScope", "decryptData", "decryptdata", "key", "iv", "method", "startTime", "decrypt", "decryptedData", "endTime", "tstart", "tdecrypt", "buffering", "NaN", "TimeRanges", "seekToStartPos", "fragLoadedEndData", "partsLoaded", "fragLoaded", "keyLoadingPromise", "encrypted", "load", "keyLoadedData", "throwIfFragContextChanged", "encryptedFragments", "loadClear", "fragmentHint", "getNextPart", "parseFloat", "doFragPartsLoad", "handleFragLoadError", "loadedEndOfParts", "Promise", "resolve", "dataOnProgress", "all", "reject", "loadPartIndex", "loadPart", "partLoadedData", "loadedPart", "nextPart", "fragment", "handleFragLoadAborted", "err", "updateLevelTiming", "getPartWith", "getFragmentWithSN", "data1", "data2", "appendUint8Array", "dropped", "independent", "flushBufferGap", "fragDuration", "segmentFraction", "bufferedFragAtPos", "getBufferedFrag", "levelBitrate", "threshold", "minLength", "fragLen", "getInitialLiveFragment", "liveSyncPosition", "partEnd", "fragmentEnd", "getFragmentAtPosition", "mapToInitFragWhenRequired", "contiguous", "independentAttrOmitted", "programDateTime", "findFragmentByPDT", "endProgramDateTime", "targetSN", "fragNext", "findFragWithCC", "liveStart", "bufferEnd", "loadingParts", "concat", "lookupTolerance", "findFragmentByPTS", "curSNIdx", "sameLevel", "nextFrag", "synchronizeToLiveEdge", "withinSlidingWindow", "maxLatency", "lastLevel", "slidingStart", "firstLevelLoad", "aligned", "alignedSliding", "alignStream", "alignedSlidingStart", "advancePartLimit", "partHoldBack", "startTimeOffset", "filterType", "levelRetry", "bufferType", "bufferedTimeRanges", "detectEvictedFragments", "parsed", "Object", "keys", "reduce", "result", "info", "parsedDuration", "drift", "updateFragPTSDTS", "nextState", "previousState", "TaskLoop", "MediaSource", "getMediaSource", "VIDEO_CODEC_PROFILE_REPACE", "_objectUrl", "operationQueue", "listeners", "bufferCodecEventsExpected", "_bufferCodecEventsTotal", "mediaSource", "lastMpegAudioChunk", "appendError", "pendingTracks", "sourceBuffer", "_onMediaSourceOpen", "_onMediaEmptied", "updateMediaElementDuration", "checkPendingTracks", "_onMediaSourceClose", "_onMediaSourceEnded", "src", "_initSourceBuffer", "hasSourceTypes", "getSourceBufferTypes", "onMediaAttaching", "onBufferAppending", "onBufferCodecs", "onBufferEos", "onBufferFlushing", "onLevelUpdated", "onFragParsed", "onFragChanged", "BufferOperationQueue", "audiovideo", "codecEvents", "ms", "createObjectURL", "endOfStream", "message", "revokeObjectURL", "removeAttribute", "forEach", "sb", "removeBufferListeners", "removeSourceBuffer", "sourceBufferCount", "changeType", "metadata", "currentCodec", "replace", "nextCodec", "mimeType", "appendChangeType", "operation", "execute", "shiftAndExecuteNext", "onStart", "onComplete", "e", "append", "eventData", "chunkStats", "bufferAppendingStart", "fragBuffering", "partBuffering", "checkTimestampOffset", "fragStart", "executeStart", "delta", "timestampOffset", "appendExecutor", "executeEnd", "timeRanges", "code", "DOMException", "QUOTA_EXCEEDED_ERR", "flushOperation", "removeExecutor", "buffersAppendedTo", "onUnblocked", "blockBuffers", "flushBackBuffer", "acc", "ending", "sourceBufferTypes", "targetDuration", "levelTargetDuration", "maxBackBufferLength", "targetBackBufferPosition", "levelDuration", "mediaDuration", "msDuration", "updateSeekableRange", "setLiveSeekableRange", "pendingTracksCount", "createSourceBuffers", "buffers", "executeNext", "tracksCreated", "addSourceBuffer", "sbName", "addBufferListener", "_onSBUpdateStart", "_onSBUpdateEnd", "_onSBUpdateError", "current", "removeStart", "removeEnd", "updating", "remove", "appendBuffer", "blockingOperations", "appendBlocker", "fn", "listener", "l", "sourceBufferReference", "queues", "queue", "insertAbort", "unshift", "promise", "shift", "autoLevelCapping", "firstLevel", "restrictedLevels", "streamController", "clientRect", "setStreamController", "unregisterListener", "stopCapping", "onFpsDropLevelCapping", "isLevelAllowed", "droppedLevel", "HTMLVideoElement", "startCapping", "detectPlayerSize", "mediaHeight", "mediaWidth", "getMaxLevel", "nextLevelSwitch", "capLevelIndex", "validLevels", "getMaxLevelByMediaSize", "getDimensions", "boundsRect", "width", "height", "getBoundingClientRect", "right", "left", "bottom", "top", "atGreatestBandwidth", "curLevel", "maxLevelIndex", "contentScaleFactor", "pixelRatio", "devicePixelRatio", "sid", "cid", "useHeaders", "initialized", "starved", "audioBuffer", "onWaiting", "onPlaying", "applyPlaylistData", "apply", "ot", "CMCDObjectType", "su", "applyFragmentData", "getObjectType", "d", "br", "tb", "getTopBandwidth", "bl", "getBufferLength", "createPlaylistLoader", "createFragmentLoader", "sessionId", "uuid", "contentId", "onMediaDetached", "createData", "v", "CMCDVersion", "sf", "CMCDStreamingFormat", "pr", "mtp", "bandwidthEstimate", "isVideo", "bs", "headers", "toHeaders", "query", "toQuery", "appendQueryToUri", "Ctor", "callbacks", "Blob", "toString", "lastIndexOf", "serialize", "results", "isValid", "value", "isNaN", "toRounded", "toHundred", "toUrlSafe", "encodeURIComponent", "formatters", "dl", "nor", "rtp", "sort", "formatter", "JSON", "stringify", "join", "headerNames", "headerGroups", "headerMap", "nrr", "st", "separator", "includes", "MAX_LICENSE_REQUEST_FAILURES", "LOGGER_PREFIX", "keyFormatPromise", "keySystemAccessPromises", "_requestLicenseFailureCount", "mediaKeySessions", "keyIdToKeySessionPromise", "setMediaKeysQueue", "CDMCleanupPromise", "onMediaEncrypted", "_onMediaEncrypted", "onWaitingForKey", "_onWaitingForKey", "onManifestLoaded", "getLicenseServerUrl", "keySystem", "keySystemConfiguration", "licenseUrl", "KeySystems", "getServerCertificateUrl", "serverCertificateUrl", "attemptKeySystemAccess", "keySystemsToAttempt", "uniqueCodec", "a", "audioCodecs", "videoCodecs", "videoCodec", "attempt", "keySystems", "getMediaKeysPromise", "mediaKeys", "EMEKeyError", "supportedConfigurations", "errMessage", "location", "protocol", "mediaKeySystemConfigs", "getSupportedMediaKeySystemConfigurations", "keySystemAccess", "mediaKeySystemAccess", "certificateRequest", "fetchServerCertificate", "createMediaKeys", "certificate", "setMediaKeysServerCertificate", "createMediaKeySessionContext", "Hex", "keyId", "mediaKeysSession", "createSession", "mediaKeySessionContext", "keyStatus", "renewKeySession", "pssh", "keySessionContext", "getKeyIdString", "scheme", "generateRequestWithPreferredKeySession", "removeSession", "updateKeySession", "keySession", "selectKeySystemFormat", "keyFormats", "levelkeys", "getKeyFormatPromise", "keySystemsInConfig", "getKeySystemsForConfig", "keySystemFormatToKeySystemDomain", "getKeySystemSelectionPromise", "keySystemFormat", "keySystemToKeySystemFormat", "loadKey", "keyInfo", "keyDetails", "keyFormat", "keySessionContextPromise", "getKeySystemForKeyPromise", "throwIfDestroyed", "attemptSetMediaKeys", "handleError", "initDataType", "initData", "keySystemDomain", "json", "bin2str", "sinf", "base64Decode", "parse", "tenc", "parseSinf", "subarray", "psshInfo", "parsePssh", "version", "systemId", "KeySystemIds", "keySystemIdToKeySystemDomain", "keyIdHex", "_loop", "keyContext", "oldKeyIdHex", "LevelKey", "setMediaKeysPromise", "setMediaKeys", "p", "generateRequestFilter", "generateRequest", "mappedInitData", "call", "licenseStatus", "EventEmitter", "onmessage", "emit", "messageType", "renewLicense", "strToUtf8array", "onkeystatuseschange", "onKeyStatusChange", "keyUsablePromise", "startsWith", "removeAllListeners", "keyStatuses", "status", "byteOffset", "xhr", "XMLHttpRequest", "open", "responseType", "onreadystatechange", "DONE", "response", "statusText", "send", "cert", "setServerCertificate", "success", "keyMessage", "requestLicense", "setupLicenseXHR", "keysListItem", "licenseChallenge", "licenseXhrSetupResult", "finalLicenseChallenge", "ArrayBuffer", "attemptsLeft", "licenseXhr", "mediaKeysList", "keySessionCount", "sessionKeys", "formats", "sessionKey", "splice", "close", "isVideoPlaybackQualityAvailable", "lastTime", "lastDroppedFrames", "lastDecodedFrames", "getVideoPlaybackQuality", "checkFPSInterval", "checkFPS", "decodedFrames", "droppedFrames", "currentPeriod", "currentDropped", "currentDecoded", "droppedFPS", "totalDroppedFrames", "videoPlaybackQuality", "totalVideoFrames", "droppedVideoFrames", "webkitDecodedFrameCount", "webkitDroppedFrameCount", "PDTValue", "Array", "isArray", "startPDT", "endPDT", "seg", "pdtWithinToleranceTest", "foundFragment", "BinarySearch", "candidate", "candidateLookupTolerance", "deltaPTS", "pdtBufferEnd", "FragmentTracker", "activeFragment", "activeParts", "endListFragments", "create", "bufferPadding", "onBufferAppended", "getAppendedFrag", "levelType", "activePart", "appendedPTS", "fragmentEntity", "body", "elementaryStream", "timeRange", "esData", "range", "time", "isNotBuffered", "isTimeBuffered", "detectPartialFragments", "fragKey", "getFragmentKey", "streamInfo", "getBufferedTimes", "endList", "fragBuffered", "minEndPTS", "maxStartPTS", "getPartialFragment", "bestFragment", "timePadding", "bestOverlap", "isPartial", "lastFragmentEntity", "APPENDING", "PARTIAL", "OK", "NOT_LOADED", "rangeEnd", "hasFragment", "removeFragmentsInRange", "clearElementaryStreamInfo", "STALL_MINIMUM_DURATION_MS", "MAX_START_GAP_JUMP", "SKIP_BUFFER_HOLE_STEP_SECONDS", "SKIP_BUFFER_RANGE_START", "GapController", "nudgeRetry", "stallReported", "stalled", "moved", "poll", "activeFrag", "seeked", "beginSeek", "stalledDuration", "isBuffered", "hasEnoughBuffer", "noBufferGap", "startJump", "isLive", "maxStartGapJump", "_trySkipBufferHole", "tnow", "_reportStall", "bufferedWithHoles", "_tryFixBufferStall", "stalledDurationMs", "targetTime", "_tryNudgeBuffer", "lastEndTime", "MIN_CUE_DURATION", "getCueClass", "WebKitDataCue", "VTTCue", "TextTrackCue", "MAX_CUE_ENDTIME", "Cue", "MAX_VALUE", "dateRangeDateToTimelineSeconds", "date", "offset", "getTime", "hexToArrayBuffer", "str", "from", "split", "ID3TrackController", "id3Track", "dateRangeCuesAppended", "onFragParsingMetadata", "clearCurrentCues", "createTrack", "getID3Track", "textTracks", "mode", "textTrack", "kind", "label", "sendAddTrackEvent", "addTextTrack", "MetadataSchema", "frames", "ID3", "pts", "timeDiff", "j", "frame", "updateId3CueEnds", "cue", "addCue", "cues", "predicate", "removeCuesInRange", "dateRanges", "ids", "idsToRemove", "removeCue", "lastFragment", "dateTimeOffset", "_loop2", "dateRange", "appendedDateRangeCues", "durationKnown", "startDate", "endDate", "endOnNext", "nextDateRangeWithSameClass", "filterMapArray", "class", "b", "attributes", "DateRangeAttribute", "LatencyController", "stallCount", "_latency", "timeupdateHandler", "timeupdate", "latency", "computeLatency", "targetLatency", "distanceFromTarget", "liveMinLatencyDuration", "inLiveRange", "forwardBufferLength", "rate", "exp", "edgeStalled", "estimateLiveEdge", "liveEdge", "holdBack", "maxLiveSyncOnStallIncrease", "liveSyncOnStallIncrease", "syncPosition", "maxLevelUpdateAge", "bufferedRanges", "chromeOrFirefox", "test", "navigator", "userAgent", "toLowerCase", "LevelController", "_levels", "_firstLevel", "_startLevel", "currentLevelIndex", "manualLevelIndex", "onParsedComplete", "onAudioTrackSwitched", "subtitleTracks", "bitrateStart", "levelSet", "levelFromSet", "resolutionFound", "videoCodecFound", "audioCodecFound", "levelParsed", "attrs", "levelKey", "RESOLUTION", "CODECS", "AUDIO", "addGroupId", "SUBTITLES", "isCodecSupportedInMp4", "assignTrackIdsByGroup", "subtitles", "SCORE", "decimalFloatingPoint", "audioOnly", "edata", "sessionData", "t", "forceStartLoad", "textGroupIds", "redundantFailover", "levelError", "levelSwitch", "variantLevelIndex", "fragmentError", "restrictedHdcpLevel", "maxHdcpLevel", "HdcpLevels", "recoverLevel", "errorDetails", "retrying", "redundantLevels", "nextAutoLevel", "newUrlId", "removeLevel", "filterLevelAndGroupByIdIndex", "newLevel", "lastLevelIndex", "levelSwitchingData", "_urlId", "configStartLevel", "groups", "updatePTS", "fromIdx", "toIdx", "fragFrom", "fragTo", "updateFromToPTS", "fragToPTS", "parsedMediaDuration", "fragStartPts", "fragEndPts", "fragIdx", "oldDetails", "currentInitSegment", "oldFragments", "oldInit", "ccOffset", "PTSFrag", "mapFragmentIntersection", "oldFrag", "newFrag", "relurl", "fragmentsToCheck", "skippedSegments", "startCC", "canSkipDateRanges", "mergeDateRanges", "recentlyRemovedDateranges", "newFragments", "mapPartIntersection", "oldPart", "newPart", "adjustSliding", "driftStartTime", "driftStart", "driftEndTime", "driftEnd", "oldDateRanges", "deltaDateRanges", "DateRange", "oldParts", "newParts", "intersectionFn", "newFrags", "oldFrags", "addSliding", "liveEdgeMaxTargetDurations", "lastSegmentDuration", "StreamController", "audioCodecSwap", "gapController", "_forceStartLoad", "fragPlaying", "onvplaying", "onvseeked", "fragLastKbps", "couldBacktrack", "backtrackFragment", "audioCodecSwitch", "onFragLoadEmergencyAborted", "onLevelsUpdated", "checkBuffer", "checkFragmentChanged", "getMainFwdBufferInfo", "lastDetails", "backtrackSn", "backtrackFrag", "_loadBitrateTestFrag", "fragOrPart", "followingBufferedFrag", "immediateLevelSwitch", "abortCurrentFrag", "fetchdelay", "fragPlayingCurrent", "nextLevelId", "bufferedFrag", "nextBufferedFrag", "maxStart", "startPts", "onMediaPlaying", "onMediaSeeked", "aac", "heaac", "changeTypeSupported", "newLevelId", "endCC", "_getAudioCodec", "fromAltAudio", "mediaTrack", "alternate", "videoTrack", "swapAudioCodec", "bufferStart", "timescale", "firstKeyFrame", "firstKeyFramePTS", "backtrack", "ua", "channelCount", "fragCurrentLevel", "currentFrag", "epocMs", "currentTrackId", "tracksBuffered", "onSubtitleTracksUpdated", "onSubtitleTrackSwitch", "onSubtitleTrackLoaded", "onSubtitleFragProcessed", "fragEnd", "endOffsetSubtitles", "mediaBufferTimeRanges", "mainSlidingStartFragment", "foundFrag", "BufferableInstance", "timeranges", "getRange", "queuedDefaultTrack", "trackChangeListener", "onTextTracksChanged", "asyncPollTrackChange", "pollTrackChange", "useTextTrackPolling", "subtitlePollingInterval", "_subtitleDisplay", "subtitleTrack", "timeout", "filterSubtitleTracks", "textGroupId", "initialTrackId", "subtitleTracksUpdated", "setSubtitleTrack", "toggleTrackModes", "groupTracks", "oldTrack", "nextTrack", "subtitleDisplay", "textTrackList", "enabled", "unparsedVttFrags", "captionsTracks", "nonNativeCaptionsTracks", "cea608Parser1", "cea608Parser2", "lastSn", "prevCC", "vttCCs", "newVTTCCs", "captionsProperties", "textTrack1", "languageCode", "textTrack2", "textTrack3", "textTrack4", "channel1", "OutputFilter", "channel2", "channel3", "channel4", "Cea608Parser", "onFragParsingUserdata", "onFragDecrypted", "onSubtitleTracksCleared", "addCues", "screen", "cueRanges", "merged", "cueRange", "overlap", "intersection", "newCue", "getExistingTrack", "createCaptionsTrack", "createNativeTrack", "createNonNativeTrack", "existingTrack", "createTextTrack", "trackProperties", "_id", "closedCaptions", "lang", "_cleanTracks", "reset", "hasIMSC1", "textCodec", "IMSC1_CODEC", "sameTracks", "inUseTracks", "inUseTrack", "canReuseVttTextTrack", "textTrackKind", "_captionsOrSubtitlesFromCharacteristics", "tracksList", "CHARACTERISTICS", "transcribesSpokenDialog", "describesMusicAndSound", "captions", "captionsTrack", "instreamIdMatch", "exec", "instreamId", "closedCaptionsForLevel", "decrypted", "trackPlaylistMedia", "new", "_parseIMSC1", "_parseVTTs", "parseIMSC1", "_appendCues", "payloadWebVTT", "parseWebVTT", "_fallbackToIMSC1", "fragLevel", "addCueToTrack", "ccBytes", "ccdatas", "extractCea608Data", "addData", "byteArray", "actualCCBytes", "count", "tmpByte", "ccbyte1", "ccbyte2", "ccValid", "ccType", "manifestTrack", "x1", "x2", "y1", "y2", "presentationOffset", "AESCrypto", "subtle", "aesIV", "removePadding", "array", "outputBytes", "paddingBytes", "DataView", "getUint8", "sliceUint8", "AESDecryptor", "rcon", "subMix", "Uint32Array", "invSubMix", "sBox", "invSBox", "ksRows", "keySize", "keySchedule", "invKeySchedule", "initTable", "uint8ArrayToUint32Array_", "arrayBuffer", "view", "newArray", "getUint32", "subMix0", "subMix1", "subMix2", "subMix3", "invSubMix0", "invSubMix1", "invSubMix2", "invSubMix3", "x", "xi", "sx", "x4", "x8", "expandKey", "keyBuffer", "sameKey", "ksRow", "invKsRow", "sbox", "prev", "networkToHostOrderSwap", "word", "inputArrayBuffer", "nRounds", "invSBOX", "initVector", "initVector0", "initVector1", "initVector2", "initVector3", "inputInt32", "Int32Array", "outputInt32", "t0", "t1", "t2", "t3", "s0", "s1", "s2", "s3", "inputWords0", "inputWords1", "inputWords2", "inputWords3", "swapWord", "CHUNK_SIZE", "_temp", "removePKCS7Padding", "logEnabled", "softwareDecrypter", "fastAesKey", "remainderData", "currentIV", "currentResult", "useSoftware", "browserCrypto", "crypto", "webkitSubtle", "isSync", "softwareDecrypt", "decryptResult", "webCryptoDecrypt", "logOnce", "currentChunk", "getValidChunk", "FastAESKey", "aesKey", "onWebCryptoError", "splitPoint", "msg", "importKey", "AACDemuxer", "observer", "resetInitSegment", "trackDuration", "_audioTrack", "pid", "sequenceNumber", "segmentCodec", "manifestCodec", "inputTimeScale", "probe", "id3Data", "ADTS", "canParse", "appendFrame", "basePTS", "frameIndex", "missing", "BaseAudioDemuxer", "getAudioConfig", "adtsObjectType", "adtsExtensionSamplingIndex", "adtsChannelConfig", "adtsSamplingRates", "adtsSamplingIndex", "samplerate", "isHeaderPattern", "getHeaderLength", "getFullFrameLength", "canGetFrameLength", "isHeader", "headerLength", "frameLength", "newOffset", "initTrackConfig", "getFrameDuration", "parseFrameHeader", "frameDuration", "stamp", "header", "unit", "set", "_id3Track", "cachedData", "lastPTS", "resetTimeStamp", "deaultTimestamp", "resetContiguity", "demux", "timeOffset", "lastDataIndex", "timestamp", "initPTSFn", "dts", "partialData", "dummyTrack", "demuxSampleAes", "keyData", "chunks", "dataLength", "chunk", "concatUint8Arrays", "ExpGolomb", "bytesAvailable", "bitsAvailable", "loadWord", "workingBytes", "availableBytes", "skipBits", "skipBytes", "readBits", "size", "bits", "valu", "skipLZ", "leadingZeroCount", "skipUEG", "skipEG", "readUEG", "clz", "readEG", "readBoolean", "readUByte", "readUShort", "readUInt", "skipScalingList", "lastScale", "nextScale", "deltaScale", "readSPS", "frameCropLeftOffset", "frameCropRightOffset", "frameCropTopOffset", "frameCropBottomOffset", "numRefFramesInPicOrderCntCycle", "scalingListCount", "profileIdc", "chromaFormatIdc", "picOrderCntType", "picWidthInMbsMinus1", "picHeightInMapUnitsMinus1", "frameMbsOnlyFlag", "aspectRatioIdc", "ceil", "readSliceType", "isFooter", "getID3Data", "front", "readSize", "getTimeStamp", "getID3Frames", "isTimeStampFrame", "readTimeStamp", "getFrameData", "String", "fromCharCode", "frameData", "decodeFrame", "decodePrivFrame", "decodeURLFrame", "decodeTextFrame", "owner", "utf8ArrayToStr", "privateData", "description", "timeStampFrame", "pts33Bit", "exitOnNull", "decoder", "getTextDecoder", "decoded", "decode", "idx", "substring", "c", "char2", "char3", "out", "testables", "TextDecoder", "MP3Demuxer", "MpegAudio", "emsgSchemePattern", "MP4Demuxer", "txtTrack", "captionTrack", "parseInitSegment", "RemuxerTrackIdConfig", "sampleDuration", "findBox", "videoSamples", "segmentedData", "segmentValidRange", "remainder", "valid", "extractID3Track", "parseSamples", "emsgs", "emsgInfo", "parseEmsg", "schemeIdUri", "presentationTime", "timeScale", "presentationTimeDelta", "eventDuration", "chromeVersion", "BitratesMap", "SamplingRateMap", "SamplesCoefficients", "BytesInSlot", "parseHeader", "samplesPerFrame", "sampleRate", "mpegVersion", "mpegLayer", "bitRateIndex", "sampleRateIndex", "paddingBit", "channelMode", "columnInBitrates", "bitRate", "columnInSampleRates", "sampleCoefficient", "bytesInSlot", "match", "needChromeFix", "headerSize", "SampleAesDecrypter", "decryptBuffer", "encryptedData", "decryptAacSample", "sampleIndex", "callback", "curUnit", "encryptedBuffer", "decryptedBuffer", "decryptAacSamples", "getAvcEncryptedData", "decodedData", "encryptedDataLen", "Int8Array", "outputPos", "inputPos", "getAvcDecryptedUnit", "uint8DecryptedData", "decryptAvcSample", "unitIndex", "discardEPB", "decryptAvcSamples", "curUnits", "units", "isTypeSupported", "onTransmuxComplete", "onFlush", "useWorker", "worker", "onwmsg", "forwardMessage", "ev", "typeSupported", "mp4", "mpeg", "mp3", "vendor", "Worker", "work", "onWorkerMessage", "onerror", "filename", "lineno", "postMessage", "cmd", "objectURL", "Transmuxer", "w", "terminate", "defaultInitPTS", "transmuxing", "lastFrag", "discontinuity", "trackSwitch", "snDiff", "partDiff", "initSegmentChange", "TransmuxState", "TransmuxConfig", "configureTransmuxer", "isPromise", "async", "handleTransmuxComplete", "transmuxerError", "asyncFlush", "handleFlushResult", "logType", "configure", "TransmuxerWorker", "forwardWorkerLogs", "logFn", "func", "enableLogs", "emitTransmuxComplete", "isEmptyResult", "transferable", "addToTransferable", "muxConfig", "remux", "PassThroughRemuxer", "TSDemuxer", "MP4Remuxer", "demuxer", "remuxer", "decryptionPromise", "transmuxConfig", "currentTransmuxState", "uintData", "defaultInitPts", "getEncryptionType", "getDecrypter", "emptyResult", "resetMuxers", "needsProbing", "resetInitialTimestamp", "transmux", "currentState", "transmuxResults", "demuxResultOrPromise", "demuxResult", "flushRemux", "resetNextTimestamp", "transmuxSampleAes", "transmuxUnencrypted", "mux", "Remuxer", "Demuxer", "encryptionType", "Function", "PACKET_LENGTH", "sampleAes", "pmtParsed", "_duration", "_pmtId", "_avcTrack", "_txtTrack", "aacOverFlow", "avcSample", "syncOffset", "scanwindow", "foundPat", "parsePID", "pesData", "isSampleAes", "pes", "avcId", "avcData", "audioId", "id3Id", "audioData", "unknownPID", "pmtId", "tsPacketErrors", "stt", "atf", "parsePES", "parseAVCPES", "parseAACPES", "parseMPEGPES", "parseID3PES", "parsePAT", "parsedPIDs", "parsePMT", "avc", "extractRemainingSamples", "last", "parseAVCNALu", "spsfound", "audFound", "pushAccessUnit", "createAVCSample", "sliceType", "parseSEIMessageFromNALu", "sps", "expGolombDecoder", "codecarray", "codecstring", "h", "pps", "getLastNalUnit", "lastUnit", "naluState", "lastState", "overflow", "unitType", "lastUnitStart", "lastUnitType", "tmp", "frameMissingBytes", "sampleLength", "frameOverflowBytes", "id3Sample", "sectionLength", "tableEnd", "programInfoLength", "stream", "pesLen", "pesHdrLen", "pesPts", "pesDts", "newData", "pesPrefix", "pesFlags", "payloadStartOffset", "dataLen", "avcTrack", "nbSamples", "lastSample", "webpackBootstrapFunc", "__webpack_modules__", "ENTRY_MODULE", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "exports", "module", "m", "n", "getter", "__esModule", "definition", "o", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "r", "Symbol", "toStringTag", "webpackBootstrapFuncArr", "moduleNameReqExp", "dependencyRegExp", "quoteRegExp", "isNumeric", "getModuleDependencies", "sources", "queueName", "retval", "fnString", "wrapperSignature", "webpackRequireName", "re", "RegExp", "hasValuesInQueues", "hasValues", "getRequiredModules", "modulesQueue", "main", "requiredModules", "seenModules", "moduleToCheck", "pop", "newModules", "newModulesKeys", "getWebpackString", "entryModule", "moduleString", "options", "modules", "blob", "window", "webkitURL", "mozURL", "msURL", "workerUrl", "Hls", "isSupported", "coreComponents", "networkControllers", "_emitter", "_autoLevelCapping", "_maxHdcpLevel", "latencyController", "levelController", "_media", "DefaultConfig", "ConfigAbrController", "ConfigBufferController", "ConfigCapLevelController", "ConfigFpsController", "playListLoader", "PlaylistLoader", "id3TrackController", "KeyLoader", "createController", "AudioStreamControllerClass", "SubtitleStreamControllerClass", "ControllerClass", "components", "controllerInstance", "once", "eventObject", "listenerCount", "detachMedia", "component", "attachMedia", "loadSource", "loadedSource", "loadingSource", "URLToolkit", "alwaysNormalize", "controller", "recoverMediaError", "loadLevel", "manualLevel", "shouldStartCapping", "newCapLevelToPlayerSize", "hdcpLevel", "currentProgramDateTime", "audioTrackId", "subtitleTrackId", "__VERSION__", "getSourceBuffer", "SourceBuffer", "WebKitSourceBuffer", "sourceBufferValidAPI", "dateRangeAttr", "dateRangeWithSameId", "_startDate", "_endDate", "_badValueForSameId", "previousAttr", "ID", "AttrList", "START_DATE", "END_DATE", "CLASS", "DURATION", "PLANNED_DURATION", "bool", "END_ON_NEXT", "MIN_CHUNK_SIZE", "partLoadTimeout", "onProgress", "LoadError", "FragmentILoader", "DefaultILoader", "loaderContext", "createLoaderContext", "loaderConfig", "maxRetry", "retryDelay", "maxRetryDelay", "highWaterMark", "onSuccess", "resetLoader", "resetIV", "onAbort", "onTimeout", "updateStatsFromPart", "fragStats", "partStats", "partTotal", "estTotalParts", "estLoadedParts", "estRemainingParts", "estRemainingBytes", "fragLoading", "partLoading", "rangeStart", "byteRangeStartOffset", "byteRangeEndOffset", "byteRangeStart", "byteRangeEnd", "fragmentLen", "params", "BaseSegment", "baseurl", "_byteRange", "_url", "VIDEO", "AUDIOVIDEO", "setByteRange", "byteRange", "buildAbsoluteURL", "Fragment", "_decryptdata", "rawProgramDateTime", "tagList", "LoadStats", "title", "setKeyFormat", "getDecryptData", "NONE", "identity", "Part", "partAttrs", "fragOffset", "gap", "enumeratedString", "keyUriToKeyInfo", "isCommonEncryption", "createKeyLoadError", "loadingFrag", "loadInternal", "errorMessage", "keyLoadPromise", "loadKeyHTTP", "loadKeyEME", "Loader", "loaderCallbacks", "DEFAULT_TARGET_DURATION", "LevelDetails", "baseUrl", "availabilityDelay", "misses", "m3u8", "canSkipUntil", "preloadHint", "partSnDiff", "partIndexDiff", "runTime", "runDuration", "keyUriToKeyIdMap", "clearKeyUriToKeyIdMap", "format", "formatversions", "keyFormatVersions", "KeySystemFormats", "createInitializationVector", "keyBytes", "convertDataUriToArrayBytes", "PlayReadyKeySystemUUID", "mp4pssh", "keyBytesUtf16", "Uint16Array", "keyByteStr", "xmlKeyBytes", "parser", "DOMParser", "xmlDoc", "parseFromString", "getElementsByTagName", "childNodes", "nodeValue", "getAttribute", "keyIdArray", "changeEndianness", "keydata", "padded", "val", "MAX_SAFE_INTEGER", "dv", "setUint32", "segmentNumber", "uint8View", "MASTER_PLAYLIST_REGEX", "MASTER_PLAYLIST_MEDIA_REGEX", "LEVEL_PLAYLIST_REGEX_FAST", "source", "LEVEL_PLAYLIST_REGEX_SLOW", "M3U8Parser", "findGroup", "mediaGroupId", "group", "convertAVC1ToAVCOTI", "avcdata", "parseMasterPlaylist", "string", "levelsWithKnownCodecs", "hasSessionData", "lastIndex", "decimalInteger", "NAME", "resolution", "decimalResolution", "setCodecs", "unknownCodecs", "sessionAttrs", "keyTag", "parseKey", "stripUnknownCodecLevels", "parseMasterPlaylistMedia", "medias", "TYPE", "LANGUAGE", "autoselect", "forced", "groupCodec", "assignCodec", "parseLevelPlaylist", "levelUrlId", "currentSN", "currentPart", "discontinuityCounter", "prevFrag", "firstPdtIndex", "createNextFrag", "setFragLevelKeys", "assignProgramDateTime", "tag", "value1", "value2", "toUpperCase", "skipAttrs", "startAttrs", "mapAttrs", "init", "setInitSegment", "serverControlAttrs", "optionalFloat", "partInfAttrs", "previousFragmentPart", "preloadHintAttrs", "renditionReportAttrs", "fragmentLength", "firstFragment", "backfillProgramDateTimes", "keyAttrs", "decryptmethod", "decrypturi", "decryptiv", "hexadecimalInteger", "decryptkeyformatversions", "decryptkeyformat", "IV", "resolvedUri", "isFinite", "codecs", "filtered", "isCodecType", "preferred", "groupItem", "codecProperty", "codecValue", "fragPrev", "BYTERANGE", "mapContextToLevelType", "getResponseUrl", "loaders", "destroyInternalLoaders", "onAudioTrackLoading", "onSubtitleTrackLoading", "createInternalLoader", "PLoader", "InternalLoader", "getInternalLoader", "resetInternalLoader", "contextType", "loadsuccess", "loaderror", "loadtimeout", "handleManifestParsingError", "handleTrackOrLevelPlaylist", "handleMasterPlaylist", "handleNetworkError", "audioGroups", "subtitleGroups", "embeddedAudioFound", "levelId", "singleLevel", "handlePlaylistLoaded", "errorData", "getCacheAge", "isFiniteNumber", "AAC", "getSilentFrame", "UINT32_MAX", "MP4", "types", "avc1", "avcC", "btrt", "dinf", "dref", "esds", "ftyp", "hdlr", "mdat", "mdhd", "mdia", "mfhd", "minf", "moof", "moov", "mp4a", "mvex", "mvhd", "pasp", "sdtp", "stbl", "stco", "stsc", "stsd", "stsz", "stts", "tfdt", "tfhd", "traf", "trak", "trun", "trex", "tkhd", "vmhd", "smhd", "charCodeAt", "videoHdlr", "audioHdlr", "HDLR_TYPES", "STTS", "STSC", "STCO", "STSZ", "VMHD", "SMHD", "STSD", "majorBrand", "avc1Brand", "minorVersion", "FTYP", "box", "DINF", "upperWordDuration", "lowerWordDuration", "baseMediaDecodeTime", "boxes", "flags", "dependsOn", "isDependedOn", "hasRedundancy", "avcc", "hSpacing", "vSpacing", "configlen", "sampleDependencyTable", "upperWordBaseMediaDecodeTime", "lowerWordBaseMediaDecodeTime", "arraylen", "cts", "isLeading", "paddingValue", "isNonSync", "degradPrio", "movie", "MAX_SILENT_FRAME_DURATION", "AAC_SAMPLES_PER_FRAME", "MPEG_AUDIO_SAMPLE_PER_FRAME", "safariWebkitVersion", "ISGenerated", "_initPTS", "_initDTS", "nextAvcDts", "nextAudioPts", "videoSampleDuration", "isAudioContiguous", "isVideoContiguous", "defaultTimeStamp", "getVideoStartPts", "rolloverDetected", "minPTS", "normalizePts", "audioTimeOffset", "videoTimeOffset", "hasAudio", "hasVideo", "enoughAudioSamples", "enoughVideoSamples", "canRemuxAvc", "generateIS", "firstKeyFrameIndex", "findKeyframeIndex", "tsDelta", "audiovideoTimestampDelta", "remuxAudio", "audioTrackLength", "remuxVideo", "flushTextTrackMetadataCueSamples", "flushTextTrackUserdataCueSamples", "audioSamples", "computePTSDTS", "initDTS", "inputSamples", "outputSamples", "mp4SampleDuration", "firstDTS", "lastDTS", "maxPTS", "NEGATIVE_INFINITY", "sortSamples", "deltadts", "deltapts", "inputDuration", "averageSampleDuration", "foundHole", "foundOverlap", "toMsFromMpegTsClock", "firstPTS", "nbNalu", "naluLen", "nbUnits", "sampleLen", "mdatSize", "stretchedLastFrame", "minDtsDelta", "minPtsDelta", "maxDtsDelta", "maxPtsDelta", "avcSampleUnits", "mp4SampleLength", "unitData", "unitDataLen", "ptsDelta", "lastFrameDuration", "gapTolerance", "deltaToFrameEnd", "compositionTimeOffset", "Mp4Sample", "nextDts", "nextPts", "nb", "mp4timeScale", "scaleFactor", "inputSampleDuration", "rawMPEG", "alignedWithVideo", "timeOffsetMpegTS", "newStamp", "fillFrame", "audioSample", "prevSample", "unitLen", "remuxEmptyAudio", "videoData", "silentFrame", "reference", "isKeyframe", "Mp4SampleFlags", "emitInitSegment", "initTracks", "generateInitSegment", "patchEncyptionData", "getParsedTrackCodec", "getStartDTS", "getDuration", "offsetStartDTS", "initPtsNum", "parsedCodec", "_boundTick", "_tickTimer", "_tickInterval", "_tickCallCount", "hasInterval", "hasNextTick", "millis", "CMCDStreamType", "snChangeGoal", "v2", "Yes", "No", "searchParams", "newValue", "getNewPerformanceTiming", "DECIMAL_RESOLUTION_REGEX", "ATTR_LIST_REGEX", "parseAttrList", "attrName", "intValue", "stringValue", "hexadecimalIntegerAsNumber", "defaultValue", "res", "input", "quote", "search", "list", "comparisonFn", "minIndex", "maxIndex", "currentIndex", "currentElement", "comparisonResult", "noopBuffered", "getBuffered", "maxHoleDuration", "vbuffered", "diff", "buffered2", "buf2len", "buf2end", "bufferStartNext", "specialCea608CharsCodes", "getCharForByte", "byte", "charCode", "NR_ROWS", "NR_COLS", "rowsLowCh1", "rowsHighCh1", "rowsLowCh2", "rowsHighCh2", "backgroundColors", "VerboseLevel", "CaptionsLogger", "verboseLevel", "severity", "numArrayToHexArray", "numArray", "hexArray", "PenState", "foreground", "underline", "italics", "background", "flash", "setStyles", "styles", "attribs", "style", "isDefault", "equals", "other", "copy", "newPenState", "StyledUnicodeChar", "uchar", "penState", "setChar", "setPenState", "newChar", "isEmpty", "Row", "chars", "currPenState", "cueStartTime", "equal", "empty", "setCursor", "absPos", "DEBUG", "moveCursor", "relPos", "newPos", "backSpace", "insertChar", "char", "clearFromPos", "startPos", "clear", "clearToEndOfRow", "getTextString", "setPenStyles", "currChar", "CaptionScreen", "rows", "currRow", "nrRollUpRows", "lastOutputScreen", "row", "setPen", "INFO", "setPAC", "pacData", "newRow", "topRowIndex", "prevLineTime", "indent", "prevPos", "color", "setBkgData", "bkgData", "setRollUpRows", "nrRows", "rollUp", "TEXT", "getDisplayText", "topRow", "asOneRow", "displayText", "rowNr", "rowText", "trim", "getTextAndFormat", "Cea608Channel", "channelNumber", "outputFilter", "chNr", "verbose", "displayedMemory", "nonDisplayedMemory", "currRollUpRow", "writeScreen", "getHandler", "setHandler", "newHandler", "setMode", "newMode", "insertChars", "outputDataUpdate", "ccRCL", "ccBS", "ccAOF", "ccAON", "ccDER", "ccRU", "ccFON", "ccRDC", "ccTR", "ccRTD", "ccEDM", "ccCR", "ccENM", "ccEOC", "ccTO", "nrCols", "ccMIDROW", "secondByte", "colorIndex", "colors", "dispatch", "dispatchCue", "cueSplitAtTime", "field", "out1", "out2", "channels", "currentChannel", "cmdHistory", "createCmdHistory", "channel", "byteList", "cmdFound", "charsFound", "DATA", "parseCmd", "parseMidrow", "parsePAC", "parseBackgroundAttributes", "parseChars", "currChNr", "WARNING", "cond1", "cond2", "hasCmdRepeated", "setLastCmd", "case1", "case2", "interpretPAC", "pacIndex", "channelNr", "charCodes", "charCode1", "oneCode", "hexCodes", "sampleEntryCodesISO", "a3ds", "alac", "alaw", "dra1", "dtsc", "dtse", "dtsh", "enca", "g719", "g726", "m4ae", "mha1", "mha2", "mhm1", "mhm2", "mlpa", "Opus", "opus", "samr", "sawb", "sawp", "sevc", "sqcp", "ssmv", "twos", "ulaw", "avc2", "avc3", "avc4", "avcp", "av01", "drac", "dva1", "dvav", "dvh1", "dvhe", "encv", "hev1", "hvc1", "mjp2", "mp4v", "mvc1", "mvc2", "mvc3", "mvc4", "resv", "rv60", "s263", "svc1", "svc2", "vp08", "vp09", "stpp", "wvtt", "typeCodes", "WHITESPACE_CHAR", "captionScreen", "indenting", "cueText", "fixLineBreaks", "generateCueId", "getCueById", "line", "align", "cueA", "cueB", "findFirstFragWithCC", "firstFrag", "shouldAlignOnDiscontinuities", "findDiscontinuousReferenceFrag", "prevDetails", "referenceIndex", "prevFrags", "curFrags", "prevStartFrag", "adjustFragmentStart", "adjustSlidingStart", "alignDiscontinuities", "alignPDT", "referenceFrag", "lastPDT", "newPDT", "refDetails", "refFragments", "middleFrag", "refFrag", "refPDT", "targetPDT", "slow", "fast", "defaultEstimate", "defaultEstimate_", "minWeight_", "minDelayMs_", "slow_", "fast_", "EWMA", "halfLife", "getTotalWeight", "durationMs", "numBytes", "numBits", "durationS", "bandwidthInBps", "estimate", "weight", "alpha_", "estimate_", "totalWeight_", "adjAlpha", "zeroFactor", "fetch", "AbortController", "ReadableStream", "Request", "fetchSetup", "requestTimeout", "request", "getRequest", "abortInternal", "ok", "initParams", "getRequestParameters", "signal", "isArrayBuffer", "LENGTH", "FetchError", "loadProgressively", "responseData", "loaderResponse", "chunkCache", "reader", "getReader", "pump", "read", "done", "credentials", "Headers", "hexDump", "HMSF_REGEX", "TIME_UNIT_REGEX", "textAlignToLineAlign", "center", "callBack", "errorCallBack", "ttmlList", "syncTime", "toTimescaleFromScale", "ttml", "parseTTML", "tt", "defaultRateInfo", "frameRate", "subFrameRate", "frameRateMultiplier", "tickRate", "rateInfo", "styleElements", "collectionToDictionary", "getElementCollection", "regionElements", "cueElements", "cueElement", "getTextContent", "hasAttribute", "parseTtmlTime", "timestampParsingError", "region", "getTtmlStyles", "textAlign", "lineAlign", "fromElement", "parentName", "childName", "querySelectorAll", "elementsWithId", "dict", "element", "node", "nodeName", "textContent", "ttsNs", "regionStyle", "styleAttributes", "regionStyleName", "getAttributeNS", "ns", "hasAttributeNS", "timeAttributeValue", "seconds", "parseTimeStamp", "parseHoursMinutesSecondsFrames", "parseTimeUnits", "getKeyIdBytes", "keyIdbytes", "paddedkeyIdbytes", "swap", "to", "cur", "colonsplit", "semicolonsplit", "commasplit", "isbase64", "unescape", "noop", "fakeLogger", "trace", "exportedLogger", "consolePrintFn", "exportLoggerFunctions", "debugConfig", "functions", "FAIRPLAY", "PLAYREADY", "WIDEVINE", "CLEARKEY", "keySystemDomainToKeySystemFormat", "initDataTypes", "createMediaKeySystemConfigurations", "baseConfig", "persistentState", "distinctiveIdentifier", "sessionTypes", "sessionType", "audioCapabilities", "contentType", "robustness", "audioRobustness", "encryptionScheme", "audioEncryptionScheme", "videoCapabilities", "videoRobustness", "videoEncryptionScheme", "WebKitMediaSource", "readUint16", "readUint32", "readSint32", "writeUint32", "path", "endbox", "subresults", "parseSegmentIndex", "sidx", "references", "earliestPresentationTime", "firstOffset", "startByte", "referencesCount", "referenceInfo", "referenceSize", "referenceType", "subsegmentDuration", "traks", "hdlrType", "soun", "vide", "sampleEntries", "encBoxes", "isAudio", "enc", "encBoxChildren", "sinfBoxes", "tencKeyId", "schm", "fmp4", "baseTime", "scale", "rawDuration", "videoDuration", "audioDuration", "trafs", "trackDefault", "tfhdFlags", "truns", "computeRawDurationFromSamples", "sampleCount", "sidxDuration", "sidxs", "dur", "ref", "upper", "lower", "segmentedRange", "moofs", "temp", "seiSamples", "isHEVCFlavor", "moofOffset", "baseDataOffsetPresent", "sampleDescriptionIndexPresent", "defaultSampleDurationPresent", "defaultSampleDuration", "defaultSampleSizePresent", "defaultSampleSize", "defaultSampleFlagsPresent", "tfhdOffset", "isHEVC", "dataOffsetPresent", "dataOffset", "firstSampleFlagsPresent", "sampleDurationPresent", "sampleSizePresent", "sampleSize", "sampleFlagsPresent", "sampleCompositionOffsetsPresent", "compositionOffset", "trunOffset", "sampleOffset", "ix", "naluTotalSize", "naluSize", "isSEIMessage", "delimit", "baseCodec", "naluHeader", "naluType", "unescapedData", "seiPtr", "payloadType", "payloadSize", "endOfCaptions", "leftOver", "countryCode", "providerCode", "userStructure", "userDataType", "firstByte", "totalCCs", "totalBytes", "uuidStrArray", "userDataBytes", "userData", "EPBPositions", "newLength", "sourceIndex", "leftPresentationTime", "rightPresentationTime", "isSafeInteger", "mp4Box", "keyids", "RangeError", "kids", "k", "kidCount", "dataSize", "boxSize", "dataSizeOrKidCount", "base64ToBase64Url", "base64encodedStr", "strToBase64Encode", "btoa", "base64DecodeToStr", "atob", "base64Encode", "base64UrlEncode", "videoEl", "Event", "document", "createEvent", "initEvent", "dispatchEvent", "textTrackCue", "getCuesInRange", "getFirstCueIndexAfterTime", "mid", "cuesFound", "firstCueInRange", "MPEG_TS_CLOCK_FREQ_HZ", "toTimescaleFromBase", "destScale", "srcBase", "srcScale", "toMpegTsClockFromTimescale", "AllowedDirections", "AllowedAlignments", "isAllowedValue", "allowed", "lcValue", "findDirectionSetting", "findAlignSetting", "extend", "rest", "arguments", "cobj", "baseObj", "hasBeenReset", "_pauseOnExit", "_startTime", "_endTime", "_text", "_region", "_vertical", "_snapToLines", "_line", "_lineAlign", "_position", "_positionAlign", "_size", "_align", "TypeError", "setting", "SyntaxError", "displayState", "getCueAsHTML", "WebVTT", "convertCueToDOMTree", "StringDecoder", "decodeURIComponent", "computeSeconds", "s", "f", "Settings", "values", "dflt", "defaultKey", "has", "alt", "integer", "percent", "parseOptions", "keyValueDelim", "groupDelim", "kv", "defaults", "parseCue", "regionList", "oInput", "consumeTimeStamp", "ts", "consumeCueSettings", "settings", "vals", "vertical", "snapToLines", "skipWhitespace", "VTTParser", "oncue", "onparsingerror", "onflush", "_this", "collectNextLine", "alreadyCollectedLine", "hasSubstring", "LINEBREAKS", "inputString", "searchString", "cueString2millis", "timeString", "secs", "mins", "hours", "hash", "calculateOffset", "currCC", "vttByteArray", "vttLines", "initPTS90Hz", "cueTime", "timestampMapMPEGTS", "timestampMapLOCAL", "parsingError", "inHeader", "cueOffset", "webVttMpegTsMapOffset", "AGE_HEADER_LINE_REGEX", "retryTimeout", "onprogress", "setRequestHeader", "readystatechange", "loadprogress", "responseText", "responseURL", "lengthComputable", "getAllResponseHeaders", "getResponseHeader", "prefix", "a2", "a3", "a4", "f", "e", "a", "c", "d", "l", "r", "t", "v", "n", "p", "h", "Fragment", "Suspense", "i", "n", "target", "to", "s", "location", "assign", "isValidElement", "is", "validate", "location", "cacheKey", "i", "checker", "React", "is", "useState", "useEffect", "useLayoutEffect", "useDebugValue", "error", "React", "is", "useRef", "useEffect", "useMemo", "useDebugValue", "useSyncExternalStoreWithSelector", "isEqual", "matrix", "i", "f", "eps", "center", "geometry", "target", "el", "styles", "gl", "isOrthographicCamera", "scale", "React", "target", "e", "i", "React", "React", "p", "Loader", "t", "React", "v", "v1", "v2", "distance", "position", "e", "r", "t", "o", "distance", "v", "config", "_m1", "v1", "rubberband", "target", "i", "config", "r", "window", "Engine", "config", "React", "useGesture", "config", "matrix", "tempMatrix", "React", "ReactDOM", "_defineProperty", "ownKeys", "_objectSpread2", "target", "i", "o", "p", "_setPrototypeOf", "e", "a", "c", "d", "e", "f", "i", "matrix", "r", "l", "n", "col", "i", "o", "n", "_construct", "Parent", "args", "Class", "a", "triangle", "matrix", "d", "p", "cross", "clamp", "t", "length", "target", "buffer", "i", "distance", "a", "eps", "c", "v1", "v", "r", "matrix", "p", "d", "index", "a", "n", "zero", "one", "add", "a", "addValue", "n", "sub", "subValue", "scale", "dot", "lengthSqr", "length", "distance", "buffer", "swizzle", "o", "lerp", "t", "rotation", "v", "_objectSpread2", "center", "distance", "add", "i", "a", "target", "i", "Grad", "_defineProperty", "x", "y", "z", "seed", "v", "simplex2", "s", "t", "t2", "simplex3", "i2", "perlin2", "perlin3", "FlashGen", "update", "Generator", "buffer", "rng", "_objectSpread2", "center", "r", "rsqw", "t", "a", "f", "exp", "linear", "_in", "out", "inOut", "target", "easing", "eps", "temp", "isCamera", "v", "isLight", "o", "_getPrototypeOf", "self", "call", "RoundedPlaneGeometry", "n", "i", "normal", "f", "position", "r", "makeUVs", "v0", "v1", "v2", "_v2", "buffer", "p", "i", "l", "context", "eps", "distance", "target", "state", "start", "onScroll", "damp", "e", "React", "i", "t", "each", "e", "import_react", "noop", "a", "i", "ctx", "globals", "index", "clamp", "v", "call", "p", "t", "s", "l", "r", "config", "easing", "range", "map", "steps", "c3", "c4", "_extends", "target", "output", "update", "i", "React", "import_react", "React", "import_react", "animated", "i", "_extends", "target", "host", "observer", "update", "_extends", "target", "i", "defaults", "to", "out", "_extends", "config", "target", "to", "props", "result", "t", "priority", "node", "i", "position", "p", "e", "n", "reset", "loop", "update", "Controller", "flush", "onStart", "onChange", "onRest", "defaults", "noop", "create", "_objectWithoutPropertiesLoose", "SpringRef", "_getProps", "index", "length", "updates", "springs", "context", "TransitionPhase", "priority", "self", "update", "rotation", "config", "n", "React", "context", "map", "config", "out", "key", "sub", "React", "i", "context", "o", "e", "React", "Billboard", "React", "React", "import_react", "scale", "i", "scale", "React", "React", "Line", "p", "isArray", "c", "QuadraticBezierLine", "start", "end", "mid", "segments", "points", "p", "React", "CubicBezierLine", "start", "React", "CatmullRomLine", "i", "React", "distance", "loop", "camera", "buffer", "React", "invalidate", "n", "t", "React", "import_react", "React", "e", "target", "t", "React", "GradientType", "colors", "canvas", "context", "i", "React", "vertexShader", "fragmentShader", "v", "import_react", "i", "scale", "React", "geometry", "React", "React", "length", "i", "p", "isArray", "c", "a", "l", "v", "n", "version", "defaults", "steps", "target", "length", "i", "forwardRef", "s", "t", "o", "mat", "c", "React", "buffer", "position", "normal", "dummy", "i", "c", "React", "React", "forwardRef", "config", "object", "o", "React", "MarchingCubes", "React", "Decal", "map", "position", "rotation", "scale", "forwardRef", "target", "o", "React", "import_react", "p", "s", "React", "loader", "React", "effect", "React", "self", "i", "e", "target", "update", "context", "buffer", "geometry", "center", "scale", "col", "loader", "React", "React", "target", "OrthographicCamera", "set", "camera", "size", "React", "isFunction", "PerspectiveCamera", "set", "camera", "size", "React", "React", "import_react", "gl", "scene", "fbo", "update", "CubeCamera", "update", "React", "DeviceOrientationControls", "e", "React", "FlyControls", "e", "React", "MapControls", "e", "React", "OrbitControls", "performance", "e", "React", "TrackballControls", "performance", "e", "React", "import_react", "ArcballControls", "performance", "e", "React", "TransformControls", "onChange", "e", "onMouseDown", "onMouseUp", "onObjectChange", "React", "PointerLockControls", "e", "React", "FirstPersonControls", "React", "import_react", "clamp", "a", "target", "exp", "temp", "out", "EventDispatcher", "index", "i", "l", "camera", "distance", "pointerId", "_a", "domElement", "to", "position", "normal", "rotation", "bb", "center", "t", "geometry", "CameraControls", "performance", "e", "React", "context", "geometry", "index", "eps", "i", "target", "React", "React", "matrix", "OrthographicCamera", "React", "colors", "index", "context", "e", "position", "React", "scale", "rotation", "context", "e", "React", "loader", "import_react", "loader", "import_react", "start", "loop", "Hls", "texture", "React", "import_react", "v", "json", "i", "React", "React", "React", "call", "StatsImpl", "React", "_Stats", "i", "index", "Stats", "stats", "Stats", "React", "v", "React", "raycast", "BLOCKLISTED_GPUS", "cleanRenderer", "renderer", "toLowerCase", "replace", "isSSR", "window", "deviceInfo", "userAgent", "platform", "maxTouchPoints", "navigator", "isIOS", "test", "isIpad", "MSStream", "isMobile", "isSafari12", "isFirefox", "deobfuscateAppleGPU", "gl", "isMobileTier", "pixelId", "vertexShaderSource", "fragmentShaderSource", "vertexShader", "createShader", "fragmentShader", "program", "createProgram", "shaderSource", "compileShader", "attachShader", "linkProgram", "detachShader", "deleteShader", "useProgram", "vertexArray", "createBuffer", "bindBuffer", "bufferData", "Float32Array", "aPosition", "getAttribLocation", "vertexAttribPointer", "enableVertexAttribArray", "clearColor", "clear", "viewport", "drawArrays", "pixels", "Uint8Array", "readPixels", "deleteProgram", "deleteBuffer", "join", "codeA", "codeB", "codeC", "possibleChipsets", "chipsets", "filter", "iosVersion", "id", "length", "map", "gpu", "OutdatedBenchmarksError", "Error", "[object Object]", "message", "super", "Object", "setPrototypeOf", "this", "prototype", "array", "charCodeCache", "getLevenshteinDistance", "left", "right", "swap", "leftLength", "rightLength", "charCodeAt", "bCharCode", "start", "temp", "temp2", "result", "i", "j", "isDefined", "val", "getGPUTier", "mobileTiers", "desktopTiers", "override", "glContext", "failIfMajorPerformanceCaveat", "benchmarksURL", "__awaiter", "queryCache", "tier", "type", "screenSize", "screen", "loadBenchmarks", "file", "data", "fetch", "then", "response", "json", "parseInt", "shift", "split", "toResult", "fps", "device", "renderers", "rawRenderer", "attributes", "alpha", "antialias", "depth", "powerPreference", "stencil", "canvas", "document", "createElement", "getContext", "undefined", "debugRendererInfo", "getExtension", "getParameter", "UNMASKED_RENDERER_WEBGL", "RENDERER", "results", "Promise", "all", "types", "includes", "benchmarkFile", "benchmark", "_a", "benchmarks", "error", "version", "model", "matches", "match", "t", "matched", "modelVersion", "matchCount", "tokenizedRenderer", "sort", "item", "pos", "arr", "closest", "fpsesByPixelCount", "a", "b", "minDistance", "Number", "MAX_VALUE", "devicePixelRatio", "pixelCount", "width", "height", "entryPixelCount", "distance", "Math", "abs", "aDis", "aFps", "bDis", "bFps", "blocklistedModel", "find", "tiers", "React", "React", "index", "i", "start", "a", "geometry", "target", "i", "index", "a", "c", "target", "i", "target", "a", "d", "a", "c", "d", "center", "leftBounds", "i", "index", "i", "index", "t", "i", "uint16Array", "uint32Array", "buffer", "i", "l", "geometry", "buffer", "i", "l", "offset", "count", "i", "l", "p", "areIntersecting", "closestPointLineToLine", "v2", "v32", "d", "d2", "temp1", "temp2", "closestPointsSegmentToSegment", "p", "p2", "sphereIntersectTriangle", "triangle", "center", "a", "c", "a", "c", "start", "i", "target", "i2", "matrix", "update", "i", "v", "index", "triangle", "i2", "closestPointToPoint", "target", "p", "index2", "f2", "start", "primitives", "buffer", "length", "geometry", "float32Array", "uint16Array", "uint32Array", "nodeIndex32", "nodeIndex16", "c1", "c2", "temp", "target", "ray", "distance", "position", "normal", "a", "c", "intersection", "index", "i", "index", "i2", "ray", "geometry", "i", "intersection", "triangle", "index", "l", "geometry", "buffer", "uint32Array", "uint16Array", "float32Array", "i", "l", "_traverse", "byteOffset", "index", "ray", "target", "ray", "geometry", "i", "intersection", "triangle", "index", "l", "ray", "float32Array", "uint16Array", "uint32Array", "_boxIntersection", "ray", "float32Array", "uint16Array", "uint32Array", "c1", "c2", "triangle", "triangle2", "float32Array", "uint16Array", "uint32Array", "index", "i", "l", "i2", "l2", "obb", "obb2", "temp1", "geometry", "index", "triangle", "triangle2", "i2", "i", "l", "geometry", "buffer", "uint32Array", "uint16Array", "float32Array", "i", "l", "_traverse", "byteOffset", "t", "index", "_boxIntersection", "ray", "_raycast", "float32Array", "uint16Array", "uint32Array", "_boxIntersection", "_xyzFields", "ray", "_raycastFirst", "float32Array", "uint16Array", "uint32Array", "c1", "c2", "boundingBox", "triangle", "triangle2", "invertedMat", "obb", "obb2", "_intersectsGeometry", "float32Array", "uint16Array", "uint32Array", "index", "i", "l", "i2", "l2", "tempMatrix", "obb", "obb2", "temp1", "temp2", "temp3", "temp4", "geometry", "index", "triangle", "triangle2", "i2", "i", "l", "i", "obb", "geometry", "index", "i", "buffer", "uint32Array", "uint16Array", "_traverse", "ray", "l", "triangle", "triangle2", "i2", "box", "target", "boundingBox", "_box1", "_box2", "i", "l", "length", "i", "geometry", "index", "position", "target", "i", "l", "i3", "v3", "c", "uint16Array", "uint32Array", "float32Array", "geometry", "React", "context", "Context", "i", "React", "c", "React", "temp", "React", "position", "config", "React", "boundingBox", "import_react", "interpolate", "ctx", "i", "config", "e", "React", "React", "Center", "cacheKey", "center", "React", "React", "import_react", "PropTypes", "i", "l", "globalContext", "tempMatrix", "scale", "context", "props", "ref", "colors", "instance", "instances", "Merged", "isArray", "geometry", "context", "loop", "currentFrame", "reset", "calculateAspectRatio", "getFirstItem", "aspect", "i", "index", "React", "React", "v", "React", "v", "React", "geometry", "i", "l", "v", "MeshReflectorMaterial", "gl", "camera", "scene", "normal", "target", "fbo1", "fbo2", "blurpass", "reflectorProps", "React", "import_react", "MeshRefractionMaterial", "temp", "geometry", "React", "v", "buffer", "React", "React", "React", "React", "create", "Sphere", "Plane", "Shape", "geometry", "b3", "v", "i", "React", "RoundedBox", "steps", "React", "geometry", "ScreenQuad", "React", "d", "React", "AnimationState", "t", "context", "center", "distance", "target", "position", "v", "d", "React", "React", "forwardRef", "t", "React", "React", "out", "_a", "e", "v", "vertexShader", "fragmentShader", "_a", "v", "start", "e", "length", "i", "buffer", "loader", "isArray", "extensions", "loader", "target", "map", "config", "extensions", "fbo", "scale", "React", "scale", "renderTarget", "renderTargetBlur", "planeGeometry", "blurPlane", "depthMaterial", "horizontalBlurMaterial", "verticalBlurMaterial", "blur", "React", "isLight", "scale", "forwardRef", "frames", "i", "position", "length", "update", "l", "index", "center", "config", "props", "height", "React", "i", "position", "React", "canvas", "context", "React", "v", "i", "a", "React", "gl", "camera", "scene", "normal", "target", "fbo1", "fbo2", "blurpass", "reflectorProps", "React", "distance", "geometry", "map", "scale", "React", "map", "scale", "target", "forwardRef", "React", "Sky", "distance", "scale", "React", "r", "fade", "position", "colors", "color", "i", "React", "i", "parse", "v", "i", "URL", "version", "i", "a", "c", "d", "s", "t", "v3", "v4", "i", "f", "s", "n", "i", "l", "t", "a", "c", "d", "e", "parentMatrix", "translation", "rotation", "scale", "context", "opaque_fragment", "colors", "t", "index", "config", "a", "fade", "seed", "temp", "React", "v", "a", "noise", "scale", "forwardRef", "colors", "React", "React", "LIST_URL", "repeat", "React", "React", "isGeometry", "isRefObject", "isRef", "geometry", "position", "i", "React", "i", "React", "_sphere", "_position", "distance", "i", "context", "parentMatrix", "colors", "ref", "refs", "React", "context", "geometry", "colors", "segments", "i", "start", "React", "index", "React", "gl", "camera", "scene", "import_react", "_inverseMatrix", "_ray", "_sphere", "_vA", "geometry", "React", "React", "React", "import_react", "context", "React", "forwardRef", "intersection", "React", "position", "rotation", "scale", "matrix", "forwardRef", "fbo", "Container", "React", "React", "normal", "t", "r", "s", "e", "React", "priority", "p", "boundingBox", "i", "intersection", "blend", "quad", "target", "React", "import_react", "import_react", "ReactExports", "useSyncExternalStoreExports", "identity", "create", "useIsomorphicLayoutEffect", "React", "useStore", "create", "version", "c", "isOrthographicCamera", "col", "bottom", "clear", "Container", "index", "position", "React", "React", "React", "context", "normal", "translation", "scale", "context", "e", "rotation", "coneWidth", "coneLength", "cylinderLength", "matrixL", "React", "ray", "scale", "context", "e", "e2", "normal", "deltaAngle", "r", "angle", "React", "a", "i2", "a2", "b2", "c1", "c2", "ray", "intersection", "offsetMatrix", "translation", "scale", "context", "e", "e2", "normal", "length", "React", "vec1", "vec2", "calculateOffset", "normal", "upV", "scale", "context", "position", "e", "rotation", "radius", "matrixL", "matrix", "rotation", "scale", "translation", "config", "props", "context", "React", "import_react", "React", "a", "c", "v1", "v2", "v3", "v", "position", "scale", "one", "i", "rotation", "sphere", "_sphere", "React", "import_react", "FaceLandmarker", "mean", "v1", "v2", "v", "target", "update", "eps", "faces", "e", "VideoTexture", "start", "f"]
}
